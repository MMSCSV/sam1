<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AttemptedToCloseDrawer" xml:space="preserve">
    <value>Have you attempted to close the drawer?</value>
  </data>
  <data name="ClearObstructionsAndCloseDoor" xml:space="preserve">
    <value>Clear obstructions then close the drawer or door</value>
  </data>
  <data name="CloseCubieLid" xml:space="preserve">
    <value>Please close the lid</value>
  </data>
  <data name="ContactTechnicalSupport" xml:space="preserve">
    <value>Please contact technical support</value>
  </data>
  <data name="ContactTechnicalSupportToRecover" xml:space="preserve">
    <value>Please call technical support to recover</value>
  </data>
  <data name="CubieDeleted" xml:space="preserve">
    <value>CUBIE deleted (empty)</value>
  </data>
  <data name="CubieNotThere" xml:space="preserve">
    <value>CUBIE not there</value>
  </data>
  <data name="CubieNotThereButtonText" xml:space="preserve">
    <value>CUBIE Not There</value>
  </data>
  <data name="CubieRecoveredAndReleased" xml:space="preserve">
    <value>CUBIE recovered. Pocket was released.</value>
  </data>
  <data name="CubieReleased" xml:space="preserve">
    <value>CUBIE released</value>
  </data>
  <data name="CubieUnloadedAndDeleted" xml:space="preserve">
    <value>CUBIE unloaded and deleted (loaded)</value>
  </data>
  <data name="DidCubieReinsert" xml:space="preserve">
    <value>Have you reinserted the CUBIE?</value>
  </data>
  <data name="DidCubieRelease" xml:space="preserve">
    <value>Did the CUBIE release?</value>
  </data>
  <data name="DidDrawerOpen" xml:space="preserve">
    <value>Did the drawer open?</value>
  </data>
  <data name="DidLidClose" xml:space="preserve">
    <value>Have you closed the lid?</value>
  </data>
  <data name="DidLidOpen" xml:space="preserve">
    <value>Did the lid open?</value>
  </data>
  <data name="DrawerContainsExceptionalCubieFailure" xml:space="preserve">
    <value>Drawer contains an unsecured CUBIE that needs to be recovered first</value>
  </data>
  <data name="ExposeCubie" xml:space="preserve">
    <value>Please expose the CUBIE</value>
  </data>
  <data name="GeneralCubieFailureDescription" xml:space="preserve">
    <value>CUBIE failure</value>
  </data>
  <data name="GeneralDrawerFailureDescription" xml:space="preserve">
    <value>Drawer failure</value>
  </data>
  <data name="HeaderFailureTitle" xml:space="preserve">
    <value>Failure</value>
  </data>
  <data name="HeaderNameTitle" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="HeaderTypeTitle" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ItemsUnloaded" xml:space="preserve">
    <value>Items will be unloaded during release.</value>
  </data>
  <data name="NoCubieEjectPermission" xml:space="preserve">
    <value>You do not have permission to eject a CUBIE or unload permission</value>
  </data>
  <data name="NoInventoryPermission" xml:space="preserve">
    <value>You do not have permission to access this inventory</value>
  </data>
  <data name="NoPermission" xml:space="preserve">
    <value>You do not have permission</value>
  </data>
  <data name="NoStorageSpacePermission" xml:space="preserve">
    <value>You do not have permission to access this storage space</value>
  </data>
  <data name="NoUnloadPermission" xml:space="preserve">
    <value>You do not have permission to unload</value>
  </data>
  <data name="PullOpenDoorDrawer" xml:space="preserve">
    <value>Please pull open the door or drawer</value>
  </data>
  <data name="ReinsertCubie" xml:space="preserve">
    <value>Please reinsert the CUBIE</value>
  </data>
  <data name="ReleaseCubie" xml:space="preserve">
    <value>Do you want to release the CUBIE?</value>
  </data>
  <data name="RequiresMaintenance" xml:space="preserve">
    <value>Requires maintenance</value>
  </data>
  <data name="ReturnCubieToPharmacy" xml:space="preserve">
    <value>Please return the CUBIE to the pharmacy</value>
  </data>
  <data name="ReturnCubieToPharmacyForReplacement" xml:space="preserve">
    <value>Please return the CUBIE to the pharmacy for replacement</value>
  </data>
  <data name="SiblingCubieFailure" xml:space="preserve">
    <value>Another CUBIE in the drawer needs to be recovered first</value>
  </data>
  <data name="SuccessfulCubieRecovery" xml:space="preserve">
    <value>Successful CUBIE recovery</value>
  </data>
  <data name="Unconfigured" xml:space="preserve">
    <value>Unconfigured</value>
  </data>
  <data name="UnexpectedCubieFound" xml:space="preserve">
    <value>The expected CUBIE was not found</value>
  </data>
  <data name="UnloadDeleteCubieQuestion" xml:space="preserve">
    <value>Would you like to unload/delete the CUBIE?</value>
  </data>
  <data name="InsertCubieManagedMap" xml:space="preserve">
    <value>Pocket was released and may be properly inserted by means of the CUBIE map or returned to the Pharmacy</value>
  </data>
</root>