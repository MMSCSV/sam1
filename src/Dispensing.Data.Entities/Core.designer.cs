#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CareFusion.Dispensing.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSServerOLTP")]
	internal partial class CoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserAccountFacilityEntity(UserAccountFacilityEntity instance);
    partial void UpdateUserAccountFacilityEntity(UserAccountFacilityEntity instance);
    partial void DeleteUserAccountFacilityEntity(UserAccountFacilityEntity instance);
    partial void InsertPasswordCredentialEntity(PasswordCredentialEntity instance);
    partial void UpdatePasswordCredentialEntity(PasswordCredentialEntity instance);
    partial void DeletePasswordCredentialEntity(PasswordCredentialEntity instance);
    partial void InsertUserAccountEntity(UserAccountEntity instance);
    partial void UpdateUserAccountEntity(UserAccountEntity instance);
    partial void DeleteUserAccountEntity(UserAccountEntity instance);
    partial void InsertUserRoleMemberEntity(UserRoleMemberEntity instance);
    partial void UpdateUserRoleMemberEntity(UserRoleMemberEntity instance);
    partial void DeleteUserRoleMemberEntity(UserRoleMemberEntity instance);
    partial void InsertUserRoleEntity(UserRoleEntity instance);
    partial void UpdateUserRoleEntity(UserRoleEntity instance);
    partial void DeleteUserRoleEntity(UserRoleEntity instance);
    partial void InsertUserRolePermissionEntity(UserRolePermissionEntity instance);
    partial void UpdateUserRolePermissionEntity(UserRolePermissionEntity instance);
    partial void DeleteUserRolePermissionEntity(UserRolePermissionEntity instance);
    partial void InsertPermissionTypeEntity(PermissionTypeEntity instance);
    partial void UpdatePermissionTypeEntity(PermissionTypeEntity instance);
    partial void DeletePermissionTypeEntity(PermissionTypeEntity instance);
    partial void InsertUnitOfMeasureEntity(UnitOfMeasureEntity instance);
    partial void UpdateUnitOfMeasureEntity(UnitOfMeasureEntity instance);
    partial void DeleteUnitOfMeasureEntity(UnitOfMeasureEntity instance);
    partial void InsertUnitOfMeasureRoleEntity(UnitOfMeasureRoleEntity instance);
    partial void UpdateUnitOfMeasureRoleEntity(UnitOfMeasureRoleEntity instance);
    partial void DeleteUnitOfMeasureRoleEntity(UnitOfMeasureRoleEntity instance);
    partial void InsertPermissionEntity(PermissionEntity instance);
    partial void UpdatePermissionEntity(PermissionEntity instance);
    partial void DeletePermissionEntity(PermissionEntity instance);
    partial void InsertActorEntity(ActorEntity instance);
    partial void UpdateActorEntity(ActorEntity instance);
    partial void DeleteActorEntity(ActorEntity instance);
    partial void InsertExternalSystemEntity(ExternalSystemEntity instance);
    partial void UpdateExternalSystemEntity(ExternalSystemEntity instance);
    partial void DeleteExternalSystemEntity(ExternalSystemEntity instance);
    partial void InsertActiveDirectoryDomainEntity(ActiveDirectoryDomainEntity instance);
    partial void UpdateActiveDirectoryDomainEntity(ActiveDirectoryDomainEntity instance);
    partial void DeleteActiveDirectoryDomainEntity(ActiveDirectoryDomainEntity instance);
    partial void InsertUserRolePermissionSecurityGroupEntity(UserRolePermissionSecurityGroupEntity instance);
    partial void UpdateUserRolePermissionSecurityGroupEntity(UserRolePermissionSecurityGroupEntity instance);
    partial void DeleteUserRolePermissionSecurityGroupEntity(UserRolePermissionSecurityGroupEntity instance);
    partial void InsertUserRoleOverrideGroupEntity(UserRoleOverrideGroupEntity instance);
    partial void UpdateUserRoleOverrideGroupEntity(UserRoleOverrideGroupEntity instance);
    partial void DeleteUserRoleOverrideGroupEntity(UserRoleOverrideGroupEntity instance);
    partial void InsertUserFingerprintEntity(UserFingerprintEntity instance);
    partial void UpdateUserFingerprintEntity(UserFingerprintEntity instance);
    partial void DeleteUserFingerprintEntity(UserFingerprintEntity instance);
    partial void InsertUserRoleMemberAreaEntity(UserRoleMemberAreaEntity instance);
    partial void UpdateUserRoleMemberAreaEntity(UserRoleMemberAreaEntity instance);
    partial void DeleteUserRoleMemberAreaEntity(UserRoleMemberAreaEntity instance);
    partial void InsertUnitOfMeasureRoleMemberEntity(UnitOfMeasureRoleMemberEntity instance);
    partial void UpdateUnitOfMeasureRoleMemberEntity(UnitOfMeasureRoleMemberEntity instance);
    partial void DeleteUnitOfMeasureRoleMemberEntity(UnitOfMeasureRoleMemberEntity instance);
    partial void InsertUnitOfTemperatureEntity(UnitOfTemperatureEntity instance);
    partial void UpdateUnitOfTemperatureEntity(UnitOfTemperatureEntity instance);
    partial void DeleteUnitOfTemperatureEntity(UnitOfTemperatureEntity instance);
    partial void InsertUserTypeEntity(UserTypeEntity instance);
    partial void UpdateUserTypeEntity(UserTypeEntity instance);
    partial void DeleteUserTypeEntity(UserTypeEntity instance);
    partial void InsertObservationMethodEntity(ObservationMethodEntity instance);
    partial void UpdateObservationMethodEntity(ObservationMethodEntity instance);
    partial void DeleteObservationMethodEntity(ObservationMethodEntity instance);
    partial void InsertUserRolePermissionRoleEntity(UserRolePermissionRoleEntity instance);
    partial void UpdateUserRolePermissionRoleEntity(UserRolePermissionRoleEntity instance);
    partial void DeleteUserRolePermissionRoleEntity(UserRolePermissionRoleEntity instance);
    partial void InsertDistributorEntity(DistributorEntity instance);
    partial void UpdateDistributorEntity(DistributorEntity instance);
    partial void DeleteDistributorEntity(DistributorEntity instance);
    partial void InsertUserScanModeEntity(UserScanModeEntity instance);
    partial void UpdateUserScanModeEntity(UserScanModeEntity instance);
    partial void DeleteUserScanModeEntity(UserScanModeEntity instance);
    #endregion
		
		public CoreDataContext() : 
				base("Data Source=.;Initial Catalog=DSServerOLTP;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserAccountFacilityEntity> UserAccountFacilityEntities
		{
			get
			{
				return this.GetTable<UserAccountFacilityEntity>();
			}
		}
		
		public System.Data.Linq.Table<PasswordCredentialEntity> PasswordCredentialEntities
		{
			get
			{
				return this.GetTable<PasswordCredentialEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserAccountEntity> UserAccountEntities
		{
			get
			{
				return this.GetTable<UserAccountEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserRoleMemberEntity> UserRoleMemberEntities
		{
			get
			{
				return this.GetTable<UserRoleMemberEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserRoleEntity> UserRoleEntities
		{
			get
			{
				return this.GetTable<UserRoleEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserRolePermissionEntity> UserRolePermissionEntities
		{
			get
			{
				return this.GetTable<UserRolePermissionEntity>();
			}
		}
		
		public System.Data.Linq.Table<PermissionTypeEntity> PermissionTypeEntities
		{
			get
			{
				return this.GetTable<PermissionTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<UnitOfMeasureEntity> UnitOfMeasureEntities
		{
			get
			{
				return this.GetTable<UnitOfMeasureEntity>();
			}
		}
		
		public System.Data.Linq.Table<UnitOfMeasureRoleEntity> UnitOfMeasureRoleEntities
		{
			get
			{
				return this.GetTable<UnitOfMeasureRoleEntity>();
			}
		}
		
		public System.Data.Linq.Table<PermissionEntity> PermissionEntities
		{
			get
			{
				return this.GetTable<PermissionEntity>();
			}
		}
		
		public System.Data.Linq.Table<ActorEntity> ActorEntities
		{
			get
			{
				return this.GetTable<ActorEntity>();
			}
		}
		
		public System.Data.Linq.Table<ExternalSystemEntity> ExternalSystemEntities
		{
			get
			{
				return this.GetTable<ExternalSystemEntity>();
			}
		}
		
		public System.Data.Linq.Table<ActiveDirectoryDomainEntity> ActiveDirectoryDomainEntities
		{
			get
			{
				return this.GetTable<ActiveDirectoryDomainEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserRolePermissionSecurityGroupEntity> UserRolePermissionSecurityGroupEntities
		{
			get
			{
				return this.GetTable<UserRolePermissionSecurityGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserRoleOverrideGroupEntity> UserRoleOverrideGroupEntities
		{
			get
			{
				return this.GetTable<UserRoleOverrideGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserFingerprintEntity> UserFingerprintEntities
		{
			get
			{
				return this.GetTable<UserFingerprintEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserRoleMemberAreaEntity> UserRoleMemberAreaEntities
		{
			get
			{
				return this.GetTable<UserRoleMemberAreaEntity>();
			}
		}
		
		public System.Data.Linq.Table<UnitOfMeasureRoleMemberEntity> UnitOfMeasureRoleMemberEntities
		{
			get
			{
				return this.GetTable<UnitOfMeasureRoleMemberEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserSecurityGroupAuthorizationEntity> UserSecurityGroupAuthorizationEntities
		{
			get
			{
				return this.GetTable<UserSecurityGroupAuthorizationEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserAuthorizationEntity> UserAuthorizationEntities
		{
			get
			{
				return this.GetTable<UserAuthorizationEntity>();
			}
		}
		
		public System.Data.Linq.Table<UnitOfTemperatureEntity> UnitOfTemperatureEntities
		{
			get
			{
				return this.GetTable<UnitOfTemperatureEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserTypeEntity> UserTypeEntities
		{
			get
			{
				return this.GetTable<UserTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<ObservationMethodEntity> ObservationMethodEntities
		{
			get
			{
				return this.GetTable<ObservationMethodEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserDeviceAuthorizationEntity> UserDeviceAuthorizationEntities
		{
			get
			{
				return this.GetTable<UserDeviceAuthorizationEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserRolePermissionRoleEntity> UserRolePermissionRoleEntities
		{
			get
			{
				return this.GetTable<UserRolePermissionRoleEntity>();
			}
		}
		
		public System.Data.Linq.Table<VisitorUserRoleResult> VisitorUserRoleResults
		{
			get
			{
				return this.GetTable<VisitorUserRoleResult>();
			}
		}
		
		public System.Data.Linq.Table<UnitOfMeasureRoleResult> UnitOfMeasureRoleResults
		{
			get
			{
				return this.GetTable<UnitOfMeasureRoleResult>();
			}
		}
		
		public System.Data.Linq.Table<DistributorEntity> DistributorEntities
		{
			get
			{
				return this.GetTable<DistributorEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserScanModeEntity> UserScanModeEntities
		{
			get
			{
				return this.GetTable<UserScanModeEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserAccountAreaInsert")]
		public int usp_UserAccountAreaInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> areaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey, areaKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleDelete")]
		public int usp_UserRoleDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, userRoleKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserAccountAreaDelete")]
		public int usp_UserAccountAreaDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> areaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey, areaKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleOverrideGroupDelete")]
		public int usp_UserRoleOverrideGroupDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> overrideGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleKey, overrideGroupKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleOverrideGroupInsert")]
		public int usp_UserRoleOverrideGroupInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> overrideGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleKey, overrideGroupKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRolePermissionDelete")]
		public int usp_UserRolePermissionDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PermissionInternalCode", DbType="VarChar(50)")] string permissionInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleKey, permissionInternalCode, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRolePermissionInsert")]
		public int usp_UserRolePermissionInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PermissionInternalCode", DbType="VarChar(50)")] string permissionInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRolePermissionKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userRolePermissionKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleKey, permissionInternalCode, associationUTCDateTime, associationLocalDateTime, associationActorKey, userRolePermissionKey);
			userRolePermissionKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRolePermissionSecurityGroupDelete")]
		public int usp_UserRolePermissionSecurityGroupDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRolePermissionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRolePermissionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> securityGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRolePermissionKey, securityGroupKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRolePermissionSecurityGroupInsert")]
		public int usp_UserRolePermissionSecurityGroupInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRolePermissionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRolePermissionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> securityGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRolePermissionKey, securityGroupKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UOMRoleMemberInsert")]
		public int usp_UOMRoleMemberInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> uOMKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UOMRoleInternalCode", DbType="VarChar(10)")] string uOMRoleInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UOMRoleMemberKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> uOMRoleMemberKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uOMKey, uOMRoleInternalCode, associationUTCDateTime, associationLocalDateTime, associationActorKey, uOMRoleMemberKey);
			uOMRoleMemberKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UOMRoleMemberDelete")]
		public int usp_UOMRoleMemberDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> uOMKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UOMRoleInternalCode", DbType="VarChar(10)")] string uOMRoleInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uOMKey, uOMRoleInternalCode, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_PasswordCredentialInsert")]
		public int usp_PasswordCredentialInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncryptionAlgorithmInternalCode", DbType="VarChar(10)")] string encryptionAlgorithmInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordHashValue", DbType="NVarChar(64)")] string passwordHashValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordSaltValue", DbType="NVarChar(64)")] string passwordSaltValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserChangedOwnPasswordUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> userChangedOwnPasswordUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserChangedOwnPasswordLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> userChangedOwnPasswordLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey, startUTCDateTime, startLocalDateTime, encryptionAlgorithmInternalCode, passwordHashValue, passwordSaltValue, userChangedOwnPasswordUTCDateTime, userChangedOwnPasswordLocalDateTime, lastModifiedDispensingDeviceKey, lastModifiedActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_PasswordCredentialUpdate")]
		public int usp_PasswordCredentialUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncryptionAlgorithmInternalCode", DbType="VarChar(10)")] string encryptionAlgorithmInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordHashValue", DbType="NVarChar(64)")] string passwordHashValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordSaltValue", DbType="NVarChar(64)")] string passwordSaltValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserChangedOwnPasswordUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> userChangedOwnPasswordUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserChangedOwnPasswordLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> userChangedOwnPasswordLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey, startUTCDateTime, startLocalDateTime, encryptionAlgorithmInternalCode, passwordHashValue, passwordSaltValue, userChangedOwnPasswordUTCDateTime, userChangedOwnPasswordLocalDateTime, lastModifiedDispensingDeviceKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserFingerprintInsert")]
		public int usp_UserFingerprintInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint1Value", DbType="VarBinary(MAX)")] System.Data.Linq.Binary fingerprint1Value, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint1LengthQuantity", DbType="BigInt")] System.Nullable<long> fingerprint1LengthQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint2Value", DbType="VarBinary(MAX)")] System.Data.Linq.Binary fingerprint2Value, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint2LengthQuantity", DbType="BigInt")] System.Nullable<long> fingerprint2LengthQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint3Value", DbType="VarBinary(MAX)")] System.Data.Linq.Binary fingerprint3Value, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint3LengthQuantity", DbType="BigInt")] System.Nullable<long> fingerprint3LengthQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey, startUTCDateTime, startLocalDateTime, fingerprint1Value, fingerprint1LengthQuantity, fingerprint2Value, fingerprint2LengthQuantity, fingerprint3Value, fingerprint3LengthQuantity, lastModifiedDispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserFingerprintUpdate")]
		public int usp_UserFingerprintUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint1Value", DbType="VarBinary(MAX)")] System.Data.Linq.Binary fingerprint1Value, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint1LengthQuantity", DbType="BigInt")] System.Nullable<long> fingerprint1LengthQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint2Value", DbType="VarBinary(MAX)")] System.Data.Linq.Binary fingerprint2Value, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint2LengthQuantity", DbType="BigInt")] System.Nullable<long> fingerprint2LengthQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint3Value", DbType="VarBinary(MAX)")] System.Data.Linq.Binary fingerprint3Value, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fingerprint3LengthQuantity", DbType="BigInt")] System.Nullable<long> fingerprint3LengthQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey, startUTCDateTime, startLocalDateTime, fingerprint1Value, fingerprint1LengthQuantity, fingerprint2Value, fingerprint2LengthQuantity, fingerprint3Value, fingerprint3LengthQuantity, lastModifiedDispensingDeviceKey, lastModifiedBinaryValue, checkConcurrency);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleMemberInsert")]
		public int usp_UserRoleMemberInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedTemporaryAccessFlag", DbType="Bit")] System.Nullable<bool> medTemporaryAccessFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleMemberKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userRoleMemberKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleKey, userAccountKey, medTemporaryAccessFlag, associationUTCDateTime, associationLocalDateTime, associationActorKey, lastModifiedDispensingDeviceKey, userRoleMemberKey);
			userRoleMemberKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleMemberAreaInsert")]
		public int usp_UserRoleMemberAreaInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleMemberKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleMemberKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> areaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleMemberKey, areaKey, associationUTCDateTime, associationLocalDateTime, associationActorKey, lastModifiedDispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleMemberAreaDelete")]
		public int usp_UserRoleMemberAreaDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleMemberKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleMemberKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> areaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleMemberKey, areaKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey, lastModifiedDispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleMemberDelete")]
		public int usp_UserRoleMemberDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedTemporaryAccessFlag", DbType="Bit")] System.Nullable<bool> medTemporaryAccessFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleKey, userAccountKey, medTemporaryAccessFlag, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey, lastModifiedDispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UOMInsert")]
		public int usp_UOMInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(50)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(250)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BaseUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> baseUOMKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConversionAmount", DbType="Decimal(28,14)")] System.Nullable<decimal> conversionAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UOMKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> uOMKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, descriptionText, sortValue, activeFlag, baseUOMKey, conversionAmount, createdUTCDateTime, createdLocalDateTime, lastModifiedActorKey, uOMKey);
			uOMKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UOMUpdate")]
		public int usp_UOMUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(50)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(250)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BaseUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> baseUOMKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConversionAmount", DbType="Decimal(28,14)")] System.Nullable<decimal> conversionAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> uOMKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, descriptionText, activeFlag, baseUOMKey, conversionAmount, sortValue, endUTCDateTime, endLocalDateTime, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, uOMKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserTypeDelete")]
		public int usp_UserTypeDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userTypeKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), endUTCDateTime, endLocalDateTime, lastModifiedActorKey, userTypeKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRolePermissionRoleDelete")]
		public int usp_UserRolePermissionRoleDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRolePermissionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRolePermissionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleKey, userRolePermissionKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRolePermissionRoleInsert")]
		public int usp_UserRolePermissionRoleInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRolePermissionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRolePermissionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRolePermissionRoleKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userRolePermissionRoleKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleKey, userRolePermissionKey, associationUTCDateTime, associationLocalDateTime, associationActorKey, userRolePermissionRoleKey);
			userRolePermissionRoleKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.bsp_FindVisitorUsers")]
		public ISingleResult<bsp_FindVisitorUsersResult> bsp_FindVisitorUsers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContextDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> contextDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContextUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> contextUserAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchText", DbType="VarChar(MAX)")] string searchText)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), contextDispensingDeviceKey, contextUserAccountKey, searchText);
			return ((ISingleResult<bsp_FindVisitorUsersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleMemberByPKDelete")]
		public int usp_UserRoleMemberByPKDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleMemberKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleMemberKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleMemberKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey, lastModifiedDispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleUpdate")]
		public int usp_UserRoleUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleName", DbType="NVarChar(50)")] string roleName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllowForTemporaryUserFlag", DbType="Bit")] System.Nullable<bool> allowForTemporaryUserFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, facilityKey, roleName, descriptionText, allowForTemporaryUserFlag, activeFlag, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, userRoleKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleInsert")]
		public int usp_UserRoleInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleName", DbType="NVarChar(50)")] string roleName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllowForTemporaryUserFlag", DbType="Bit")] System.Nullable<bool> allowForTemporaryUserFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userRoleKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, facilityKey, roleName, descriptionText, allowForTemporaryUserFlag, activeFlag, lastModifiedActorKey, userRoleKey);
			userRoleKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.bsp_GetUnitOfMeasures")]
		public ISingleResult<bsp_GetUnitOfMeasuresResult> bsp_GetUnitOfMeasures([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnitOfMeasureKeyString", DbType="NVarChar(MAX)")] string unitOfMeasureKeyString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(50)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DebugFlag", DbType="Bit")] System.Nullable<bool> debugFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), unitOfMeasureKeyString, displayCode, debugFlag);
			return ((ISingleResult<bsp_GetUnitOfMeasuresResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserAccountParentUpdate")]
		public int usp_UserAccountParentUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastPasswordExpirationNoticeUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastPasswordExpirationNoticeUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastPasswordExpirationNoticeUTCDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastPasswordExpirationNoticeUTCDateTimeSpecifiedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastPasswordExpirationNoticeLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastPasswordExpirationNoticeLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastPasswordExpirationNoticeLocalDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastPasswordExpirationNoticeLocalDateTimeSpecifiedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastSuccessfulPasswordAuthenticationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastSuccessfulPasswordAuthenticationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastSuccessfulPasswordAuthenticationUTCDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastSuccessfulPasswordAuthenticationUTCDateTimeSpecifiedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastSuccessfulPasswordAuthenticationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastSuccessfulPasswordAuthenticationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastSuccessfulPasswordAuthenticationLocalDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastSuccessfulPasswordAuthenticationLocalDateTimeSpecifiedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastFacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastFacilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastFacilityKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastFacilityKeySpecifiedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastAreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastAreaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastAreaKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastAreaKeySpecifiedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastPasswordExpirationNoticeUTCDateTime, lastPasswordExpirationNoticeUTCDateTimeSpecifiedFlag, lastPasswordExpirationNoticeLocalDateTime, lastPasswordExpirationNoticeLocalDateTimeSpecifiedFlag, lastSuccessfulPasswordAuthenticationUTCDateTime, lastSuccessfulPasswordAuthenticationUTCDateTimeSpecifiedFlag, lastSuccessfulPasswordAuthenticationLocalDateTime, lastSuccessfulPasswordAuthenticationLocalDateTimeSpecifiedFlag, lastFacilityKey, lastFacilityKeySpecifiedFlag, lastAreaKey, lastAreaKeySpecifiedFlag, lastModifiedDispensingDeviceKey, userAccountKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleAreaDelete")]
		public int usp_UserRoleAreaDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> areaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleKey, areaKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserRoleAreaInsert")]
		public int usp_UserRoleAreaInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userRoleKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> areaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleAreaKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userRoleAreaKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleKey, areaKey, associationUTCDateTime, associationLocalDateTime, associationActorKey, userRoleAreaKey);
			userRoleAreaKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.bsp_MultiUserAccountActiveDirectoryInsert")]
		public int bsp_MultiUserAccountActiveDirectoryInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountXML", DbType="Xml")] System.Xml.Linq.XElement userAccountXML)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, userAccountXML);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.bsp_MultiUserAccountActiveDirectoryUpdate")]
		public int bsp_MultiUserAccountActiveDirectoryUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountXML", DbType="Xml")] System.Xml.Linq.XElement userAccountXML)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, userAccountXML);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.bsp_MultiUserAccountDelete")]
		public int bsp_MultiUserAccountDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountXML", DbType="Xml")] System.Xml.Linq.XElement userAccountXML)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, userAccountXML);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserAccountDelete")]
		public int usp_UserAccountDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedDispensingDeviceKey, lastModifiedActorKey, userAccountKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserAccountInsert")]
		public int usp_UserAccountInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveDirectoryDomainKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> activeDirectoryDomainKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedAtDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> createdAtDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(200)")] string userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(50)")] string firstName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MiddleName", DbType="NVarChar(50)")] string middleName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(50)")] string lastName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuffixText", DbType="NVarChar(20)")] string suffixText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FullName", DbType="NVarChar(200)")] string fullName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InitialsText", DbType="NVarChar(10)")] string initialsText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobTitleText", DbType="NVarChar(64)")] string jobTitleText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailAddressValue", DbType="NVarChar(256)")] string emailAddressValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactInformation", DbType="NVarChar(30)")] string contactInformation, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanCodeValue", DbType="NVarChar(100)")] string scanCodeValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExpirationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> accountExpirationUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExpirationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> accountExpirationLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FingerprintExemptFlag", DbType="Bit")] System.Nullable<bool> fingerprintExemptFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemporaryFlag", DbType="Bit")] System.Nullable<bool> temporaryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LockedFlag", DbType="Bit")] System.Nullable<bool> lockedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuperUserFlag", DbType="Bit")] System.Nullable<bool> superUserFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupportUserFlag", DbType="Bit")] System.Nullable<bool> supportUserFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userTypeKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveDirectoryObjectGloballyUniqueID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> activeDirectoryObjectGloballyUniqueID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirectoryChangePasswordUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> directoryChangePasswordUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirectoryChangePasswordLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> directoryChangePasswordLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardPINExemptFlag", DbType="Bit")] System.Nullable<bool> cardPINExemptFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardSerialID", DbType="NVarChar(100)")] string cardSerialID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userAccountKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, activeDirectoryDomainKey, createdAtDispensingDeviceKey, userID, firstName, middleName, lastName, suffixText, fullName, initialsText, jobTitleText, emailAddressValue, contactInformation, scanCodeValue, accountExpirationUTCDateTime, accountExpirationLocalDateTime, fingerprintExemptFlag, temporaryFlag, lockedFlag, superUserFlag, supportUserFlag, userTypeKey, activeDirectoryObjectGloballyUniqueID, directoryChangePasswordUTCDateTime, directoryChangePasswordLocalDateTime, cardPINExemptFlag, cardSerialID, activeFlag, lastModifiedDispensingDeviceKey, lastModifiedActorKey, userAccountKey);
			userAccountKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(31)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserAccountLockFlagUpdate")]
		public int usp_UserAccountLockFlagUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LockedFlag", DbType="Bit")] System.Nullable<bool> lockedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lockedFlag, lastModifiedDispensingDeviceKey, lastModifiedActorKey, userAccountKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserAccountUndelete")]
		public int usp_UserAccountUndelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedDispensingDeviceKey, lastModifiedActorKey, userAccountKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserAccountUpdate")]
		public int usp_UserAccountUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveDirectoryDomainKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> activeDirectoryDomainKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(200)")] string userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(50)")] string firstName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MiddleName", DbType="NVarChar(50)")] string middleName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(50)")] string lastName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuffixText", DbType="NVarChar(20)")] string suffixText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FullName", DbType="NVarChar(200)")] string fullName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InitialsText", DbType="NVarChar(10)")] string initialsText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobTitleText", DbType="NVarChar(64)")] string jobTitleText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailAddressValue", DbType="NVarChar(256)")] string emailAddressValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactInformation", DbType="NVarChar(30)")] string contactInformation, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanCodeValue", DbType="NVarChar(100)")] string scanCodeValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExpirationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> accountExpirationUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExpirationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> accountExpirationLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FingerprintExemptFlag", DbType="Bit")] System.Nullable<bool> fingerprintExemptFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemporaryFlag", DbType="Bit")] System.Nullable<bool> temporaryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LockedFlag", DbType="Bit")] System.Nullable<bool> lockedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuperUserFlag", DbType="Bit")] System.Nullable<bool> superUserFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupportUserFlag", DbType="Bit")] System.Nullable<bool> supportUserFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userTypeKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveDirectoryObjectGloballyUniqueID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> activeDirectoryObjectGloballyUniqueID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirectoryChangePasswordUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> directoryChangePasswordUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirectoryChangePasswordLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> directoryChangePasswordLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardPINExemptFlag", DbType="Bit")] System.Nullable<bool> cardPINExemptFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardSerialID", DbType="NVarChar(100)")] string cardSerialID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, activeDirectoryDomainKey, userID, firstName, middleName, lastName, suffixText, fullName, initialsText, jobTitleText, emailAddressValue, contactInformation, scanCodeValue, accountExpirationUTCDateTime, accountExpirationLocalDateTime, fingerprintExemptFlag, temporaryFlag, lockedFlag, superUserFlag, supportUserFlag, userTypeKey, activeDirectoryObjectGloballyUniqueID, directoryChangePasswordUTCDateTime, directoryChangePasswordLocalDateTime, cardPINExemptFlag, cardSerialID, activeFlag, lastModifiedDispensingDeviceKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, userAccountKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.bsp_MultiUserAccountUpdate")]
		public int bsp_MultiUserAccountUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobTitleText", DbType="NVarChar(20)")] string jobTitleText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobTitleTextSpecifiedFlag", DbType="Bit")] System.Nullable<bool> jobTitleTextSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExpirationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> accountExpirationUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExpirationUTCDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> accountExpirationUTCDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExpirationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> accountExpirationLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountExpirationLocalDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> accountExpirationLocalDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FingerprintExemptFlag", DbType="Bit")] System.Nullable<bool> fingerprintExemptFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FingerprintExemptFlagSpecifiedFlag", DbType="Bit")] System.Nullable<bool> fingerprintExemptFlagSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardPinExemptFlag", DbType="Bit")] System.Nullable<bool> cardPinExemptFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardPinExemptFlagSpecifiedFlag", DbType="Bit")] System.Nullable<bool> cardPinExemptFlagSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuperUserFlag", DbType="Bit")] System.Nullable<bool> superUserFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuperUserFlagSpecifiedFlag", DbType="Bit")] System.Nullable<bool> superUserFlagSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlagSpecifiedFlag", DbType="Bit")] System.Nullable<bool> activeFlagSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userTypeKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> userTypeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountXML", DbType="Xml")] System.Xml.Linq.XElement userAccountXML, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountRolesXML", DbType="Xml")] System.Xml.Linq.XElement userAccountRolesXML, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountRoleAreasXML", DbType="Xml")] System.Xml.Linq.XElement userAccountRoleAreasXML)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, jobTitleText, jobTitleTextSpecifiedFlag, accountExpirationUTCDateTime, accountExpirationUTCDateTimeSpecifiedFlag, accountExpirationLocalDateTime, accountExpirationLocalDateTimeSpecifiedFlag, fingerprintExemptFlag, fingerprintExemptFlagSpecifiedFlag, cardPinExemptFlag, cardPinExemptFlagSpecifiedFlag, superUserFlag, superUserFlagSpecifiedFlag, activeFlag, activeFlagSpecifiedFlag, userTypeKey, userTypeSpecifiedFlag, lastModifiedActorKey, userAccountXML, userAccountRolesXML, userAccountRoleAreasXML);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserTypeInsert")]
		public int usp_UserTypeInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(50)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(250)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StandardUserTypeInternalCode", DbType="VarChar(50)")] string standardUserTypeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userTypeKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, descriptionText, standardUserTypeInternalCode, sortValue, createdUTCDateTime, createdLocalDateTime, lastModifiedActorKey, userTypeKey);
			userTypeKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_UserTypeUpdate")]
		public int usp_UserTypeUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(50)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(250)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StandardUserTypeInternalCode", DbType="VarChar(50)")] string standardUserTypeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userTypeKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, descriptionText, sortValue, standardUserTypeInternalCode, endUTCDateTime, endLocalDateTime, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, userTypeKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.bsp_MapLocalUserToDomainUserMultiUpdate")]
		public int bsp_MapLocalUserToDomainUserMultiUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> oldUserAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> newUserAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, dispensingDeviceKey, oldUserAccountKey, newUserAccountKey, lastModifiedActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_DistributorDelete")]
		public int usp_DistributorDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> distributorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, distributorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_DistributorInsert")]
		public int usp_DistributorInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorID", DbType="NVarChar(50)")] string distributorID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorName", DbType="NVarChar(100)")] string distributorName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StreetAddressText", DbType="NVarChar(120)")] string streetAddressText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CityName", DbType="NVarChar(50)")] string cityName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubdivisionName", DbType="NVarChar(50)")] string subdivisionName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PostalCode", DbType="NVarChar(20)")] string postalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryName", DbType="NVarChar(50)")] string countryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactName", DbType="NVarChar(50)")] string contactName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactPhoneNumberText", DbType="NVarChar(50)")] string contactPhoneNumberText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> distributorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, distributorID, distributorName, streetAddressText, cityName, subdivisionName, postalCode, countryName, contactName, contactPhoneNumberText, lastModifiedActorKey, distributorKey);
			distributorKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(12)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Core.usp_DistributorUpdate")]
		public int usp_DistributorUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorID", DbType="NVarChar(50)")] string distributorID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorName", DbType="NVarChar(100)")] string distributorName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StreetAddressText", DbType="NVarChar(120)")] string streetAddressText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CityName", DbType="NVarChar(50)")] string cityName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubdivisionName", DbType="NVarChar(50)")] string subdivisionName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PostalCode", DbType="NVarChar(20)")] string postalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryName", DbType="NVarChar(50)")] string countryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactName", DbType="NVarChar(50)")] string contactName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactPhoneNumberText", DbType="NVarChar(50)")] string contactPhoneNumberText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> distributorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, distributorID, distributorName, streetAddressText, cityName, subdivisionName, postalCode, countryName, contactName, contactPhoneNumberText, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, distributorKey);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserAccountFacilityCurrent")]
	public partial class UserAccountFacilityEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserAccountKey;
		
		private System.Guid _FacilityKey;
		
		private EntityRef<UserAccountEntity> _UserAccountEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAccountKeyChanging(System.Guid value);
    partial void OnUserAccountKeyChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    #endregion
		
		public UserAccountFacilityEntity()
		{
			this._UserAccountEntity = default(EntityRef<UserAccountEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					if (this._UserAccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccountEntity_UserAccountFacilityEntity", Storage="_UserAccountEntity", ThisKey="UserAccountKey", OtherKey="Key", IsForeignKey=true)]
		public UserAccountEntity UserAccountEntity
		{
			get
			{
				return this._UserAccountEntity.Entity;
			}
			set
			{
				UserAccountEntity previousValue = this._UserAccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserAccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccountEntity.Entity = null;
						previousValue.UserAccountFacilityEntities.Remove(this);
					}
					this._UserAccountEntity.Entity = value;
					if ((value != null))
					{
						value.UserAccountFacilityEntities.Add(this);
						this._UserAccountKey = value.Key;
					}
					else
					{
						this._UserAccountKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserAccountEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_PasswordCredentialCurrent")]
	public partial class PasswordCredentialEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserAccountKey;
		
		private long _SequenceNumber;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private string _EncryptionAlgorithmInternalCode;
		
		private string _PasswordHashValue;
		
		private string _PasswordSaltValue;
		
		private System.Nullable<System.DateTime> _UserChangedOwnPasswordUTCDateTime;
		
		private System.Nullable<System.DateTime> _UserChangedOwnPasswordLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<UserAccountEntity> _UserAccountEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserAccountKeyChanging(System.Guid value);
    partial void OnUserAccountKeyChanged();
    partial void OnSequenceNumberChanging(long value);
    partial void OnSequenceNumberChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnEncryptionAlgorithmInternalCodeChanging(string value);
    partial void OnEncryptionAlgorithmInternalCodeChanged();
    partial void OnPasswordHashValueChanging(string value);
    partial void OnPasswordHashValueChanged();
    partial void OnPasswordSaltValueChanging(string value);
    partial void OnPasswordSaltValueChanged();
    partial void OnUserChangedOwnPasswordUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUserChangedOwnPasswordUTCDateTimeChanged();
    partial void OnUserChangedOwnPasswordLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUserChangedOwnPasswordLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PasswordCredentialEntity()
		{
			this._UserAccountEntity = default(EntityRef<UserAccountEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PasswordCredentialKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					if (this._UserAccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this.OnSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._SequenceNumber = value;
					this.SendPropertyChanged("SequenceNumber");
					this.OnSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncryptionAlgorithmInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EncryptionAlgorithmInternalCode
		{
			get
			{
				return this._EncryptionAlgorithmInternalCode;
			}
			set
			{
				if ((this._EncryptionAlgorithmInternalCode != value))
				{
					this.OnEncryptionAlgorithmInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._EncryptionAlgorithmInternalCode = value;
					this.SendPropertyChanged("EncryptionAlgorithmInternalCode");
					this.OnEncryptionAlgorithmInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHashValue", DbType="NVarChar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PasswordHashValue
		{
			get
			{
				return this._PasswordHashValue;
			}
			set
			{
				if ((this._PasswordHashValue != value))
				{
					this.OnPasswordHashValueChanging(value);
					this.SendPropertyChanging();
					this._PasswordHashValue = value;
					this.SendPropertyChanged("PasswordHashValue");
					this.OnPasswordHashValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSaltValue", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string PasswordSaltValue
		{
			get
			{
				return this._PasswordSaltValue;
			}
			set
			{
				if ((this._PasswordSaltValue != value))
				{
					this.OnPasswordSaltValueChanging(value);
					this.SendPropertyChanging();
					this._PasswordSaltValue = value;
					this.SendPropertyChanged("PasswordSaltValue");
					this.OnPasswordSaltValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserChangedOwnPasswordUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> UserChangedOwnPasswordUTCDateTime
		{
			get
			{
				return this._UserChangedOwnPasswordUTCDateTime;
			}
			set
			{
				if ((this._UserChangedOwnPasswordUTCDateTime != value))
				{
					this.OnUserChangedOwnPasswordUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UserChangedOwnPasswordUTCDateTime = value;
					this.SendPropertyChanged("UserChangedOwnPasswordUTCDateTime");
					this.OnUserChangedOwnPasswordUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserChangedOwnPasswordLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> UserChangedOwnPasswordLocalDateTime
		{
			get
			{
				return this._UserChangedOwnPasswordLocalDateTime;
			}
			set
			{
				if ((this._UserChangedOwnPasswordLocalDateTime != value))
				{
					this.OnUserChangedOwnPasswordLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UserChangedOwnPasswordLocalDateTime = value;
					this.SendPropertyChanged("UserChangedOwnPasswordLocalDateTime");
					this.OnUserChangedOwnPasswordLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccountEntity_PasswordCredentialEntity", Storage="_UserAccountEntity", ThisKey="UserAccountKey", OtherKey="Key", IsForeignKey=true)]
		public UserAccountEntity UserAccountEntity
		{
			get
			{
				return this._UserAccountEntity.Entity;
			}
			set
			{
				UserAccountEntity previousValue = this._UserAccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserAccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccountEntity.Entity = null;
						previousValue.PasswordCredentialEntities.Remove(this);
					}
					this._UserAccountEntity.Entity = value;
					if ((value != null))
					{
						value.PasswordCredentialEntities.Add(this);
						this._UserAccountKey = value.Key;
					}
					else
					{
						this._UserAccountKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserAccountEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserAccountCurrent")]
	public partial class UserAccountEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Nullable<System.DateTime> _LastPasswordExpirationNoticeUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastPasswordExpirationNoticeLocalDateTime;
		
		private System.Nullable<System.DateTime> _LastSuccessfulPasswordAuthenticationUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastSuccessfulPasswordAuthenticationLocalDateTime;
		
		private System.Nullable<System.Guid> _LastAreaKey;
		
		private System.Guid _UserAccountSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.Guid> _ActiveDirectoryDomainKey;
		
		private string _UserID;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _SuffixText;
		
		private string _FullName;
		
		private string _DisplayName;
		
		private string _InitialsText;
		
		private string _JobTitleText;
		
		private string _EmailAddressValue;
		
		private string _ContactInformation;
		
		private string _ScanCodeValue;
		
		private System.Nullable<System.DateTime> _AccountExpirationUTCDateTime;
		
		private System.Nullable<System.DateTime> _AccountExpirationLocalDateTime;
		
		private bool _FingerprintExemptFlag;
		
		private bool _TemporaryFlag;
		
		private bool _LockedFlag;
		
		private bool _SuperUserFlag;
		
		private System.Nullable<System.Guid> _UserTypeKey;
		
		private bool _SupportUserFlag;
		
		private System.Nullable<System.Guid> _ActiveDirectoryObjectGloballyUniqueID;
		
		private System.Nullable<System.DateTime> _DirectoryChangePasswordUTCDateTime;
		
		private System.Nullable<System.DateTime> _DirectoryChangePasswordLocalDateTime;
		
		private bool _CardPINExemptFlag;
		
		private string _CardSerialID;
		
		private bool _ActiveFlag;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private string _RFIDCardSerialID;
		
		private EntitySet<UserAccountFacilityEntity> _UserAccountFacilityEntities;
		
		private EntitySet<PasswordCredentialEntity> _PasswordCredentialEntities;
		
		private EntitySet<UserRoleMemberEntity> _UserRoleMemberEntities;
		
		private EntitySet<UserFingerprintEntity> _UserFingerprintEntities;
		
		private EntityRef<ActiveDirectoryDomainEntity> _ActiveDirectoryDomainEntity;
		
		private EntityRef<UserTypeEntity> _UserTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnLastPasswordExpirationNoticeUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordExpirationNoticeUTCDateTimeChanged();
    partial void OnLastPasswordExpirationNoticeLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordExpirationNoticeLocalDateTimeChanged();
    partial void OnLastSuccessfulPasswordAuthenticationUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSuccessfulPasswordAuthenticationUTCDateTimeChanged();
    partial void OnLastSuccessfulPasswordAuthenticationLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSuccessfulPasswordAuthenticationLocalDateTimeChanged();
    partial void OnLastAreaKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastAreaKeyChanged();
    partial void OnUserAccountSnapshotKeyChanging(System.Guid value);
    partial void OnUserAccountSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnActiveDirectoryDomainKeyChanging(System.Nullable<System.Guid> value);
    partial void OnActiveDirectoryDomainKeyChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSuffixTextChanging(string value);
    partial void OnSuffixTextChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnInitialsTextChanging(string value);
    partial void OnInitialsTextChanged();
    partial void OnJobTitleTextChanging(string value);
    partial void OnJobTitleTextChanged();
    partial void OnEmailAddressValueChanging(string value);
    partial void OnEmailAddressValueChanged();
    partial void OnContactInformationChanging(string value);
    partial void OnContactInformationChanged();
    partial void OnScanCodeValueChanging(string value);
    partial void OnScanCodeValueChanged();
    partial void OnAccountExpirationUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAccountExpirationUTCDateTimeChanged();
    partial void OnAccountExpirationLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAccountExpirationLocalDateTimeChanged();
    partial void OnFingerprintExemptFlagChanging(bool value);
    partial void OnFingerprintExemptFlagChanged();
    partial void OnTemporaryFlagChanging(bool value);
    partial void OnTemporaryFlagChanged();
    partial void OnLockedFlagChanging(bool value);
    partial void OnLockedFlagChanged();
    partial void OnSuperUserFlagChanging(bool value);
    partial void OnSuperUserFlagChanged();
    partial void OnUserTypeKeyChanging(System.Nullable<System.Guid> value);
    partial void OnUserTypeKeyChanged();
    partial void OnSupportUserFlagChanging(bool value);
    partial void OnSupportUserFlagChanged();
    partial void OnActiveDirectoryObjectGloballyUniqueIDChanging(System.Nullable<System.Guid> value);
    partial void OnActiveDirectoryObjectGloballyUniqueIDChanged();
    partial void OnDirectoryChangePasswordUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDirectoryChangePasswordUTCDateTimeChanged();
    partial void OnDirectoryChangePasswordLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDirectoryChangePasswordLocalDateTimeChanged();
    partial void OnCardPINExemptFlagChanging(bool value);
    partial void OnCardPINExemptFlagChanged();
    partial void OnCardSerialIDChanging(string value);
    partial void OnCardSerialIDChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnRFIDCardSerialIDChanging(string value);
    partial void OnRFIDCardSerialIDChanged();
    #endregion
		
		public UserAccountEntity()
		{
			this._UserAccountFacilityEntities = new EntitySet<UserAccountFacilityEntity>(new Action<UserAccountFacilityEntity>(this.attach_UserAccountFacilityEntities), new Action<UserAccountFacilityEntity>(this.detach_UserAccountFacilityEntities));
			this._PasswordCredentialEntities = new EntitySet<PasswordCredentialEntity>(new Action<PasswordCredentialEntity>(this.attach_PasswordCredentialEntities), new Action<PasswordCredentialEntity>(this.detach_PasswordCredentialEntities));
			this._UserRoleMemberEntities = new EntitySet<UserRoleMemberEntity>(new Action<UserRoleMemberEntity>(this.attach_UserRoleMemberEntities), new Action<UserRoleMemberEntity>(this.detach_UserRoleMemberEntities));
			this._UserFingerprintEntities = new EntitySet<UserFingerprintEntity>(new Action<UserFingerprintEntity>(this.attach_UserFingerprintEntities), new Action<UserFingerprintEntity>(this.detach_UserFingerprintEntities));
			this._ActiveDirectoryDomainEntity = default(EntityRef<ActiveDirectoryDomainEntity>);
			this._UserTypeEntity = default(EntityRef<UserTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserAccountKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordExpirationNoticeUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastPasswordExpirationNoticeUTCDateTime
		{
			get
			{
				return this._LastPasswordExpirationNoticeUTCDateTime;
			}
			set
			{
				if ((this._LastPasswordExpirationNoticeUTCDateTime != value))
				{
					this.OnLastPasswordExpirationNoticeUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordExpirationNoticeUTCDateTime = value;
					this.SendPropertyChanged("LastPasswordExpirationNoticeUTCDateTime");
					this.OnLastPasswordExpirationNoticeUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordExpirationNoticeLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastPasswordExpirationNoticeLocalDateTime
		{
			get
			{
				return this._LastPasswordExpirationNoticeLocalDateTime;
			}
			set
			{
				if ((this._LastPasswordExpirationNoticeLocalDateTime != value))
				{
					this.OnLastPasswordExpirationNoticeLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordExpirationNoticeLocalDateTime = value;
					this.SendPropertyChanged("LastPasswordExpirationNoticeLocalDateTime");
					this.OnLastPasswordExpirationNoticeLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSuccessfulPasswordAuthenticationUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastSuccessfulPasswordAuthenticationUTCDateTime
		{
			get
			{
				return this._LastSuccessfulPasswordAuthenticationUTCDateTime;
			}
			set
			{
				if ((this._LastSuccessfulPasswordAuthenticationUTCDateTime != value))
				{
					this.OnLastSuccessfulPasswordAuthenticationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastSuccessfulPasswordAuthenticationUTCDateTime = value;
					this.SendPropertyChanged("LastSuccessfulPasswordAuthenticationUTCDateTime");
					this.OnLastSuccessfulPasswordAuthenticationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSuccessfulPasswordAuthenticationLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastSuccessfulPasswordAuthenticationLocalDateTime
		{
			get
			{
				return this._LastSuccessfulPasswordAuthenticationLocalDateTime;
			}
			set
			{
				if ((this._LastSuccessfulPasswordAuthenticationLocalDateTime != value))
				{
					this.OnLastSuccessfulPasswordAuthenticationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastSuccessfulPasswordAuthenticationLocalDateTime = value;
					this.SendPropertyChanged("LastSuccessfulPasswordAuthenticationLocalDateTime");
					this.OnLastSuccessfulPasswordAuthenticationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAreaKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LastAreaKey
		{
			get
			{
				return this._LastAreaKey;
			}
			set
			{
				if ((this._LastAreaKey != value))
				{
					this.OnLastAreaKeyChanging(value);
					this.SendPropertyChanging();
					this._LastAreaKey = value;
					this.SendPropertyChanged("LastAreaKey");
					this.OnLastAreaKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountSnapshotKey
		{
			get
			{
				return this._UserAccountSnapshotKey;
			}
			set
			{
				if ((this._UserAccountSnapshotKey != value))
				{
					this.OnUserAccountSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountSnapshotKey = value;
					this.SendPropertyChanged("UserAccountSnapshotKey");
					this.OnUserAccountSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveDirectoryDomainKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ActiveDirectoryDomainKey
		{
			get
			{
				return this._ActiveDirectoryDomainKey;
			}
			set
			{
				if ((this._ActiveDirectoryDomainKey != value))
				{
					if (this._ActiveDirectoryDomainEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActiveDirectoryDomainKeyChanging(value);
					this.SendPropertyChanging();
					this._ActiveDirectoryDomainKey = value;
					this.SendPropertyChanged("ActiveDirectoryDomainKey");
					this.OnActiveDirectoryDomainKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string SuffixText
		{
			get
			{
				return this._SuffixText;
			}
			set
			{
				if ((this._SuffixText != value))
				{
					this.OnSuffixTextChanging(value);
					this.SendPropertyChanging();
					this._SuffixText = value;
					this.SendPropertyChanged("SuffixText");
					this.OnSuffixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserAccountDisplayName", Storage="_DisplayName", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialsText", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string InitialsText
		{
			get
			{
				return this._InitialsText;
			}
			set
			{
				if ((this._InitialsText != value))
				{
					this.OnInitialsTextChanging(value);
					this.SendPropertyChanging();
					this._InitialsText = value;
					this.SendPropertyChanged("InitialsText");
					this.OnInitialsTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleText", DbType="NVarChar(64)")]
		public string JobTitleText
		{
			get
			{
				return this._JobTitleText;
			}
			set
			{
				if ((this._JobTitleText != value))
				{
					this.OnJobTitleTextChanging(value);
					this.SendPropertyChanging();
					this._JobTitleText = value;
					this.SendPropertyChanged("JobTitleText");
					this.OnJobTitleTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddressValue", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string EmailAddressValue
		{
			get
			{
				return this._EmailAddressValue;
			}
			set
			{
				if ((this._EmailAddressValue != value))
				{
					this.OnEmailAddressValueChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressValue = value;
					this.SendPropertyChanged("EmailAddressValue");
					this.OnEmailAddressValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactInformation", DbType="NVarChar(30)")]
		public string ContactInformation
		{
			get
			{
				return this._ContactInformation;
			}
			set
			{
				if ((this._ContactInformation != value))
				{
					this.OnContactInformationChanging(value);
					this.SendPropertyChanging();
					this._ContactInformation = value;
					this.SendPropertyChanged("ContactInformation");
					this.OnContactInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanCodeValue", DbType="NVarChar(100)")]
		public string ScanCodeValue
		{
			get
			{
				return this._ScanCodeValue;
			}
			set
			{
				if ((this._ScanCodeValue != value))
				{
					this.OnScanCodeValueChanging(value);
					this.SendPropertyChanging();
					this._ScanCodeValue = value;
					this.SendPropertyChanged("ScanCodeValue");
					this.OnScanCodeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountExpirationUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AccountExpirationUTCDateTime
		{
			get
			{
				return this._AccountExpirationUTCDateTime;
			}
			set
			{
				if ((this._AccountExpirationUTCDateTime != value))
				{
					this.OnAccountExpirationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AccountExpirationUTCDateTime = value;
					this.SendPropertyChanged("AccountExpirationUTCDateTime");
					this.OnAccountExpirationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountExpirationLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AccountExpirationLocalDateTime
		{
			get
			{
				return this._AccountExpirationLocalDateTime;
			}
			set
			{
				if ((this._AccountExpirationLocalDateTime != value))
				{
					this.OnAccountExpirationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AccountExpirationLocalDateTime = value;
					this.SendPropertyChanged("AccountExpirationLocalDateTime");
					this.OnAccountExpirationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FingerprintExemptFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FingerprintExemptFlag
		{
			get
			{
				return this._FingerprintExemptFlag;
			}
			set
			{
				if ((this._FingerprintExemptFlag != value))
				{
					this.OnFingerprintExemptFlagChanging(value);
					this.SendPropertyChanging();
					this._FingerprintExemptFlag = value;
					this.SendPropertyChanged("FingerprintExemptFlag");
					this.OnFingerprintExemptFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TemporaryFlag
		{
			get
			{
				return this._TemporaryFlag;
			}
			set
			{
				if ((this._TemporaryFlag != value))
				{
					this.OnTemporaryFlagChanging(value);
					this.SendPropertyChanging();
					this._TemporaryFlag = value;
					this.SendPropertyChanged("TemporaryFlag");
					this.OnTemporaryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LockedFlag
		{
			get
			{
				return this._LockedFlag;
			}
			set
			{
				if ((this._LockedFlag != value))
				{
					this.OnLockedFlagChanging(value);
					this.SendPropertyChanging();
					this._LockedFlag = value;
					this.SendPropertyChanged("LockedFlag");
					this.OnLockedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperUserFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SuperUserFlag
		{
			get
			{
				return this._SuperUserFlag;
			}
			set
			{
				if ((this._SuperUserFlag != value))
				{
					this.OnSuperUserFlagChanging(value);
					this.SendPropertyChanging();
					this._SuperUserFlag = value;
					this.SendPropertyChanged("SuperUserFlag");
					this.OnSuperUserFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UserTypeKey
		{
			get
			{
				return this._UserTypeKey;
			}
			set
			{
				if ((this._UserTypeKey != value))
				{
					if (this._UserTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._UserTypeKey = value;
					this.SendPropertyChanged("UserTypeKey");
					this.OnUserTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportUserFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SupportUserFlag
		{
			get
			{
				return this._SupportUserFlag;
			}
			set
			{
				if ((this._SupportUserFlag != value))
				{
					this.OnSupportUserFlagChanging(value);
					this.SendPropertyChanging();
					this._SupportUserFlag = value;
					this.SendPropertyChanged("SupportUserFlag");
					this.OnSupportUserFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveDirectoryObjectGloballyUniqueID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ActiveDirectoryObjectGloballyUniqueID
		{
			get
			{
				return this._ActiveDirectoryObjectGloballyUniqueID;
			}
			set
			{
				if ((this._ActiveDirectoryObjectGloballyUniqueID != value))
				{
					this.OnActiveDirectoryObjectGloballyUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._ActiveDirectoryObjectGloballyUniqueID = value;
					this.SendPropertyChanged("ActiveDirectoryObjectGloballyUniqueID");
					this.OnActiveDirectoryObjectGloballyUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectoryChangePasswordUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DirectoryChangePasswordUTCDateTime
		{
			get
			{
				return this._DirectoryChangePasswordUTCDateTime;
			}
			set
			{
				if ((this._DirectoryChangePasswordUTCDateTime != value))
				{
					this.OnDirectoryChangePasswordUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DirectoryChangePasswordUTCDateTime = value;
					this.SendPropertyChanged("DirectoryChangePasswordUTCDateTime");
					this.OnDirectoryChangePasswordUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectoryChangePasswordLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DirectoryChangePasswordLocalDateTime
		{
			get
			{
				return this._DirectoryChangePasswordLocalDateTime;
			}
			set
			{
				if ((this._DirectoryChangePasswordLocalDateTime != value))
				{
					this.OnDirectoryChangePasswordLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DirectoryChangePasswordLocalDateTime = value;
					this.SendPropertyChanged("DirectoryChangePasswordLocalDateTime");
					this.OnDirectoryChangePasswordLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardPINExemptFlag", DbType="Bit NOT NULL")]
		public bool CardPINExemptFlag
		{
			get
			{
				return this._CardPINExemptFlag;
			}
			set
			{
				if ((this._CardPINExemptFlag != value))
				{
					this.OnCardPINExemptFlagChanging(value);
					this.SendPropertyChanging();
					this._CardPINExemptFlag = value;
					this.SendPropertyChanged("CardPINExemptFlag");
					this.OnCardPINExemptFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardSerialID", DbType="NVarChar(100)")]
		public string CardSerialID
		{
			get
			{
				return this._CardSerialID;
			}
			set
			{
				if ((this._CardSerialID != value))
				{
					this.OnCardSerialIDChanging(value);
					this.SendPropertyChanging();
					this._CardSerialID = value;
					this.SendPropertyChanged("CardSerialID");
					this.OnCardSerialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFIDCardSerialID", DbType="NVarChar(100)")]
		public string RFIDCardSerialID
		{
			get
			{
				return this._RFIDCardSerialID;
			}
			set
			{
				if ((this._RFIDCardSerialID != value))
				{
					this.OnRFIDCardSerialIDChanging(value);
					this.SendPropertyChanging();
					this._RFIDCardSerialID = value;
					this.SendPropertyChanged("RFIDCardSerialID");
					this.OnRFIDCardSerialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccountEntity_UserAccountFacilityEntity", Storage="_UserAccountFacilityEntities", ThisKey="Key", OtherKey="UserAccountKey")]
		public EntitySet<UserAccountFacilityEntity> UserAccountFacilityEntities
		{
			get
			{
				return this._UserAccountFacilityEntities;
			}
			set
			{
				this._UserAccountFacilityEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccountEntity_PasswordCredentialEntity", Storage="_PasswordCredentialEntities", ThisKey="Key", OtherKey="UserAccountKey")]
		public EntitySet<PasswordCredentialEntity> PasswordCredentialEntities
		{
			get
			{
				return this._PasswordCredentialEntities;
			}
			set
			{
				this._PasswordCredentialEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccountEntity_UserRoleMemberEntity", Storage="_UserRoleMemberEntities", ThisKey="Key", OtherKey="UserAccountKey")]
		public EntitySet<UserRoleMemberEntity> UserRoleMemberEntities
		{
			get
			{
				return this._UserRoleMemberEntities;
			}
			set
			{
				this._UserRoleMemberEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccountEntity_UserFingerprintEntity", Storage="_UserFingerprintEntities", ThisKey="Key", OtherKey="UserAccountKey")]
		public EntitySet<UserFingerprintEntity> UserFingerprintEntities
		{
			get
			{
				return this._UserFingerprintEntities;
			}
			set
			{
				this._UserFingerprintEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveDirectoryDomainEntity_UserAccountEntity", Storage="_ActiveDirectoryDomainEntity", ThisKey="ActiveDirectoryDomainKey", OtherKey="Key", IsForeignKey=true)]
		public ActiveDirectoryDomainEntity ActiveDirectoryDomainEntity
		{
			get
			{
				return this._ActiveDirectoryDomainEntity.Entity;
			}
			set
			{
				ActiveDirectoryDomainEntity previousValue = this._ActiveDirectoryDomainEntity.Entity;
				if (((previousValue != value) 
							|| (this._ActiveDirectoryDomainEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActiveDirectoryDomainEntity.Entity = null;
						previousValue.UserAccountEntities.Remove(this);
					}
					this._ActiveDirectoryDomainEntity.Entity = value;
					if ((value != null))
					{
						value.UserAccountEntities.Add(this);
						this._ActiveDirectoryDomainKey = value.Key;
					}
					else
					{
						this._ActiveDirectoryDomainKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ActiveDirectoryDomainEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTypeEntity_UserAccountEntity", Storage="_UserTypeEntity", ThisKey="UserTypeKey", OtherKey="Key", IsForeignKey=true)]
		public UserTypeEntity UserTypeEntity
		{
			get
			{
				return this._UserTypeEntity.Entity;
			}
			set
			{
				UserTypeEntity previousValue = this._UserTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTypeEntity.Entity = null;
						previousValue.UserAccountEntities.Remove(this);
					}
					this._UserTypeEntity.Entity = value;
					if ((value != null))
					{
						value.UserAccountEntities.Add(this);
						this._UserTypeKey = value.Key;
					}
					else
					{
						this._UserTypeKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("UserTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserAccountFacilityEntities(UserAccountFacilityEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserAccountEntity = this;
		}
		
		private void detach_UserAccountFacilityEntities(UserAccountFacilityEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserAccountEntity = null;
		}
		
		private void attach_PasswordCredentialEntities(PasswordCredentialEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserAccountEntity = this;
		}
		
		private void detach_PasswordCredentialEntities(PasswordCredentialEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserAccountEntity = null;
		}
		
		private void attach_UserRoleMemberEntities(UserRoleMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserAccountEntity = this;
		}
		
		private void detach_UserRoleMemberEntities(UserRoleMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserAccountEntity = null;
		}
		
		private void attach_UserFingerprintEntities(UserFingerprintEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserAccountEntity = this;
		}
		
		private void detach_UserFingerprintEntities(UserFingerprintEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserAccountEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserRoleMemberCurrent")]
	public partial class UserRoleMemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserRoleKey;
		
		private System.Guid _UserAccountKey;
		
		private bool _MedTemporaryAccessFlag;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<UserRoleMemberAreaEntity> _UserRoleMemberAreaEntities;
		
		private EntityRef<UserRoleEntity> _UserRoleEntity;
		
		private EntityRef<UserAccountEntity> _UserAccountEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserRoleKeyChanging(System.Guid value);
    partial void OnUserRoleKeyChanged();
    partial void OnUserAccountKeyChanging(System.Guid value);
    partial void OnUserAccountKeyChanged();
    partial void OnMedTemporaryAccessFlagChanging(bool value);
    partial void OnMedTemporaryAccessFlagChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserRoleMemberEntity()
		{
			this._UserRoleMemberAreaEntities = new EntitySet<UserRoleMemberAreaEntity>(new Action<UserRoleMemberAreaEntity>(this.attach_UserRoleMemberAreaEntities), new Action<UserRoleMemberAreaEntity>(this.detach_UserRoleMemberAreaEntities));
			this._UserRoleEntity = default(EntityRef<UserRoleEntity>);
			this._UserAccountEntity = default(EntityRef<UserAccountEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserRoleMemberKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserRoleKey
		{
			get
			{
				return this._UserRoleKey;
			}
			set
			{
				if ((this._UserRoleKey != value))
				{
					if (this._UserRoleEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRoleKeyChanging(value);
					this.SendPropertyChanging();
					this._UserRoleKey = value;
					this.SendPropertyChanged("UserRoleKey");
					this.OnUserRoleKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					if (this._UserAccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedTemporaryAccessFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MedTemporaryAccessFlag
		{
			get
			{
				return this._MedTemporaryAccessFlag;
			}
			set
			{
				if ((this._MedTemporaryAccessFlag != value))
				{
					this.OnMedTemporaryAccessFlagChanging(value);
					this.SendPropertyChanging();
					this._MedTemporaryAccessFlag = value;
					this.SendPropertyChanged("MedTemporaryAccessFlag");
					this.OnMedTemporaryAccessFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleMemberEntity_UserRoleMemberAreaEntity", Storage="_UserRoleMemberAreaEntities", ThisKey="Key", OtherKey="UserRoleMemberKey")]
		public EntitySet<UserRoleMemberAreaEntity> UserRoleMemberAreaEntities
		{
			get
			{
				return this._UserRoleMemberAreaEntities;
			}
			set
			{
				this._UserRoleMemberAreaEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleEntity_UserRoleMemberEntity", Storage="_UserRoleEntity", ThisKey="UserRoleKey", OtherKey="Key", IsForeignKey=true)]
		public UserRoleEntity UserRoleEntity
		{
			get
			{
				return this._UserRoleEntity.Entity;
			}
			set
			{
				UserRoleEntity previousValue = this._UserRoleEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleEntity.Entity = null;
						previousValue.UserRoleMemberEntities.Remove(this);
					}
					this._UserRoleEntity.Entity = value;
					if ((value != null))
					{
						value.UserRoleMemberEntities.Add(this);
						this._UserRoleKey = value.Key;
					}
					else
					{
						this._UserRoleKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserRoleEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccountEntity_UserRoleMemberEntity", Storage="_UserAccountEntity", ThisKey="UserAccountKey", OtherKey="Key", IsForeignKey=true)]
		public UserAccountEntity UserAccountEntity
		{
			get
			{
				return this._UserAccountEntity.Entity;
			}
			set
			{
				UserAccountEntity previousValue = this._UserAccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserAccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccountEntity.Entity = null;
						previousValue.UserRoleMemberEntities.Remove(this);
					}
					this._UserAccountEntity.Entity = value;
					if ((value != null))
					{
						value.UserRoleMemberEntities.Add(this);
						this._UserAccountKey = value.Key;
					}
					else
					{
						this._UserAccountKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserAccountEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoleMemberAreaEntities(UserRoleMemberAreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleMemberEntity = this;
		}
		
		private void detach_UserRoleMemberAreaEntities(UserRoleMemberAreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleMemberEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserRoleCurrent")]
	public partial class UserRoleEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserRoleSnapshotKey;
		
		private string _InternalCode;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private string _RoleName;
		
		private string _DescriptionText;
		
		private bool _AllowForTemporaryUserFlag;
		
		private bool _ActiveFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<UserRoleMemberEntity> _UserRoleMemberEntities;
		
		private EntitySet<UserRolePermissionEntity> _UserRolePermissionEntities;
		
		private EntitySet<UserRoleOverrideGroupEntity> _UserRoleOverrideGroupEntities;
		
		private EntitySet<UserRolePermissionRoleEntity> _UserRolePermissionRoleEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserRoleSnapshotKeyChanging(System.Guid value);
    partial void OnUserRoleSnapshotKeyChanged();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnFacilityKeyChanging(System.Nullable<System.Guid> value);
    partial void OnFacilityKeyChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnAllowForTemporaryUserFlagChanging(bool value);
    partial void OnAllowForTemporaryUserFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserRoleEntity()
		{
			this._UserRoleMemberEntities = new EntitySet<UserRoleMemberEntity>(new Action<UserRoleMemberEntity>(this.attach_UserRoleMemberEntities), new Action<UserRoleMemberEntity>(this.detach_UserRoleMemberEntities));
			this._UserRolePermissionEntities = new EntitySet<UserRolePermissionEntity>(new Action<UserRolePermissionEntity>(this.attach_UserRolePermissionEntities), new Action<UserRolePermissionEntity>(this.detach_UserRolePermissionEntities));
			this._UserRoleOverrideGroupEntities = new EntitySet<UserRoleOverrideGroupEntity>(new Action<UserRoleOverrideGroupEntity>(this.attach_UserRoleOverrideGroupEntities), new Action<UserRoleOverrideGroupEntity>(this.detach_UserRoleOverrideGroupEntities));
			this._UserRolePermissionRoleEntities = new EntitySet<UserRolePermissionRoleEntity>(new Action<UserRolePermissionRoleEntity>(this.attach_UserRolePermissionRoleEntities), new Action<UserRolePermissionRoleEntity>(this.detach_UserRolePermissionRoleEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserRoleKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserRoleSnapshotKey
		{
			get
			{
				return this._UserRoleSnapshotKey;
			}
			set
			{
				if ((this._UserRoleSnapshotKey != value))
				{
					this.OnUserRoleSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._UserRoleSnapshotKey = value;
					this.SendPropertyChanged("UserRoleSnapshotKey");
					this.OnUserRoleSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalCode", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowForTemporaryUserFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllowForTemporaryUserFlag
		{
			get
			{
				return this._AllowForTemporaryUserFlag;
			}
			set
			{
				if ((this._AllowForTemporaryUserFlag != value))
				{
					this.OnAllowForTemporaryUserFlagChanging(value);
					this.SendPropertyChanging();
					this._AllowForTemporaryUserFlag = value;
					this.SendPropertyChanged("AllowForTemporaryUserFlag");
					this.OnAllowForTemporaryUserFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleEntity_UserRoleMemberEntity", Storage="_UserRoleMemberEntities", ThisKey="Key", OtherKey="UserRoleKey")]
		public EntitySet<UserRoleMemberEntity> UserRoleMemberEntities
		{
			get
			{
				return this._UserRoleMemberEntities;
			}
			set
			{
				this._UserRoleMemberEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleEntity_UserRolePermissionEntity", Storage="_UserRolePermissionEntities", ThisKey="Key", OtherKey="UserRoleKey")]
		public EntitySet<UserRolePermissionEntity> UserRolePermissionEntities
		{
			get
			{
				return this._UserRolePermissionEntities;
			}
			set
			{
				this._UserRolePermissionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleEntity_UserRoleOverrideGroupEntity", Storage="_UserRoleOverrideGroupEntities", ThisKey="Key", OtherKey="UserRoleKey")]
		public EntitySet<UserRoleOverrideGroupEntity> UserRoleOverrideGroupEntities
		{
			get
			{
				return this._UserRoleOverrideGroupEntities;
			}
			set
			{
				this._UserRoleOverrideGroupEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleEntity_UserRolePermissionRoleEntity", Storage="_UserRolePermissionRoleEntities", ThisKey="Key", OtherKey="UserRoleKey")]
		public EntitySet<UserRolePermissionRoleEntity> UserRolePermissionRoleEntities
		{
			get
			{
				return this._UserRolePermissionRoleEntities;
			}
			set
			{
				this._UserRolePermissionRoleEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoleMemberEntities(UserRoleMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleEntity = this;
		}
		
		private void detach_UserRoleMemberEntities(UserRoleMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleEntity = null;
		}
		
		private void attach_UserRolePermissionEntities(UserRolePermissionEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleEntity = this;
		}
		
		private void detach_UserRolePermissionEntities(UserRolePermissionEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleEntity = null;
		}
		
		private void attach_UserRoleOverrideGroupEntities(UserRoleOverrideGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleEntity = this;
		}
		
		private void detach_UserRoleOverrideGroupEntities(UserRoleOverrideGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleEntity = null;
		}
		
		private void attach_UserRolePermissionRoleEntities(UserRolePermissionRoleEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleEntity = this;
		}
		
		private void detach_UserRolePermissionRoleEntities(UserRolePermissionRoleEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserRolePermissionCurrent")]
	public partial class UserRolePermissionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserRoleKey;
		
		private string _PermissionInternalCode;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<UserRolePermissionSecurityGroupEntity> _UserRolePermissionSecurityGroupEntities;
		
		private EntitySet<UserRolePermissionRoleEntity> _UserRolePermissionRoleEntities;
		
		private EntityRef<UserRoleEntity> _UserRoleEntity;
		
		private EntityRef<PermissionEntity> _PermissionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserRoleKeyChanging(System.Guid value);
    partial void OnUserRoleKeyChanged();
    partial void OnPermissionInternalCodeChanging(string value);
    partial void OnPermissionInternalCodeChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserRolePermissionEntity()
		{
			this._UserRolePermissionSecurityGroupEntities = new EntitySet<UserRolePermissionSecurityGroupEntity>(new Action<UserRolePermissionSecurityGroupEntity>(this.attach_UserRolePermissionSecurityGroupEntities), new Action<UserRolePermissionSecurityGroupEntity>(this.detach_UserRolePermissionSecurityGroupEntities));
			this._UserRolePermissionRoleEntities = new EntitySet<UserRolePermissionRoleEntity>(new Action<UserRolePermissionRoleEntity>(this.attach_UserRolePermissionRoleEntities), new Action<UserRolePermissionRoleEntity>(this.detach_UserRolePermissionRoleEntities));
			this._UserRoleEntity = default(EntityRef<UserRoleEntity>);
			this._PermissionEntity = default(EntityRef<PermissionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserRolePermissionKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserRoleKey
		{
			get
			{
				return this._UserRoleKey;
			}
			set
			{
				if ((this._UserRoleKey != value))
				{
					if (this._UserRoleEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRoleKeyChanging(value);
					this.SendPropertyChanging();
					this._UserRoleKey = value;
					this.SendPropertyChanged("UserRoleKey");
					this.OnUserRoleKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PermissionInternalCode
		{
			get
			{
				return this._PermissionInternalCode;
			}
			set
			{
				if ((this._PermissionInternalCode != value))
				{
					if (this._PermissionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._PermissionInternalCode = value;
					this.SendPropertyChanged("PermissionInternalCode");
					this.OnPermissionInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRolePermissionEntity_UserRolePermissionSecurityGroupEntity", Storage="_UserRolePermissionSecurityGroupEntities", ThisKey="Key", OtherKey="UserRolePermissionKey")]
		public EntitySet<UserRolePermissionSecurityGroupEntity> UserRolePermissionSecurityGroupEntities
		{
			get
			{
				return this._UserRolePermissionSecurityGroupEntities;
			}
			set
			{
				this._UserRolePermissionSecurityGroupEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRolePermissionEntity_UserRolePermissionRoleEntity", Storage="_UserRolePermissionRoleEntities", ThisKey="Key", OtherKey="UserRolePermissionKey")]
		public EntitySet<UserRolePermissionRoleEntity> UserRolePermissionRoleEntities
		{
			get
			{
				return this._UserRolePermissionRoleEntities;
			}
			set
			{
				this._UserRolePermissionRoleEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleEntity_UserRolePermissionEntity", Storage="_UserRoleEntity", ThisKey="UserRoleKey", OtherKey="Key", IsForeignKey=true)]
		public UserRoleEntity UserRoleEntity
		{
			get
			{
				return this._UserRoleEntity.Entity;
			}
			set
			{
				UserRoleEntity previousValue = this._UserRoleEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleEntity.Entity = null;
						previousValue.UserRolePermissionEntities.Remove(this);
					}
					this._UserRoleEntity.Entity = value;
					if ((value != null))
					{
						value.UserRolePermissionEntities.Add(this);
						this._UserRoleKey = value.Key;
					}
					else
					{
						this._UserRoleKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserRoleEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionEntity_UserRolePermissionEntity", Storage="_PermissionEntity", ThisKey="PermissionInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public PermissionEntity PermissionEntity
		{
			get
			{
				return this._PermissionEntity.Entity;
			}
			set
			{
				PermissionEntity previousValue = this._PermissionEntity.Entity;
				if (((previousValue != value) 
							|| (this._PermissionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PermissionEntity.Entity = null;
						previousValue.UserRolePermissionEntities.Remove(this);
					}
					this._PermissionEntity.Entity = value;
					if ((value != null))
					{
						value.UserRolePermissionEntities.Add(this);
						this._PermissionInternalCode = value.InternalCode;
					}
					else
					{
						this._PermissionInternalCode = default(string);
					}
					this.SendPropertyChanged("PermissionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRolePermissionSecurityGroupEntities(UserRolePermissionSecurityGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRolePermissionEntity = this;
		}
		
		private void detach_UserRolePermissionSecurityGroupEntities(UserRolePermissionSecurityGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRolePermissionEntity = null;
		}
		
		private void attach_UserRolePermissionRoleEntities(UserRolePermissionRoleEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRolePermissionEntity = this;
		}
		
		private void detach_UserRolePermissionRoleEntities(UserRolePermissionRoleEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserRolePermissionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_PermissionTypeCurrent")]
	public partial class PermissionTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private bool _DeleteFlag;
		
		private EntitySet<PermissionEntity> _PermissionEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public PermissionTypeEntity()
		{
			this._PermissionEntities = new EntitySet<PermissionEntity>(new Action<PermissionEntity>(this.attach_PermissionEntities), new Action<PermissionEntity>(this.detach_PermissionEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PermissionTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionTypeEntity_PermissionEntity", Storage="_PermissionEntities", ThisKey="InternalCode", OtherKey="PermissionTypeInternalCode")]
		public EntitySet<PermissionEntity> PermissionEntities
		{
			get
			{
				return this._PermissionEntities;
			}
			set
			{
				this._PermissionEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PermissionEntities(PermissionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PermissionTypeEntity = this;
		}
		
		private void detach_PermissionEntities(PermissionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PermissionTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.UOM")]
	public partial class UnitOfMeasureEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private string _DisplayCode;
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private bool _UseDosageFormFlag;
		
		private System.Nullable<int> _SortValue;
		
		private bool _ActiveFlag;
		
		private System.Nullable<System.Guid> _BaseUOMKey;
		
		private System.Nullable<decimal> _ConversionAmount;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<UnitOfMeasureRoleMemberEntity> _UOMRoleMemberEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnUseDosageFormFlagChanging(bool value);
    partial void OnUseDosageFormFlagChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnBaseUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnBaseUOMKeyChanged();
    partial void OnConversionAmountChanging(System.Nullable<decimal> value);
    partial void OnConversionAmountChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UnitOfMeasureEntity()
		{
			this._UOMRoleMemberEntities = new EntitySet<UnitOfMeasureRoleMemberEntity>(new Action<UnitOfMeasureRoleMemberEntity>(this.attach_UOMRoleMemberEntities), new Action<UnitOfMeasureRoleMemberEntity>(this.detach_UOMRoleMemberEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UOMKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseDosageFormFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool UseDosageFormFlag
		{
			get
			{
				return this._UseDosageFormFlag;
			}
			set
			{
				if ((this._UseDosageFormFlag != value))
				{
					this.OnUseDosageFormFlagChanging(value);
					this.SendPropertyChanging();
					this._UseDosageFormFlag = value;
					this.SendPropertyChanged("UseDosageFormFlag");
					this.OnUseDosageFormFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> BaseUOMKey
		{
			get
			{
				return this._BaseUOMKey;
			}
			set
			{
				if ((this._BaseUOMKey != value))
				{
					this.OnBaseUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._BaseUOMKey = value;
					this.SendPropertyChanged("BaseUOMKey");
					this.OnBaseUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionAmount", DbType="Decimal(28,14)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ConversionAmount
		{
			get
			{
				return this._ConversionAmount;
			}
			set
			{
				if ((this._ConversionAmount != value))
				{
					this.OnConversionAmountChanging(value);
					this.SendPropertyChanging();
					this._ConversionAmount = value;
					this.SendPropertyChanged("ConversionAmount");
					this.OnConversionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasureEntity_UnitOfMeasureRoleMemberEntity", Storage="_UOMRoleMemberEntities", ThisKey="Key", OtherKey="UOMKey")]
		public EntitySet<UnitOfMeasureRoleMemberEntity> UnitOfMeasureRoleMemberEntities
		{
			get
			{
				return this._UOMRoleMemberEntities;
			}
			set
			{
				this._UOMRoleMemberEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UOMRoleMemberEntities(UnitOfMeasureRoleMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasureEntity = this;
		}
		
		private void detach_UOMRoleMemberEntities(UnitOfMeasureRoleMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasureEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.UOMRole")]
	public partial class UnitOfMeasureRoleEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<UnitOfMeasureRoleMemberEntity> _UOMRoleMemberEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UnitOfMeasureRoleEntity()
		{
			this._UOMRoleMemberEntities = new EntitySet<UnitOfMeasureRoleMemberEntity>(new Action<UnitOfMeasureRoleMemberEntity>(this.attach_UOMRoleMemberEntities), new Action<UnitOfMeasureRoleMemberEntity>(this.detach_UOMRoleMemberEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UOMRoleInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasureRoleEntity_UnitOfMeasureRoleMemberEntity", Storage="_UOMRoleMemberEntities", ThisKey="InternalCode", OtherKey="UOMRoleInternalCode")]
		public EntitySet<UnitOfMeasureRoleMemberEntity> UnitOfMeasureRoleMemberEntities
		{
			get
			{
				return this._UOMRoleMemberEntities;
			}
			set
			{
				this._UOMRoleMemberEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UOMRoleMemberEntities(UnitOfMeasureRoleMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasureRoleEntity = this;
		}
		
		private void detach_UOMRoleMemberEntities(UnitOfMeasureRoleMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasureRoleEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_PermissionCurrent")]
	public partial class PermissionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _PermissionTypeInternalCode;
		
		private string _PermissionName;
		
		private string _DescriptionText;
		
		private bool _SupportUserOnlyFlag;
		
		private bool _SecurityGroupApplicableFlag;
		
		private bool _HideFlag;
		
		private bool _DeleteFlag;
		
		private string _VersionText;
		
		private bool _ESSystemFlag;
		
		private bool _PharmogisticsFlag;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private bool _GCSMFlag;
		
		private EntitySet<UserRolePermissionEntity> _UserRolePermissionEntities;
		
		private EntityRef<PermissionTypeEntity> _PermissionTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnPermissionTypeInternalCodeChanging(string value);
    partial void OnPermissionTypeInternalCodeChanged();
    partial void OnPermissionNameChanging(string value);
    partial void OnPermissionNameChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSupportUserOnlyFlagChanging(bool value);
    partial void OnSupportUserOnlyFlagChanged();
    partial void OnSecurityGroupApplicableFlagChanging(bool value);
    partial void OnSecurityGroupApplicableFlagChanged();
    partial void OnHideFlagChanging(bool value);
    partial void OnHideFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnVersionTextChanging(string value);
    partial void OnVersionTextChanged();
    partial void OnESSystemFlagChanging(bool value);
    partial void OnESSystemFlagChanged();
    partial void OnPharmogisticsFlagChanging(bool value);
    partial void OnPharmogisticsFlagChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnGCSMFlagChanging(bool value);
    partial void OnGCSMFlagChanged();
    #endregion
		
		public PermissionEntity()
		{
			this._UserRolePermissionEntities = new EntitySet<UserRolePermissionEntity>(new Action<UserRolePermissionEntity>(this.attach_UserRolePermissionEntities), new Action<UserRolePermissionEntity>(this.detach_UserRolePermissionEntities));
			this._PermissionTypeEntity = default(EntityRef<PermissionTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PermissionInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PermissionTypeInternalCode
		{
			get
			{
				return this._PermissionTypeInternalCode;
			}
			set
			{
				if ((this._PermissionTypeInternalCode != value))
				{
					if (this._PermissionTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._PermissionTypeInternalCode = value;
					this.SendPropertyChanged("PermissionTypeInternalCode");
					this.OnPermissionTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string PermissionName
		{
			get
			{
				return this._PermissionName;
			}
			set
			{
				if ((this._PermissionName != value))
				{
					this.OnPermissionNameChanging(value);
					this.SendPropertyChanging();
					this._PermissionName = value;
					this.SendPropertyChanged("PermissionName");
					this.OnPermissionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(1000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportUserOnlyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SupportUserOnlyFlag
		{
			get
			{
				return this._SupportUserOnlyFlag;
			}
			set
			{
				if ((this._SupportUserOnlyFlag != value))
				{
					this.OnSupportUserOnlyFlagChanging(value);
					this.SendPropertyChanging();
					this._SupportUserOnlyFlag = value;
					this.SendPropertyChanged("SupportUserOnlyFlag");
					this.OnSupportUserOnlyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupApplicableFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SecurityGroupApplicableFlag
		{
			get
			{
				return this._SecurityGroupApplicableFlag;
			}
			set
			{
				if ((this._SecurityGroupApplicableFlag != value))
				{
					this.OnSecurityGroupApplicableFlagChanging(value);
					this.SendPropertyChanging();
					this._SecurityGroupApplicableFlag = value;
					this.SendPropertyChanged("SecurityGroupApplicableFlag");
					this.OnSecurityGroupApplicableFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool HideFlag
		{
			get
			{
				return this._HideFlag;
			}
			set
			{
				if ((this._HideFlag != value))
				{
					this.OnHideFlagChanging(value);
					this.SendPropertyChanging();
					this._HideFlag = value;
					this.SendPropertyChanged("HideFlag");
					this.OnHideFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionText", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string VersionText
		{
			get
			{
				return this._VersionText;
			}
			set
			{
				if ((this._VersionText != value))
				{
					this.OnVersionTextChanging(value);
					this.SendPropertyChanging();
					this._VersionText = value;
					this.SendPropertyChanged("VersionText");
					this.OnVersionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESSystemFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ESSystemFlag
		{
			get
			{
				return this._ESSystemFlag;
			}
			set
			{
				if ((this._ESSystemFlag != value))
				{
					this.OnESSystemFlagChanging(value);
					this.SendPropertyChanging();
					this._ESSystemFlag = value;
					this.SendPropertyChanged("ESSystemFlag");
					this.OnESSystemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmogisticsFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PharmogisticsFlag
		{
			get
			{
				return this._PharmogisticsFlag;
			}
			set
			{
				if ((this._PharmogisticsFlag != value))
				{
					this.OnPharmogisticsFlagChanging(value);
					this.SendPropertyChanging();
					this._PharmogisticsFlag = value;
					this.SendPropertyChanged("PharmogisticsFlag");
					this.OnPharmogisticsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GCSMFlag
		{
			get
			{
				return this._GCSMFlag;
			}
			set
			{
				if ((this._GCSMFlag != value))
				{
					this.OnGCSMFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMFlag = value;
					this.SendPropertyChanged("GCSMFlag");
					this.OnGCSMFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionEntity_UserRolePermissionEntity", Storage="_UserRolePermissionEntities", ThisKey="InternalCode", OtherKey="PermissionInternalCode")]
		public EntitySet<UserRolePermissionEntity> UserRolePermissionEntities
		{
			get
			{
				return this._UserRolePermissionEntities;
			}
			set
			{
				this._UserRolePermissionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionTypeEntity_PermissionEntity", Storage="_PermissionTypeEntity", ThisKey="PermissionTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public PermissionTypeEntity PermissionTypeEntity
		{
			get
			{
				return this._PermissionTypeEntity.Entity;
			}
			set
			{
				PermissionTypeEntity previousValue = this._PermissionTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._PermissionTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PermissionTypeEntity.Entity = null;
						previousValue.PermissionEntities.Remove(this);
					}
					this._PermissionTypeEntity.Entity = value;
					if ((value != null))
					{
						value.PermissionEntities.Add(this);
						this._PermissionTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._PermissionTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("PermissionTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRolePermissionEntities(UserRolePermissionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PermissionEntity = this;
		}
		
		private void detach_UserRolePermissionEntities(UserRolePermissionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PermissionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.Actor")]
	public partial class ActorEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ActorKey;
		
		private string _ActorTypeInternalCode;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActorKeyChanging(System.Guid value);
    partial void OnActorKeyChanged();
    partial void OnActorTypeInternalCodeChanging(string value);
    partial void OnActorTypeInternalCodeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ActorEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid ActorKey
		{
			get
			{
				return this._ActorKey;
			}
			set
			{
				if ((this._ActorKey != value))
				{
					this.OnActorKeyChanging(value);
					this.SendPropertyChanging();
					this._ActorKey = value;
					this.SendPropertyChanged("ActorKey");
					this.OnActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ActorTypeInternalCode
		{
			get
			{
				return this._ActorTypeInternalCode;
			}
			set
			{
				if ((this._ActorTypeInternalCode != value))
				{
					this.OnActorTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ActorTypeInternalCode = value;
					this.SendPropertyChanged("ActorTypeInternalCode");
					this.OnActorTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_ExternalSystemCurrent")]
	public partial class ExternalSystemEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExternalSystemSnapshotKey;
		
		private System.Guid _Key;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.DateTime> _EndUTCDateTime;
		
		private System.Nullable<System.DateTime> _EndLocalDateTime;
		
		private string _ExternalSystemName;
		
		private bool _ADTSystemFlag;
		
		private bool _PharmacyInformationSystemFlag;
		
		private bool _SubscriberFlag;
		
		private bool _LegacyCIISafeFlag;
		
		private bool _DataManagerFlag;
		
		private bool _PISProvidesMedClassFlag;
		
		private bool _PISProvidesTherapeuticClassFlag;
		
		private bool _PISProvidesPureGenericNameFlag;
		
		private bool _AllowPISItemEditFlag;
		
		private bool _IgnorePISItemDeleteFlag;
		
		private bool _IgnorePISItemUpdateFlag;
		
		private bool _ProvidesAllergiesFlag;
		
		private bool _ReplaceAllergiesFlag;
		
		private bool _ProvidesPatientPhysicalObservationsFlag;
		
		private short _InboundDelayDurationAmount;
		
		private short _InboundDownDurationAmount;
		
		private bool _ActiveConnectionFlag;
		
		private bool _AllowTransferDischargeOfExternalEncounterFlag;
		
		private bool _EditExternalScanCodeLinksFlag;
		
		private string _MessageLocalDateTimeZoneID;
		
		private bool _MessageBehindCreatedFlag;
		
		private bool _DiscontinuePharmacyOrderOnMergeFlag;
		
		private bool _LeaveOfAbsenceActionabilityFlag;
		
		private bool _DeleteFlag;
		
		private bool _FirstSnapshotFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExternalSystemSnapshotKeyChanging(System.Guid value);
    partial void OnExternalSystemSnapshotKeyChanged();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnEndUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndUTCDateTimeChanged();
    partial void OnEndLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndLocalDateTimeChanged();
    partial void OnExternalSystemNameChanging(string value);
    partial void OnExternalSystemNameChanged();
    partial void OnADTSystemFlagChanging(bool value);
    partial void OnADTSystemFlagChanged();
    partial void OnPharmacyInformationSystemFlagChanging(bool value);
    partial void OnPharmacyInformationSystemFlagChanged();
    partial void OnSubscriberFlagChanging(bool value);
    partial void OnSubscriberFlagChanged();
    partial void OnLegacyCIISafeFlagChanging(bool value);
    partial void OnLegacyCIISafeFlagChanged();
    partial void OnDataManagerFlagChanging(bool value);
    partial void OnDataManagerFlagChanged();
    partial void OnPISProvidesMedClassFlagChanging(bool value);
    partial void OnPISProvidesMedClassFlagChanged();
    partial void OnPISProvidesTherapeuticClassFlagChanging(bool value);
    partial void OnPISProvidesTherapeuticClassFlagChanged();
    partial void OnPISProvidesPureGenericNameFlagChanging(bool value);
    partial void OnPISProvidesPureGenericNameFlagChanged();
    partial void OnAllowPISItemEditFlagChanging(bool value);
    partial void OnAllowPISItemEditFlagChanged();
    partial void OnIgnorePISItemDeleteFlagChanging(bool value);
    partial void OnIgnorePISItemDeleteFlagChanged();
    partial void OnIgnorePISItemUpdateFlagChanging(bool value);
    partial void OnIgnorePISItemUpdateFlagChanged();
    partial void OnProvidesAllergiesFlagChanging(bool value);
    partial void OnProvidesAllergiesFlagChanged();
    partial void OnReplaceAllergiesFlagChanging(bool value);
    partial void OnReplaceAllergiesFlagChanged();
    partial void OnProvidesPatientPhysicalObservationsFlagChanging(bool value);
    partial void OnProvidesPatientPhysicalObservationsFlagChanged();
    partial void OnInboundDelayDurationAmountChanging(short value);
    partial void OnInboundDelayDurationAmountChanged();
    partial void OnInboundDownDurationAmountChanging(short value);
    partial void OnInboundDownDurationAmountChanged();
    partial void OnActiveConnectionFlagChanging(bool value);
    partial void OnActiveConnectionFlagChanged();
    partial void OnAllowTransferDischargeOfExternalEncounterFlagChanging(bool value);
    partial void OnAllowTransferDischargeOfExternalEncounterFlagChanged();
    partial void OnEditExternalScanCodeLinksFlagChanging(bool value);
    partial void OnEditExternalScanCodeLinksFlagChanged();
    partial void OnMessageLocalDateTimeZoneIDChanging(string value);
    partial void OnMessageLocalDateTimeZoneIDChanged();
    partial void OnMessageBehindCreatedFlagChanging(bool value);
    partial void OnMessageBehindCreatedFlagChanged();
    partial void OnDiscontinuePharmacyOrderOnMergeFlagChanging(bool value);
    partial void OnDiscontinuePharmacyOrderOnMergeFlagChanged();
    partial void OnLeaveOfAbsenceActionabilityFlagChanging(bool value);
    partial void OnLeaveOfAbsenceActionabilityFlagChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnFirstSnapshotFlagChanging(bool value);
    partial void OnFirstSnapshotFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ExternalSystemEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemSnapshotKey
		{
			get
			{
				return this._ExternalSystemSnapshotKey;
			}
			set
			{
				if ((this._ExternalSystemSnapshotKey != value))
				{
					this.OnExternalSystemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemSnapshotKey = value;
					this.SendPropertyChanged("ExternalSystemSnapshotKey");
					this.OnExternalSystemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExternalSystemKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndUTCDateTime
		{
			get
			{
				return this._EndUTCDateTime;
			}
			set
			{
				if ((this._EndUTCDateTime != value))
				{
					this.OnEndUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndUTCDateTime = value;
					this.SendPropertyChanged("EndUTCDateTime");
					this.OnEndUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndLocalDateTime
		{
			get
			{
				return this._EndLocalDateTime;
			}
			set
			{
				if ((this._EndLocalDateTime != value))
				{
					this.OnEndLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndLocalDateTime = value;
					this.SendPropertyChanged("EndLocalDateTime");
					this.OnEndLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ExternalSystemName
		{
			get
			{
				return this._ExternalSystemName;
			}
			set
			{
				if ((this._ExternalSystemName != value))
				{
					this.OnExternalSystemNameChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemName = value;
					this.SendPropertyChanged("ExternalSystemName");
					this.OnExternalSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADTSystemFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ADTSystemFlag
		{
			get
			{
				return this._ADTSystemFlag;
			}
			set
			{
				if ((this._ADTSystemFlag != value))
				{
					this.OnADTSystemFlagChanging(value);
					this.SendPropertyChanging();
					this._ADTSystemFlag = value;
					this.SendPropertyChanged("ADTSystemFlag");
					this.OnADTSystemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyInformationSystemFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PharmacyInformationSystemFlag
		{
			get
			{
				return this._PharmacyInformationSystemFlag;
			}
			set
			{
				if ((this._PharmacyInformationSystemFlag != value))
				{
					this.OnPharmacyInformationSystemFlagChanging(value);
					this.SendPropertyChanging();
					this._PharmacyInformationSystemFlag = value;
					this.SendPropertyChanged("PharmacyInformationSystemFlag");
					this.OnPharmacyInformationSystemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SubscriberFlag
		{
			get
			{
				return this._SubscriberFlag;
			}
			set
			{
				if ((this._SubscriberFlag != value))
				{
					this.OnSubscriberFlagChanging(value);
					this.SendPropertyChanging();
					this._SubscriberFlag = value;
					this.SendPropertyChanged("SubscriberFlag");
					this.OnSubscriberFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegacyCIISafeFlag", DbType="Bit NOT NULL")]
		public bool LegacyCIISafeFlag
		{
			get
			{
				return this._LegacyCIISafeFlag;
			}
			set
			{
				if ((this._LegacyCIISafeFlag != value))
				{
					this.OnLegacyCIISafeFlagChanging(value);
					this.SendPropertyChanging();
					this._LegacyCIISafeFlag = value;
					this.SendPropertyChanged("LegacyCIISafeFlag");
					this.OnLegacyCIISafeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataManagerFlag", DbType="Bit NOT NULL")]
		public bool DataManagerFlag
		{
			get
			{
				return this._DataManagerFlag;
			}
			set
			{
				if ((this._DataManagerFlag != value))
				{
					this.OnDataManagerFlagChanging(value);
					this.SendPropertyChanging();
					this._DataManagerFlag = value;
					this.SendPropertyChanged("DataManagerFlag");
					this.OnDataManagerFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PISProvidesMedClassFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PISProvidesMedClassFlag
		{
			get
			{
				return this._PISProvidesMedClassFlag;
			}
			set
			{
				if ((this._PISProvidesMedClassFlag != value))
				{
					this.OnPISProvidesMedClassFlagChanging(value);
					this.SendPropertyChanging();
					this._PISProvidesMedClassFlag = value;
					this.SendPropertyChanged("PISProvidesMedClassFlag");
					this.OnPISProvidesMedClassFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PISProvidesTherapeuticClassFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PISProvidesTherapeuticClassFlag
		{
			get
			{
				return this._PISProvidesTherapeuticClassFlag;
			}
			set
			{
				if ((this._PISProvidesTherapeuticClassFlag != value))
				{
					this.OnPISProvidesTherapeuticClassFlagChanging(value);
					this.SendPropertyChanging();
					this._PISProvidesTherapeuticClassFlag = value;
					this.SendPropertyChanged("PISProvidesTherapeuticClassFlag");
					this.OnPISProvidesTherapeuticClassFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PISProvidesPureGenericNameFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PISProvidesPureGenericNameFlag
		{
			get
			{
				return this._PISProvidesPureGenericNameFlag;
			}
			set
			{
				if ((this._PISProvidesPureGenericNameFlag != value))
				{
					this.OnPISProvidesPureGenericNameFlagChanging(value);
					this.SendPropertyChanging();
					this._PISProvidesPureGenericNameFlag = value;
					this.SendPropertyChanged("PISProvidesPureGenericNameFlag");
					this.OnPISProvidesPureGenericNameFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPISItemEditFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllowPISItemEditFlag
		{
			get
			{
				return this._AllowPISItemEditFlag;
			}
			set
			{
				if ((this._AllowPISItemEditFlag != value))
				{
					this.OnAllowPISItemEditFlagChanging(value);
					this.SendPropertyChanging();
					this._AllowPISItemEditFlag = value;
					this.SendPropertyChanged("AllowPISItemEditFlag");
					this.OnAllowPISItemEditFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgnorePISItemDeleteFlag", DbType="Bit NOT NULL")]
		public bool IgnorePISItemDeleteFlag
		{
			get
			{
				return this._IgnorePISItemDeleteFlag;
			}
			set
			{
				if ((this._IgnorePISItemDeleteFlag != value))
				{
					this.OnIgnorePISItemDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._IgnorePISItemDeleteFlag = value;
					this.SendPropertyChanged("IgnorePISItemDeleteFlag");
					this.OnIgnorePISItemDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgnorePISItemUpdateFlag", DbType="Bit NOT NULL")]
		public bool IgnorePISItemUpdateFlag
		{
			get
			{
				return this._IgnorePISItemUpdateFlag;
			}
			set
			{
				if ((this._IgnorePISItemUpdateFlag != value))
				{
					this.OnIgnorePISItemUpdateFlagChanging(value);
					this.SendPropertyChanging();
					this._IgnorePISItemUpdateFlag = value;
					this.SendPropertyChanged("IgnorePISItemUpdateFlag");
					this.OnIgnorePISItemUpdateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvidesAllergiesFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ProvidesAllergiesFlag
		{
			get
			{
				return this._ProvidesAllergiesFlag;
			}
			set
			{
				if ((this._ProvidesAllergiesFlag != value))
				{
					this.OnProvidesAllergiesFlagChanging(value);
					this.SendPropertyChanging();
					this._ProvidesAllergiesFlag = value;
					this.SendPropertyChanged("ProvidesAllergiesFlag");
					this.OnProvidesAllergiesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplaceAllergiesFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ReplaceAllergiesFlag
		{
			get
			{
				return this._ReplaceAllergiesFlag;
			}
			set
			{
				if ((this._ReplaceAllergiesFlag != value))
				{
					this.OnReplaceAllergiesFlagChanging(value);
					this.SendPropertyChanging();
					this._ReplaceAllergiesFlag = value;
					this.SendPropertyChanged("ReplaceAllergiesFlag");
					this.OnReplaceAllergiesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvidesPatientPhysicalObservationsFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ProvidesPatientPhysicalObservationsFlag
		{
			get
			{
				return this._ProvidesPatientPhysicalObservationsFlag;
			}
			set
			{
				if ((this._ProvidesPatientPhysicalObservationsFlag != value))
				{
					this.OnProvidesPatientPhysicalObservationsFlagChanging(value);
					this.SendPropertyChanging();
					this._ProvidesPatientPhysicalObservationsFlag = value;
					this.SendPropertyChanged("ProvidesPatientPhysicalObservationsFlag");
					this.OnProvidesPatientPhysicalObservationsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundDelayDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short InboundDelayDurationAmount
		{
			get
			{
				return this._InboundDelayDurationAmount;
			}
			set
			{
				if ((this._InboundDelayDurationAmount != value))
				{
					this.OnInboundDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._InboundDelayDurationAmount = value;
					this.SendPropertyChanged("InboundDelayDurationAmount");
					this.OnInboundDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundDownDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short InboundDownDurationAmount
		{
			get
			{
				return this._InboundDownDurationAmount;
			}
			set
			{
				if ((this._InboundDownDurationAmount != value))
				{
					this.OnInboundDownDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._InboundDownDurationAmount = value;
					this.SendPropertyChanged("InboundDownDurationAmount");
					this.OnInboundDownDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveConnectionFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveConnectionFlag
		{
			get
			{
				return this._ActiveConnectionFlag;
			}
			set
			{
				if ((this._ActiveConnectionFlag != value))
				{
					this.OnActiveConnectionFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveConnectionFlag = value;
					this.SendPropertyChanged("ActiveConnectionFlag");
					this.OnActiveConnectionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowTransferDischargeOfExternalEncounterFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllowTransferDischargeOfExternalEncounterFlag
		{
			get
			{
				return this._AllowTransferDischargeOfExternalEncounterFlag;
			}
			set
			{
				if ((this._AllowTransferDischargeOfExternalEncounterFlag != value))
				{
					this.OnAllowTransferDischargeOfExternalEncounterFlagChanging(value);
					this.SendPropertyChanging();
					this._AllowTransferDischargeOfExternalEncounterFlag = value;
					this.SendPropertyChanged("AllowTransferDischargeOfExternalEncounterFlag");
					this.OnAllowTransferDischargeOfExternalEncounterFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditExternalScanCodeLinksFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool EditExternalScanCodeLinksFlag
		{
			get
			{
				return this._EditExternalScanCodeLinksFlag;
			}
			set
			{
				if ((this._EditExternalScanCodeLinksFlag != value))
				{
					this.OnEditExternalScanCodeLinksFlagChanging(value);
					this.SendPropertyChanging();
					this._EditExternalScanCodeLinksFlag = value;
					this.SendPropertyChanged("EditExternalScanCodeLinksFlag");
					this.OnEditExternalScanCodeLinksFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageLocalDateTimeZoneID", DbType="VarChar(64)")]
		public string MessageLocalDateTimeZoneID
		{
			get
			{
				return this._MessageLocalDateTimeZoneID;
			}
			set
			{
				if ((this._MessageLocalDateTimeZoneID != value))
				{
					this.OnMessageLocalDateTimeZoneIDChanging(value);
					this.SendPropertyChanging();
					this._MessageLocalDateTimeZoneID = value;
					this.SendPropertyChanged("MessageLocalDateTimeZoneID");
					this.OnMessageLocalDateTimeZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBehindCreatedFlag", DbType="Bit NOT NULL")]
		public bool MessageBehindCreatedFlag
		{
			get
			{
				return this._MessageBehindCreatedFlag;
			}
			set
			{
				if ((this._MessageBehindCreatedFlag != value))
				{
					this.OnMessageBehindCreatedFlagChanging(value);
					this.SendPropertyChanging();
					this._MessageBehindCreatedFlag = value;
					this.SendPropertyChanged("MessageBehindCreatedFlag");
					this.OnMessageBehindCreatedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscontinuePharmacyOrderOnMergeFlag", DbType="Bit NOT NULL")]
		public bool DiscontinuePharmacyOrderOnMergeFlag
		{
			get
			{
				return this._DiscontinuePharmacyOrderOnMergeFlag;
			}
			set
			{
				if ((this._DiscontinuePharmacyOrderOnMergeFlag != value))
				{
					this.OnDiscontinuePharmacyOrderOnMergeFlagChanging(value);
					this.SendPropertyChanging();
					this._DiscontinuePharmacyOrderOnMergeFlag = value;
					this.SendPropertyChanged("DiscontinuePharmacyOrderOnMergeFlag");
					this.OnDiscontinuePharmacyOrderOnMergeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceActionabilityFlag", DbType="Bit NOT NULL")]
		public bool LeaveOfAbsenceActionabilityFlag
		{
			get
			{
				return this._LeaveOfAbsenceActionabilityFlag;
			}
			set
			{
				if ((this._LeaveOfAbsenceActionabilityFlag != value))
				{
					this.OnLeaveOfAbsenceActionabilityFlagChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceActionabilityFlag = value;
					this.SendPropertyChanged("LeaveOfAbsenceActionabilityFlag");
					this.OnLeaveOfAbsenceActionabilityFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstSnapshotFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FirstSnapshotFlag
		{
			get
			{
				return this._FirstSnapshotFlag;
			}
			set
			{
				if ((this._FirstSnapshotFlag != value))
				{
					this.OnFirstSnapshotFlagChanging(value);
					this.SendPropertyChanging();
					this._FirstSnapshotFlag = value;
					this.SendPropertyChanged("FirstSnapshotFlag");
					this.OnFirstSnapshotFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_ActiveDirectoryDomainCurrent")]
	public partial class ActiveDirectoryDomainEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ActiveDirectoryDomainSnapshotKey;
		
		private System.Nullable<long> _HighestCommittedUSNValue;
		
		private System.Nullable<System.DateTime> _LastSuccessfulPollUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastSuccessfulPollLocalDateTime;
		
		private string _LastPollStatusInternalCode;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private bool _WorkgroupFlag;
		
		private string _FullyQualifiedDomainName;
		
		private string _ShortDomainName;
		
		private string _GroupName;
		
		private System.Nullable<int> _PollingDurationAmount;
		
		private bool _ActiveFlag;
		
		private string _DomainControllerAddressValue;
		
		private string _SystemAccountID;
		
		private string _SystemAccountPasswordEncryptedValue;
		
		private System.Nullable<System.Guid> _InvocationID;
		
		private System.Nullable<short> _ScheduledPasswordSignInIntervalAmount;
		
		private bool _SupportUserFlag;
		
		private string _UserDirectoryTypeInternalCode;
		
		private string _EncryptionAlgorithmInternalCode;
		
		private bool _SecuredCommunicationFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<UserAccountEntity> _UserAccountEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnActiveDirectoryDomainSnapshotKeyChanging(System.Guid value);
    partial void OnActiveDirectoryDomainSnapshotKeyChanged();
    partial void OnHighestCommittedUSNValueChanging(System.Nullable<long> value);
    partial void OnHighestCommittedUSNValueChanged();
    partial void OnLastSuccessfulPollUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSuccessfulPollUTCDateTimeChanged();
    partial void OnLastSuccessfulPollLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSuccessfulPollLocalDateTimeChanged();
    partial void OnLastPollStatusInternalCodeChanging(string value);
    partial void OnLastPollStatusInternalCodeChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnWorkgroupFlagChanging(bool value);
    partial void OnWorkgroupFlagChanged();
    partial void OnFullyQualifiedDomainNameChanging(string value);
    partial void OnFullyQualifiedDomainNameChanged();
    partial void OnShortDomainNameChanging(string value);
    partial void OnShortDomainNameChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnPollingDurationAmountChanging(System.Nullable<int> value);
    partial void OnPollingDurationAmountChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnDomainControllerAddressValueChanging(string value);
    partial void OnDomainControllerAddressValueChanged();
    partial void OnSystemAccountIDChanging(string value);
    partial void OnSystemAccountIDChanged();
    partial void OnSystemAccountPasswordEncryptedValueChanging(string value);
    partial void OnSystemAccountPasswordEncryptedValueChanged();
    partial void OnInvocationIDChanging(System.Nullable<System.Guid> value);
    partial void OnInvocationIDChanged();
    partial void OnScheduledPasswordSignInIntervalAmountChanging(System.Nullable<short> value);
    partial void OnScheduledPasswordSignInIntervalAmountChanged();
    partial void OnSupportUserFlagChanging(bool value);
    partial void OnSupportUserFlagChanged();
    partial void OnUserDirectoryTypeInternalCodeChanging(string value);
    partial void OnUserDirectoryTypeInternalCodeChanged();
    partial void OnEncryptionAlgorithmInternalCodeChanging(string value);
    partial void OnEncryptionAlgorithmInternalCodeChanged();
    partial void OnSecuredCommunicationFlagChanging(bool value);
    partial void OnSecuredCommunicationFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ActiveDirectoryDomainEntity()
		{
			this._UserAccountEntities = new EntitySet<UserAccountEntity>(new Action<UserAccountEntity>(this.attach_UserAccountEntities), new Action<UserAccountEntity>(this.detach_UserAccountEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ActiveDirectoryDomainKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveDirectoryDomainSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ActiveDirectoryDomainSnapshotKey
		{
			get
			{
				return this._ActiveDirectoryDomainSnapshotKey;
			}
			set
			{
				if ((this._ActiveDirectoryDomainSnapshotKey != value))
				{
					this.OnActiveDirectoryDomainSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ActiveDirectoryDomainSnapshotKey = value;
					this.SendPropertyChanged("ActiveDirectoryDomainSnapshotKey");
					this.OnActiveDirectoryDomainSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighestCommittedUSNValue", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> HighestCommittedUSNValue
		{
			get
			{
				return this._HighestCommittedUSNValue;
			}
			set
			{
				if ((this._HighestCommittedUSNValue != value))
				{
					this.OnHighestCommittedUSNValueChanging(value);
					this.SendPropertyChanging();
					this._HighestCommittedUSNValue = value;
					this.SendPropertyChanged("HighestCommittedUSNValue");
					this.OnHighestCommittedUSNValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSuccessfulPollUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastSuccessfulPollUTCDateTime
		{
			get
			{
				return this._LastSuccessfulPollUTCDateTime;
			}
			set
			{
				if ((this._LastSuccessfulPollUTCDateTime != value))
				{
					this.OnLastSuccessfulPollUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastSuccessfulPollUTCDateTime = value;
					this.SendPropertyChanged("LastSuccessfulPollUTCDateTime");
					this.OnLastSuccessfulPollUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSuccessfulPollLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastSuccessfulPollLocalDateTime
		{
			get
			{
				return this._LastSuccessfulPollLocalDateTime;
			}
			set
			{
				if ((this._LastSuccessfulPollLocalDateTime != value))
				{
					this.OnLastSuccessfulPollLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastSuccessfulPollLocalDateTime = value;
					this.SendPropertyChanged("LastSuccessfulPollLocalDateTime");
					this.OnLastSuccessfulPollLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPollStatusInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string LastPollStatusInternalCode
		{
			get
			{
				return this._LastPollStatusInternalCode;
			}
			set
			{
				if ((this._LastPollStatusInternalCode != value))
				{
					this.OnLastPollStatusInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._LastPollStatusInternalCode = value;
					this.SendPropertyChanged("LastPollStatusInternalCode");
					this.OnLastPollStatusInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkgroupFlag", DbType="Bit NOT NULL")]
		public bool WorkgroupFlag
		{
			get
			{
				return this._WorkgroupFlag;
			}
			set
			{
				if ((this._WorkgroupFlag != value))
				{
					this.OnWorkgroupFlagChanging(value);
					this.SendPropertyChanging();
					this._WorkgroupFlag = value;
					this.SendPropertyChanged("WorkgroupFlag");
					this.OnWorkgroupFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullyQualifiedDomainName", DbType="NVarChar(2000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FullyQualifiedDomainName
		{
			get
			{
				return this._FullyQualifiedDomainName;
			}
			set
			{
				if ((this._FullyQualifiedDomainName != value))
				{
					this.OnFullyQualifiedDomainNameChanging(value);
					this.SendPropertyChanging();
					this._FullyQualifiedDomainName = value;
					this.SendPropertyChanged("FullyQualifiedDomainName");
					this.OnFullyQualifiedDomainNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDomainName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ShortDomainName
		{
			get
			{
				return this._ShortDomainName;
			}
			set
			{
				if ((this._ShortDomainName != value))
				{
					this.OnShortDomainNameChanging(value);
					this.SendPropertyChanging();
					this._ShortDomainName = value;
					this.SendPropertyChanged("ShortDomainName");
					this.OnShortDomainNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollingDurationAmount", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PollingDurationAmount
		{
			get
			{
				return this._PollingDurationAmount;
			}
			set
			{
				if ((this._PollingDurationAmount != value))
				{
					this.OnPollingDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._PollingDurationAmount = value;
					this.SendPropertyChanged("PollingDurationAmount");
					this.OnPollingDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainControllerAddressValue", DbType="NVarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string DomainControllerAddressValue
		{
			get
			{
				return this._DomainControllerAddressValue;
			}
			set
			{
				if ((this._DomainControllerAddressValue != value))
				{
					this.OnDomainControllerAddressValueChanging(value);
					this.SendPropertyChanging();
					this._DomainControllerAddressValue = value;
					this.SendPropertyChanged("DomainControllerAddressValue");
					this.OnDomainControllerAddressValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemAccountID", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string SystemAccountID
		{
			get
			{
				return this._SystemAccountID;
			}
			set
			{
				if ((this._SystemAccountID != value))
				{
					this.OnSystemAccountIDChanging(value);
					this.SendPropertyChanging();
					this._SystemAccountID = value;
					this.SendPropertyChanged("SystemAccountID");
					this.OnSystemAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemAccountPasswordEncryptedValue", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string SystemAccountPasswordEncryptedValue
		{
			get
			{
				return this._SystemAccountPasswordEncryptedValue;
			}
			set
			{
				if ((this._SystemAccountPasswordEncryptedValue != value))
				{
					this.OnSystemAccountPasswordEncryptedValueChanging(value);
					this.SendPropertyChanging();
					this._SystemAccountPasswordEncryptedValue = value;
					this.SendPropertyChanged("SystemAccountPasswordEncryptedValue");
					this.OnSystemAccountPasswordEncryptedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvocationID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> InvocationID
		{
			get
			{
				return this._InvocationID;
			}
			set
			{
				if ((this._InvocationID != value))
				{
					this.OnInvocationIDChanging(value);
					this.SendPropertyChanging();
					this._InvocationID = value;
					this.SendPropertyChanged("InvocationID");
					this.OnInvocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledPasswordSignInIntervalAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> ScheduledPasswordSignInIntervalAmount
		{
			get
			{
				return this._ScheduledPasswordSignInIntervalAmount;
			}
			set
			{
				if ((this._ScheduledPasswordSignInIntervalAmount != value))
				{
					this.OnScheduledPasswordSignInIntervalAmountChanging(value);
					this.SendPropertyChanging();
					this._ScheduledPasswordSignInIntervalAmount = value;
					this.SendPropertyChanged("ScheduledPasswordSignInIntervalAmount");
					this.OnScheduledPasswordSignInIntervalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportUserFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SupportUserFlag
		{
			get
			{
				return this._SupportUserFlag;
			}
			set
			{
				if ((this._SupportUserFlag != value))
				{
					this.OnSupportUserFlagChanging(value);
					this.SendPropertyChanging();
					this._SupportUserFlag = value;
					this.SendPropertyChanged("SupportUserFlag");
					this.OnSupportUserFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDirectoryTypeInternalCode", DbType="VarChar(10)")]
		public string UserDirectoryTypeInternalCode
		{
			get
			{
				return this._UserDirectoryTypeInternalCode;
			}
			set
			{
				if ((this._UserDirectoryTypeInternalCode != value))
				{
					this.OnUserDirectoryTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._UserDirectoryTypeInternalCode = value;
					this.SendPropertyChanged("UserDirectoryTypeInternalCode");
					this.OnUserDirectoryTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncryptionAlgorithmInternalCode", DbType="VarChar(10)")]
		public string EncryptionAlgorithmInternalCode
		{
			get
			{
				return this._EncryptionAlgorithmInternalCode;
			}
			set
			{
				if ((this._EncryptionAlgorithmInternalCode != value))
				{
					this.OnEncryptionAlgorithmInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._EncryptionAlgorithmInternalCode = value;
					this.SendPropertyChanged("EncryptionAlgorithmInternalCode");
					this.OnEncryptionAlgorithmInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecuredCommunicationFlag", DbType="Bit NOT NULL")]
		public bool SecuredCommunicationFlag
		{
			get
			{
				return this._SecuredCommunicationFlag;
			}
			set
			{
				if ((this._SecuredCommunicationFlag != value))
				{
					this.OnSecuredCommunicationFlagChanging(value);
					this.SendPropertyChanging();
					this._SecuredCommunicationFlag = value;
					this.SendPropertyChanged("SecuredCommunicationFlag");
					this.OnSecuredCommunicationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveDirectoryDomainEntity_UserAccountEntity", Storage="_UserAccountEntities", ThisKey="Key", OtherKey="ActiveDirectoryDomainKey")]
		public EntitySet<UserAccountEntity> UserAccountEntities
		{
			get
			{
				return this._UserAccountEntities;
			}
			set
			{
				this._UserAccountEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserAccountEntities(UserAccountEntity entity)
		{
			this.SendPropertyChanging();
			entity.ActiveDirectoryDomainEntity = this;
		}
		
		private void detach_UserAccountEntities(UserAccountEntity entity)
		{
			this.SendPropertyChanging();
			entity.ActiveDirectoryDomainEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserRolePermissionSecurityGroupCurrent")]
	public partial class UserRolePermissionSecurityGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserRolePermissionKey;
		
		private System.Guid _SecurityGroupKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<UserRolePermissionEntity> _UserRolePermissionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserRolePermissionKeyChanging(System.Guid value);
    partial void OnUserRolePermissionKeyChanged();
    partial void OnSecurityGroupKeyChanging(System.Guid value);
    partial void OnSecurityGroupKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserRolePermissionSecurityGroupEntity()
		{
			this._UserRolePermissionEntity = default(EntityRef<UserRolePermissionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserRolePermissionSecurityGroupKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRolePermissionKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserRolePermissionKey
		{
			get
			{
				return this._UserRolePermissionKey;
			}
			set
			{
				if ((this._UserRolePermissionKey != value))
				{
					if (this._UserRolePermissionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRolePermissionKeyChanging(value);
					this.SendPropertyChanging();
					this._UserRolePermissionKey = value;
					this.SendPropertyChanged("UserRolePermissionKey");
					this.OnUserRolePermissionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid SecurityGroupKey
		{
			get
			{
				return this._SecurityGroupKey;
			}
			set
			{
				if ((this._SecurityGroupKey != value))
				{
					this.OnSecurityGroupKeyChanging(value);
					this.SendPropertyChanging();
					this._SecurityGroupKey = value;
					this.SendPropertyChanged("SecurityGroupKey");
					this.OnSecurityGroupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRolePermissionEntity_UserRolePermissionSecurityGroupEntity", Storage="_UserRolePermissionEntity", ThisKey="UserRolePermissionKey", OtherKey="Key", IsForeignKey=true)]
		public UserRolePermissionEntity UserRolePermissionEntity
		{
			get
			{
				return this._UserRolePermissionEntity.Entity;
			}
			set
			{
				UserRolePermissionEntity previousValue = this._UserRolePermissionEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserRolePermissionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRolePermissionEntity.Entity = null;
						previousValue.UserRolePermissionSecurityGroupEntities.Remove(this);
					}
					this._UserRolePermissionEntity.Entity = value;
					if ((value != null))
					{
						value.UserRolePermissionSecurityGroupEntities.Add(this);
						this._UserRolePermissionKey = value.Key;
					}
					else
					{
						this._UserRolePermissionKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserRolePermissionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserRoleOverrideGroupCurrent")]
	public partial class UserRoleOverrideGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserRoleKey;
		
		private System.Guid _OverrideGroupKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<UserRoleEntity> _UserRoleEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserRoleKeyChanging(System.Guid value);
    partial void OnUserRoleKeyChanged();
    partial void OnOverrideGroupKeyChanging(System.Guid value);
    partial void OnOverrideGroupKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserRoleOverrideGroupEntity()
		{
			this._UserRoleEntity = default(EntityRef<UserRoleEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserRoleOverrideGroupKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserRoleKey
		{
			get
			{
				return this._UserRoleKey;
			}
			set
			{
				if ((this._UserRoleKey != value))
				{
					if (this._UserRoleEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRoleKeyChanging(value);
					this.SendPropertyChanging();
					this._UserRoleKey = value;
					this.SendPropertyChanged("UserRoleKey");
					this.OnUserRoleKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideGroupKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid OverrideGroupKey
		{
			get
			{
				return this._OverrideGroupKey;
			}
			set
			{
				if ((this._OverrideGroupKey != value))
				{
					this.OnOverrideGroupKeyChanging(value);
					this.SendPropertyChanging();
					this._OverrideGroupKey = value;
					this.SendPropertyChanged("OverrideGroupKey");
					this.OnOverrideGroupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleEntity_UserRoleOverrideGroupEntity", Storage="_UserRoleEntity", ThisKey="UserRoleKey", OtherKey="Key", IsForeignKey=true)]
		public UserRoleEntity UserRoleEntity
		{
			get
			{
				return this._UserRoleEntity.Entity;
			}
			set
			{
				UserRoleEntity previousValue = this._UserRoleEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleEntity.Entity = null;
						previousValue.UserRoleOverrideGroupEntities.Remove(this);
					}
					this._UserRoleEntity.Entity = value;
					if ((value != null))
					{
						value.UserRoleOverrideGroupEntities.Add(this);
						this._UserRoleKey = value.Key;
					}
					else
					{
						this._UserRoleKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserRoleEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserFingerprintCurrent")]
	public partial class UserFingerprintEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserAccountKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Data.Linq.Binary _Fingerprint1Value;
		
		private long _Fingerprint1LengthQuantity;
		
		private System.Data.Linq.Binary _Fingerprint2Value;
		
		private long _Fingerprint2LengthQuantity;
		
		private System.Data.Linq.Binary _Fingerprint3Value;
		
		private long _Fingerprint3LengthQuantity;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<UserAccountEntity> _UserAccountEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserAccountKeyChanging(System.Guid value);
    partial void OnUserAccountKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnFingerprint1ValueChanging(System.Data.Linq.Binary value);
    partial void OnFingerprint1ValueChanged();
    partial void OnFingerprint1LengthQuantityChanging(long value);
    partial void OnFingerprint1LengthQuantityChanged();
    partial void OnFingerprint2ValueChanging(System.Data.Linq.Binary value);
    partial void OnFingerprint2ValueChanged();
    partial void OnFingerprint2LengthQuantityChanging(long value);
    partial void OnFingerprint2LengthQuantityChanged();
    partial void OnFingerprint3ValueChanging(System.Data.Linq.Binary value);
    partial void OnFingerprint3ValueChanged();
    partial void OnFingerprint3LengthQuantityChanging(long value);
    partial void OnFingerprint3LengthQuantityChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserFingerprintEntity()
		{
			this._UserAccountEntity = default(EntityRef<UserAccountEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserFingerprintKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					if (this._UserAccountEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fingerprint1Value", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Fingerprint1Value
		{
			get
			{
				return this._Fingerprint1Value;
			}
			set
			{
				if ((this._Fingerprint1Value != value))
				{
					this.OnFingerprint1ValueChanging(value);
					this.SendPropertyChanging();
					this._Fingerprint1Value = value;
					this.SendPropertyChanged("Fingerprint1Value");
					this.OnFingerprint1ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fingerprint1LengthQuantity", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long Fingerprint1LengthQuantity
		{
			get
			{
				return this._Fingerprint1LengthQuantity;
			}
			set
			{
				if ((this._Fingerprint1LengthQuantity != value))
				{
					this.OnFingerprint1LengthQuantityChanging(value);
					this.SendPropertyChanging();
					this._Fingerprint1LengthQuantity = value;
					this.SendPropertyChanged("Fingerprint1LengthQuantity");
					this.OnFingerprint1LengthQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fingerprint2Value", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Fingerprint2Value
		{
			get
			{
				return this._Fingerprint2Value;
			}
			set
			{
				if ((this._Fingerprint2Value != value))
				{
					this.OnFingerprint2ValueChanging(value);
					this.SendPropertyChanging();
					this._Fingerprint2Value = value;
					this.SendPropertyChanged("Fingerprint2Value");
					this.OnFingerprint2ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fingerprint2LengthQuantity", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long Fingerprint2LengthQuantity
		{
			get
			{
				return this._Fingerprint2LengthQuantity;
			}
			set
			{
				if ((this._Fingerprint2LengthQuantity != value))
				{
					this.OnFingerprint2LengthQuantityChanging(value);
					this.SendPropertyChanging();
					this._Fingerprint2LengthQuantity = value;
					this.SendPropertyChanged("Fingerprint2LengthQuantity");
					this.OnFingerprint2LengthQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fingerprint3Value", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Fingerprint3Value
		{
			get
			{
				return this._Fingerprint3Value;
			}
			set
			{
				if ((this._Fingerprint3Value != value))
				{
					this.OnFingerprint3ValueChanging(value);
					this.SendPropertyChanging();
					this._Fingerprint3Value = value;
					this.SendPropertyChanged("Fingerprint3Value");
					this.OnFingerprint3ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fingerprint3LengthQuantity", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long Fingerprint3LengthQuantity
		{
			get
			{
				return this._Fingerprint3LengthQuantity;
			}
			set
			{
				if ((this._Fingerprint3LengthQuantity != value))
				{
					this.OnFingerprint3LengthQuantityChanging(value);
					this.SendPropertyChanging();
					this._Fingerprint3LengthQuantity = value;
					this.SendPropertyChanged("Fingerprint3LengthQuantity");
					this.OnFingerprint3LengthQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccountEntity_UserFingerprintEntity", Storage="_UserAccountEntity", ThisKey="UserAccountKey", OtherKey="Key", IsForeignKey=true)]
		public UserAccountEntity UserAccountEntity
		{
			get
			{
				return this._UserAccountEntity.Entity;
			}
			set
			{
				UserAccountEntity previousValue = this._UserAccountEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserAccountEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccountEntity.Entity = null;
						previousValue.UserFingerprintEntities.Remove(this);
					}
					this._UserAccountEntity.Entity = value;
					if ((value != null))
					{
						value.UserFingerprintEntities.Add(this);
						this._UserAccountKey = value.Key;
					}
					else
					{
						this._UserAccountKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserAccountEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserRoleMemberAreaCurrent")]
	public partial class UserRoleMemberAreaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserRoleMemberKey;
		
		private System.Guid _AreaKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<UserRoleMemberEntity> _UserRoleMemberEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserRoleMemberKeyChanging(System.Guid value);
    partial void OnUserRoleMemberKeyChanged();
    partial void OnAreaKeyChanging(System.Guid value);
    partial void OnAreaKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserRoleMemberAreaEntity()
		{
			this._UserRoleMemberEntity = default(EntityRef<UserRoleMemberEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserRoleMemberAreaKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleMemberKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserRoleMemberKey
		{
			get
			{
				return this._UserRoleMemberKey;
			}
			set
			{
				if ((this._UserRoleMemberKey != value))
				{
					if (this._UserRoleMemberEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRoleMemberKeyChanging(value);
					this.SendPropertyChanging();
					this._UserRoleMemberKey = value;
					this.SendPropertyChanged("UserRoleMemberKey");
					this.OnUserRoleMemberKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					this.OnAreaKeyChanging(value);
					this.SendPropertyChanging();
					this._AreaKey = value;
					this.SendPropertyChanged("AreaKey");
					this.OnAreaKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleMemberEntity_UserRoleMemberAreaEntity", Storage="_UserRoleMemberEntity", ThisKey="UserRoleMemberKey", OtherKey="Key", IsForeignKey=true)]
		public UserRoleMemberEntity UserRoleMemberEntity
		{
			get
			{
				return this._UserRoleMemberEntity.Entity;
			}
			set
			{
				UserRoleMemberEntity previousValue = this._UserRoleMemberEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleMemberEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleMemberEntity.Entity = null;
						previousValue.UserRoleMemberAreaEntities.Remove(this);
					}
					this._UserRoleMemberEntity.Entity = value;
					if ((value != null))
					{
						value.UserRoleMemberAreaEntities.Add(this);
						this._UserRoleMemberKey = value.Key;
					}
					else
					{
						this._UserRoleMemberKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserRoleMemberEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UOMRoleMemberCurrent")]
	public partial class UnitOfMeasureRoleMemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private string _UOMRoleInternalCode;
		
		private System.Guid _UOMKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<UnitOfMeasureEntity> _UnitOfMeasureEntity;
		
		private EntityRef<UnitOfMeasureRoleEntity> _UnitOfMeasureRoleEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUOMRoleInternalCodeChanging(string value);
    partial void OnUOMRoleInternalCodeChanged();
    partial void OnUOMKeyChanging(System.Guid value);
    partial void OnUOMKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UnitOfMeasureRoleMemberEntity()
		{
			this._UnitOfMeasureEntity = default(EntityRef<UnitOfMeasureEntity>);
			this._UnitOfMeasureRoleEntity = default(EntityRef<UnitOfMeasureRoleEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UOMRoleMemberKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMRoleInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UOMRoleInternalCode
		{
			get
			{
				return this._UOMRoleInternalCode;
			}
			set
			{
				if ((this._UOMRoleInternalCode != value))
				{
					if (this._UnitOfMeasureRoleEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUOMRoleInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._UOMRoleInternalCode = value;
					this.SendPropertyChanged("UOMRoleInternalCode");
					this.OnUOMRoleInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UOMKey
		{
			get
			{
				return this._UOMKey;
			}
			set
			{
				if ((this._UOMKey != value))
				{
					if (this._UnitOfMeasureEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._UOMKey = value;
					this.SendPropertyChanged("UOMKey");
					this.OnUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasureEntity_UnitOfMeasureRoleMemberEntity", Storage="_UnitOfMeasureEntity", ThisKey="UOMKey", OtherKey="Key", IsForeignKey=true)]
		public UnitOfMeasureEntity UnitOfMeasureEntity
		{
			get
			{
				return this._UnitOfMeasureEntity.Entity;
			}
			set
			{
				UnitOfMeasureEntity previousValue = this._UnitOfMeasureEntity.Entity;
				if (((previousValue != value) 
							|| (this._UnitOfMeasureEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitOfMeasureEntity.Entity = null;
						previousValue.UnitOfMeasureRoleMemberEntities.Remove(this);
					}
					this._UnitOfMeasureEntity.Entity = value;
					if ((value != null))
					{
						value.UnitOfMeasureRoleMemberEntities.Add(this);
						this._UOMKey = value.Key;
					}
					else
					{
						this._UOMKey = default(System.Guid);
					}
					this.SendPropertyChanged("UnitOfMeasureEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasureRoleEntity_UnitOfMeasureRoleMemberEntity", Storage="_UnitOfMeasureRoleEntity", ThisKey="UOMRoleInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public UnitOfMeasureRoleEntity UnitOfMeasureRoleEntity
		{
			get
			{
				return this._UnitOfMeasureRoleEntity.Entity;
			}
			set
			{
				UnitOfMeasureRoleEntity previousValue = this._UnitOfMeasureRoleEntity.Entity;
				if (((previousValue != value) 
							|| (this._UnitOfMeasureRoleEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitOfMeasureRoleEntity.Entity = null;
						previousValue.UnitOfMeasureRoleMemberEntities.Remove(this);
					}
					this._UnitOfMeasureRoleEntity.Entity = value;
					if ((value != null))
					{
						value.UnitOfMeasureRoleMemberEntities.Add(this);
						this._UOMRoleInternalCode = value.InternalCode;
					}
					else
					{
						this._UOMRoleInternalCode = default(string);
					}
					this.SendPropertyChanged("UnitOfMeasureRoleEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserSecurityGroupAuthorizationCurrent")]
	public partial class UserSecurityGroupAuthorizationEntity
	{
		
		private System.Guid _UserAccountKey;
		
		private string _PermissionInternalCode;
		
		private System.Guid _SecurityGroupKey;
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		public UserSecurityGroupAuthorizationEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this._UserAccountKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionInternalCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionInternalCode
		{
			get
			{
				return this._PermissionInternalCode;
			}
			set
			{
				if ((this._PermissionInternalCode != value))
				{
					this._PermissionInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SecurityGroupKey
		{
			get
			{
				return this._SecurityGroupKey;
			}
			set
			{
				if ((this._SecurityGroupKey != value))
				{
					this._SecurityGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserAuthorizationCurrent")]
	public partial class UserAuthorizationEntity
	{
		
		private System.Guid _UserAccountKey;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private System.Guid _UserRolePermissionKey;
		
		private string _PermissionInternalCode;
		
		private System.Nullable<System.Guid> _UserRoleMemberKey;
		
		private System.Nullable<System.Guid> _AreaKey;
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		public UserAuthorizationEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this._UserAccountKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRolePermissionKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserRolePermissionKey
		{
			get
			{
				return this._UserRolePermissionKey;
			}
			set
			{
				if ((this._UserRolePermissionKey != value))
				{
					this._UserRolePermissionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionInternalCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionInternalCode
		{
			get
			{
				return this._PermissionInternalCode;
			}
			set
			{
				if ((this._PermissionInternalCode != value))
				{
					this._PermissionInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleMemberKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserRoleMemberKey
		{
			get
			{
				return this._UserRoleMemberKey;
			}
			set
			{
				if ((this._UserRoleMemberKey != value))
				{
					this._UserRoleMemberKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					this._AreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.UnitOfTemperature")]
	public partial class UnitOfTemperatureEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DisplayCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UnitOfTemperatureEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UnitOfTemperatureInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserTypeCurrent")]
	public partial class UserTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private string _DisplayCode;
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private string _StandardUserTypeInternalCode;
		
		private System.Nullable<int> _SortValue;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private string _StandardUserTypeDescriptionText;
		
		private EntitySet<UserAccountEntity> _UserAccountEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnStandardUserTypeInternalCodeChanging(string value);
    partial void OnStandardUserTypeInternalCodeChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnStandardUserTypeDescriptionTextChanging(string value);
    partial void OnStandardUserTypeDescriptionTextChanged();
    #endregion
		
		public UserTypeEntity()
		{
			this._UserAccountEntities = new EntitySet<UserAccountEntity>(new Action<UserAccountEntity>(this.attach_UserAccountEntities), new Action<UserAccountEntity>(this.detach_UserAccountEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserTypeKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardUserTypeInternalCode", DbType="VarChar(50)")]
		public string StandardUserTypeInternalCode
		{
			get
			{
				return this._StandardUserTypeInternalCode;
			}
			set
			{
				if ((this._StandardUserTypeInternalCode != value))
				{
					this.OnStandardUserTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._StandardUserTypeInternalCode = value;
					this.SendPropertyChanged("StandardUserTypeInternalCode");
					this.OnStandardUserTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardUserTypeDescriptionText", DbType="NVarChar(100)")]
		public string StandardUserTypeDescriptionText
		{
			get
			{
				return this._StandardUserTypeDescriptionText;
			}
			set
			{
				if ((this._StandardUserTypeDescriptionText != value))
				{
					this.OnStandardUserTypeDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._StandardUserTypeDescriptionText = value;
					this.SendPropertyChanged("StandardUserTypeDescriptionText");
					this.OnStandardUserTypeDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTypeEntity_UserAccountEntity", Storage="_UserAccountEntities", ThisKey="Key", OtherKey="UserTypeKey")]
		public EntitySet<UserAccountEntity> UserAccountEntities
		{
			get
			{
				return this._UserAccountEntities;
			}
			set
			{
				this._UserAccountEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserAccountEntities(UserAccountEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserTypeEntity = this;
		}
		
		private void detach_UserAccountEntities(UserAccountEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.ObservationMethod")]
	public partial class ObservationMethodEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ObservationMethodEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ObservationMethodInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserDeviceAuthorizationCurrent")]
	public partial class UserDeviceAuthorizationEntity
	{
		
		private System.Guid _UserAccountKey;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private System.Guid _UserRolePermissionKey;
		
		private string _PermissionInternalCode;
		
		private System.Nullable<System.Guid> _UserRoleMemberKey;
		
		private System.Nullable<System.Guid> _AreaKey;
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		public UserDeviceAuthorizationEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this._UserAccountKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRolePermissionKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserRolePermissionKey
		{
			get
			{
				return this._UserRolePermissionKey;
			}
			set
			{
				if ((this._UserRolePermissionKey != value))
				{
					this._UserRolePermissionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionInternalCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionInternalCode
		{
			get
			{
				return this._PermissionInternalCode;
			}
			set
			{
				if ((this._PermissionInternalCode != value))
				{
					this._PermissionInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleMemberKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserRoleMemberKey
		{
			get
			{
				return this._UserRoleMemberKey;
			}
			set
			{
				if ((this._UserRoleMemberKey != value))
				{
					this._UserRoleMemberKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					this._AreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserRolePermissionRoleCurrent")]
	public partial class UserRolePermissionRoleEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserRolePermissionKey;
		
		private System.Guid _UserRoleKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<UserRoleEntity> _UserRoleEntity;
		
		private EntityRef<UserRolePermissionEntity> _UserRolePermissionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserRolePermissionKeyChanging(System.Guid value);
    partial void OnUserRolePermissionKeyChanged();
    partial void OnUserRoleKeyChanging(System.Guid value);
    partial void OnUserRoleKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserRolePermissionRoleEntity()
		{
			this._UserRoleEntity = default(EntityRef<UserRoleEntity>);
			this._UserRolePermissionEntity = default(EntityRef<UserRolePermissionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserRolePermissionRoleKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRolePermissionKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserRolePermissionKey
		{
			get
			{
				return this._UserRolePermissionKey;
			}
			set
			{
				if ((this._UserRolePermissionKey != value))
				{
					if (this._UserRolePermissionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRolePermissionKeyChanging(value);
					this.SendPropertyChanging();
					this._UserRolePermissionKey = value;
					this.SendPropertyChanged("UserRolePermissionKey");
					this.OnUserRolePermissionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserRoleKey
		{
			get
			{
				return this._UserRoleKey;
			}
			set
			{
				if ((this._UserRoleKey != value))
				{
					if (this._UserRoleEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRoleKeyChanging(value);
					this.SendPropertyChanging();
					this._UserRoleKey = value;
					this.SendPropertyChanged("UserRoleKey");
					this.OnUserRoleKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleEntity_UserRolePermissionRoleEntity", Storage="_UserRoleEntity", ThisKey="UserRoleKey", OtherKey="Key", IsForeignKey=true)]
		public UserRoleEntity UserRoleEntity
		{
			get
			{
				return this._UserRoleEntity.Entity;
			}
			set
			{
				UserRoleEntity previousValue = this._UserRoleEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleEntity.Entity = null;
						previousValue.UserRolePermissionRoleEntities.Remove(this);
					}
					this._UserRoleEntity.Entity = value;
					if ((value != null))
					{
						value.UserRolePermissionRoleEntities.Add(this);
						this._UserRoleKey = value.Key;
					}
					else
					{
						this._UserRoleKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserRoleEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRolePermissionEntity_UserRolePermissionRoleEntity", Storage="_UserRolePermissionEntity", ThisKey="UserRolePermissionKey", OtherKey="Key", IsForeignKey=true)]
		public UserRolePermissionEntity UserRolePermissionEntity
		{
			get
			{
				return this._UserRolePermissionEntity.Entity;
			}
			set
			{
				UserRolePermissionEntity previousValue = this._UserRolePermissionEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserRolePermissionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRolePermissionEntity.Entity = null;
						previousValue.UserRolePermissionRoleEntities.Remove(this);
					}
					this._UserRolePermissionEntity.Entity = value;
					if ((value != null))
					{
						value.UserRolePermissionRoleEntities.Add(this);
						this._UserRolePermissionKey = value.Key;
					}
					else
					{
						this._UserRolePermissionKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserRolePermissionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class VisitorUserRoleResult
	{
		
		private System.Guid _UserAccountKey;
		
		private System.Guid _UserRoleKey;
		
		private string _RoleName;
		
		private System.Guid _AreaKey;
		
		private string _AreaName;
		
		public VisitorUserRoleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier")]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this._UserAccountKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleKey", DbType="UniqueIdentifier")]
		public System.Guid UserRoleKey
		{
			get
			{
				return this._UserRoleKey;
			}
			set
			{
				if ((this._UserRoleKey != value))
				{
					this._UserRoleKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50) NOT NUL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey", DbType="UniqueIdentifier")]
		public System.Guid AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					this._AreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AreaName
		{
			get
			{
				return this._AreaName;
			}
			set
			{
				if ((this._AreaName != value))
				{
					this._AreaName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class UnitOfMeasureRoleResult
	{
		
		private System.Guid _UOMKey;
		
		private string _UOMRoleInternalCode;
		
		public UnitOfMeasureRoleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMKey")]
		public System.Guid UOMKey
		{
			get
			{
				return this._UOMKey;
			}
			set
			{
				if ((this._UOMKey != value))
				{
					this._UOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMRoleInternalCode", CanBeNull=false)]
		public string UOMRoleInternalCode
		{
			get
			{
				return this._UOMRoleInternalCode;
			}
			set
			{
				if ((this._UOMRoleInternalCode != value))
				{
					this._UOMRoleInternalCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_DistributorCurrent")]
	public partial class DistributorEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _DistributorSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private string _DistributorID;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDistributorSnapshotKeyChanging(System.Guid value);
    partial void OnDistributorSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnDistributorIDChanging(string value);
    partial void OnDistributorIDChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public DistributorEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DistributorKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributorSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DistributorSnapshotKey
		{
			get
			{
				return this._DistributorSnapshotKey;
			}
			set
			{
				if ((this._DistributorSnapshotKey != value))
				{
					this.OnDistributorSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._DistributorSnapshotKey = value;
					this.SendPropertyChanged("DistributorSnapshotKey");
					this.OnDistributorSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributorID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DistributorID
		{
			get
			{
				return this._DistributorID;
			}
			set
			{
				if ((this._DistributorID != value))
				{
					this.OnDistributorIDChanging(value);
					this.SendPropertyChanging();
					this._DistributorID = value;
					this.SendPropertyChanged("DistributorID");
					this.OnDistributorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.UserScanMode")]
	public partial class UserScanModeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserScanModeEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserScanModeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class bsp_FindVisitorUsersResult
	{
		
		private System.Guid _UserAccountKey;
		
		private string _ActiveDirectoryDomainName;
		
		private string _UserID;
		
		private string _DisplayName;
		
		private string _JobTitle;
		
		private System.Nullable<System.DateTime> _AccountExpirationUTCDateTime;
		
		private System.Nullable<bool> _ActiveFlag;
		
		private System.Nullable<bool> _LockedFlag;
		
		private System.Nullable<bool> _HasAllAreas;
		
		public bsp_FindVisitorUsersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this._UserAccountKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveDirectoryDomainName", DbType="NVarChar(100)")]
		public string ActiveDirectoryDomainName
		{
			get
			{
				return this._ActiveDirectoryDomainName;
			}
			set
			{
				if ((this._ActiveDirectoryDomainName != value))
				{
					this._ActiveDirectoryDomainName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(200)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(200)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(20)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this._JobTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountExpirationUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> AccountExpirationUTCDateTime
		{
			get
			{
				return this._AccountExpirationUTCDateTime;
			}
			set
			{
				if ((this._AccountExpirationUTCDateTime != value))
				{
					this._AccountExpirationUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit")]
		public System.Nullable<bool> ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockedFlag", DbType="Bit")]
		public System.Nullable<bool> LockedFlag
		{
			get
			{
				return this._LockedFlag;
			}
			set
			{
				if ((this._LockedFlag != value))
				{
					this._LockedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAllAreas", DbType="Bit")]
		public System.Nullable<bool> HasAllAreas
		{
			get
			{
				return this._HasAllAreas;
			}
			set
			{
				if ((this._HasAllAreas != value))
				{
					this._HasAllAreas = value;
				}
			}
		}
	}
	
	public partial class bsp_GetUnitOfMeasuresResult
	{
		
		private System.Guid _UOMKey;
		
		private string _DisplayCode;
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private bool _UseDosageFormFlag;
		
		private System.Nullable<int> _SortValue;
		
		private bool _ActiveFlag;
		
		private System.Nullable<System.Guid> _BaseUOMKey;
		
		private System.Nullable<decimal> _ConversionAmount;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public bsp_GetUnitOfMeasuresResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UOMKey
		{
			get
			{
				return this._UOMKey;
			}
			set
			{
				if ((this._UOMKey != value))
				{
					this._UOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this._DisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalCode", DbType="VarChar(10)")]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this._InternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(250)")]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this._DescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseDosageFormFlag", DbType="Bit NOT NULL")]
		public bool UseDosageFormFlag
		{
			get
			{
				return this._UseDosageFormFlag;
			}
			set
			{
				if ((this._UseDosageFormFlag != value))
				{
					this._UseDosageFormFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int")]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this._SortValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BaseUOMKey
		{
			get
			{
				return this._BaseUOMKey;
			}
			set
			{
				if ((this._BaseUOMKey != value))
				{
					this._BaseUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionAmount", DbType="Decimal(28,14)")]
		public System.Nullable<decimal> ConversionAmount
		{
			get
			{
				return this._ConversionAmount;
			}
			set
			{
				if ((this._ConversionAmount != value))
				{
					this._ConversionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this._CreatedLocalDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this._CreatedUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", DbType="rowversion NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
