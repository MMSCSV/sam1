#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CareFusion.Dispensing.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSServerOLTP")]
	internal partial class StorageDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDispensingDeviceEntity(DispensingDeviceEntity instance);
    partial void UpdateDispensingDeviceEntity(DispensingDeviceEntity instance);
    partial void DeleteDispensingDeviceEntity(DispensingDeviceEntity instance);
    partial void InsertDispensingDeviceStorageSpaceEntity(DispensingDeviceStorageSpaceEntity instance);
    partial void UpdateDispensingDeviceStorageSpaceEntity(DispensingDeviceStorageSpaceEntity instance);
    partial void DeleteDispensingDeviceStorageSpaceEntity(DispensingDeviceStorageSpaceEntity instance);
    partial void InsertStorageSpaceItemEntity(StorageSpaceItemEntity instance);
    partial void UpdateStorageSpaceItemEntity(StorageSpaceItemEntity instance);
    partial void DeleteStorageSpaceItemEntity(StorageSpaceItemEntity instance);
    partial void InsertStorageSpaceEntity(StorageSpaceEntity instance);
    partial void UpdateStorageSpaceEntity(StorageSpaceEntity instance);
    partial void DeleteStorageSpaceEntity(StorageSpaceEntity instance);
    partial void InsertSystemBusDeviceTypeEntity(SystemBusDeviceTypeEntity instance);
    partial void UpdateSystemBusDeviceTypeEntity(SystemBusDeviceTypeEntity instance);
    partial void DeleteSystemBusDeviceTypeEntity(SystemBusDeviceTypeEntity instance);
    partial void InsertGeneralSystemBusDeviceTypeEntity(GeneralSystemBusDeviceTypeEntity instance);
    partial void UpdateGeneralSystemBusDeviceTypeEntity(GeneralSystemBusDeviceTypeEntity instance);
    partial void DeleteGeneralSystemBusDeviceTypeEntity(GeneralSystemBusDeviceTypeEntity instance);
    partial void InsertStorageSpaceFailureReasonEntity(StorageSpaceFailureReasonEntity instance);
    partial void UpdateStorageSpaceFailureReasonEntity(StorageSpaceFailureReasonEntity instance);
    partial void DeleteStorageSpaceFailureReasonEntity(StorageSpaceFailureReasonEntity instance);
    partial void InsertStorageSpaceStateEntity(StorageSpaceStateEntity instance);
    partial void UpdateStorageSpaceStateEntity(StorageSpaceStateEntity instance);
    partial void DeleteStorageSpaceStateEntity(StorageSpaceStateEntity instance);
    partial void InsertDispensingDeviceOverrideGroupEntity(DispensingDeviceOverrideGroupEntity instance);
    partial void UpdateDispensingDeviceOverrideGroupEntity(DispensingDeviceOverrideGroupEntity instance);
    partial void DeleteDispensingDeviceOverrideGroupEntity(DispensingDeviceOverrideGroupEntity instance);
    partial void InsertZoneEntity(ZoneEntity instance);
    partial void UpdateZoneEntity(ZoneEntity instance);
    partial void DeleteZoneEntity(ZoneEntity instance);
    partial void InsertCriticalOverridePeriodEntity(CriticalOverridePeriodEntity instance);
    partial void UpdateCriticalOverridePeriodEntity(CriticalOverridePeriodEntity instance);
    partial void DeleteCriticalOverridePeriodEntity(CriticalOverridePeriodEntity instance);
    partial void InsertStorageSpaceTypeEntity(StorageSpaceTypeEntity instance);
    partial void UpdateStorageSpaceTypeEntity(StorageSpaceTypeEntity instance);
    partial void DeleteStorageSpaceTypeEntity(StorageSpaceTypeEntity instance);
    partial void InsertStorageSpaceFormEntity(StorageSpaceFormEntity instance);
    partial void UpdateStorageSpaceFormEntity(StorageSpaceFormEntity instance);
    partial void DeleteStorageSpaceFormEntity(StorageSpaceFormEntity instance);
    partial void InsertStorageSpaceSizeEntity(StorageSpaceSizeEntity instance);
    partial void UpdateStorageSpaceSizeEntity(StorageSpaceSizeEntity instance);
    partial void DeleteStorageSpaceSizeEntity(StorageSpaceSizeEntity instance);
    partial void InsertDispensingDeviceUnitRoomEntity(DispensingDeviceUnitRoomEntity instance);
    partial void UpdateDispensingDeviceUnitRoomEntity(DispensingDeviceUnitRoomEntity instance);
    partial void DeleteDispensingDeviceUnitRoomEntity(DispensingDeviceUnitRoomEntity instance);
    partial void InsertMiniDrawerTrayModeEntity(MiniDrawerTrayModeEntity instance);
    partial void UpdateMiniDrawerTrayModeEntity(MiniDrawerTrayModeEntity instance);
    partial void DeleteMiniDrawerTrayModeEntity(MiniDrawerTrayModeEntity instance);
    partial void InsertDispensingDeviceSystemBusDeviceEntity(DispensingDeviceSystemBusDeviceEntity instance);
    partial void UpdateDispensingDeviceSystemBusDeviceEntity(DispensingDeviceSystemBusDeviceEntity instance);
    partial void DeleteDispensingDeviceSystemBusDeviceEntity(DispensingDeviceSystemBusDeviceEntity instance);
    partial void InsertCommunicationCubeTypeEntity(CommunicationCubeTypeEntity instance);
    partial void UpdateCommunicationCubeTypeEntity(CommunicationCubeTypeEntity instance);
    partial void DeleteCommunicationCubeTypeEntity(CommunicationCubeTypeEntity instance);
    partial void InsertCriticalOverrideModeReasonEntity(CriticalOverrideModeReasonEntity instance);
    partial void UpdateCriticalOverrideModeReasonEntity(CriticalOverrideModeReasonEntity instance);
    partial void DeleteCriticalOverrideModeReasonEntity(CriticalOverrideModeReasonEntity instance);
    partial void InsertDispensingDeviceCriticalOverrideModeReasonEntity(DispensingDeviceCriticalOverrideModeReasonEntity instance);
    partial void UpdateDispensingDeviceCriticalOverrideModeReasonEntity(DispensingDeviceCriticalOverrideModeReasonEntity instance);
    partial void DeleteDispensingDeviceCriticalOverrideModeReasonEntity(DispensingDeviceCriticalOverrideModeReasonEntity instance);
    partial void InsertDispensingDeviceTypeEntity(DispensingDeviceTypeEntity instance);
    partial void UpdateDispensingDeviceTypeEntity(DispensingDeviceTypeEntity instance);
    partial void DeleteDispensingDeviceTypeEntity(DispensingDeviceTypeEntity instance);
    partial void InsertVirtualStockLocationEntity(VirtualStockLocationEntity instance);
    partial void UpdateVirtualStockLocationEntity(VirtualStockLocationEntity instance);
    partial void DeleteVirtualStockLocationEntity(VirtualStockLocationEntity instance);
    #endregion
		
		public StorageDataContext() : 
				base("Data Source=.;Initial Catalog=DSServerOLTP;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public StorageDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StorageDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StorageDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StorageDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DispensingDeviceEntity> DispensingDeviceEntities
		{
			get
			{
				return this.GetTable<DispensingDeviceEntity>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceStorageSpaceEntity> DispensingDeviceStorageSpaceEntities
		{
			get
			{
				return this.GetTable<DispensingDeviceStorageSpaceEntity>();
			}
		}
		
		public System.Data.Linq.Table<StorageSpaceItemEntity> StorageSpaceItemEntities
		{
			get
			{
				return this.GetTable<StorageSpaceItemEntity>();
			}
		}
		
		public System.Data.Linq.Table<StorageSpaceEntity> StorageSpaceEntities
		{
			get
			{
				return this.GetTable<StorageSpaceEntity>();
			}
		}
		
		public System.Data.Linq.Table<SystemBusDeviceTypeEntity> SystemBusDeviceTypeEntities
		{
			get
			{
				return this.GetTable<SystemBusDeviceTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<GeneralSystemBusDeviceTypeEntity> GeneralSystemBusDeviceTypeEntities
		{
			get
			{
				return this.GetTable<GeneralSystemBusDeviceTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<StorageSpaceFailureReasonEntity> StorageSpaceFailureReasonEntities
		{
			get
			{
				return this.GetTable<StorageSpaceFailureReasonEntity>();
			}
		}
		
		public System.Data.Linq.Table<StorageSpaceStateEntity> StorageSpaceStateEntities
		{
			get
			{
				return this.GetTable<StorageSpaceStateEntity>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceOverrideGroupEntity> DispensingDeviceOverrideGroupEntities
		{
			get
			{
				return this.GetTable<DispensingDeviceOverrideGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<ZoneEntity> ZoneEntities
		{
			get
			{
				return this.GetTable<ZoneEntity>();
			}
		}
		
		public System.Data.Linq.Table<CriticalOverridePeriodEntity> CriticalOverridePeriodEntities
		{
			get
			{
				return this.GetTable<CriticalOverridePeriodEntity>();
			}
		}
		
		public System.Data.Linq.Table<StorageSpaceTypeEntity> StorageSpaceTypeEntities
		{
			get
			{
				return this.GetTable<StorageSpaceTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<StorageSpaceFormEntity> StorageSpaceFormEntities
		{
			get
			{
				return this.GetTable<StorageSpaceFormEntity>();
			}
		}
		
		public System.Data.Linq.Table<StorageSpaceSizeEntity> StorageSpaceSizeEntities
		{
			get
			{
				return this.GetTable<StorageSpaceSizeEntity>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceUnitRoomEntity> DispensingDeviceUnitRoomEntities
		{
			get
			{
				return this.GetTable<DispensingDeviceUnitRoomEntity>();
			}
		}
		
		public System.Data.Linq.Table<MiniDrawerTrayModeEntity> MiniDrawerTrayModeEntities
		{
			get
			{
				return this.GetTable<MiniDrawerTrayModeEntity>();
			}
		}
		
		public System.Data.Linq.Table<SystemBusDeviceEntity> SystemBusDeviceEntities
		{
			get
			{
				return this.GetTable<SystemBusDeviceEntity>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceSystemBusDeviceEntity> DispensingDeviceSystemBusDeviceEntities
		{
			get
			{
				return this.GetTable<DispensingDeviceSystemBusDeviceEntity>();
			}
		}
		
		public System.Data.Linq.Table<CommunicationCubeTypeEntity> CommunicationCubeTypeEntities
		{
			get
			{
				return this.GetTable<CommunicationCubeTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<CriticalOverrideModeReasonEntity> CriticalOverrideModeReasonEntities
		{
			get
			{
				return this.GetTable<CriticalOverrideModeReasonEntity>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceCriticalOverrideModeReasonEntity> DispensingDeviceCriticalOverrideModeReasonEntities
		{
			get
			{
				return this.GetTable<DispensingDeviceCriticalOverrideModeReasonEntity>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceTypeEntity> DispensingDeviceTypeEntities
		{
			get
			{
				return this.GetTable<DispensingDeviceTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<VirtualStockLocationEntity> VirtualStockLocationEntities
		{
			get
			{
				return this.GetTable<VirtualStockLocationEntity>();
			}
		}
		
		public System.Data.Linq.Table<CriticalOverridePeriodResult> CriticalOverridePeriodResults
		{
			get
			{
				return this.GetTable<CriticalOverridePeriodResult>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceAreaResult> DispensingDeviceAreaResults
		{
			get
			{
				return this.GetTable<DispensingDeviceAreaResult>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceOverrideGroupResult> DispensingDeviceOverrideGroupResults
		{
			get
			{
				return this.GetTable<DispensingDeviceOverrideGroupResult>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceClinicalDataSubjectResult> DispensingDeviceClinicalDataSubjectResults
		{
			get
			{
				return this.GetTable<DispensingDeviceClinicalDataSubjectResult>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceFacilityKitResult> DispensingDeviceFacilityKitResults
		{
			get
			{
				return this.GetTable<DispensingDeviceFacilityKitResult>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceSummaryResult> DispensingDeviceSummaryResults
		{
			get
			{
				return this.GetTable<DispensingDeviceSummaryResult>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceCommonAttributeResult> DispensingDeviceCommonAttributeResults
		{
			get
			{
				return this.GetTable<DispensingDeviceCommonAttributeResult>();
			}
		}
		
		public System.Data.Linq.Table<AreaCommonAttributeResult> AreaCommonAttributeResults
		{
			get
			{
				return this.GetTable<AreaCommonAttributeResult>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceRestockGroupResult> DispensingDeviceRestockGroupResults
		{
			get
			{
				return this.GetTable<DispensingDeviceRestockGroupResult>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceFormUpdate")]
		public int usp_StorageSpaceFormUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceFormInternalCode", DbType="VarChar(20)")] string storageSpaceFormInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceTypeInternalCode", DbType="VarChar(20)")] string storageSpaceTypeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceFormKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceFormKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceFormInternalCode, storageSpaceTypeInternalCode, descriptionText, sortValue, activeFlag, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, storageSpaceFormKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceOverrideGroupDelete")]
		public int usp_DispensingDeviceOverrideGroupDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> overrideGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, overrideGroupKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceOverrideGroupInsert")]
		public int usp_DispensingDeviceOverrideGroupInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> overrideGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, overrideGroupKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_CriticalOverridePeriodDelete")]
		public int usp_CriticalOverridePeriodDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalOverridePeriodKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> criticalOverridePeriodKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, criticalOverridePeriodKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceItemDelete")]
		public int usp_StorageSpaceItemDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceEjectWithInventoryFlag", DbType="Bit")] System.Nullable<bool> dispensingDeviceEjectWithInventoryFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceKey, itemKey, dispensingDeviceEjectWithInventoryFlag, disassociationUTCDateTime, disassociationLocalDateTime, lastModifiedDispensingDeviceKey, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_ZoneDelete")]
		public int usp_ZoneDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZoneKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> zoneKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, zoneKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_ListInventoryCountChildrenItemSummary")]
		public ISingleResult<bsp_ListInventoryCountChildrenItemSummaryResult> bsp_ListInventoryCountChildrenItemSummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentStorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> parentStorageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSavedInventoryCount", DbType="Bit")] System.Nullable<bool> isSavedInventoryCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey, dispensingDeviceKey, storageSpaceItemKey, parentStorageSpaceKey, isSavedInventoryCount);
			return ((ISingleResult<bsp_ListInventoryCountChildrenItemSummaryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_ListSavedInventoryCountItemSummary")]
		public ISingleResult<bsp_ListSavedInventoryCountItemSummaryResult> bsp_ListSavedInventoryCountItemSummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentStorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> parentStorageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsSavedInventoryCount", DbType="Bit")] System.Nullable<bool> isSavedInventoryCount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDiscrepancyResolutionCount", DbType="Bit")] System.Nullable<bool> isDiscrepancyResolutionCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey, dispensingDeviceKey, storageSpaceItemKey, parentStorageSpaceKey, isSavedInventoryCount, isDiscrepancyResolutionCount);
			return ((ISingleResult<bsp_ListSavedInventoryCountItemSummaryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceParentMiniDrawerTrayModeUpdate")]
		public int usp_StorageSpaceParentMiniDrawerTrayModeUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentMiniDrawerTrayModeInternalCode", DbType="VarChar(10)")] string parentMiniDrawerTrayModeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceKey, parentMiniDrawerTrayModeInternalCode, lastModifiedDispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceParentPendingMiniDrawerTrayModeUpdate")]
		public int usp_StorageSpaceParentPendingMiniDrawerTrayModeUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentPendingMiniDrawerTrayModeInternalCode", DbType="VarChar(10)")] string parentPendingMiniDrawerTrayModeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceKey, parentPendingMiniDrawerTrayModeInternalCode, lastModifiedDispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_ListInventoryItemSummary")]
		public ISingleResult<bsp_ListInventoryItemSummaryResult> bsp_ListInventoryItemSummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentStorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> parentStorageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsLoadOrRefill", DbType="Bit")] System.Nullable<bool> isLoadOrRefill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsUnload", DbType="Bit")] System.Nullable<bool> isUnload, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsOutdate", DbType="Bit")] System.Nullable<bool> isOutdate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsInventoryCount", DbType="Bit")] System.Nullable<bool> isInventoryCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey, dispensingDeviceKey, storageSpaceItemKey, parentStorageSpaceKey, isLoadOrRefill, isUnload, isOutdate, isInventoryCount);
			return ((ISingleResult<bsp_ListInventoryItemSummaryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceSystemBusDeviceInsert")]
		public int usp_DispensingDeviceSystemBusDeviceInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> systemBusDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, systemBusDeviceKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_SystemBusDeviceDelete")]
		public int usp_SystemBusDeviceDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> systemBusDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, systemBusDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceDelete")]
		public int usp_StorageSpaceDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedDispensingDeviceKey, lastModifiedActorKey, storageSpaceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceStorageSpaceInsert")]
		public int usp_DispensingDeviceStorageSpaceInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, storageSpaceKey, associationUTCDateTime, associationLocalDateTime, lastModifiedDispensingDeviceKey, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_UpdateStorageSpaceDerivedValues")]
		public int bsp_UpdateStorageSpaceDerivedValues([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceKey, lastModifiedDispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_UpdateFailureInHierarchyFlag")]
		public int bsp_UpdateFailureInHierarchyFlag([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FailureInHierarchy", DbType="Bit")] System.Nullable<bool> failureInHierarchy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastModifiedDispensingDeviceKey, storageSpaceKey, failureInHierarchy);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_DeleteStorageSpaces")]
		public int bsp_DeleteStorageSpaces([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKeyString", DbType="VarChar(MAX)")] string storageSpaceKeyString)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedDispensingDeviceKey, lastModifiedActorKey, storageSpaceKeyString);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceStorageSpaceDelete")]
		public int usp_DispensingDeviceStorageSpaceDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, storageSpaceKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey, lastModifiedDispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceSystemBusDeviceDelete")]
		public int usp_DispensingDeviceSystemBusDeviceDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> systemBusDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, systemBusDeviceKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_StorageSpaceMiniDrawerTrayModeUpdate")]
		public int bsp_StorageSpaceMiniDrawerTrayModeUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TrayStorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> trayStorageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MiniDrawerTrayModeInternalCode", DbType="VarChar(10)")] string miniDrawerTrayModeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PendingMiniDrawerTrayModeInternalCode", DbType="VarChar(10)")] string pendingMiniDrawerTrayModeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, trayStorageSpaceKey, miniDrawerTrayModeInternalCode, pendingMiniDrawerTrayModeInternalCode, lastModifiedDispensingDeviceKey, lastModifiedActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_SystemBusDeviceInsert")]
		public int usp_SystemBusDeviceInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ControllingSystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> controllingSystemBusDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeviceNumber", DbType="BigInt")] System.Nullable<long> deviceNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PositionNumber", DbType="Int")] System.Nullable<int> positionNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceTypeInternalCode", DbType="VarChar(20)")] string systemBusDeviceTypeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommunicationCubeTypeInternalCode", DbType="VarChar(20)")] string communicationCubeTypeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WidthQuantity", DbType="SmallInt")] System.Nullable<short> widthQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HeightQuantity", DbType="SmallInt")] System.Nullable<short> heightQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepthQuantity", DbType="SmallInt")] System.Nullable<short> depthQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OffsetQuantity", DbType="SmallInt")] System.Nullable<short> offsetQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> systemBusDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, controllingSystemBusDeviceKey, deviceNumber, positionNumber, systemBusDeviceTypeInternalCode, communicationCubeTypeInternalCode, widthQuantity, heightQuantity, depthQuantity, offsetQuantity, lastModifiedActorKey, systemBusDeviceKey);
			systemBusDeviceKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(12)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_SystemBusDeviceUpdate")]
		public int usp_SystemBusDeviceUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ControllingSystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> controllingSystemBusDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeviceNumber", DbType="BigInt")] System.Nullable<long> deviceNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PositionNumber", DbType="Int")] System.Nullable<int> positionNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceTypeInternalCode", DbType="VarChar(20)")] string systemBusDeviceTypeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommunicationCubeTypeInternalCode", DbType="VarChar(20)")] string communicationCubeTypeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WidthQuantity", DbType="SmallInt")] System.Nullable<short> widthQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HeightQuantity", DbType="SmallInt")] System.Nullable<short> heightQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepthQuantity", DbType="SmallInt")] System.Nullable<short> depthQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OffsetQuantity", DbType="SmallInt")] System.Nullable<short> offsetQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> systemBusDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, controllingSystemBusDeviceKey, deviceNumber, positionNumber, systemBusDeviceTypeInternalCode, communicationCubeTypeInternalCode, widthQuantity, heightQuantity, depthQuantity, offsetQuantity, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, systemBusDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_UpdateDefrostInHierarchyFlag")]
		public int bsp_UpdateDefrostInHierarchyFlag([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DefrostInHierarchy", DbType="Bit")] System.Nullable<bool> defrostInHierarchy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastModifiedDispensingDeviceKey, storageSpaceKey, defrostInHierarchy);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceAnchorUpdate")]
		public int usp_StorageSpaceAnchorUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnchorStorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> anchorStorageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnavailableForInventoryFlag", DbType="Bit")] System.Nullable<bool> unavailableForInventoryFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, anchorStorageSpaceKey, unavailableForInventoryFlag, lastModifiedDispensingDeviceKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, storageSpaceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_MultiCriticalOverridePeriodDelete")]
		public int bsp_MultiCriticalOverridePeriodDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, facilityKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_ZoneInsert")]
		public int usp_ZoneInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZoneName", DbType="NVarChar(100)")] string zoneName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZoneNumber", DbType="SmallInt")] System.Nullable<short> zoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZoneKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> zoneKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, facilityKey, zoneName, zoneNumber, lastModifiedActorKey, zoneKey);
			zoneKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_ZoneUpdate")]
		public int usp_ZoneUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZoneName", DbType="NVarChar(100)")] string zoneName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZoneNumber", DbType="SmallInt")] System.Nullable<short> zoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZoneKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> zoneKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, zoneName, zoneNumber, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, zoneKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_GetZones")]
		public ISingleResult<bsp_GetZonesResult> bsp_GetZones([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZoneKeyString", DbType="NVarChar(MAX)")] string zoneKeyString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeleteFlag", DbType="Bit")] System.Nullable<bool> deleteFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DebugFlag", DbType="Bit")] System.Nullable<bool> debugFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), zoneKeyString, deleteFlag, facilityKey, debugFlag);
			return ((ISingleResult<bsp_GetZonesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_VirtualStockLocationDelete")]
		public int usp_VirtualStockLocationDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualStockLocationKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> virtualStockLocationKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, virtualStockLocationKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_VirtualStockLocationUpdate")]
		public int usp_VirtualStockLocationUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualStockLocationName", DbType="NVarChar(50)")] string virtualStockLocationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualStockLocationKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> virtualStockLocationKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, virtualStockLocationName, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, virtualStockLocationKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_VirtualStockLocationInsert")]
		public int usp_VirtualStockLocationInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualStockLocationName", DbType="NVarChar(50)")] string virtualStockLocationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualStockLocationKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> virtualStockLocationKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, facilityKey, virtualStockLocationName, lastModifiedActorKey, virtualStockLocationKey);
			virtualStockLocationKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_GetVirtualStockLocations")]
		public ISingleResult<bsp_GetVirtualStockLocationsResult> bsp_GetVirtualStockLocations([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualStockLocationKeyString", DbType="NVarChar(MAX)")] string virtualStockLocationKeyString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeleteFlag", DbType="Bit")] System.Nullable<bool> deleteFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DebugFlag", DbType="Bit")] System.Nullable<bool> debugFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualStockLocationKeyString, deleteFlag, facilityKey, debugFlag);
			return ((ISingleResult<bsp_GetVirtualStockLocationsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_StorageSpaceItemDispenseFractionalFlagUpdate")]
		public int bsp_StorageSpaceItemDispenseFractionalFlagUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispenseFractionFlag", DbType="Bit")] System.Nullable<bool> dispenseFractionFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, dispensingDeviceKey, itemKey, dispenseFractionFlag, lastModifiedDispensingDeviceKey, lastModifiedActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_ListDrawersByDispensingDevice")]
		public ISingleResult<bsp_ListDrawersByDispensingDeviceResult> bsp_ListDrawersByDispensingDevice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey);
			return ((ISingleResult<bsp_ListDrawersByDispensingDeviceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceItemUpdate")]
		public int usp_StorageSpaceItemUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemStatusInternalCode", DbType="VarChar(10)")] string storageSpaceItemStatusInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> parQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefillPointQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> refillPointQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> criticalLowQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhysicalMaximumQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> physicalMaximumQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StandardStockWithinDispensingDeviceFlag", DbType="Bit")] System.Nullable<bool> standardStockWithinDispensingDeviceFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IssueUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> issueUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> outdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispenseFractionFlag", DbType="Bit")] System.Nullable<bool> dispenseFractionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromExternalSystemFlag", DbType="Bit")] System.Nullable<bool> fromExternalSystemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> systemBusDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, storageSpaceItemStatusInternalCode, parQuantity, refillPointQuantity, criticalLowQuantity, physicalMaximumQuantity, standardStockWithinDispensingDeviceFlag, issueUOMKey, outdateTrackingFlag, dispenseFractionFlag, fromExternalSystemFlag, systemBusDeviceKey, lastModifiedDispensingDeviceKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, storageSpaceItemKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceItemInsert")]
		public int usp_StorageSpaceItemInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceEjectWithInventoryFlag", DbType="Bit")] System.Nullable<bool> dispensingDeviceEjectWithInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemStatusInternalCode", DbType="VarChar(10)")] string storageSpaceItemStatusInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> parQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefillPointQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> refillPointQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> criticalLowQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhysicalMaximumQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> physicalMaximumQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StandardStockWithinDispensingDeviceFlag", DbType="Bit")] System.Nullable<bool> standardStockWithinDispensingDeviceFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IssueUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> issueUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> outdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispenseFractionFlag", DbType="Bit")] System.Nullable<bool> dispenseFractionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromExternalSystemFlag", DbType="Bit")] System.Nullable<bool> fromExternalSystemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> systemBusDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastDispenseUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastDispenseUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastDispenseLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastDispenseLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastInventoryUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastInventoryUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastInventoryLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastInventoryLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastLoadRefillUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastLoadRefillLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillSuccessfulScanFlag", DbType="Bit")] System.Nullable<bool> lastLoadRefillSuccessfulScanFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastLoadRefillActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastRxCheckUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastRxCheckUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastRxCheckLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastRxCheckLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoadUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> loadUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoadLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> loadLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastKnownUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastKnownUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastKnownLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastKnownLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PendedAtServerFlag", DbType="Bit")] System.Nullable<bool> pendedAtServerFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> storageSpaceItemKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceKey, itemKey, startUTCDateTime, startLocalDateTime, disassociationUTCDateTime, disassociationLocalDateTime, dispensingDeviceEjectWithInventoryFlag, storageSpaceItemStatusInternalCode, parQuantity, refillPointQuantity, criticalLowQuantity, physicalMaximumQuantity, standardStockWithinDispensingDeviceFlag, issueUOMKey, outdateTrackingFlag, dispenseFractionFlag, fromExternalSystemFlag, systemBusDeviceKey, lastDispenseUTCDateTime, lastDispenseLocalDateTime, lastInventoryUTCDateTime, lastInventoryLocalDateTime, lastLoadRefillUTCDateTime, lastLoadRefillLocalDateTime, lastLoadRefillSuccessfulScanFlag, lastLoadRefillActorKey, lastRxCheckUTCDateTime, lastRxCheckLocalDateTime, loadUTCDateTime, loadLocalDateTime, lastKnownUTCDateTime, lastKnownLocalDateTime, pendedAtServerFlag, lastModifiedDispensingDeviceKey, lastModifiedActorKey, storageSpaceItemKey);
			storageSpaceItemKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(35)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceCriticalOverrideModeReasonDelete")]
		public int usp_DispensingDeviceCriticalOverrideModeReasonDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalOverrideModeReasonInternalCode", DbType="VarChar(20)")] string criticalOverrideModeReasonInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, criticalOverrideModeReasonInternalCode, disassociationUTCDateTime, disassociationLocalDateTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceCriticalOverrideModeReasonInsert")]
		public int usp_DispensingDeviceCriticalOverrideModeReasonInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalOverrideModeReasonInternalCode", DbType="VarChar(20)")] string criticalOverrideModeReasonInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, criticalOverrideModeReasonInternalCode, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceItemParentUpdate")]
		public int usp_StorageSpaceItemParentUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastDispenseUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastDispenseUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastDispenseUTCDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastDispenseUTCDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastDispenseLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastDispenseLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastDispenseLocalDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastDispenseLocalDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastInventoryUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastInventoryUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastInventoryUTCDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastInventoryUTCDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastInventoryLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastInventoryLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastInventoryLocalDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastInventoryLocalDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastLoadRefillUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillUTCDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastLoadRefillUTCDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastLoadRefillLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillLocalDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastLoadRefillLocalDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillSuccessfulScanFlag", DbType="Bit")] System.Nullable<bool> lastLoadRefillSuccessfulScanFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillSuccessfulScanFlagSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastLoadRefillSuccessfulScanFlagSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastLoadRefillActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoadRefillActorKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastLoadRefillActorKeySpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastRxCheckUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastRxCheckUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastRxCheckUTCDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastRxCheckUTCDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastRxCheckLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastRxCheckLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastRxCheckLocalDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastRxCheckLocalDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoadUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> loadUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoadUTCDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> loadUTCDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoadLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> loadLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoadLocalDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> loadLocalDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastKnownUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastKnownUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastKnownUTCDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastKnownUTCDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastKnownLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastKnownLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastKnownLocalDateTimeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> lastKnownLocalDateTimeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceEjectWithInventoryFlag", DbType="Bit")] System.Nullable<bool> dispensingDeviceEjectWithInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceEjectWithInventoryFlagSpecifiedFlag", DbType="Bit")] System.Nullable<bool> dispensingDeviceEjectWithInventoryFlagSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastDispenseUTCDateTime, lastDispenseUTCDateTimeSpecifiedFlag, lastDispenseLocalDateTime, lastDispenseLocalDateTimeSpecifiedFlag, lastInventoryUTCDateTime, lastInventoryUTCDateTimeSpecifiedFlag, lastInventoryLocalDateTime, lastInventoryLocalDateTimeSpecifiedFlag, lastLoadRefillUTCDateTime, lastLoadRefillUTCDateTimeSpecifiedFlag, lastLoadRefillLocalDateTime, lastLoadRefillLocalDateTimeSpecifiedFlag, lastLoadRefillSuccessfulScanFlag, lastLoadRefillSuccessfulScanFlagSpecifiedFlag, lastLoadRefillActorKey, lastLoadRefillActorKeySpecifiedFlag, lastRxCheckUTCDateTime, lastRxCheckUTCDateTimeSpecifiedFlag, lastRxCheckLocalDateTime, lastRxCheckLocalDateTimeSpecifiedFlag, loadUTCDateTime, loadUTCDateTimeSpecifiedFlag, loadLocalDateTime, loadLocalDateTimeSpecifiedFlag, lastKnownUTCDateTime, lastKnownUTCDateTimeSpecifiedFlag, lastKnownLocalDateTime, lastKnownLocalDateTimeSpecifiedFlag, dispensingDeviceEjectWithInventoryFlag, dispensingDeviceEjectWithInventoryFlagSpecifiedFlag, lastModifiedDispensingDeviceKey, storageSpaceItemKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceStateInsert")]
		public int usp_StorageSpaceStateInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClosedFlag", DbType="Bit")] System.Nullable<bool> closedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LockedFlag", DbType="Bit")] System.Nullable<bool> lockedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FailedFlag", DbType="Bit")] System.Nullable<bool> failedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FailureRequiresMaintenanceFlag", DbType="Bit")] System.Nullable<bool> failureRequiresMaintenanceFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DefrostFlag", DbType="Bit")] System.Nullable<bool> defrostFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnBatteryFlag", DbType="Bit")] System.Nullable<bool> onBatteryFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceFailureReasonInternalCode", DbType="VarChar(50)")] string storageSpaceFailureReasonInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceStateKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> storageSpaceStateKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceKey, startUTCDateTime, startLocalDateTime, closedFlag, lockedFlag, failedFlag, failureRequiresMaintenanceFlag, defrostFlag, onBatteryFlag, storageSpaceFailureReasonInternalCode, lastModifiedActorKey, storageSpaceStateKey);
			storageSpaceStateKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(11)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceStateUpdate")]
		public int usp_StorageSpaceStateUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClosedFlag", DbType="Bit")] System.Nullable<bool> closedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LockedFlag", DbType="Bit")] System.Nullable<bool> lockedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FailedFlag", DbType="Bit")] System.Nullable<bool> failedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FailureRequiresMaintenanceFlag", DbType="Bit")] System.Nullable<bool> failureRequiresMaintenanceFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DefrostFlag", DbType="Bit")] System.Nullable<bool> defrostFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnBatteryFlag", DbType="Bit")] System.Nullable<bool> onBatteryFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceFailureReasonInternalCode", DbType="VarChar(50)")] string storageSpaceFailureReasonInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceKey, startUTCDateTime, startLocalDateTime, closedFlag, lockedFlag, failedFlag, failureRequiresMaintenanceFlag, defrostFlag, onBatteryFlag, storageSpaceFailureReasonInternalCode, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.bsp_UpdateDispensingDeviceSerialID")]
		public int bsp_UpdateDispensingDeviceSerialID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, startUTCDateTime, startLocalDateTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceUpdate")]
		public int usp_StorageSpaceUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentStorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> parentStorageSpaceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceTypeInternalCode", DbType="VarChar(20)")] string storageSpaceTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceFormKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceFormKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceName", DbType="NVarChar(50)")] string storageSpaceName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PositionID", DbType="NVarChar(50)")] string positionID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnchorStorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> anchorStorageSpaceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialID", DbType="NVarChar(30)")] string serialID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegistrySerialID", DbType="NVarChar(30)")] string registrySerialID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="NVarChar(50)")] string productName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> systemBusDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecondSystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> secondSystemBusDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MiniDrawerTrayModeInternalCode", DbType="VarChar(10)")] string miniDrawerTrayModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PendingMiniDrawerTrayModeInternalCode", DbType="VarChar(10)")] string pendingMiniDrawerTrayModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoreThanOneItemFlag", DbType="Bit")] System.Nullable<bool> moreThanOneItemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnavailableForInventoryFlag", DbType="Bit")] System.Nullable<bool> unavailableForInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MobileFlag", DbType="Bit")] System.Nullable<bool> mobileFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RestrictedAccessFlag", DbType="Bit")] System.Nullable<bool> restrictedAccessFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShipToID", DbType="BigInt")] System.Nullable<long> shipToID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InteriorCabinetLightIntensityModeInternalCode", DbType="VarChar(10)")] string interiorCabinetLightIntensityModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, parentStorageSpaceKey, storageSpaceTypeInternalCode, storageSpaceFormKey, storageSpaceName, positionID, anchorStorageSpaceKey, serialID, registrySerialID, productName, facilityKey, systemBusDeviceKey, secondSystemBusDeviceKey, miniDrawerTrayModeInternalCode, pendingMiniDrawerTrayModeInternalCode, moreThanOneItemFlag, unavailableForInventoryFlag, mobileFlag, restrictedAccessFlag, shipToID, interiorCabinetLightIntensityModeInternalCode, lastModifiedDispensingDeviceKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, storageSpaceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_StorageSpaceInsert")]
		public int usp_StorageSpaceInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentStorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> parentStorageSpaceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceTypeInternalCode", DbType="VarChar(20)")] string storageSpaceTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceFormKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceFormKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceName", DbType="NVarChar(50)")] string storageSpaceName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PositionID", DbType="NVarChar(50)")] string positionID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnchorStorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> anchorStorageSpaceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialID", DbType="NVarChar(30)")] string serialID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegistrySerialID", DbType="NVarChar(30)")] string registrySerialID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="NVarChar(50)")] string productName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> systemBusDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecondSystemBusDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> secondSystemBusDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MiniDrawerTrayModeInternalCode", DbType="VarChar(10)")] string miniDrawerTrayModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PendingMiniDrawerTrayModeInternalCode", DbType="VarChar(10)")] string pendingMiniDrawerTrayModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoreThanOneItemFlag", DbType="Bit")] System.Nullable<bool> moreThanOneItemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnavailableForInventoryFlag", DbType="Bit")] System.Nullable<bool> unavailableForInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MobileFlag", DbType="Bit")] System.Nullable<bool> mobileFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RestrictedAccessFlag", DbType="Bit")] System.Nullable<bool> restrictedAccessFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShipToID", DbType="BigInt")] System.Nullable<long> shipToID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InteriorCabinetLightIntensityModeInternalCode", DbType="VarChar(10)")] string interiorCabinetLightIntensityModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> storageSpaceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, parentStorageSpaceKey, storageSpaceTypeInternalCode, storageSpaceFormKey, storageSpaceName, positionID, anchorStorageSpaceKey, serialID, registrySerialID, productName, facilityKey, systemBusDeviceKey, secondSystemBusDeviceKey, miniDrawerTrayModeInternalCode, pendingMiniDrawerTrayModeInternalCode, moreThanOneItemFlag, unavailableForInventoryFlag, mobileFlag, restrictedAccessFlag, shipToID, interiorCabinetLightIntensityModeInternalCode, lastModifiedDispensingDeviceKey, lastModifiedActorKey, storageSpaceKey);
			storageSpaceKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(24)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_CriticalOverridePeriodInsert")]
		public int usp_CriticalOverridePeriodInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalOverridePeriodName", DbType="NVarChar(50)")] string criticalOverridePeriodName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartTimeOfDayValue", DbType="SmallInt")] System.Nullable<short> startTimeOfDayValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndTimeOfDayValue", DbType="SmallInt")] System.Nullable<short> endTimeOfDayValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MondayFlag", DbType="Bit")] System.Nullable<bool> mondayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TuesdayFlag", DbType="Bit")] System.Nullable<bool> tuesdayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WednesdayFlag", DbType="Bit")] System.Nullable<bool> wednesdayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ThursdayFlag", DbType="Bit")] System.Nullable<bool> thursdayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FridayFlag", DbType="Bit")] System.Nullable<bool> fridayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SaturdayFlag", DbType="Bit")] System.Nullable<bool> saturdayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SundayFlag", DbType="Bit")] System.Nullable<bool> sundayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> createdActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalOverridePeriodKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> criticalOverridePeriodKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, dispensingDeviceKey, criticalOverridePeriodName, startTimeOfDayValue, endTimeOfDayValue, mondayFlag, tuesdayFlag, wednesdayFlag, thursdayFlag, fridayFlag, saturdayFlag, sundayFlag, createdUTCDateTime, createdLocalDateTime, createdActorKey, lastModifiedActorKey, criticalOverridePeriodKey);
			criticalOverridePeriodKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(17)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_CriticalOverridePeriodUpdate")]
		public int usp_CriticalOverridePeriodUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalOverridePeriodName", DbType="NVarChar(50)")] string criticalOverridePeriodName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartTimeOfDayValue", DbType="SmallInt")] System.Nullable<short> startTimeOfDayValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndTimeOfDayValue", DbType="SmallInt")] System.Nullable<short> endTimeOfDayValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MondayFlag", DbType="Bit")] System.Nullable<bool> mondayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TuesdayFlag", DbType="Bit")] System.Nullable<bool> tuesdayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WednesdayFlag", DbType="Bit")] System.Nullable<bool> wednesdayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ThursdayFlag", DbType="Bit")] System.Nullable<bool> thursdayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FridayFlag", DbType="Bit")] System.Nullable<bool> fridayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SaturdayFlag", DbType="Bit")] System.Nullable<bool> saturdayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SundayFlag", DbType="Bit")] System.Nullable<bool> sundayFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> createdActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalOverridePeriodKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> criticalOverridePeriodKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, dispensingDeviceKey, criticalOverridePeriodName, startTimeOfDayValue, endTimeOfDayValue, mondayFlag, tuesdayFlag, wednesdayFlag, thursdayFlag, fridayFlag, saturdayFlag, sundayFlag, createdUTCDateTime, createdLocalDateTime, createdActorKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, criticalOverridePeriodKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceDelete")]
		public int usp_DispensingDeviceDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedDispensingDeviceKey, lastModifiedActorKey, dispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceUpdate")]
		public int usp_DispensingDeviceUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceName", DbType="NVarChar(50)")] string dispensingDeviceName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceTypeInternalCode", DbType="VarChar(10)")] string dispensingDeviceTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComputerName", DbType="NVarChar(255)")] string computerName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServerAddressValue", DbType="NVarChar(500)")] string serverAddressValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SyncServerKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> syncServerKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AuthenticationMethodInternalCode", DbType="VarChar(20)")] string authenticationMethodInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BioIDExemptInternalCode", DbType="VarChar(20)")] string bioIDExemptInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardExemptInternalCode", DbType="VarChar(20)")] string cardExemptInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserScanModeInternalCode", DbType="VarChar(10)")] string userScanModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZoneKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> zoneKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutOfServiceFlag", DbType="Bit")] System.Nullable<bool> outOfServiceFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProfileModeFlag", DbType="Bit")] System.Nullable<bool> profileModeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MenuTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> menuTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpenDrawerTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> openDrawerTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmptyReturnBinTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> emptyReturnBinTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryDrawerMapTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> inventoryDrawerMapTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> anesthesiaTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReverificationTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> reverificationTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaSwitchUserFlag", DbType="Bit")] System.Nullable<bool> anesthesiaSwitchUserFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaSwitchUserDurationAmount", DbType="SmallInt")] System.Nullable<short> anesthesiaSwitchUserDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PatientCaseTransactionHoldDurationAmount", DbType="SmallInt")] System.Nullable<short> patientCaseTransactionHoldDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccessInventoryFeatureOffFlag", DbType="Bit")] System.Nullable<bool> accessInventoryFeatureOffFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemporaryNonProfileModeFlag", DbType="Bit")] System.Nullable<bool> temporaryNonProfileModeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemoveBeforeOrderStartDurationAmount", DbType="SmallInt")] System.Nullable<short> removeBeforeOrderStartDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemoveAfterOrderExpiredDurationAmount", DbType="SmallInt")] System.Nullable<short> removeAfterOrderExpiredDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeforeMedDueNowDurationAmount", DbType="SmallInt")] System.Nullable<short> beforeMedDueNowDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AfterMedDueNowDurationAmount", DbType="SmallInt")] System.Nullable<short> afterMedDueNowDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideReasonRequiredFlag", DbType="Bit")] System.Nullable<bool> overrideReasonRequiredFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseWarningFlag", DbType="Bit")] System.Nullable<bool> tooCloseWarningFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PatientSpecificFunctionalityFlag", DbType="Bit")] System.Nullable<bool> patientSpecificFunctionalityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDispenseFlag", DbType="Bit")] System.Nullable<bool> witnessOnDispenseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> witnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDisposeFlag", DbType="Bit")] System.Nullable<bool> witnessOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> witnessOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> witnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOverrideFlag", DbType="Bit")] System.Nullable<bool> witnessOnOverrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> witnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnInventoryFlag", DbType="Bit")] System.Nullable<bool> witnessOnInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnEmptyReturnBinFlag", DbType="Bit")] System.Nullable<bool> witnessOnEmptyReturnBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDestockFlag", DbType="Bit")] System.Nullable<bool> witnessOnDestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnRxCheckFlag", DbType="Bit")] System.Nullable<bool> witnessOnRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnCUBIEEjectFlag", DbType="Bit")] System.Nullable<bool> witnessOnCUBIEEjectFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> scanOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnRemoveFlag", DbType="Bit")] System.Nullable<bool> scanOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> scanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalOverrideFlag", DbType="Bit")] System.Nullable<bool> criticalOverrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoCriticalOverrideDurationAmount", DbType="SmallInt")] System.Nullable<short> autoCriticalOverrideDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BlindCountFlag", DbType="Bit")] System.Nullable<bool> blindCountFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> outdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReturnToStockFlag", DbType="Bit")] System.Nullable<bool> returnToStockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpgradeTimeOfDayValue", DbType="SmallInt")] System.Nullable<short> upgradeTimeOfDayValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManualUpgradeFlag", DbType="Bit")] System.Nullable<bool> manualUpgradeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DefaultGlobalPatientSearchFlag", DbType="Bit")] System.Nullable<bool> defaultGlobalPatientSearchFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedOutdateFlag", DbType="Bit")] System.Nullable<bool> printMedOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedUnloadFlag", DbType="Bit")] System.Nullable<bool> printMedUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedEmptyReturnBinFlag", DbType="Bit")] System.Nullable<bool> printMedEmptyReturnBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedReturnFlag", DbType="Bit")] System.Nullable<bool> printMedReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedRemoveFlag", DbType="Bit")] System.Nullable<bool> printMedRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedDisposeFlag", DbType="Bit")] System.Nullable<bool> printMedDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedDestockFlag", DbType="Bit")] System.Nullable<bool> printMedDestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedRxCheckFlag", DbType="Bit")] System.Nullable<bool> printMedRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedLoadRefillFlag", DbType="Bit")] System.Nullable<bool> printMedLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowNoticePrinterName", DbType="NVarChar(260)")] string criticalLowNoticePrinterName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockOutNoticePrinterName", DbType="NVarChar(260)")] string stockOutNoticePrinterName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowPreadmissionFlag", DbType="Bit")] System.Nullable<bool> showPreadmissionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowRecurringAdmissionFlag", DbType="Bit")] System.Nullable<bool> showRecurringAdmissionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PreadmissionLeadDurationAmount", DbType="SmallInt")] System.Nullable<short> preadmissionLeadDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PreadmissionProlongedInactivityDurationAmount", DbType="SmallInt")] System.Nullable<short> preadmissionProlongedInactivityDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdmissionProlongedInactivityDurationAmount", DbType="SmallInt")] System.Nullable<short> admissionProlongedInactivityDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DischargeDelayDurationAmount", DbType="SmallInt")] System.Nullable<short> dischargeDelayDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransferDelayDurationAmount", DbType="SmallInt")] System.Nullable<short> transferDelayDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeaveOfAbsenceDelayDurationAmount", DbType="SmallInt")] System.Nullable<short> leaveOfAbsenceDelayDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentAreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> replenishmentAreaKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualStockLocationKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> virtualStockLocationKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxCheckFlag", DbType="Bit")] System.Nullable<bool> rxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoMedLabelFlag", DbType="Bit")] System.Nullable<bool> autoMedLabelFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SyncUploadAllowSkipFlag", DbType="Bit")] System.Nullable<bool> syncUploadAllowSkipFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SyncAllowDownloadOnUploadFailureFlag", DbType="Bit")] System.Nullable<bool> syncAllowDownloadOnUploadFailureFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SyncUploadMaximumRetryQuantity", DbType="SmallInt")] System.Nullable<short> syncUploadMaximumRetryQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SyncUploadRetryIntervalAmount", DbType="SmallInt")] System.Nullable<short> syncUploadRetryIntervalAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WasteModeInternalCode", DbType="VarChar(10)")] string wasteModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FutureTaskWarningDurationAmount", DbType="SmallInt")] System.Nullable<short> futureTaskWarningDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintPatientLabelRemoveFlag", DbType="Bit")] System.Nullable<bool> printPatientLabelRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderDispenseQuantityFlag", DbType="Bit")] System.Nullable<bool> pharmacyOrderDispenseQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdentityServerClientSecretValue", DbType="VarChar(50)")] string identityServerClientSecretValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdentityServerClientID", DbType="VarChar(50)")] string identityServerClientID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OneTimePasswordSecretKeyValue", DbType="VarChar(26)")] string oneTimePasswordSecretKeyValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OneTimePasswordTimeoutDurationAmount", DbType="SmallInt")] System.Nullable<short> oneTimePasswordTimeoutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UseEquivalenciesFlag", DbType="Bit")] System.Nullable<bool> useEquivalenciesFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GrabScanFlag", DbType="Bit")] System.Nullable<bool> grabScanFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveBarcodeInventoryDecrementExternalFlag", DbType="Bit")] System.Nullable<bool> receiveBarcodeInventoryDecrementExternalFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSystemDeviceHostValue", DbType="NVarChar(50)")] string externalSystemDeviceHostValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSystemDevicePortNumber", DbType="Int")] System.Nullable<int> externalSystemDevicePortNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSystemDeviceAdminUserPasswordValue", DbType="NVarChar(50)")] string externalSystemDeviceAdminUserPasswordValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSystemDeviceCommandTimeoutDurationAmount", DbType="SmallInt")] System.Nullable<short> externalSystemDeviceCommandTimeoutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpenBinTimeoutDurationAmount", DbType="SmallInt")] System.Nullable<short> openBinTimeoutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeReceiverDevicePortNumber", DbType="Int")] System.Nullable<int> barcodeReceiverDevicePortNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ControlledSubstanceLicenseKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> controlledSubstanceLicenseKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayPatientPreferredNameFlag", DbType="Bit")] System.Nullable<bool> displayPatientPreferredNameFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDestructionBinTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMDestructionBinTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnRestockADMFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnRestockADMFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnEmptyDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnEmptyDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnInventoryFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRestockADMFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRestockADMFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReverseCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReverseCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnceInventoryFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnceInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRecoverFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRecoverFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAccessToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAddToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMBlindCountFlag", DbType="Bit")] System.Nullable<bool> gCSMBlindCountFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMSheetPrinterName", DbType="VarChar(260)")] string gCSMSheetPrinterName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMLabelPrinterName", DbType="VarChar(260)")] string gCSMLabelPrinterName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnAccessDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnAccessDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnDiscrepancyResolutionFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnDiscrepancyResolutionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnEmptyDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnEmptyDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnFillPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnFillPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnManageStockFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnManageStockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnNonStandardCompoundRecordFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnNonStandardCompoundRecordFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnPendingStandardCompoundRecordFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnPendingStandardCompoundRecordFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnReverseNonStandardCompoundFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnReverseNonStandardCompoundFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnUnloadFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnAccessDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnAccessDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnFillPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnFillPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnNonStandardCompoundIngredientFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnNonStandardCompoundIngredientFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnNonStandardCompoundMedFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnNonStandardCompoundMedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnStandardCompoundMedFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnStandardCompoundMedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnStandardCompoundIngredientFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnStandardCompoundIngredientFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnDispenseToLocationFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnDispenseToLocationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnKitFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnKitFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnKitComponentFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnKitComponentFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnManageExcessStockFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnManageExcessStockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnNonStandardCompoundFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnNonStandardCompoundFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnNonStandardCompoundIngredientFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnNonStandardCompoundIngredientFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnStandardCompoundFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnStandardCompoundFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnStandardCompoundIngredientFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnStandardCompoundIngredientFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMHideAreaFilterFlag", DbType="Bit")] System.Nullable<bool> gCSMHideAreaFilterFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMHideZoneFilterFlag", DbType="Bit")] System.Nullable<bool> gCSMHideZoneFilterFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCompareReportStandardRangeInternalCode", DbType="VarChar(20)")] string gCSMCompareReportStandardRangeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMOriginDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMOriginDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDestinationDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMDestinationDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, facilityKey, dispensingDeviceName, dispensingDeviceTypeInternalCode, computerName, serverAddressValue, syncServerKey, authenticationMethodInternalCode, bioIDExemptInternalCode, cardExemptInternalCode, userScanModeInternalCode, zoneKey, outOfServiceFlag, profileModeFlag, menuTimeOutDurationAmount, openDrawerTimeOutDurationAmount, emptyReturnBinTimeOutDurationAmount, inventoryDrawerMapTimeOutDurationAmount, anesthesiaTimeOutDurationAmount, reverificationTimeOutDurationAmount, anesthesiaSwitchUserFlag, anesthesiaSwitchUserDurationAmount, patientCaseTransactionHoldDurationAmount, accessInventoryFeatureOffFlag, temporaryNonProfileModeFlag, removeBeforeOrderStartDurationAmount, removeAfterOrderExpiredDurationAmount, beforeMedDueNowDurationAmount, afterMedDueNowDurationAmount, overrideReasonRequiredFlag, tooCloseWarningFlag, patientSpecificFunctionalityFlag, witnessOnDispenseFlag, witnessOnReturnFlag, witnessOnDisposeFlag, witnessOnLoadRefillFlag, witnessOnUnloadFlag, witnessOnOverrideFlag, witnessOnOutdateFlag, witnessOnInventoryFlag, witnessOnEmptyReturnBinFlag, witnessOnDestockFlag, witnessOnRxCheckFlag, witnessOnCUBIEEjectFlag, scanOnLoadRefillFlag, scanOnRemoveFlag, scanOnReturnFlag, requireLotIDOnRemoveFlag, requireLotIDOnReturnFlag, requireSerialIDOnRemoveFlag, requireSerialIDOnReturnFlag, requireExpirationDateOnRemoveFlag, requireExpirationDateOnReturnFlag, criticalOverrideFlag, autoCriticalOverrideDurationAmount, blindCountFlag, outdateTrackingFlag, returnToStockFlag, upgradeTimeOfDayValue, manualUpgradeFlag, defaultGlobalPatientSearchFlag, printMedOutdateFlag, printMedUnloadFlag, printMedEmptyReturnBinFlag, printMedReturnFlag, printMedRemoveFlag, printMedDisposeFlag, printMedDestockFlag, printMedRxCheckFlag, printMedLoadRefillFlag, criticalLowNoticePrinterName, stockOutNoticePrinterName, showPreadmissionFlag, showRecurringAdmissionFlag, preadmissionLeadDurationAmount, preadmissionProlongedInactivityDurationAmount, admissionProlongedInactivityDurationAmount, dischargeDelayDurationAmount, transferDelayDurationAmount, leaveOfAbsenceDelayDurationAmount, replenishmentAreaKey, virtualStockLocationKey, rxCheckFlag, autoMedLabelFlag, syncUploadAllowSkipFlag, syncAllowDownloadOnUploadFailureFlag, syncUploadMaximumRetryQuantity, syncUploadRetryIntervalAmount, wasteModeInternalCode, futureTaskWarningDurationAmount, printPatientLabelRemoveFlag, pharmacyOrderDispenseQuantityFlag, identityServerClientSecretValue, identityServerClientID, oneTimePasswordSecretKeyValue, oneTimePasswordTimeoutDurationAmount, useEquivalenciesFlag, grabScanFlag, receiveBarcodeInventoryDecrementExternalFlag, externalSystemDeviceHostValue, externalSystemDevicePortNumber, externalSystemDeviceAdminUserPasswordValue, externalSystemDeviceCommandTimeoutDurationAmount, openBinTimeoutDurationAmount, barcodeReceiverDevicePortNumber, controlledSubstanceLicenseKey, displayPatientPreferredNameFlag, gCSMDestructionBinTimeOutDurationAmount, gCSMScanOnCompoundingFlag, gCSMScanOnIssueFlag, gCSMScanOnPrescriptionFlag, gCSMScanOnReceiveFlag, gCSMScanOnRestockADMFlag, gCSMScanOnReturnFlag, gCSMScanOnSellFlag, gCSMScanOnStockTransferFlag, gCSMWitnessOnCompoundingFlag, gCSMWitnessOnEmptyDestructionBinFlag, gCSMWitnessOnInventoryFlag, gCSMWitnessOnIssueFlag, gCSMWitnessOnOutdateFlag, gCSMWitnessOnPrescriptionFlag, gCSMWitnessOnRecallFlag, gCSMWitnessOnReceiveFlag, gCSMWitnessOnRestockADMFlag, gCSMWitnessOnReturnFlag, gCSMWitnessOnReverseCompoundingFlag, gCSMWitnessOnSellFlag, gCSMWitnessOnStockTransferFlag, gCSMWitnessOnUnloadFlag, gCSMWitnessOnWasteFlag, gCSMWitnessOnceInventoryFlag, gCSMWitnessOnRecoverFlag, gCSMWitnessOnAccessToDestructionBinFlag, gCSMWitnessOnAddToDestructionBinFlag, gCSMBlindCountFlag, gCSMSheetPrinterName, gCSMLabelPrinterName, gCSMPrintReceiptOnAccessDestructionBinFlag, gCSMPrintReceiptOnDiscrepancyResolutionFlag, gCSMPrintReceiptOnEmptyDestructionBinFlag, gCSMPrintReceiptOnFillPrescriptionFlag, gCSMPrintReceiptOnManageStockFlag, gCSMPrintReceiptOnNonStandardCompoundRecordFlag, gCSMPrintReceiptOnOutdateFlag, gCSMPrintReceiptOnPendingStandardCompoundRecordFlag, gCSMPrintReceiptOnRecallFlag, gCSMPrintReceiptOnReceiveFlag, gCSMPrintReceiptOnReturnFlag, gCSMPrintReceiptOnReverseNonStandardCompoundFlag, gCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag, gCSMPrintReceiptOnSellFlag, gCSMPrintReceiptOnUnloadFlag, gCSMPrintReceiptOnWasteFlag, gCSMPrintLabelOnAccessDestructionBinFlag, gCSMPrintLabelOnFillPrescriptionFlag, gCSMPrintLabelOnNonStandardCompoundIngredientFlag, gCSMPrintLabelOnNonStandardCompoundMedFlag, gCSMPrintLabelOnOutdateFlag, gCSMPrintLabelOnRecallFlag, gCSMPrintLabelOnReturnFlag, gCSMPrintLabelOnSellFlag, gCSMPrintLabelOnStandardCompoundMedFlag, gCSMPrintLabelOnStandardCompoundIngredientFlag, gCSMPrintLabelOnWasteFlag, gCSMPrintPullListOnAutorestockFlag, gCSMPrintPullListOnDispenseToLocationFlag, gCSMPrintPullListOnKitFlag, gCSMPrintPullListOnKitComponentFlag, gCSMPrintPullListOnManageExcessStockFlag, gCSMPrintPullListOnNonStandardCompoundFlag, gCSMPrintPullListOnNonStandardCompoundIngredientFlag, gCSMPrintPullListOnStandardCompoundFlag, gCSMPrintPullListOnStandardCompoundIngredientFlag, gCSMHideAreaFilterFlag, gCSMHideZoneFilterFlag, gCSMCompareReportStandardRangeInternalCode, gCSMOriginDispensingDeviceKey, gCSMDestinationDispensingDeviceKey, lastModifiedDispensingDeviceKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, dispensingDeviceKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Strg.usp_DispensingDeviceInsert")]
		public int usp_DispensingDeviceInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceName", DbType="NVarChar(50)")] string dispensingDeviceName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceTypeInternalCode", DbType="VarChar(10)")] string dispensingDeviceTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComputerName", DbType="NVarChar(255)")] string computerName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServerAddressValue", DbType="NVarChar(500)")] string serverAddressValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SyncServerKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> syncServerKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AuthenticationMethodInternalCode", DbType="VarChar(20)")] string authenticationMethodInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BioIDExemptInternalCode", DbType="VarChar(20)")] string bioIDExemptInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardExemptInternalCode", DbType="VarChar(20)")] string cardExemptInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserScanModeInternalCode", DbType="VarChar(10)")] string userScanModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZoneKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> zoneKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutOfServiceFlag", DbType="Bit")] System.Nullable<bool> outOfServiceFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProfileModeFlag", DbType="Bit")] System.Nullable<bool> profileModeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MenuTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> menuTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpenDrawerTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> openDrawerTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmptyReturnBinTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> emptyReturnBinTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryDrawerMapTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> inventoryDrawerMapTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> anesthesiaTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReverificationTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> reverificationTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaSwitchUserFlag", DbType="Bit")] System.Nullable<bool> anesthesiaSwitchUserFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaSwitchUserDurationAmount", DbType="SmallInt")] System.Nullable<short> anesthesiaSwitchUserDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PatientCaseTransactionHoldDurationAmount", DbType="SmallInt")] System.Nullable<short> patientCaseTransactionHoldDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccessInventoryFeatureOffFlag", DbType="Bit")] System.Nullable<bool> accessInventoryFeatureOffFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemporaryNonProfileModeFlag", DbType="Bit")] System.Nullable<bool> temporaryNonProfileModeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemoveBeforeOrderStartDurationAmount", DbType="SmallInt")] System.Nullable<short> removeBeforeOrderStartDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemoveAfterOrderExpiredDurationAmount", DbType="SmallInt")] System.Nullable<short> removeAfterOrderExpiredDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeforeMedDueNowDurationAmount", DbType="SmallInt")] System.Nullable<short> beforeMedDueNowDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AfterMedDueNowDurationAmount", DbType="SmallInt")] System.Nullable<short> afterMedDueNowDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideReasonRequiredFlag", DbType="Bit")] System.Nullable<bool> overrideReasonRequiredFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseWarningFlag", DbType="Bit")] System.Nullable<bool> tooCloseWarningFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PatientSpecificFunctionalityFlag", DbType="Bit")] System.Nullable<bool> patientSpecificFunctionalityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDispenseFlag", DbType="Bit")] System.Nullable<bool> witnessOnDispenseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> witnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDisposeFlag", DbType="Bit")] System.Nullable<bool> witnessOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> witnessOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> witnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOverrideFlag", DbType="Bit")] System.Nullable<bool> witnessOnOverrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> witnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnInventoryFlag", DbType="Bit")] System.Nullable<bool> witnessOnInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnEmptyReturnBinFlag", DbType="Bit")] System.Nullable<bool> witnessOnEmptyReturnBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDestockFlag", DbType="Bit")] System.Nullable<bool> witnessOnDestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnRxCheckFlag", DbType="Bit")] System.Nullable<bool> witnessOnRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnCUBIEEjectFlag", DbType="Bit")] System.Nullable<bool> witnessOnCUBIEEjectFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> scanOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnRemoveFlag", DbType="Bit")] System.Nullable<bool> scanOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> scanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalOverrideFlag", DbType="Bit")] System.Nullable<bool> criticalOverrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoCriticalOverrideDurationAmount", DbType="SmallInt")] System.Nullable<short> autoCriticalOverrideDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BlindCountFlag", DbType="Bit")] System.Nullable<bool> blindCountFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> outdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReturnToStockFlag", DbType="Bit")] System.Nullable<bool> returnToStockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpgradeTimeOfDayValue", DbType="SmallInt")] System.Nullable<short> upgradeTimeOfDayValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManualUpgradeFlag", DbType="Bit")] System.Nullable<bool> manualUpgradeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DefaultGlobalPatientSearchFlag", DbType="Bit")] System.Nullable<bool> defaultGlobalPatientSearchFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedOutdateFlag", DbType="Bit")] System.Nullable<bool> printMedOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedUnloadFlag", DbType="Bit")] System.Nullable<bool> printMedUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedEmptyReturnBinFlag", DbType="Bit")] System.Nullable<bool> printMedEmptyReturnBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedReturnFlag", DbType="Bit")] System.Nullable<bool> printMedReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedRemoveFlag", DbType="Bit")] System.Nullable<bool> printMedRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedDisposeFlag", DbType="Bit")] System.Nullable<bool> printMedDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedDestockFlag", DbType="Bit")] System.Nullable<bool> printMedDestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedRxCheckFlag", DbType="Bit")] System.Nullable<bool> printMedRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintMedLoadRefillFlag", DbType="Bit")] System.Nullable<bool> printMedLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowNoticePrinterName", DbType="NVarChar(260)")] string criticalLowNoticePrinterName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockOutNoticePrinterName", DbType="NVarChar(260)")] string stockOutNoticePrinterName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowPreadmissionFlag", DbType="Bit")] System.Nullable<bool> showPreadmissionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowRecurringAdmissionFlag", DbType="Bit")] System.Nullable<bool> showRecurringAdmissionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PreadmissionLeadDurationAmount", DbType="SmallInt")] System.Nullable<short> preadmissionLeadDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PreadmissionProlongedInactivityDurationAmount", DbType="SmallInt")] System.Nullable<short> preadmissionProlongedInactivityDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdmissionProlongedInactivityDurationAmount", DbType="SmallInt")] System.Nullable<short> admissionProlongedInactivityDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DischargeDelayDurationAmount", DbType="SmallInt")] System.Nullable<short> dischargeDelayDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransferDelayDurationAmount", DbType="SmallInt")] System.Nullable<short> transferDelayDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeaveOfAbsenceDelayDurationAmount", DbType="SmallInt")] System.Nullable<short> leaveOfAbsenceDelayDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentAreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> replenishmentAreaKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualStockLocationKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> virtualStockLocationKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxCheckFlag", DbType="Bit")] System.Nullable<bool> rxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoMedLabelFlag", DbType="Bit")] System.Nullable<bool> autoMedLabelFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SyncUploadAllowSkipFlag", DbType="Bit")] System.Nullable<bool> syncUploadAllowSkipFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SyncAllowDownloadOnUploadFailureFlag", DbType="Bit")] System.Nullable<bool> syncAllowDownloadOnUploadFailureFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SyncUploadMaximumRetryQuantity", DbType="SmallInt")] System.Nullable<short> syncUploadMaximumRetryQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SyncUploadRetryIntervalAmount", DbType="SmallInt")] System.Nullable<short> syncUploadRetryIntervalAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WasteModeInternalCode", DbType="VarChar(10)")] string wasteModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FutureTaskWarningDurationAmount", DbType="SmallInt")] System.Nullable<short> futureTaskWarningDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintPatientLabelRemoveFlag", DbType="Bit")] System.Nullable<bool> printPatientLabelRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderDispenseQuantityFlag", DbType="Bit")] System.Nullable<bool> pharmacyOrderDispenseQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdentityServerClientSecretValue", DbType="VarChar(50)")] string identityServerClientSecretValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdentityServerClientID", DbType="VarChar(50)")] string identityServerClientID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OneTimePasswordSecretKeyValue", DbType="VarChar(26)")] string oneTimePasswordSecretKeyValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OneTimePasswordTimeoutDurationAmount", DbType="SmallInt")] System.Nullable<short> oneTimePasswordTimeoutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UseEquivalenciesFlag", DbType="Bit")] System.Nullable<bool> useEquivalenciesFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GrabScanFlag", DbType="Bit")] System.Nullable<bool> grabScanFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveBarcodeInventoryDecrementExternalFlag", DbType="Bit")] System.Nullable<bool> receiveBarcodeInventoryDecrementExternalFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSystemDeviceHostValue", DbType="NVarChar(50)")] string externalSystemDeviceHostValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSystemDevicePortNumber", DbType="Int")] System.Nullable<int> externalSystemDevicePortNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSystemDeviceAdminUserPasswordValue", DbType="NVarChar(50)")] string externalSystemDeviceAdminUserPasswordValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSystemDeviceCommandTimeoutDurationAmount", DbType="SmallInt")] System.Nullable<short> externalSystemDeviceCommandTimeoutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OpenBinTimeoutDurationAmount", DbType="SmallInt")] System.Nullable<short> openBinTimeoutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeReceiverDevicePortNumber", DbType="Int")] System.Nullable<int> barcodeReceiverDevicePortNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ControlledSubstanceLicenseKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> controlledSubstanceLicenseKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayPatientPreferredNameFlag", DbType="Bit")] System.Nullable<bool> displayPatientPreferredNameFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDestructionBinTimeOutDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMDestructionBinTimeOutDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnRestockADMFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnRestockADMFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnEmptyDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnEmptyDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnInventoryFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRestockADMFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRestockADMFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReverseCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReverseCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnceInventoryFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnceInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRecoverFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRecoverFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAccessToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAddToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMBlindCountFlag", DbType="Bit")] System.Nullable<bool> gCSMBlindCountFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMSheetPrinterName", DbType="VarChar(260)")] string gCSMSheetPrinterName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMLabelPrinterName", DbType="VarChar(260)")] string gCSMLabelPrinterName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnAccessDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnAccessDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnDiscrepancyResolutionFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnDiscrepancyResolutionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnEmptyDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnEmptyDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnFillPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnFillPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnManageStockFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnManageStockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnNonStandardCompoundRecordFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnNonStandardCompoundRecordFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnPendingStandardCompoundRecordFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnPendingStandardCompoundRecordFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnReverseNonStandardCompoundFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnReverseNonStandardCompoundFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnUnloadFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintReceiptOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintReceiptOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnAccessDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnAccessDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnFillPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnFillPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnNonStandardCompoundIngredientFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnNonStandardCompoundIngredientFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnNonStandardCompoundMedFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnNonStandardCompoundMedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnStandardCompoundMedFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnStandardCompoundMedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnStandardCompoundIngredientFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnStandardCompoundIngredientFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintLabelOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintLabelOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnDispenseToLocationFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnDispenseToLocationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnKitFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnKitFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnKitComponentFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnKitComponentFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnManageExcessStockFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnManageExcessStockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnNonStandardCompoundFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnNonStandardCompoundFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnNonStandardCompoundIngredientFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnNonStandardCompoundIngredientFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnStandardCompoundFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnStandardCompoundFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintPullListOnStandardCompoundIngredientFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintPullListOnStandardCompoundIngredientFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMHideAreaFilterFlag", DbType="Bit")] System.Nullable<bool> gCSMHideAreaFilterFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMHideZoneFilterFlag", DbType="Bit")] System.Nullable<bool> gCSMHideZoneFilterFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCompareReportStandardRangeInternalCode", DbType="VarChar(20)")] string gCSMCompareReportStandardRangeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMOriginDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMOriginDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDestinationDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMDestinationDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> dispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, facilityKey, dispensingDeviceName, dispensingDeviceTypeInternalCode, computerName, serverAddressValue, syncServerKey, authenticationMethodInternalCode, bioIDExemptInternalCode, cardExemptInternalCode, userScanModeInternalCode, zoneKey, outOfServiceFlag, profileModeFlag, menuTimeOutDurationAmount, openDrawerTimeOutDurationAmount, emptyReturnBinTimeOutDurationAmount, inventoryDrawerMapTimeOutDurationAmount, anesthesiaTimeOutDurationAmount, reverificationTimeOutDurationAmount, anesthesiaSwitchUserFlag, anesthesiaSwitchUserDurationAmount, patientCaseTransactionHoldDurationAmount, accessInventoryFeatureOffFlag, temporaryNonProfileModeFlag, removeBeforeOrderStartDurationAmount, removeAfterOrderExpiredDurationAmount, beforeMedDueNowDurationAmount, afterMedDueNowDurationAmount, overrideReasonRequiredFlag, tooCloseWarningFlag, patientSpecificFunctionalityFlag, witnessOnDispenseFlag, witnessOnReturnFlag, witnessOnDisposeFlag, witnessOnLoadRefillFlag, witnessOnUnloadFlag, witnessOnOverrideFlag, witnessOnOutdateFlag, witnessOnInventoryFlag, witnessOnEmptyReturnBinFlag, witnessOnDestockFlag, witnessOnRxCheckFlag, witnessOnCUBIEEjectFlag, scanOnLoadRefillFlag, scanOnRemoveFlag, scanOnReturnFlag, requireLotIDOnRemoveFlag, requireLotIDOnReturnFlag, requireSerialIDOnRemoveFlag, requireSerialIDOnReturnFlag, requireExpirationDateOnRemoveFlag, requireExpirationDateOnReturnFlag, criticalOverrideFlag, autoCriticalOverrideDurationAmount, blindCountFlag, outdateTrackingFlag, returnToStockFlag, upgradeTimeOfDayValue, manualUpgradeFlag, defaultGlobalPatientSearchFlag, printMedOutdateFlag, printMedUnloadFlag, printMedEmptyReturnBinFlag, printMedReturnFlag, printMedRemoveFlag, printMedDisposeFlag, printMedDestockFlag, printMedRxCheckFlag, printMedLoadRefillFlag, criticalLowNoticePrinterName, stockOutNoticePrinterName, showPreadmissionFlag, showRecurringAdmissionFlag, preadmissionLeadDurationAmount, preadmissionProlongedInactivityDurationAmount, admissionProlongedInactivityDurationAmount, dischargeDelayDurationAmount, transferDelayDurationAmount, leaveOfAbsenceDelayDurationAmount, replenishmentAreaKey, virtualStockLocationKey, rxCheckFlag, autoMedLabelFlag, syncUploadAllowSkipFlag, syncAllowDownloadOnUploadFailureFlag, syncUploadMaximumRetryQuantity, syncUploadRetryIntervalAmount, wasteModeInternalCode, futureTaskWarningDurationAmount, printPatientLabelRemoveFlag, pharmacyOrderDispenseQuantityFlag, identityServerClientSecretValue, identityServerClientID, oneTimePasswordSecretKeyValue, oneTimePasswordTimeoutDurationAmount, useEquivalenciesFlag, grabScanFlag, receiveBarcodeInventoryDecrementExternalFlag, externalSystemDeviceHostValue, externalSystemDevicePortNumber, externalSystemDeviceAdminUserPasswordValue, externalSystemDeviceCommandTimeoutDurationAmount, openBinTimeoutDurationAmount, barcodeReceiverDevicePortNumber, controlledSubstanceLicenseKey, displayPatientPreferredNameFlag, gCSMDestructionBinTimeOutDurationAmount, gCSMScanOnCompoundingFlag, gCSMScanOnIssueFlag, gCSMScanOnPrescriptionFlag, gCSMScanOnReceiveFlag, gCSMScanOnRestockADMFlag, gCSMScanOnReturnFlag, gCSMScanOnSellFlag, gCSMScanOnStockTransferFlag, gCSMWitnessOnCompoundingFlag, gCSMWitnessOnEmptyDestructionBinFlag, gCSMWitnessOnInventoryFlag, gCSMWitnessOnIssueFlag, gCSMWitnessOnOutdateFlag, gCSMWitnessOnPrescriptionFlag, gCSMWitnessOnRecallFlag, gCSMWitnessOnReceiveFlag, gCSMWitnessOnRestockADMFlag, gCSMWitnessOnReturnFlag, gCSMWitnessOnReverseCompoundingFlag, gCSMWitnessOnSellFlag, gCSMWitnessOnStockTransferFlag, gCSMWitnessOnUnloadFlag, gCSMWitnessOnWasteFlag, gCSMWitnessOnceInventoryFlag, gCSMWitnessOnRecoverFlag, gCSMWitnessOnAccessToDestructionBinFlag, gCSMWitnessOnAddToDestructionBinFlag, gCSMBlindCountFlag, gCSMSheetPrinterName, gCSMLabelPrinterName, gCSMPrintReceiptOnAccessDestructionBinFlag, gCSMPrintReceiptOnDiscrepancyResolutionFlag, gCSMPrintReceiptOnEmptyDestructionBinFlag, gCSMPrintReceiptOnFillPrescriptionFlag, gCSMPrintReceiptOnManageStockFlag, gCSMPrintReceiptOnNonStandardCompoundRecordFlag, gCSMPrintReceiptOnOutdateFlag, gCSMPrintReceiptOnPendingStandardCompoundRecordFlag, gCSMPrintReceiptOnRecallFlag, gCSMPrintReceiptOnReceiveFlag, gCSMPrintReceiptOnReturnFlag, gCSMPrintReceiptOnReverseNonStandardCompoundFlag, gCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag, gCSMPrintReceiptOnSellFlag, gCSMPrintReceiptOnUnloadFlag, gCSMPrintReceiptOnWasteFlag, gCSMPrintLabelOnAccessDestructionBinFlag, gCSMPrintLabelOnFillPrescriptionFlag, gCSMPrintLabelOnNonStandardCompoundIngredientFlag, gCSMPrintLabelOnNonStandardCompoundMedFlag, gCSMPrintLabelOnOutdateFlag, gCSMPrintLabelOnRecallFlag, gCSMPrintLabelOnReturnFlag, gCSMPrintLabelOnSellFlag, gCSMPrintLabelOnStandardCompoundMedFlag, gCSMPrintLabelOnStandardCompoundIngredientFlag, gCSMPrintLabelOnWasteFlag, gCSMPrintPullListOnAutorestockFlag, gCSMPrintPullListOnDispenseToLocationFlag, gCSMPrintPullListOnKitFlag, gCSMPrintPullListOnKitComponentFlag, gCSMPrintPullListOnManageExcessStockFlag, gCSMPrintPullListOnNonStandardCompoundFlag, gCSMPrintPullListOnNonStandardCompoundIngredientFlag, gCSMPrintPullListOnStandardCompoundFlag, gCSMPrintPullListOnStandardCompoundIngredientFlag, gCSMHideAreaFilterFlag, gCSMHideZoneFilterFlag, gCSMCompareReportStandardRangeInternalCode, gCSMOriginDispensingDeviceKey, gCSMDestinationDispensingDeviceKey, lastModifiedDispensingDeviceKey, lastModifiedActorKey, dispensingDeviceKey);
			dispensingDeviceKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(182)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_DispensingDeviceCurrent")]
	public partial class DispensingDeviceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _DispensingDeviceSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.DateTime> _LastServerCommunicationUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastServerCommunicationLocalDateTime;
		
		private System.Nullable<System.DateTime> _SyncUploadFailureUTCDateTime;
		
		private System.Nullable<System.DateTime> _SyncUploadFailureLocalDateTime;
		
		private System.Nullable<System.DateTime> _SyncDownloadFailureUTCDateTime;
		
		private System.Nullable<System.DateTime> _SyncDownloadFailureLocalDateTime;
		
		private System.Nullable<System.DateTime> _SyncInRetryModeUTCDateTime;
		
		private System.Nullable<System.DateTime> _SyncInRetryModeLocalDateTime;
		
		private System.Data.Linq.Binary _LastUploadTickValue;
		
		private System.Data.Linq.Binary _LastDownloadTickValue;
		
		private System.Nullable<long> _LastUploadChangeTrackingValue;
		
		private System.Nullable<long> _LastDownloadChangeTrackingValue;
		
		private System.Nullable<System.DateTime> _LastSuccessfulUploadUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastSuccessfulUploadLocalDateTime;
		
		private System.Nullable<System.DateTime> _LastSuccessfulDownloadUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastSuccessfulDownloadLocalDateTime;
		
		private string _IPAddressValue;
		
		private string _SyncDownloadStatusInternalCode;
		
		private System.Guid _FacilityKey;
		
		private string _DispensingDeviceName;
		
		private string _DispensingDeviceTypeInternalCode;
		
		private string _ComputerName;
		
		private string _ServerAddressValue;
		
		private System.Nullable<System.Guid> _SyncServerKey;
		
		private string _AuthenticationMethodInternalCode;
		
		private string _BioIDExemptInternalCode;
		
		private string _UserScanModeInternalCode;
		
		private System.Nullable<System.Guid> _ZoneKey;
		
		private bool _OutOfServiceFlag;
		
		private bool _ProfileModeFlag;
		
		private short _MenuTimeOutDurationAmount;
		
		private short _OpenDrawerTimeOutDurationAmount;
		
		private short _EmptyReturnBinTimeOutDurationAmount;
		
		private short _InventoryDrawerMapTimeOutDurationAmount;
		
		private short _AnesthesiaTimeOutDurationAmount;
		
		private short _ReverificatonTimeOutDurationAmount;
		
		private bool _AnesthesiaSwitchUserFlag;
		
		private System.Nullable<short> _AnesthesiaSwitchUserDurationAmount;
		
		private short _PatientCaseTransactionHoldDurationAmount;
		
		private bool _AccessInventoryFeatureOffFlag;
		
		private bool _TemporaryNonProfileModeFlag;
		
		private System.Nullable<short> _RemoveBeforeOrderStartDurationAmount;
		
		private System.Nullable<short> _RemoveAfterOrderExpiredDurationAmount;
		
		private short _BeforeMedDueNowDurationAmount;
		
		private short _AfterMedDueNowDurationAmount;
		
		private bool _OverrideReasonRequiredFlag;
		
		private bool _TooCloseWarningFlag;
		
		private bool _PatientSpecificFunctionalityFlag;
		
		private bool _WitnessOnDispenseFlag;
		
		private bool _WitnessOnReturnFlag;
		
		private bool _WitnessOnDisposeFlag;
		
		private bool _WitnessOnLoadRefillFlag;
		
		private bool _WitnessOnUnloadFlag;
		
		private bool _WitnessOnOverrideFlag;
		
		private bool _WitnessOnOutdateFlag;
		
		private bool _WitnessOnInventoryFlag;
		
		private bool _WitnessOnEmptyReturnBinFlag;
		
		private bool _WitnessOnDestockFlag;
		
		private bool _WitnessOnRxCheckFlag;
		
		private bool _WitnessOnCUBIEEjectFlag;
		
		private bool _ScanOnLoadRefillFlag;
		
		private bool _ScanOnRemoveFlag;
		
		private bool _ScanOnReturnFlag;
		
		private bool _RequireLotIDOnRemoveFlag;
		
		private bool _RequireLotIDOnReturnFlag;
		
		private bool _RequireSerialIDOnRemoveFlag;
		
		private bool _RequireSerialIDOnReturnFlag;
		
		private bool _RequireExpirationDateOnRemoveFlag;
		
		private bool _RequireExpirationDateOnReturnFlag;
		
		private bool _CriticalOverrideFlag;
		
		private System.Nullable<short> _AutoCriticalOverrideDurationAmount;
		
		private bool _BlindCountFlag;
		
		private bool _OutdateTrackingFlag;
		
		private bool _ReturnToStockFlag;
		
		private short _UpgradeTimeOfDayValue;
		
		private bool _ManualUpgradeFlag;
		
		private bool _DefaultGlobalPatientSearchFlag;
		
		private bool _PrintMedOutdateFlag;
		
		private bool _PrintMedUnloadFlag;
		
		private bool _PrintMedEmptyReturnBinFlag;
		
		private bool _PrintMedReturnFlag;
		
		private bool _PrintMedRemoveFlag;
		
		private bool _PrintMedDisposeFlag;
		
		private bool _PrintMedDestockFlag;
		
		private bool _PrintMedRxCheckFlag;
		
		private bool _PrintMedLoadRefillFlag;
		
		private string _CriticalLowNoticePrinterName;
		
		private string _StockOutNoticePrinterName;
		
		private bool _ShowPreadmissionFlag;
		
		private bool _ShowRecurringAdmissionFlag;
		
		private short _PreadmissionLeadDurationAmount;
		
		private short _PreadmissionProlongedInactivityDurationAmount;
		
		private short _AdmissionProlongedInactivityDurationAmount;
		
		private short _DischargeDelayDurationAmount;
		
		private short _TransferDelayDurationAmount;
		
		private short _LeaveOfAbsenceDelayDurationAmount;
		
		private System.Nullable<System.Guid> _ReplenishmentAreaKey;
		
		private System.Nullable<System.Guid> _VirtualStockLocationKey;
		
		private bool _RxCheckFlag;
		
		private bool _AutoMedLabelFlag;
		
		private bool _SyncUploadAllowSkipFlag;
		
		private bool _SyncAllowDownloadOnUploadFailureFlag;
		
		private short _SyncUploadMaximumRetryQuantity;
		
		private short _SyncUploadRetryIntervalAmount;
		
		private string _WasteModeInternalCode;
		
		private short _FutureTaskWarningDurationAmount;
		
		private bool _PrintPatientLabelRemoveFlag;
		
		private bool _PharmacyOrderDispenseQuantityFlag;
		
		private string _CardExemptInternalCode;
		
		private bool _UseEquivalenciesFlag;
		
		private bool _GrabScanFlag;
		
		private bool _ReceiveBarcodeInventoryDecrementExternalFlag;
		
		private string _ExternalSystemDeviceHostValue;
		
		private System.Nullable<int> _ExternalSystemDevicePortNumber;
		
		private string _ExternalSystemDeviceAdminUserPasswordValue;
		
		private System.Nullable<short> _ExternalSystemDeviceCommandTimeoutDurationAmount;
		
		private System.Nullable<short> _OpenBinTimeoutDurationAmount;
		
		private System.Nullable<int> _BarcodeReceiverDevicePortNumber;
		
		private System.Nullable<System.Guid> _ControlledSubstanceLicenseKey;
		
		private bool _DisplayPatientPreferredNameFlag;
		
		private short _GCSMDestructionBinTimeOutDurationAmount;
		
		private bool _GCSMScanOnCompoundingFlag;
		
		private bool _GCSMScanOnLoadFlag;
		
		private bool _GCSMScanOnIssueFlag;
		
		private bool _GCSMScanOnPrescriptionFlag;
		
		private bool _GCSMScanOnReceiveFlag;
		
		private bool _GCSMScanOnRestockADMFlag;
		
		private bool _GCSMScanOnReturnFlag;
		
		private bool _GCSMScanOnSellFlag;
		
		private bool _GCSMScanOnStockTransferFlag;
		
		private bool _GCSMWitnessOnCompoundingFlag;
		
		private bool _GCSMWitnessOnEmptyDestructionBinFlag;
		
		private bool _GCSMWitnessOnInventoryFlag;
		
		private bool _GCSMWitnessOnIssueFlag;
		
		private bool _GCSMWitnessOnOutdateFlag;
		
		private bool _GCSMWitnessOnPrescriptionFlag;
		
		private bool _GCSMWitnessOnRecallFlag;
		
		private bool _GCSMWitnessOnReceiveFlag;
		
		private bool _GCSMWitnessOnRestockADMFlag;
		
		private bool _GCSMWitnessOnReturnFlag;
		
		private bool _GCSMWitnessOnReverseCompoundingFlag;
		
		private bool _GCSMWitnessOnSellFlag;
		
		private bool _GCSMWitnessOnStockTransferFlag;
		
		private bool _GCSMWitnessOnUnloadFlag;
		
		private bool _GCSMWitnessOnWasteFlag;
		
		private bool _GCSMWitnessOnceDispenseFlag;
		
		private bool _GCSMWitnessOnceInventoryFlag;
		
		private bool _GCSMWitnessOnRecoverFlag;
		
		private bool _GCSMBlindCountFlag;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private bool _GCSMWitnessOnAccessToDestructionBinFlag;
		
		private bool _GCSMWitnessOnAddToDestructionBinFlag;
		
		private bool _GCSMPrintReceiptOnAccessDestructionBinFlag;
		
		private bool _GCSMPrintReceiptOnDiscrepancyResolutionFlag;
		
		private bool _GCSMPrintReceiptOnEmptyDestructionBinFlag;
		
		private bool _GCSMPrintReceiptOnFillPrescriptionFlag;
		
		private bool _GCSMPrintReceiptOnManageStockFlag;
		
		private bool _GCSMPrintReceiptOnNonStandardCompoundRecordFlag;
		
		private bool _GCSMPrintReceiptOnOutdateFlag;
		
		private bool _GCSMPrintReceiptOnPendingStandardCompoundRecordFlag;
		
		private bool _GCSMPrintReceiptOnRecallFlag;
		
		private bool _GCSMPrintReceiptOnReceiveFlag;
		
		private bool _GCSMPrintReceiptOnReturnFlag;
		
		private bool _GCSMPrintReceiptOnReverseNonStandardCompoundFlag;
		
		private bool _GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag;
		
		private bool _GCSMPrintReceiptOnSellFlag;
		
		private bool _GCSMPrintReceiptOnUnloadFlag;
		
		private bool _GCSMPrintReceiptOnWasteFlag;
		
		private bool _GCSMPrintLabelOnAccessDestructionBinFlag;
		
		private bool _GCSMPrintLabelOnFillPrescriptionFlag;
		
		private bool _GCSMPrintLabelOnNonStandardCompoundIngredientFlag;
		
		private bool _GCSMPrintLabelOnNonStandardCompoundMedFlag;
		
		private bool _GCSMPrintLabelOnOutdateFlag;
		
		private bool _GCSMPrintLabelOnRecallFlag;
		
		private bool _GCSMPrintLabelOnReturnFlag;
		
		private bool _GCSMPrintLabelOnSellFlag;
		
		private bool _GCSMPrintLabelOnStandardCompoundMedFlag;
		
		private bool _GCSMPrintLabelOnStandardCompoundIngredientFlag;
		
		private bool _GCSMPrintLabelOnWasteFlag;
		
		private bool _GCSMPrintPullListOnAutorestockFlag;
		
		private bool _GCSMPrintPullListOnDispenseToLocationFlag;
		
		private bool _GCSMPrintPullListOnKitFlag;
		
		private bool _GCSMPrintPullListOnKitComponentFlag;
		
		private bool _GCSMPrintPullListOnManageExcessStockFlag;
		
		private bool _GCSMPrintPullListOnNonStandardCompoundFlag;
		
		private bool _GCSMPrintPullListOnNonStandardCompoundIngredientFlag;
		
		private bool _GCSMPrintPullListOnStandardCompoundFlag;
		
		private bool _GCSMPrintPullListOnStandardCompoundIngredientFlag;
		
		private bool _GCSMHideAreaFilterFlag;
		
		private bool _GCSMHideZoneFilterFlag;
		
		private string _GCSMCompareReportStandardRangeInternalCode;
		
		private System.Nullable<System.Guid> _GCSMOriginDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _GCSMDestinationDispensingDeviceKey;
		
		private bool _GCSMCompareReportViewFilterFocusedFlag;
		
		private EntitySet<DispensingDeviceStorageSpaceEntity> _DispensingDeviceStorageSpaceEntities;
		
		private EntitySet<DispensingDeviceOverrideGroupEntity> _DispensingDeviceOverrideGroupEntities;
		
		private EntitySet<CriticalOverridePeriodEntity> _CriticalOverridePeriodEntities;
		
		private EntitySet<DispensingDeviceUnitRoomEntity> _DispensingDeviceUnitRoomEntities;
		
		private EntitySet<DispensingDeviceSystemBusDeviceEntity> _DispensingDeviceSystemBusDeviceEntities;
		
		private EntitySet<DispensingDeviceCriticalOverrideModeReasonEntity> _DispensingDeviceCriticalOverrideModeReasonEntities;
		
		private EntityRef<ZoneEntity> _ZoneEntity;
		
		private EntityRef<DispensingDeviceTypeEntity> _DispensingDeviceTypeEntity;
		
		private EntityRef<VirtualStockLocationEntity> _VirtualStockLocationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDispensingDeviceSnapshotKeyChanging(System.Guid value);
    partial void OnDispensingDeviceSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnLastServerCommunicationUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastServerCommunicationUTCDateTimeChanged();
    partial void OnLastServerCommunicationLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastServerCommunicationLocalDateTimeChanged();
    partial void OnSyncUploadFailureUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSyncUploadFailureUTCDateTimeChanged();
    partial void OnSyncUploadFailureLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSyncUploadFailureLocalDateTimeChanged();
    partial void OnSyncDownloadFailureUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSyncDownloadFailureUTCDateTimeChanged();
    partial void OnSyncDownloadFailureLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSyncDownloadFailureLocalDateTimeChanged();
    partial void OnSyncInRetryModeUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSyncInRetryModeUTCDateTimeChanged();
    partial void OnSyncInRetryModeLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSyncInRetryModeLocalDateTimeChanged();
    partial void OnLastUploadTickValueChanging(System.Data.Linq.Binary value);
    partial void OnLastUploadTickValueChanged();
    partial void OnLastDownloadTickValueChanging(System.Data.Linq.Binary value);
    partial void OnLastDownloadTickValueChanged();
    partial void OnLastUploadChangeTrackingValueChanging(System.Nullable<long> value);
    partial void OnLastUploadChangeTrackingValueChanged();
    partial void OnLastDownloadChangeTrackingValueChanging(System.Nullable<long> value);
    partial void OnLastDownloadChangeTrackingValueChanged();
    partial void OnLastSuccessfulUploadUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSuccessfulUploadUTCDateTimeChanged();
    partial void OnLastSuccessfulUploadLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSuccessfulUploadLocalDateTimeChanged();
    partial void OnLastSuccessfulDownloadUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSuccessfulDownloadUTCDateTimeChanged();
    partial void OnLastSuccessfulDownloadLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSuccessfulDownloadLocalDateTimeChanged();
    partial void OnIPAddressValueChanging(string value);
    partial void OnIPAddressValueChanged();
    partial void OnSyncDownloadStatusInternalCodeChanging(string value);
    partial void OnSyncDownloadStatusInternalCodeChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnDispensingDeviceNameChanging(string value);
    partial void OnDispensingDeviceNameChanged();
    partial void OnDispensingDeviceTypeInternalCodeChanging(string value);
    partial void OnDispensingDeviceTypeInternalCodeChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnServerAddressValueChanging(string value);
    partial void OnServerAddressValueChanged();
    partial void OnSyncServerKeyChanging(System.Nullable<System.Guid> value);
    partial void OnSyncServerKeyChanged();
    partial void OnAuthenticationMethodInternalCodeChanging(string value);
    partial void OnAuthenticationMethodInternalCodeChanged();
    partial void OnBioIDExemptInternalCodeChanging(string value);
    partial void OnBioIDExemptInternalCodeChanged();
    partial void OnUserScanModeInternalCodeChanging(string value);
    partial void OnUserScanModeInternalCodeChanged();
    partial void OnZoneKeyChanging(System.Nullable<System.Guid> value);
    partial void OnZoneKeyChanged();
    partial void OnOutOfServiceFlagChanging(bool value);
    partial void OnOutOfServiceFlagChanged();
    partial void OnProfileModeFlagChanging(bool value);
    partial void OnProfileModeFlagChanged();
    partial void OnMenuTimeOutDurationAmountChanging(short value);
    partial void OnMenuTimeOutDurationAmountChanged();
    partial void OnOpenDrawerTimeOutDurationAmountChanging(short value);
    partial void OnOpenDrawerTimeOutDurationAmountChanged();
    partial void OnEmptyReturnBinTimeOutDurationAmountChanging(short value);
    partial void OnEmptyReturnBinTimeOutDurationAmountChanged();
    partial void OnInventoryDrawerMapTimeOutDurationAmountChanging(short value);
    partial void OnInventoryDrawerMapTimeOutDurationAmountChanged();
    partial void OnAnesthesiaTimeOutDurationAmountChanging(short value);
    partial void OnAnesthesiaTimeOutDurationAmountChanged();
    partial void OnReverificationTimeOutDurationAmountChanging(short value);
    partial void OnReverificationTimeOutDurationAmountChanged();
    partial void OnAnesthesiaSwitchUserFlagChanging(bool value);
    partial void OnAnesthesiaSwitchUserFlagChanged();
    partial void OnAnesthesiaSwitchUserDurationAmountChanging(System.Nullable<short> value);
    partial void OnAnesthesiaSwitchUserDurationAmountChanged();
    partial void OnPatientCaseTransactionHoldDurationAmountChanging(short value);
    partial void OnPatientCaseTransactionHoldDurationAmountChanged();
    partial void OnAccessInventoryFeatureOffFlagChanging(bool value);
    partial void OnAccessInventoryFeatureOffFlagChanged();
    partial void OnTemporaryNonProfileModeFlagChanging(bool value);
    partial void OnTemporaryNonProfileModeFlagChanged();
    partial void OnRemoveBeforeOrderStartDurationAmountChanging(System.Nullable<short> value);
    partial void OnRemoveBeforeOrderStartDurationAmountChanged();
    partial void OnRemoveAfterOrderExpiredDurationAmountChanging(System.Nullable<short> value);
    partial void OnRemoveAfterOrderExpiredDurationAmountChanged();
    partial void OnBeforeMedDueNowDurationAmountChanging(short value);
    partial void OnBeforeMedDueNowDurationAmountChanged();
    partial void OnAfterMedDueNowDurationAmountChanging(short value);
    partial void OnAfterMedDueNowDurationAmountChanged();
    partial void OnOverrideReasonRequiredFlagChanging(bool value);
    partial void OnOverrideReasonRequiredFlagChanged();
    partial void OnTooCloseWarningFlagChanging(bool value);
    partial void OnTooCloseWarningFlagChanged();
    partial void OnPatientSpecificFunctionalityFlagChanging(bool value);
    partial void OnPatientSpecificFunctionalityFlagChanged();
    partial void OnWitnessOnDispenseFlagChanging(bool value);
    partial void OnWitnessOnDispenseFlagChanged();
    partial void OnWitnessOnReturnFlagChanging(bool value);
    partial void OnWitnessOnReturnFlagChanged();
    partial void OnWitnessOnDisposeFlagChanging(bool value);
    partial void OnWitnessOnDisposeFlagChanged();
    partial void OnWitnessOnLoadRefillFlagChanging(bool value);
    partial void OnWitnessOnLoadRefillFlagChanged();
    partial void OnWitnessOnUnloadFlagChanging(bool value);
    partial void OnWitnessOnUnloadFlagChanged();
    partial void OnWitnessOnOverrideFlagChanging(bool value);
    partial void OnWitnessOnOverrideFlagChanged();
    partial void OnWitnessOnOutdateFlagChanging(bool value);
    partial void OnWitnessOnOutdateFlagChanged();
    partial void OnWitnessOnInventoryFlagChanging(bool value);
    partial void OnWitnessOnInventoryFlagChanged();
    partial void OnWitnessOnEmptyReturnBinFlagChanging(bool value);
    partial void OnWitnessOnEmptyReturnBinFlagChanged();
    partial void OnWitnessOnDestockFlagChanging(bool value);
    partial void OnWitnessOnDestockFlagChanged();
    partial void OnWitnessOnRxCheckFlagChanging(bool value);
    partial void OnWitnessOnRxCheckFlagChanged();
    partial void OnWitnessOnCUBIEEjectFlagChanging(bool value);
    partial void OnWitnessOnCUBIEEjectFlagChanged();
    partial void OnScanOnLoadRefillFlagChanging(bool value);
    partial void OnScanOnLoadRefillFlagChanged();
    partial void OnScanOnRemoveFlagChanging(bool value);
    partial void OnScanOnRemoveFlagChanged();
    partial void OnScanOnReturnFlagChanging(bool value);
    partial void OnScanOnReturnFlagChanged();
    partial void OnRequireLotIDOnRemoveFlagChanging(bool value);
    partial void OnRequireLotIDOnRemoveFlagChanged();
    partial void OnRequireLotIDOnReturnFlagChanging(bool value);
    partial void OnRequireLotIDOnReturnFlagChanged();
    partial void OnRequireSerialIDOnRemoveFlagChanging(bool value);
    partial void OnRequireSerialIDOnRemoveFlagChanged();
    partial void OnRequireSerialIDOnReturnFlagChanging(bool value);
    partial void OnRequireSerialIDOnReturnFlagChanged();
    partial void OnRequireExpirationDateOnRemoveFlagChanging(bool value);
    partial void OnRequireExpirationDateOnRemoveFlagChanged();
    partial void OnRequireExpirationDateOnReturnFlagChanging(bool value);
    partial void OnRequireExpirationDateOnReturnFlagChanged();
    partial void OnCriticalOverrideFlagChanging(bool value);
    partial void OnCriticalOverrideFlagChanged();
    partial void OnAutoCriticalOverrideDurationAmountChanging(System.Nullable<short> value);
    partial void OnAutoCriticalOverrideDurationAmountChanged();
    partial void OnBlindCountFlagChanging(bool value);
    partial void OnBlindCountFlagChanged();
    partial void OnOutdateTrackingFlagChanging(bool value);
    partial void OnOutdateTrackingFlagChanged();
    partial void OnReturnToStockFlagChanging(bool value);
    partial void OnReturnToStockFlagChanged();
    partial void OnUpgradeTimeOfDayValueChanging(short value);
    partial void OnUpgradeTimeOfDayValueChanged();
    partial void OnManualUpgradeFlagChanging(bool value);
    partial void OnManualUpgradeFlagChanged();
    partial void OnDefaultGlobalPatientSearchFlagChanging(bool value);
    partial void OnDefaultGlobalPatientSearchFlagChanged();
    partial void OnPrintMedOutdateFlagChanging(bool value);
    partial void OnPrintMedOutdateFlagChanged();
    partial void OnPrintMedUnloadFlagChanging(bool value);
    partial void OnPrintMedUnloadFlagChanged();
    partial void OnPrintMedEmptyReturnBinFlagChanging(bool value);
    partial void OnPrintMedEmptyReturnBinFlagChanged();
    partial void OnPrintMedReturnFlagChanging(bool value);
    partial void OnPrintMedReturnFlagChanged();
    partial void OnPrintMedRemoveFlagChanging(bool value);
    partial void OnPrintMedRemoveFlagChanged();
    partial void OnPrintMedDisposeFlagChanging(bool value);
    partial void OnPrintMedDisposeFlagChanged();
    partial void OnPrintMedDestockFlagChanging(bool value);
    partial void OnPrintMedDestockFlagChanged();
    partial void OnPrintMedRxCheckFlagChanging(bool value);
    partial void OnPrintMedRxCheckFlagChanged();
    partial void OnPrintMedLoadRefillFlagChanging(bool value);
    partial void OnPrintMedLoadRefillFlagChanged();
    partial void OnCriticalLowNoticePrinterNameChanging(string value);
    partial void OnCriticalLowNoticePrinterNameChanged();
    partial void OnStockOutNoticePrinterNameChanging(string value);
    partial void OnStockOutNoticePrinterNameChanged();
    partial void OnShowPreadmissionFlagChanging(bool value);
    partial void OnShowPreadmissionFlagChanged();
    partial void OnShowRecurringAdmissionFlagChanging(bool value);
    partial void OnShowRecurringAdmissionFlagChanged();
    partial void OnPreadmissionLeadDurationAmountChanging(short value);
    partial void OnPreadmissionLeadDurationAmountChanged();
    partial void OnPreadmissionProlongedInactivityDurationAmountChanging(short value);
    partial void OnPreadmissionProlongedInactivityDurationAmountChanged();
    partial void OnAdmissionProlongedInactivityDurationAmountChanging(short value);
    partial void OnAdmissionProlongedInactivityDurationAmountChanged();
    partial void OnDischargeDelayDurationAmountChanging(short value);
    partial void OnDischargeDelayDurationAmountChanged();
    partial void OnTransferDelayDurationAmountChanging(short value);
    partial void OnTransferDelayDurationAmountChanged();
    partial void OnLeaveOfAbsenceDelayDurationAmountChanging(short value);
    partial void OnLeaveOfAbsenceDelayDurationAmountChanged();
    partial void OnReplenishmentAreaKeyChanging(System.Nullable<System.Guid> value);
    partial void OnReplenishmentAreaKeyChanged();
    partial void OnVirtualStockLocationKeyChanging(System.Nullable<System.Guid> value);
    partial void OnVirtualStockLocationKeyChanged();
    partial void OnRxCheckFlagChanging(bool value);
    partial void OnRxCheckFlagChanged();
    partial void OnAutoMedLabelFlagChanging(bool value);
    partial void OnAutoMedLabelFlagChanged();
    partial void OnSyncUploadAllowSkipFlagChanging(bool value);
    partial void OnSyncUploadAllowSkipFlagChanged();
    partial void OnSyncAllowDownloadOnUploadFailureFlagChanging(bool value);
    partial void OnSyncAllowDownloadOnUploadFailureFlagChanged();
    partial void OnSyncUploadMaximumRetryQuantityChanging(short value);
    partial void OnSyncUploadMaximumRetryQuantityChanged();
    partial void OnSyncUploadRetryIntervalAmountChanging(short value);
    partial void OnSyncUploadRetryIntervalAmountChanged();
    partial void OnWasteModeInternalCodeChanging(string value);
    partial void OnWasteModeInternalCodeChanged();
    partial void OnFutureTaskWarningDurationAmountChanging(short value);
    partial void OnFutureTaskWarningDurationAmountChanged();
    partial void OnPrintPatientLabelRemoveFlagChanging(bool value);
    partial void OnPrintPatientLabelRemoveFlagChanged();
    partial void OnPharmacyOrderDispenseQuantityFlagChanging(bool value);
    partial void OnPharmacyOrderDispenseQuantityFlagChanged();
    partial void OnCardExemptInternalCodeChanging(string value);
    partial void OnCardExemptInternalCodeChanged();
    partial void OnUseEquivalenciesFlagChanging(bool value);
    partial void OnUseEquivalenciesFlagChanged();
    partial void OnGrabScanFlagChanging(bool value);
    partial void OnGrabScanFlagChanged();
    partial void OnReceiveBarcodeInventoryDecrementExternalFlagChanging(bool value);
    partial void OnReceiveBarcodeInventoryDecrementExternalFlagChanged();
    partial void OnExternalSystemDeviceHostValueChanging(string value);
    partial void OnExternalSystemDeviceHostValueChanged();
    partial void OnExternalSystemDevicePortNumberChanging(System.Nullable<int> value);
    partial void OnExternalSystemDevicePortNumberChanged();
    partial void OnExternalSystemDeviceAdminUserPasswordValueChanging(string value);
    partial void OnExternalSystemDeviceAdminUserPasswordValueChanged();
    partial void OnExternalSystemDeviceCommandTimeoutDurationAmountChanging(System.Nullable<short> value);
    partial void OnExternalSystemDeviceCommandTimeoutDurationAmountChanged();
    partial void OnOpenBinTimeoutDurationAmountChanging(System.Nullable<short> value);
    partial void OnOpenBinTimeoutDurationAmountChanged();
    partial void OnBarcodeReceiverDevicePortNumberChanging(System.Nullable<int> value);
    partial void OnBarcodeReceiverDevicePortNumberChanged();
    partial void OnControlledSubstanceLicenseKeyChanging(System.Nullable<System.Guid> value);
    partial void OnControlledSubstanceLicenseKeyChanged();
    partial void OnDisplayPatientPreferredNameFlagChanging(bool value);
    partial void OnDisplayPatientPreferredNameFlagChanged();
    partial void OnGCSMDestructionBinTimeOutDurationAmountChanging(short value);
    partial void OnGCSMDestructionBinTimeOutDurationAmountChanged();
    partial void OnGCSMScanOnCompoundingFlagChanging(bool value);
    partial void OnGCSMScanOnCompoundingFlagChanged();
    partial void OnGCSMScanOnLoadFlagChanging(bool value);
    partial void OnGCSMScanOnLoadFlagChanged();
    partial void OnGCSMScanOnIssueFlagChanging(bool value);
    partial void OnGCSMScanOnIssueFlagChanged();
    partial void OnGCSMScanOnPrescriptionFlagChanging(bool value);
    partial void OnGCSMScanOnPrescriptionFlagChanged();
    partial void OnGCSMScanOnReceiveFlagChanging(bool value);
    partial void OnGCSMScanOnReceiveFlagChanged();
    partial void OnGCSMScanOnRestockADMFlagChanging(bool value);
    partial void OnGCSMScanOnRestockADMFlagChanged();
    partial void OnGCSMScanOnReturnFlagChanging(bool value);
    partial void OnGCSMScanOnReturnFlagChanged();
    partial void OnGCSMScanOnSellFlagChanging(bool value);
    partial void OnGCSMScanOnSellFlagChanged();
    partial void OnGCSMScanOnStockTransferFlagChanging(bool value);
    partial void OnGCSMScanOnStockTransferFlagChanged();
    partial void OnGCSMWitnessOnCompoundingFlagChanging(bool value);
    partial void OnGCSMWitnessOnCompoundingFlagChanged();
    partial void OnGCSMWitnessOnEmptyDestructionBinFlagChanging(bool value);
    partial void OnGCSMWitnessOnEmptyDestructionBinFlagChanged();
    partial void OnGCSMWitnessOnInventoryFlagChanging(bool value);
    partial void OnGCSMWitnessOnInventoryFlagChanged();
    partial void OnGCSMWitnessOnIssueFlagChanging(bool value);
    partial void OnGCSMWitnessOnIssueFlagChanged();
    partial void OnGCSMWitnessOnOutdateFlagChanging(bool value);
    partial void OnGCSMWitnessOnOutdateFlagChanged();
    partial void OnGCSMWitnessOnPrescriptionFlagChanging(bool value);
    partial void OnGCSMWitnessOnPrescriptionFlagChanged();
    partial void OnGCSMWitnessOnRecallFlagChanging(bool value);
    partial void OnGCSMWitnessOnRecallFlagChanged();
    partial void OnGCSMWitnessOnReceiveFlagChanging(bool value);
    partial void OnGCSMWitnessOnReceiveFlagChanged();
    partial void OnGCSMWitnessOnRestockADMFlagChanging(bool value);
    partial void OnGCSMWitnessOnRestockADMFlagChanged();
    partial void OnGCSMWitnessOnReturnFlagChanging(bool value);
    partial void OnGCSMWitnessOnReturnFlagChanged();
    partial void OnGCSMWitnessOnReverseCompoundingFlagChanging(bool value);
    partial void OnGCSMWitnessOnReverseCompoundingFlagChanged();
    partial void OnGCSMWitnessOnSellFlagChanging(bool value);
    partial void OnGCSMWitnessOnSellFlagChanged();
    partial void OnGCSMWitnessOnStockTransferFlagChanging(bool value);
    partial void OnGCSMWitnessOnStockTransferFlagChanged();
    partial void OnGCSMWitnessOnUnloadFlagChanging(bool value);
    partial void OnGCSMWitnessOnUnloadFlagChanged();
    partial void OnGCSMWitnessOnWasteFlagChanging(bool value);
    partial void OnGCSMWitnessOnWasteFlagChanged();
    partial void OnGCSMWitnessOnceDispenseFlagChanging(bool value);
    partial void OnGCSMWitnessOnceDispenseFlagChanged();
    partial void OnGCSMWitnessOnceInventoryFlagChanging(bool value);
    partial void OnGCSMWitnessOnceInventoryFlagChanged();
    partial void OnGCSMWitnessOnRecoverFlagChanging(bool value);
    partial void OnGCSMWitnessOnRecoverFlagChanged();
    partial void OnGCSMBlindCountFlagChanging(bool value);
    partial void OnGCSMBlindCountFlagChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnGCSMWitnessOnAccessToDestructionBinFlagChanging(bool value);
    partial void OnGCSMWitnessOnAccessToDestructionBinFlagChanged();
    partial void OnGCSMWitnessOnAddToDestructionBinFlagChanging(bool value);
    partial void OnGCSMWitnessOnAddToDestructionBinFlagChanged();
    partial void OnGCSMPrintReceiptOnAccessDestructionBinFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnAccessDestructionBinFlagChanged();
    partial void OnGCSMPrintReceiptOnDiscrepancyResolutionFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnDiscrepancyResolutionFlagChanged();
    partial void OnGCSMPrintReceiptOnEmptyDestructionBinFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnEmptyDestructionBinFlagChanged();
    partial void OnGCSMPrintReceiptOnFillPrescriptionFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnFillPrescriptionFlagChanged();
    partial void OnGCSMPrintReceiptOnManageStockFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnManageStockFlagChanged();
    partial void OnGCSMPrintReceiptOnNonStandardCompoundRecordFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnNonStandardCompoundRecordFlagChanged();
    partial void OnGCSMPrintReceiptOnOutdateFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnOutdateFlagChanged();
    partial void OnGCSMPrintReceiptOnPendingStandardCompoundRecordFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnPendingStandardCompoundRecordFlagChanged();
    partial void OnGCSMPrintReceiptOnRecallFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnRecallFlagChanged();
    partial void OnGCSMPrintReceiptOnReceiveFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnReceiveFlagChanged();
    partial void OnGCSMPrintReceiptOnReturnFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnReturnFlagChanged();
    partial void OnGCSMPrintReceiptOnReverseNonStandardCompoundFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnReverseNonStandardCompoundFlagChanged();
    partial void OnGCSMPrintReceiptOnStandardCompoundDispositionSummaryFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnStandardCompoundDispositionSummaryFlagChanged();
    partial void OnGCSMPrintReceiptOnSellFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnSellFlagChanged();
    partial void OnGCSMPrintReceiptOnUnloadFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnUnloadFlagChanged();
    partial void OnGCSMPrintReceiptOnWasteFlagChanging(bool value);
    partial void OnGCSMPrintReceiptOnWasteFlagChanged();
    partial void OnGCSMPrintLabelOnAccessDestructionBinFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnAccessDestructionBinFlagChanged();
    partial void OnGCSMPrintLabelOnFillPrescriptionFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnFillPrescriptionFlagChanged();
    partial void OnGCSMPrintLabelOnNonStandardCompoundIngredientFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnNonStandardCompoundIngredientFlagChanged();
    partial void OnGCSMPrintLabelOnNonStandardCompoundMedFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnNonStandardCompoundMedFlagChanged();
    partial void OnGCSMPrintLabelOnOutdateFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnOutdateFlagChanged();
    partial void OnGCSMPrintLabelOnRecallFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnRecallFlagChanged();
    partial void OnGCSMPrintLabelOnReturnFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnReturnFlagChanged();
    partial void OnGCSMPrintLabelOnSellFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnSellFlagChanged();
    partial void OnGCSMPrintLabelOnStandardCompoundMedFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnStandardCompoundMedFlagChanged();
    partial void OnGCSMPrintLabelOnStandardCompoundIngredientFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnStandardCompoundIngredientFlagChanged();
    partial void OnGCSMPrintLabelOnWasteFlagChanging(bool value);
    partial void OnGCSMPrintLabelOnWasteFlagChanged();
    partial void OnGCSMPrintPullListOnAutorestockFlagChanging(bool value);
    partial void OnGCSMPrintPullListOnAutorestockFlagChanged();
    partial void OnGCSMPrintPullListOnDispenseToLocationFlagChanging(bool value);
    partial void OnGCSMPrintPullListOnDispenseToLocationFlagChanged();
    partial void OnGCSMPrintPullListOnKitFlagChanging(bool value);
    partial void OnGCSMPrintPullListOnKitFlagChanged();
    partial void OnGCSMPrintPullListOnKitComponentFlagChanging(bool value);
    partial void OnGCSMPrintPullListOnKitComponentFlagChanged();
    partial void OnGCSMPrintPullListOnManageExcessStockFlagChanging(bool value);
    partial void OnGCSMPrintPullListOnManageExcessStockFlagChanged();
    partial void OnGCSMPrintPullListOnNonStandardCompoundFlagChanging(bool value);
    partial void OnGCSMPrintPullListOnNonStandardCompoundFlagChanged();
    partial void OnGCSMPrintPullListOnNonStandardCompoundIngredientFlagChanging(bool value);
    partial void OnGCSMPrintPullListOnNonStandardCompoundIngredientFlagChanged();
    partial void OnGCSMPrintPullListOnStandardCompoundFlagChanging(bool value);
    partial void OnGCSMPrintPullListOnStandardCompoundFlagChanged();
    partial void OnGCSMPrintPullListOnStandardCompoundIngredientFlagChanging(bool value);
    partial void OnGCSMPrintPullListOnStandardCompoundIngredientFlagChanged();
    partial void OnGCSMHideAreaFilterFlagChanging(bool value);
    partial void OnGCSMHideAreaFilterFlagChanged();
    partial void OnGCSMHideZoneFilterFlagChanging(bool value);
    partial void OnGCSMHideZoneFilterFlagChanged();
    partial void OnGCSMCompareReportStandardRangeInternalCodeChanging(string value);
    partial void OnGCSMCompareReportStandardRangeInternalCodeChanged();
    partial void OnGCSMOriginDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnGCSMOriginDispensingDeviceKeyChanged();
    partial void OnGCSMDestinationDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnGCSMDestinationDispensingDeviceKeyChanged();
    partial void OnGCSMCompareReportViewFilterFocusedFlagChanging(bool value);
    partial void OnGCSMCompareReportViewFilterFocusedFlagChanged();
    #endregion
		
		public DispensingDeviceEntity()
		{
			this._DispensingDeviceStorageSpaceEntities = new EntitySet<DispensingDeviceStorageSpaceEntity>(new Action<DispensingDeviceStorageSpaceEntity>(this.attach_DispensingDeviceStorageSpaceEntities), new Action<DispensingDeviceStorageSpaceEntity>(this.detach_DispensingDeviceStorageSpaceEntities));
			this._DispensingDeviceOverrideGroupEntities = new EntitySet<DispensingDeviceOverrideGroupEntity>(new Action<DispensingDeviceOverrideGroupEntity>(this.attach_DispensingDeviceOverrideGroupEntities), new Action<DispensingDeviceOverrideGroupEntity>(this.detach_DispensingDeviceOverrideGroupEntities));
			this._CriticalOverridePeriodEntities = new EntitySet<CriticalOverridePeriodEntity>(new Action<CriticalOverridePeriodEntity>(this.attach_CriticalOverridePeriodEntities), new Action<CriticalOverridePeriodEntity>(this.detach_CriticalOverridePeriodEntities));
			this._DispensingDeviceUnitRoomEntities = new EntitySet<DispensingDeviceUnitRoomEntity>(new Action<DispensingDeviceUnitRoomEntity>(this.attach_DispensingDeviceUnitRoomEntities), new Action<DispensingDeviceUnitRoomEntity>(this.detach_DispensingDeviceUnitRoomEntities));
			this._DispensingDeviceSystemBusDeviceEntities = new EntitySet<DispensingDeviceSystemBusDeviceEntity>(new Action<DispensingDeviceSystemBusDeviceEntity>(this.attach_DispensingDeviceSystemBusDeviceEntities), new Action<DispensingDeviceSystemBusDeviceEntity>(this.detach_DispensingDeviceSystemBusDeviceEntities));
			this._DispensingDeviceCriticalOverrideModeReasonEntities = new EntitySet<DispensingDeviceCriticalOverrideModeReasonEntity>(new Action<DispensingDeviceCriticalOverrideModeReasonEntity>(this.attach_DispensingDeviceCriticalOverrideModeReasonEntities), new Action<DispensingDeviceCriticalOverrideModeReasonEntity>(this.detach_DispensingDeviceCriticalOverrideModeReasonEntities));
			this._ZoneEntity = default(EntityRef<ZoneEntity>);
			this._DispensingDeviceTypeEntity = default(EntityRef<DispensingDeviceTypeEntity>);
			this._VirtualStockLocationEntity = default(EntityRef<VirtualStockLocationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DispensingDeviceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceSnapshotKey
		{
			get
			{
				return this._DispensingDeviceSnapshotKey;
			}
			set
			{
				if ((this._DispensingDeviceSnapshotKey != value))
				{
					this.OnDispensingDeviceSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceSnapshotKey = value;
					this.SendPropertyChanged("DispensingDeviceSnapshotKey");
					this.OnDispensingDeviceSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastServerCommunicationUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastServerCommunicationUTCDateTime
		{
			get
			{
				return this._LastServerCommunicationUTCDateTime;
			}
			set
			{
				if ((this._LastServerCommunicationUTCDateTime != value))
				{
					this.OnLastServerCommunicationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastServerCommunicationUTCDateTime = value;
					this.SendPropertyChanged("LastServerCommunicationUTCDateTime");
					this.OnLastServerCommunicationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastServerCommunicationLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastServerCommunicationLocalDateTime
		{
			get
			{
				return this._LastServerCommunicationLocalDateTime;
			}
			set
			{
				if ((this._LastServerCommunicationLocalDateTime != value))
				{
					this.OnLastServerCommunicationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastServerCommunicationLocalDateTime = value;
					this.SendPropertyChanged("LastServerCommunicationLocalDateTime");
					this.OnLastServerCommunicationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncUploadFailureUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> SyncUploadFailureUTCDateTime
		{
			get
			{
				return this._SyncUploadFailureUTCDateTime;
			}
			set
			{
				if ((this._SyncUploadFailureUTCDateTime != value))
				{
					this.OnSyncUploadFailureUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SyncUploadFailureUTCDateTime = value;
					this.SendPropertyChanged("SyncUploadFailureUTCDateTime");
					this.OnSyncUploadFailureUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncUploadFailureLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> SyncUploadFailureLocalDateTime
		{
			get
			{
				return this._SyncUploadFailureLocalDateTime;
			}
			set
			{
				if ((this._SyncUploadFailureLocalDateTime != value))
				{
					this.OnSyncUploadFailureLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SyncUploadFailureLocalDateTime = value;
					this.SendPropertyChanged("SyncUploadFailureLocalDateTime");
					this.OnSyncUploadFailureLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncDownloadFailureUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> SyncDownloadFailureUTCDateTime
		{
			get
			{
				return this._SyncDownloadFailureUTCDateTime;
			}
			set
			{
				if ((this._SyncDownloadFailureUTCDateTime != value))
				{
					this.OnSyncDownloadFailureUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SyncDownloadFailureUTCDateTime = value;
					this.SendPropertyChanged("SyncDownloadFailureUTCDateTime");
					this.OnSyncDownloadFailureUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncDownloadFailureLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> SyncDownloadFailureLocalDateTime
		{
			get
			{
				return this._SyncDownloadFailureLocalDateTime;
			}
			set
			{
				if ((this._SyncDownloadFailureLocalDateTime != value))
				{
					this.OnSyncDownloadFailureLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SyncDownloadFailureLocalDateTime = value;
					this.SendPropertyChanged("SyncDownloadFailureLocalDateTime");
					this.OnSyncDownloadFailureLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncInRetryModeUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> SyncInRetryModeUTCDateTime
		{
			get
			{
				return this._SyncInRetryModeUTCDateTime;
			}
			set
			{
				if ((this._SyncInRetryModeUTCDateTime != value))
				{
					this.OnSyncInRetryModeUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SyncInRetryModeUTCDateTime = value;
					this.SendPropertyChanged("SyncInRetryModeUTCDateTime");
					this.OnSyncInRetryModeUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncInRetryModeLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> SyncInRetryModeLocalDateTime
		{
			get
			{
				return this._SyncInRetryModeLocalDateTime;
			}
			set
			{
				if ((this._SyncInRetryModeLocalDateTime != value))
				{
					this.OnSyncInRetryModeLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SyncInRetryModeLocalDateTime = value;
					this.SendPropertyChanged("SyncInRetryModeLocalDateTime");
					this.OnSyncInRetryModeLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUploadTickValue", DbType="VarBinary(8)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastUploadTickValue
		{
			get
			{
				return this._LastUploadTickValue;
			}
			set
			{
				if ((this._LastUploadTickValue != value))
				{
					this.OnLastUploadTickValueChanging(value);
					this.SendPropertyChanging();
					this._LastUploadTickValue = value;
					this.SendPropertyChanged("LastUploadTickValue");
					this.OnLastUploadTickValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDownloadTickValue", DbType="VarBinary(8)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastDownloadTickValue
		{
			get
			{
				return this._LastDownloadTickValue;
			}
			set
			{
				if ((this._LastDownloadTickValue != value))
				{
					this.OnLastDownloadTickValueChanging(value);
					this.SendPropertyChanging();
					this._LastDownloadTickValue = value;
					this.SendPropertyChanged("LastDownloadTickValue");
					this.OnLastDownloadTickValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUploadChangeTrackingValue", DbType="BigInt")]
		public System.Nullable<long> LastUploadChangeTrackingValue
		{
			get
			{
				return this._LastUploadChangeTrackingValue;
			}
			set
			{
				if ((this._LastUploadChangeTrackingValue != value))
				{
					this.OnLastUploadChangeTrackingValueChanging(value);
					this.SendPropertyChanging();
					this._LastUploadChangeTrackingValue = value;
					this.SendPropertyChanged("LastUploadChangeTrackingValue");
					this.OnLastUploadChangeTrackingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDownloadChangeTrackingValue", DbType="BigInt")]
		public System.Nullable<long> LastDownloadChangeTrackingValue
		{
			get
			{
				return this._LastDownloadChangeTrackingValue;
			}
			set
			{
				if ((this._LastDownloadChangeTrackingValue != value))
				{
					this.OnLastDownloadChangeTrackingValueChanging(value);
					this.SendPropertyChanging();
					this._LastDownloadChangeTrackingValue = value;
					this.SendPropertyChanged("LastDownloadChangeTrackingValue");
					this.OnLastDownloadChangeTrackingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSuccessfulUploadUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastSuccessfulUploadUTCDateTime
		{
			get
			{
				return this._LastSuccessfulUploadUTCDateTime;
			}
			set
			{
				if ((this._LastSuccessfulUploadUTCDateTime != value))
				{
					this.OnLastSuccessfulUploadUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastSuccessfulUploadUTCDateTime = value;
					this.SendPropertyChanged("LastSuccessfulUploadUTCDateTime");
					this.OnLastSuccessfulUploadUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSuccessfulUploadLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastSuccessfulUploadLocalDateTime
		{
			get
			{
				return this._LastSuccessfulUploadLocalDateTime;
			}
			set
			{
				if ((this._LastSuccessfulUploadLocalDateTime != value))
				{
					this.OnLastSuccessfulUploadLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastSuccessfulUploadLocalDateTime = value;
					this.SendPropertyChanged("LastSuccessfulUploadLocalDateTime");
					this.OnLastSuccessfulUploadLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSuccessfulDownloadUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastSuccessfulDownloadUTCDateTime
		{
			get
			{
				return this._LastSuccessfulDownloadUTCDateTime;
			}
			set
			{
				if ((this._LastSuccessfulDownloadUTCDateTime != value))
				{
					this.OnLastSuccessfulDownloadUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastSuccessfulDownloadUTCDateTime = value;
					this.SendPropertyChanged("LastSuccessfulDownloadUTCDateTime");
					this.OnLastSuccessfulDownloadUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSuccessfulDownloadLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastSuccessfulDownloadLocalDateTime
		{
			get
			{
				return this._LastSuccessfulDownloadLocalDateTime;
			}
			set
			{
				if ((this._LastSuccessfulDownloadLocalDateTime != value))
				{
					this.OnLastSuccessfulDownloadLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastSuccessfulDownloadLocalDateTime = value;
					this.SendPropertyChanged("LastSuccessfulDownloadLocalDateTime");
					this.OnLastSuccessfulDownloadLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddressValue", DbType="VarChar(45)")]
		public string IPAddressValue
		{
			get
			{
				return this._IPAddressValue;
			}
			set
			{
				if ((this._IPAddressValue != value))
				{
					this.OnIPAddressValueChanging(value);
					this.SendPropertyChanging();
					this._IPAddressValue = value;
					this.SendPropertyChanged("IPAddressValue");
					this.OnIPAddressValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncDownloadStatusInternalCode", DbType="VarChar(20)")]
		public string SyncDownloadStatusInternalCode
		{
			get
			{
				return this._SyncDownloadStatusInternalCode;
			}
			set
			{
				if ((this._SyncDownloadStatusInternalCode != value))
				{
					this.OnSyncDownloadStatusInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._SyncDownloadStatusInternalCode = value;
					this.SendPropertyChanged("SyncDownloadStatusInternalCode");
					this.OnSyncDownloadStatusInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DispensingDeviceName
		{
			get
			{
				return this._DispensingDeviceName;
			}
			set
			{
				if ((this._DispensingDeviceName != value))
				{
					this.OnDispensingDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceName = value;
					this.SendPropertyChanged("DispensingDeviceName");
					this.OnDispensingDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DispensingDeviceTypeInternalCode
		{
			get
			{
				return this._DispensingDeviceTypeInternalCode;
			}
			set
			{
				if ((this._DispensingDeviceTypeInternalCode != value))
				{
					if (this._DispensingDeviceTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispensingDeviceTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceTypeInternalCode = value;
					this.SendPropertyChanged("DispensingDeviceTypeInternalCode");
					this.OnDispensingDeviceTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerAddressValue", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string ServerAddressValue
		{
			get
			{
				return this._ServerAddressValue;
			}
			set
			{
				if ((this._ServerAddressValue != value))
				{
					this.OnServerAddressValueChanging(value);
					this.SendPropertyChanging();
					this._ServerAddressValue = value;
					this.SendPropertyChanged("ServerAddressValue");
					this.OnServerAddressValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncServerKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SyncServerKey
		{
			get
			{
				return this._SyncServerKey;
			}
			set
			{
				if ((this._SyncServerKey != value))
				{
					this.OnSyncServerKeyChanging(value);
					this.SendPropertyChanging();
					this._SyncServerKey = value;
					this.SendPropertyChanged("SyncServerKey");
					this.OnSyncServerKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationMethodInternalCode", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string AuthenticationMethodInternalCode
		{
			get
			{
				return this._AuthenticationMethodInternalCode;
			}
			set
			{
				if ((this._AuthenticationMethodInternalCode != value))
				{
					this.OnAuthenticationMethodInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationMethodInternalCode = value;
					this.SendPropertyChanged("AuthenticationMethodInternalCode");
					this.OnAuthenticationMethodInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BioIDExemptInternalCode", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string BioIDExemptInternalCode
		{
			get
			{
				return this._BioIDExemptInternalCode;
			}
			set
			{
				if ((this._BioIDExemptInternalCode != value))
				{
					this.OnBioIDExemptInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._BioIDExemptInternalCode = value;
					this.SendPropertyChanged("BioIDExemptInternalCode");
					this.OnBioIDExemptInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserScanModeInternalCode", DbType="VarChar(10)")]
		public string UserScanModeInternalCode
		{
			get
			{
				return this._UserScanModeInternalCode;
			}
			set
			{
				if ((this._UserScanModeInternalCode != value))
				{
					this.OnUserScanModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._UserScanModeInternalCode = value;
					this.SendPropertyChanged("UserScanModeInternalCode");
					this.OnUserScanModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ZoneKey
		{
			get
			{
				return this._ZoneKey;
			}
			set
			{
				if ((this._ZoneKey != value))
				{
					if (this._ZoneEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneKeyChanging(value);
					this.SendPropertyChanging();
					this._ZoneKey = value;
					this.SendPropertyChanged("ZoneKey");
					this.OnZoneKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutOfServiceFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OutOfServiceFlag
		{
			get
			{
				return this._OutOfServiceFlag;
			}
			set
			{
				if ((this._OutOfServiceFlag != value))
				{
					this.OnOutOfServiceFlagChanging(value);
					this.SendPropertyChanging();
					this._OutOfServiceFlag = value;
					this.SendPropertyChanged("OutOfServiceFlag");
					this.OnOutOfServiceFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileModeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ProfileModeFlag
		{
			get
			{
				return this._ProfileModeFlag;
			}
			set
			{
				if ((this._ProfileModeFlag != value))
				{
					this.OnProfileModeFlagChanging(value);
					this.SendPropertyChanging();
					this._ProfileModeFlag = value;
					this.SendPropertyChanged("ProfileModeFlag");
					this.OnProfileModeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuTimeOutDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short MenuTimeOutDurationAmount
		{
			get
			{
				return this._MenuTimeOutDurationAmount;
			}
			set
			{
				if ((this._MenuTimeOutDurationAmount != value))
				{
					this.OnMenuTimeOutDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._MenuTimeOutDurationAmount = value;
					this.SendPropertyChanged("MenuTimeOutDurationAmount");
					this.OnMenuTimeOutDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenDrawerTimeOutDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short OpenDrawerTimeOutDurationAmount
		{
			get
			{
				return this._OpenDrawerTimeOutDurationAmount;
			}
			set
			{
				if ((this._OpenDrawerTimeOutDurationAmount != value))
				{
					this.OnOpenDrawerTimeOutDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._OpenDrawerTimeOutDurationAmount = value;
					this.SendPropertyChanged("OpenDrawerTimeOutDurationAmount");
					this.OnOpenDrawerTimeOutDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmptyReturnBinTimeOutDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short EmptyReturnBinTimeOutDurationAmount
		{
			get
			{
				return this._EmptyReturnBinTimeOutDurationAmount;
			}
			set
			{
				if ((this._EmptyReturnBinTimeOutDurationAmount != value))
				{
					this.OnEmptyReturnBinTimeOutDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._EmptyReturnBinTimeOutDurationAmount = value;
					this.SendPropertyChanged("EmptyReturnBinTimeOutDurationAmount");
					this.OnEmptyReturnBinTimeOutDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDrawerMapTimeOutDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short InventoryDrawerMapTimeOutDurationAmount
		{
			get
			{
				return this._InventoryDrawerMapTimeOutDurationAmount;
			}
			set
			{
				if ((this._InventoryDrawerMapTimeOutDurationAmount != value))
				{
					this.OnInventoryDrawerMapTimeOutDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._InventoryDrawerMapTimeOutDurationAmount = value;
					this.SendPropertyChanged("InventoryDrawerMapTimeOutDurationAmount");
					this.OnInventoryDrawerMapTimeOutDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaTimeOutDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short AnesthesiaTimeOutDurationAmount
		{
			get
			{
				return this._AnesthesiaTimeOutDurationAmount;
			}
			set
			{
				if ((this._AnesthesiaTimeOutDurationAmount != value))
				{
					this.OnAnesthesiaTimeOutDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._AnesthesiaTimeOutDurationAmount = value;
					this.SendPropertyChanged("AnesthesiaTimeOutDurationAmount");
					this.OnAnesthesiaTimeOutDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReverificatonTimeOutDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short ReverificationTimeOutDurationAmount
		{
			get
			{
				return this._ReverificatonTimeOutDurationAmount;
			}
			set
			{
				if ((this._ReverificatonTimeOutDurationAmount != value))
				{
					this.OnReverificationTimeOutDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._ReverificatonTimeOutDurationAmount = value;
					this.SendPropertyChanged("ReverificationTimeOutDurationAmount");
					this.OnReverificationTimeOutDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaSwitchUserFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AnesthesiaSwitchUserFlag
		{
			get
			{
				return this._AnesthesiaSwitchUserFlag;
			}
			set
			{
				if ((this._AnesthesiaSwitchUserFlag != value))
				{
					this.OnAnesthesiaSwitchUserFlagChanging(value);
					this.SendPropertyChanging();
					this._AnesthesiaSwitchUserFlag = value;
					this.SendPropertyChanged("AnesthesiaSwitchUserFlag");
					this.OnAnesthesiaSwitchUserFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaSwitchUserDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AnesthesiaSwitchUserDurationAmount
		{
			get
			{
				return this._AnesthesiaSwitchUserDurationAmount;
			}
			set
			{
				if ((this._AnesthesiaSwitchUserDurationAmount != value))
				{
					this.OnAnesthesiaSwitchUserDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._AnesthesiaSwitchUserDurationAmount = value;
					this.SendPropertyChanged("AnesthesiaSwitchUserDurationAmount");
					this.OnAnesthesiaSwitchUserDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientCaseTransactionHoldDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short PatientCaseTransactionHoldDurationAmount
		{
			get
			{
				return this._PatientCaseTransactionHoldDurationAmount;
			}
			set
			{
				if ((this._PatientCaseTransactionHoldDurationAmount != value))
				{
					this.OnPatientCaseTransactionHoldDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._PatientCaseTransactionHoldDurationAmount = value;
					this.SendPropertyChanged("PatientCaseTransactionHoldDurationAmount");
					this.OnPatientCaseTransactionHoldDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessInventoryFeatureOffFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AccessInventoryFeatureOffFlag
		{
			get
			{
				return this._AccessInventoryFeatureOffFlag;
			}
			set
			{
				if ((this._AccessInventoryFeatureOffFlag != value))
				{
					this.OnAccessInventoryFeatureOffFlagChanging(value);
					this.SendPropertyChanging();
					this._AccessInventoryFeatureOffFlag = value;
					this.SendPropertyChanged("AccessInventoryFeatureOffFlag");
					this.OnAccessInventoryFeatureOffFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryNonProfileModeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TemporaryNonProfileModeFlag
		{
			get
			{
				return this._TemporaryNonProfileModeFlag;
			}
			set
			{
				if ((this._TemporaryNonProfileModeFlag != value))
				{
					this.OnTemporaryNonProfileModeFlagChanging(value);
					this.SendPropertyChanging();
					this._TemporaryNonProfileModeFlag = value;
					this.SendPropertyChanged("TemporaryNonProfileModeFlag");
					this.OnTemporaryNonProfileModeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveBeforeOrderStartDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> RemoveBeforeOrderStartDurationAmount
		{
			get
			{
				return this._RemoveBeforeOrderStartDurationAmount;
			}
			set
			{
				if ((this._RemoveBeforeOrderStartDurationAmount != value))
				{
					this.OnRemoveBeforeOrderStartDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._RemoveBeforeOrderStartDurationAmount = value;
					this.SendPropertyChanged("RemoveBeforeOrderStartDurationAmount");
					this.OnRemoveBeforeOrderStartDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveAfterOrderExpiredDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> RemoveAfterOrderExpiredDurationAmount
		{
			get
			{
				return this._RemoveAfterOrderExpiredDurationAmount;
			}
			set
			{
				if ((this._RemoveAfterOrderExpiredDurationAmount != value))
				{
					this.OnRemoveAfterOrderExpiredDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._RemoveAfterOrderExpiredDurationAmount = value;
					this.SendPropertyChanged("RemoveAfterOrderExpiredDurationAmount");
					this.OnRemoveAfterOrderExpiredDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeforeMedDueNowDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public short BeforeMedDueNowDurationAmount
		{
			get
			{
				return this._BeforeMedDueNowDurationAmount;
			}
			set
			{
				if ((this._BeforeMedDueNowDurationAmount != value))
				{
					this.OnBeforeMedDueNowDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._BeforeMedDueNowDurationAmount = value;
					this.SendPropertyChanged("BeforeMedDueNowDurationAmount");
					this.OnBeforeMedDueNowDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfterMedDueNowDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public short AfterMedDueNowDurationAmount
		{
			get
			{
				return this._AfterMedDueNowDurationAmount;
			}
			set
			{
				if ((this._AfterMedDueNowDurationAmount != value))
				{
					this.OnAfterMedDueNowDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._AfterMedDueNowDurationAmount = value;
					this.SendPropertyChanged("AfterMedDueNowDurationAmount");
					this.OnAfterMedDueNowDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideReasonRequiredFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OverrideReasonRequiredFlag
		{
			get
			{
				return this._OverrideReasonRequiredFlag;
			}
			set
			{
				if ((this._OverrideReasonRequiredFlag != value))
				{
					this.OnOverrideReasonRequiredFlagChanging(value);
					this.SendPropertyChanging();
					this._OverrideReasonRequiredFlag = value;
					this.SendPropertyChanged("OverrideReasonRequiredFlag");
					this.OnOverrideReasonRequiredFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseWarningFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TooCloseWarningFlag
		{
			get
			{
				return this._TooCloseWarningFlag;
			}
			set
			{
				if ((this._TooCloseWarningFlag != value))
				{
					this.OnTooCloseWarningFlagChanging(value);
					this.SendPropertyChanging();
					this._TooCloseWarningFlag = value;
					this.SendPropertyChanged("TooCloseWarningFlag");
					this.OnTooCloseWarningFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSpecificFunctionalityFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PatientSpecificFunctionalityFlag
		{
			get
			{
				return this._PatientSpecificFunctionalityFlag;
			}
			set
			{
				if ((this._PatientSpecificFunctionalityFlag != value))
				{
					this.OnPatientSpecificFunctionalityFlagChanging(value);
					this.SendPropertyChanging();
					this._PatientSpecificFunctionalityFlag = value;
					this.SendPropertyChanged("PatientSpecificFunctionalityFlag");
					this.OnPatientSpecificFunctionalityFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDispenseFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnDispenseFlag
		{
			get
			{
				return this._WitnessOnDispenseFlag;
			}
			set
			{
				if ((this._WitnessOnDispenseFlag != value))
				{
					this.OnWitnessOnDispenseFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnDispenseFlag = value;
					this.SendPropertyChanged("WitnessOnDispenseFlag");
					this.OnWitnessOnDispenseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnReturnFlag
		{
			get
			{
				return this._WitnessOnReturnFlag;
			}
			set
			{
				if ((this._WitnessOnReturnFlag != value))
				{
					this.OnWitnessOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnReturnFlag = value;
					this.SendPropertyChanged("WitnessOnReturnFlag");
					this.OnWitnessOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDisposeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnDisposeFlag
		{
			get
			{
				return this._WitnessOnDisposeFlag;
			}
			set
			{
				if ((this._WitnessOnDisposeFlag != value))
				{
					this.OnWitnessOnDisposeFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnDisposeFlag = value;
					this.SendPropertyChanged("WitnessOnDisposeFlag");
					this.OnWitnessOnDisposeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnLoadRefillFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnLoadRefillFlag
		{
			get
			{
				return this._WitnessOnLoadRefillFlag;
			}
			set
			{
				if ((this._WitnessOnLoadRefillFlag != value))
				{
					this.OnWitnessOnLoadRefillFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnLoadRefillFlag = value;
					this.SendPropertyChanged("WitnessOnLoadRefillFlag");
					this.OnWitnessOnLoadRefillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnUnloadFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnUnloadFlag
		{
			get
			{
				return this._WitnessOnUnloadFlag;
			}
			set
			{
				if ((this._WitnessOnUnloadFlag != value))
				{
					this.OnWitnessOnUnloadFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnUnloadFlag = value;
					this.SendPropertyChanged("WitnessOnUnloadFlag");
					this.OnWitnessOnUnloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnOverrideFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnOverrideFlag
		{
			get
			{
				return this._WitnessOnOverrideFlag;
			}
			set
			{
				if ((this._WitnessOnOverrideFlag != value))
				{
					this.OnWitnessOnOverrideFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnOverrideFlag = value;
					this.SendPropertyChanged("WitnessOnOverrideFlag");
					this.OnWitnessOnOverrideFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnOutdateFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnOutdateFlag
		{
			get
			{
				return this._WitnessOnOutdateFlag;
			}
			set
			{
				if ((this._WitnessOnOutdateFlag != value))
				{
					this.OnWitnessOnOutdateFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnOutdateFlag = value;
					this.SendPropertyChanged("WitnessOnOutdateFlag");
					this.OnWitnessOnOutdateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnInventoryFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnInventoryFlag
		{
			get
			{
				return this._WitnessOnInventoryFlag;
			}
			set
			{
				if ((this._WitnessOnInventoryFlag != value))
				{
					this.OnWitnessOnInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnInventoryFlag = value;
					this.SendPropertyChanged("WitnessOnInventoryFlag");
					this.OnWitnessOnInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnEmptyReturnBinFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnEmptyReturnBinFlag
		{
			get
			{
				return this._WitnessOnEmptyReturnBinFlag;
			}
			set
			{
				if ((this._WitnessOnEmptyReturnBinFlag != value))
				{
					this.OnWitnessOnEmptyReturnBinFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnEmptyReturnBinFlag = value;
					this.SendPropertyChanged("WitnessOnEmptyReturnBinFlag");
					this.OnWitnessOnEmptyReturnBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDestockFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnDestockFlag
		{
			get
			{
				return this._WitnessOnDestockFlag;
			}
			set
			{
				if ((this._WitnessOnDestockFlag != value))
				{
					this.OnWitnessOnDestockFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnDestockFlag = value;
					this.SendPropertyChanged("WitnessOnDestockFlag");
					this.OnWitnessOnDestockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnRxCheckFlag", DbType="Bit NOT NULL")]
		public bool WitnessOnRxCheckFlag
		{
			get
			{
				return this._WitnessOnRxCheckFlag;
			}
			set
			{
				if ((this._WitnessOnRxCheckFlag != value))
				{
					this.OnWitnessOnRxCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnRxCheckFlag = value;
					this.SendPropertyChanged("WitnessOnRxCheckFlag");
					this.OnWitnessOnRxCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnCUBIEEjectFlag", DbType="Bit NOT NULL")]
		public bool WitnessOnCUBIEEjectFlag
		{
			get
			{
				return this._WitnessOnCUBIEEjectFlag;
			}
			set
			{
				if ((this._WitnessOnCUBIEEjectFlag != value))
				{
					this.OnWitnessOnCUBIEEjectFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnCUBIEEjectFlag = value;
					this.SendPropertyChanged("WitnessOnCUBIEEjectFlag");
					this.OnWitnessOnCUBIEEjectFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnLoadRefillFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ScanOnLoadRefillFlag
		{
			get
			{
				return this._ScanOnLoadRefillFlag;
			}
			set
			{
				if ((this._ScanOnLoadRefillFlag != value))
				{
					this.OnScanOnLoadRefillFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnLoadRefillFlag = value;
					this.SendPropertyChanged("ScanOnLoadRefillFlag");
					this.OnScanOnLoadRefillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ScanOnRemoveFlag
		{
			get
			{
				return this._ScanOnRemoveFlag;
			}
			set
			{
				if ((this._ScanOnRemoveFlag != value))
				{
					this.OnScanOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnRemoveFlag = value;
					this.SendPropertyChanged("ScanOnRemoveFlag");
					this.OnScanOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ScanOnReturnFlag
		{
			get
			{
				return this._ScanOnReturnFlag;
			}
			set
			{
				if ((this._ScanOnReturnFlag != value))
				{
					this.OnScanOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnReturnFlag = value;
					this.SendPropertyChanged("ScanOnReturnFlag");
					this.OnScanOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLotIDOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireLotIDOnRemoveFlag
		{
			get
			{
				return this._RequireLotIDOnRemoveFlag;
			}
			set
			{
				if ((this._RequireLotIDOnRemoveFlag != value))
				{
					this.OnRequireLotIDOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireLotIDOnRemoveFlag = value;
					this.SendPropertyChanged("RequireLotIDOnRemoveFlag");
					this.OnRequireLotIDOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLotIDOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireLotIDOnReturnFlag
		{
			get
			{
				return this._RequireLotIDOnReturnFlag;
			}
			set
			{
				if ((this._RequireLotIDOnReturnFlag != value))
				{
					this.OnRequireLotIDOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireLotIDOnReturnFlag = value;
					this.SendPropertyChanged("RequireLotIDOnReturnFlag");
					this.OnRequireLotIDOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSerialIDOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireSerialIDOnRemoveFlag
		{
			get
			{
				return this._RequireSerialIDOnRemoveFlag;
			}
			set
			{
				if ((this._RequireSerialIDOnRemoveFlag != value))
				{
					this.OnRequireSerialIDOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireSerialIDOnRemoveFlag = value;
					this.SendPropertyChanged("RequireSerialIDOnRemoveFlag");
					this.OnRequireSerialIDOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSerialIDOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireSerialIDOnReturnFlag
		{
			get
			{
				return this._RequireSerialIDOnReturnFlag;
			}
			set
			{
				if ((this._RequireSerialIDOnReturnFlag != value))
				{
					this.OnRequireSerialIDOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireSerialIDOnReturnFlag = value;
					this.SendPropertyChanged("RequireSerialIDOnReturnFlag");
					this.OnRequireSerialIDOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireExpirationDateOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireExpirationDateOnRemoveFlag
		{
			get
			{
				return this._RequireExpirationDateOnRemoveFlag;
			}
			set
			{
				if ((this._RequireExpirationDateOnRemoveFlag != value))
				{
					this.OnRequireExpirationDateOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireExpirationDateOnRemoveFlag = value;
					this.SendPropertyChanged("RequireExpirationDateOnRemoveFlag");
					this.OnRequireExpirationDateOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireExpirationDateOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireExpirationDateOnReturnFlag
		{
			get
			{
				return this._RequireExpirationDateOnReturnFlag;
			}
			set
			{
				if ((this._RequireExpirationDateOnReturnFlag != value))
				{
					this.OnRequireExpirationDateOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireExpirationDateOnReturnFlag = value;
					this.SendPropertyChanged("RequireExpirationDateOnReturnFlag");
					this.OnRequireExpirationDateOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalOverrideFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CriticalOverrideFlag
		{
			get
			{
				return this._CriticalOverrideFlag;
			}
			set
			{
				if ((this._CriticalOverrideFlag != value))
				{
					this.OnCriticalOverrideFlagChanging(value);
					this.SendPropertyChanging();
					this._CriticalOverrideFlag = value;
					this.SendPropertyChanged("CriticalOverrideFlag");
					this.OnCriticalOverrideFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoCriticalOverrideDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AutoCriticalOverrideDurationAmount
		{
			get
			{
				return this._AutoCriticalOverrideDurationAmount;
			}
			set
			{
				if ((this._AutoCriticalOverrideDurationAmount != value))
				{
					this.OnAutoCriticalOverrideDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._AutoCriticalOverrideDurationAmount = value;
					this.SendPropertyChanged("AutoCriticalOverrideDurationAmount");
					this.OnAutoCriticalOverrideDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlindCountFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool BlindCountFlag
		{
			get
			{
				return this._BlindCountFlag;
			}
			set
			{
				if ((this._BlindCountFlag != value))
				{
					this.OnBlindCountFlagChanging(value);
					this.SendPropertyChanging();
					this._BlindCountFlag = value;
					this.SendPropertyChanged("BlindCountFlag");
					this.OnBlindCountFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdateTrackingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OutdateTrackingFlag
		{
			get
			{
				return this._OutdateTrackingFlag;
			}
			set
			{
				if ((this._OutdateTrackingFlag != value))
				{
					this.OnOutdateTrackingFlagChanging(value);
					this.SendPropertyChanging();
					this._OutdateTrackingFlag = value;
					this.SendPropertyChanged("OutdateTrackingFlag");
					this.OnOutdateTrackingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnToStockFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ReturnToStockFlag
		{
			get
			{
				return this._ReturnToStockFlag;
			}
			set
			{
				if ((this._ReturnToStockFlag != value))
				{
					this.OnReturnToStockFlagChanging(value);
					this.SendPropertyChanging();
					this._ReturnToStockFlag = value;
					this.SendPropertyChanged("ReturnToStockFlag");
					this.OnReturnToStockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeTimeOfDayValue", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short UpgradeTimeOfDayValue
		{
			get
			{
				return this._UpgradeTimeOfDayValue;
			}
			set
			{
				if ((this._UpgradeTimeOfDayValue != value))
				{
					this.OnUpgradeTimeOfDayValueChanging(value);
					this.SendPropertyChanging();
					this._UpgradeTimeOfDayValue = value;
					this.SendPropertyChanged("UpgradeTimeOfDayValue");
					this.OnUpgradeTimeOfDayValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualUpgradeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ManualUpgradeFlag
		{
			get
			{
				return this._ManualUpgradeFlag;
			}
			set
			{
				if ((this._ManualUpgradeFlag != value))
				{
					this.OnManualUpgradeFlagChanging(value);
					this.SendPropertyChanging();
					this._ManualUpgradeFlag = value;
					this.SendPropertyChanged("ManualUpgradeFlag");
					this.OnManualUpgradeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultGlobalPatientSearchFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DefaultGlobalPatientSearchFlag
		{
			get
			{
				return this._DefaultGlobalPatientSearchFlag;
			}
			set
			{
				if ((this._DefaultGlobalPatientSearchFlag != value))
				{
					this.OnDefaultGlobalPatientSearchFlagChanging(value);
					this.SendPropertyChanging();
					this._DefaultGlobalPatientSearchFlag = value;
					this.SendPropertyChanged("DefaultGlobalPatientSearchFlag");
					this.OnDefaultGlobalPatientSearchFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedOutdateFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PrintMedOutdateFlag
		{
			get
			{
				return this._PrintMedOutdateFlag;
			}
			set
			{
				if ((this._PrintMedOutdateFlag != value))
				{
					this.OnPrintMedOutdateFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintMedOutdateFlag = value;
					this.SendPropertyChanged("PrintMedOutdateFlag");
					this.OnPrintMedOutdateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedUnloadFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PrintMedUnloadFlag
		{
			get
			{
				return this._PrintMedUnloadFlag;
			}
			set
			{
				if ((this._PrintMedUnloadFlag != value))
				{
					this.OnPrintMedUnloadFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintMedUnloadFlag = value;
					this.SendPropertyChanged("PrintMedUnloadFlag");
					this.OnPrintMedUnloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedEmptyReturnBinFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PrintMedEmptyReturnBinFlag
		{
			get
			{
				return this._PrintMedEmptyReturnBinFlag;
			}
			set
			{
				if ((this._PrintMedEmptyReturnBinFlag != value))
				{
					this.OnPrintMedEmptyReturnBinFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintMedEmptyReturnBinFlag = value;
					this.SendPropertyChanged("PrintMedEmptyReturnBinFlag");
					this.OnPrintMedEmptyReturnBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PrintMedReturnFlag
		{
			get
			{
				return this._PrintMedReturnFlag;
			}
			set
			{
				if ((this._PrintMedReturnFlag != value))
				{
					this.OnPrintMedReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintMedReturnFlag = value;
					this.SendPropertyChanged("PrintMedReturnFlag");
					this.OnPrintMedReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PrintMedRemoveFlag
		{
			get
			{
				return this._PrintMedRemoveFlag;
			}
			set
			{
				if ((this._PrintMedRemoveFlag != value))
				{
					this.OnPrintMedRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintMedRemoveFlag = value;
					this.SendPropertyChanged("PrintMedRemoveFlag");
					this.OnPrintMedRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedDisposeFlag", DbType="Bit NOT NULL")]
		public bool PrintMedDisposeFlag
		{
			get
			{
				return this._PrintMedDisposeFlag;
			}
			set
			{
				if ((this._PrintMedDisposeFlag != value))
				{
					this.OnPrintMedDisposeFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintMedDisposeFlag = value;
					this.SendPropertyChanged("PrintMedDisposeFlag");
					this.OnPrintMedDisposeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedDestockFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PrintMedDestockFlag
		{
			get
			{
				return this._PrintMedDestockFlag;
			}
			set
			{
				if ((this._PrintMedDestockFlag != value))
				{
					this.OnPrintMedDestockFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintMedDestockFlag = value;
					this.SendPropertyChanged("PrintMedDestockFlag");
					this.OnPrintMedDestockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedRxCheckFlag", DbType="Bit NOT NULL")]
		public bool PrintMedRxCheckFlag
		{
			get
			{
				return this._PrintMedRxCheckFlag;
			}
			set
			{
				if ((this._PrintMedRxCheckFlag != value))
				{
					this.OnPrintMedRxCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintMedRxCheckFlag = value;
					this.SendPropertyChanged("PrintMedRxCheckFlag");
					this.OnPrintMedRxCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedLoadRefillFlag", DbType="Bit NOT NULL")]
		public bool PrintMedLoadRefillFlag
		{
			get
			{
				return this._PrintMedLoadRefillFlag;
			}
			set
			{
				if ((this._PrintMedLoadRefillFlag != value))
				{
					this.OnPrintMedLoadRefillFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintMedLoadRefillFlag = value;
					this.SendPropertyChanged("PrintMedLoadRefillFlag");
					this.OnPrintMedLoadRefillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalLowNoticePrinterName", DbType="NVarChar(260)", UpdateCheck=UpdateCheck.Never)]
		public string CriticalLowNoticePrinterName
		{
			get
			{
				return this._CriticalLowNoticePrinterName;
			}
			set
			{
				if ((this._CriticalLowNoticePrinterName != value))
				{
					this.OnCriticalLowNoticePrinterNameChanging(value);
					this.SendPropertyChanging();
					this._CriticalLowNoticePrinterName = value;
					this.SendPropertyChanged("CriticalLowNoticePrinterName");
					this.OnCriticalLowNoticePrinterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockOutNoticePrinterName", DbType="NVarChar(260)", UpdateCheck=UpdateCheck.Never)]
		public string StockOutNoticePrinterName
		{
			get
			{
				return this._StockOutNoticePrinterName;
			}
			set
			{
				if ((this._StockOutNoticePrinterName != value))
				{
					this.OnStockOutNoticePrinterNameChanging(value);
					this.SendPropertyChanging();
					this._StockOutNoticePrinterName = value;
					this.SendPropertyChanged("StockOutNoticePrinterName");
					this.OnStockOutNoticePrinterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowPreadmissionFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ShowPreadmissionFlag
		{
			get
			{
				return this._ShowPreadmissionFlag;
			}
			set
			{
				if ((this._ShowPreadmissionFlag != value))
				{
					this.OnShowPreadmissionFlagChanging(value);
					this.SendPropertyChanging();
					this._ShowPreadmissionFlag = value;
					this.SendPropertyChanged("ShowPreadmissionFlag");
					this.OnShowPreadmissionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowRecurringAdmissionFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ShowRecurringAdmissionFlag
		{
			get
			{
				return this._ShowRecurringAdmissionFlag;
			}
			set
			{
				if ((this._ShowRecurringAdmissionFlag != value))
				{
					this.OnShowRecurringAdmissionFlagChanging(value);
					this.SendPropertyChanging();
					this._ShowRecurringAdmissionFlag = value;
					this.SendPropertyChanged("ShowRecurringAdmissionFlag");
					this.OnShowRecurringAdmissionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmissionLeadDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short PreadmissionLeadDurationAmount
		{
			get
			{
				return this._PreadmissionLeadDurationAmount;
			}
			set
			{
				if ((this._PreadmissionLeadDurationAmount != value))
				{
					this.OnPreadmissionLeadDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._PreadmissionLeadDurationAmount = value;
					this.SendPropertyChanged("PreadmissionLeadDurationAmount");
					this.OnPreadmissionLeadDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmissionProlongedInactivityDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short PreadmissionProlongedInactivityDurationAmount
		{
			get
			{
				return this._PreadmissionProlongedInactivityDurationAmount;
			}
			set
			{
				if ((this._PreadmissionProlongedInactivityDurationAmount != value))
				{
					this.OnPreadmissionProlongedInactivityDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._PreadmissionProlongedInactivityDurationAmount = value;
					this.SendPropertyChanged("PreadmissionProlongedInactivityDurationAmount");
					this.OnPreadmissionProlongedInactivityDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionProlongedInactivityDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short AdmissionProlongedInactivityDurationAmount
		{
			get
			{
				return this._AdmissionProlongedInactivityDurationAmount;
			}
			set
			{
				if ((this._AdmissionProlongedInactivityDurationAmount != value))
				{
					this.OnAdmissionProlongedInactivityDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._AdmissionProlongedInactivityDurationAmount = value;
					this.SendPropertyChanged("AdmissionProlongedInactivityDurationAmount");
					this.OnAdmissionProlongedInactivityDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDelayDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DischargeDelayDurationAmount
		{
			get
			{
				return this._DischargeDelayDurationAmount;
			}
			set
			{
				if ((this._DischargeDelayDurationAmount != value))
				{
					this.OnDischargeDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._DischargeDelayDurationAmount = value;
					this.SendPropertyChanged("DischargeDelayDurationAmount");
					this.OnDischargeDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDelayDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short TransferDelayDurationAmount
		{
			get
			{
				return this._TransferDelayDurationAmount;
			}
			set
			{
				if ((this._TransferDelayDurationAmount != value))
				{
					this.OnTransferDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._TransferDelayDurationAmount = value;
					this.SendPropertyChanged("TransferDelayDurationAmount");
					this.OnTransferDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceDelayDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short LeaveOfAbsenceDelayDurationAmount
		{
			get
			{
				return this._LeaveOfAbsenceDelayDurationAmount;
			}
			set
			{
				if ((this._LeaveOfAbsenceDelayDurationAmount != value))
				{
					this.OnLeaveOfAbsenceDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceDelayDurationAmount = value;
					this.SendPropertyChanged("LeaveOfAbsenceDelayDurationAmount");
					this.OnLeaveOfAbsenceDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentAreaKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ReplenishmentAreaKey
		{
			get
			{
				return this._ReplenishmentAreaKey;
			}
			set
			{
				if ((this._ReplenishmentAreaKey != value))
				{
					this.OnReplenishmentAreaKeyChanging(value);
					this.SendPropertyChanging();
					this._ReplenishmentAreaKey = value;
					this.SendPropertyChanged("ReplenishmentAreaKey");
					this.OnReplenishmentAreaKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualStockLocationKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> VirtualStockLocationKey
		{
			get
			{
				return this._VirtualStockLocationKey;
			}
			set
			{
				if ((this._VirtualStockLocationKey != value))
				{
					if (this._VirtualStockLocationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualStockLocationKeyChanging(value);
					this.SendPropertyChanging();
					this._VirtualStockLocationKey = value;
					this.SendPropertyChanged("VirtualStockLocationKey");
					this.OnVirtualStockLocationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxCheckFlag", DbType="Bit NOT NULL")]
		public bool RxCheckFlag
		{
			get
			{
				return this._RxCheckFlag;
			}
			set
			{
				if ((this._RxCheckFlag != value))
				{
					this.OnRxCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._RxCheckFlag = value;
					this.SendPropertyChanged("RxCheckFlag");
					this.OnRxCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoMedLabelFlag", DbType="Bit NOT NULL")]
		public bool AutoMedLabelFlag
		{
			get
			{
				return this._AutoMedLabelFlag;
			}
			set
			{
				if ((this._AutoMedLabelFlag != value))
				{
					this.OnAutoMedLabelFlagChanging(value);
					this.SendPropertyChanging();
					this._AutoMedLabelFlag = value;
					this.SendPropertyChanged("AutoMedLabelFlag");
					this.OnAutoMedLabelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncUploadAllowSkipFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SyncUploadAllowSkipFlag
		{
			get
			{
				return this._SyncUploadAllowSkipFlag;
			}
			set
			{
				if ((this._SyncUploadAllowSkipFlag != value))
				{
					this.OnSyncUploadAllowSkipFlagChanging(value);
					this.SendPropertyChanging();
					this._SyncUploadAllowSkipFlag = value;
					this.SendPropertyChanged("SyncUploadAllowSkipFlag");
					this.OnSyncUploadAllowSkipFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncAllowDownloadOnUploadFailureFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SyncAllowDownloadOnUploadFailureFlag
		{
			get
			{
				return this._SyncAllowDownloadOnUploadFailureFlag;
			}
			set
			{
				if ((this._SyncAllowDownloadOnUploadFailureFlag != value))
				{
					this.OnSyncAllowDownloadOnUploadFailureFlagChanging(value);
					this.SendPropertyChanging();
					this._SyncAllowDownloadOnUploadFailureFlag = value;
					this.SendPropertyChanged("SyncAllowDownloadOnUploadFailureFlag");
					this.OnSyncAllowDownloadOnUploadFailureFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncUploadMaximumRetryQuantity", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short SyncUploadMaximumRetryQuantity
		{
			get
			{
				return this._SyncUploadMaximumRetryQuantity;
			}
			set
			{
				if ((this._SyncUploadMaximumRetryQuantity != value))
				{
					this.OnSyncUploadMaximumRetryQuantityChanging(value);
					this.SendPropertyChanging();
					this._SyncUploadMaximumRetryQuantity = value;
					this.SendPropertyChanged("SyncUploadMaximumRetryQuantity");
					this.OnSyncUploadMaximumRetryQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncUploadRetryIntervalAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short SyncUploadRetryIntervalAmount
		{
			get
			{
				return this._SyncUploadRetryIntervalAmount;
			}
			set
			{
				if ((this._SyncUploadRetryIntervalAmount != value))
				{
					this.OnSyncUploadRetryIntervalAmountChanging(value);
					this.SendPropertyChanging();
					this._SyncUploadRetryIntervalAmount = value;
					this.SendPropertyChanged("SyncUploadRetryIntervalAmount");
					this.OnSyncUploadRetryIntervalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasteModeInternalCode", DbType="VarChar(10)")]
		public string WasteModeInternalCode
		{
			get
			{
				return this._WasteModeInternalCode;
			}
			set
			{
				if ((this._WasteModeInternalCode != value))
				{
					this.OnWasteModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._WasteModeInternalCode = value;
					this.SendPropertyChanged("WasteModeInternalCode");
					this.OnWasteModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FutureTaskWarningDurationAmount", DbType="SmallInt NOT NULL")]
		public short FutureTaskWarningDurationAmount
		{
			get
			{
				return this._FutureTaskWarningDurationAmount;
			}
			set
			{
				if ((this._FutureTaskWarningDurationAmount != value))
				{
					this.OnFutureTaskWarningDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._FutureTaskWarningDurationAmount = value;
					this.SendPropertyChanged("FutureTaskWarningDurationAmount");
					this.OnFutureTaskWarningDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintPatientLabelRemoveFlag", DbType="Bit NOT NULL")]
		public bool PrintPatientLabelRemoveFlag
		{
			get
			{
				return this._PrintPatientLabelRemoveFlag;
			}
			set
			{
				if ((this._PrintPatientLabelRemoveFlag != value))
				{
					this.OnPrintPatientLabelRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintPatientLabelRemoveFlag = value;
					this.SendPropertyChanged("PrintPatientLabelRemoveFlag");
					this.OnPrintPatientLabelRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderDispenseQuantityFlag", DbType="Bit NOT NULL")]
		public bool PharmacyOrderDispenseQuantityFlag
		{
			get
			{
				return this._PharmacyOrderDispenseQuantityFlag;
			}
			set
			{
				if ((this._PharmacyOrderDispenseQuantityFlag != value))
				{
					this.OnPharmacyOrderDispenseQuantityFlagChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderDispenseQuantityFlag = value;
					this.SendPropertyChanged("PharmacyOrderDispenseQuantityFlag");
					this.OnPharmacyOrderDispenseQuantityFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardExemptInternalCode", DbType="VarChar(20)")]
		public string CardExemptInternalCode
		{
			get
			{
				return this._CardExemptInternalCode;
			}
			set
			{
				if ((this._CardExemptInternalCode != value))
				{
					this.OnCardExemptInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._CardExemptInternalCode = value;
					this.SendPropertyChanged("CardExemptInternalCode");
					this.OnCardExemptInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseEquivalenciesFlag", DbType="Bit NOT NULL")]
		public bool UseEquivalenciesFlag
		{
			get
			{
				return this._UseEquivalenciesFlag;
			}
			set
			{
				if ((this._UseEquivalenciesFlag != value))
				{
					this.OnUseEquivalenciesFlagChanging(value);
					this.SendPropertyChanging();
					this._UseEquivalenciesFlag = value;
					this.SendPropertyChanged("UseEquivalenciesFlag");
					this.OnUseEquivalenciesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrabScanFlag", DbType="Bit NOT NULL")]
		public bool GrabScanFlag
		{
			get
			{
				return this._GrabScanFlag;
			}
			set
			{
				if ((this._GrabScanFlag != value))
				{
					this.OnGrabScanFlagChanging(value);
					this.SendPropertyChanging();
					this._GrabScanFlag = value;
					this.SendPropertyChanged("GrabScanFlag");
					this.OnGrabScanFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveBarcodeInventoryDecrementExternalFlag", DbType="Bit NOT NULL")]
		public bool ReceiveBarcodeInventoryDecrementExternalFlag
		{
			get
			{
				return this._ReceiveBarcodeInventoryDecrementExternalFlag;
			}
			set
			{
				if ((this._ReceiveBarcodeInventoryDecrementExternalFlag != value))
				{
					this.OnReceiveBarcodeInventoryDecrementExternalFlagChanging(value);
					this.SendPropertyChanging();
					this._ReceiveBarcodeInventoryDecrementExternalFlag = value;
					this.SendPropertyChanged("ReceiveBarcodeInventoryDecrementExternalFlag");
					this.OnReceiveBarcodeInventoryDecrementExternalFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemDeviceHostValue", DbType="NVarChar(50)")]
		public string ExternalSystemDeviceHostValue
		{
			get
			{
				return this._ExternalSystemDeviceHostValue;
			}
			set
			{
				if ((this._ExternalSystemDeviceHostValue != value))
				{
					this.OnExternalSystemDeviceHostValueChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemDeviceHostValue = value;
					this.SendPropertyChanged("ExternalSystemDeviceHostValue");
					this.OnExternalSystemDeviceHostValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemDevicePortNumber", DbType="Int")]
		public System.Nullable<int> ExternalSystemDevicePortNumber
		{
			get
			{
				return this._ExternalSystemDevicePortNumber;
			}
			set
			{
				if ((this._ExternalSystemDevicePortNumber != value))
				{
					this.OnExternalSystemDevicePortNumberChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemDevicePortNumber = value;
					this.SendPropertyChanged("ExternalSystemDevicePortNumber");
					this.OnExternalSystemDevicePortNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemDeviceAdminUserPasswordValue", DbType="NVarChar(50)")]
		public string ExternalSystemDeviceAdminUserPasswordValue
		{
			get
			{
				return this._ExternalSystemDeviceAdminUserPasswordValue;
			}
			set
			{
				if ((this._ExternalSystemDeviceAdminUserPasswordValue != value))
				{
					this.OnExternalSystemDeviceAdminUserPasswordValueChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemDeviceAdminUserPasswordValue = value;
					this.SendPropertyChanged("ExternalSystemDeviceAdminUserPasswordValue");
					this.OnExternalSystemDeviceAdminUserPasswordValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemDeviceCommandTimeoutDurationAmount", DbType="SmallInt")]
		public System.Nullable<short> ExternalSystemDeviceCommandTimeoutDurationAmount
		{
			get
			{
				return this._ExternalSystemDeviceCommandTimeoutDurationAmount;
			}
			set
			{
				if ((this._ExternalSystemDeviceCommandTimeoutDurationAmount != value))
				{
					this.OnExternalSystemDeviceCommandTimeoutDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemDeviceCommandTimeoutDurationAmount = value;
					this.SendPropertyChanged("ExternalSystemDeviceCommandTimeoutDurationAmount");
					this.OnExternalSystemDeviceCommandTimeoutDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenBinTimeoutDurationAmount", DbType="SmallInt")]
		public System.Nullable<short> OpenBinTimeoutDurationAmount
		{
			get
			{
				return this._OpenBinTimeoutDurationAmount;
			}
			set
			{
				if ((this._OpenBinTimeoutDurationAmount != value))
				{
					this.OnOpenBinTimeoutDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._OpenBinTimeoutDurationAmount = value;
					this.SendPropertyChanged("OpenBinTimeoutDurationAmount");
					this.OnOpenBinTimeoutDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeReceiverDevicePortNumber", DbType="Int")]
		public System.Nullable<int> BarcodeReceiverDevicePortNumber
		{
			get
			{
				return this._BarcodeReceiverDevicePortNumber;
			}
			set
			{
				if ((this._BarcodeReceiverDevicePortNumber != value))
				{
					this.OnBarcodeReceiverDevicePortNumberChanging(value);
					this.SendPropertyChanging();
					this._BarcodeReceiverDevicePortNumber = value;
					this.SendPropertyChanged("BarcodeReceiverDevicePortNumber");
					this.OnBarcodeReceiverDevicePortNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlledSubstanceLicenseKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ControlledSubstanceLicenseKey
		{
			get
			{
				return this._ControlledSubstanceLicenseKey;
			}
			set
			{
				if ((this._ControlledSubstanceLicenseKey != value))
				{
					this.OnControlledSubstanceLicenseKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlledSubstanceLicenseKey = value;
					this.SendPropertyChanged("ControlledSubstanceLicenseKey");
					this.OnControlledSubstanceLicenseKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayPatientPreferredNameFlag", DbType="Bit NOT NULL")]
		public bool DisplayPatientPreferredNameFlag
		{
			get
			{
				return this._DisplayPatientPreferredNameFlag;
			}
			set
			{
				if ((this._DisplayPatientPreferredNameFlag != value))
				{
					this.OnDisplayPatientPreferredNameFlagChanging(value);
					this.SendPropertyChanging();
					this._DisplayPatientPreferredNameFlag = value;
					this.SendPropertyChanged("DisplayPatientPreferredNameFlag");
					this.OnDisplayPatientPreferredNameFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDestructionBinTimeOutDurationAmount", DbType="SmallInt NOT NULL")]
		public short GCSMDestructionBinTimeOutDurationAmount
		{
			get
			{
				return this._GCSMDestructionBinTimeOutDurationAmount;
			}
			set
			{
				if ((this._GCSMDestructionBinTimeOutDurationAmount != value))
				{
					this.OnGCSMDestructionBinTimeOutDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._GCSMDestructionBinTimeOutDurationAmount = value;
					this.SendPropertyChanged("GCSMDestructionBinTimeOutDurationAmount");
					this.OnGCSMDestructionBinTimeOutDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnCompoundingFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnCompoundingFlag
		{
			get
			{
				return this._GCSMScanOnCompoundingFlag;
			}
			set
			{
				if ((this._GCSMScanOnCompoundingFlag != value))
				{
					this.OnGCSMScanOnCompoundingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnCompoundingFlag = value;
					this.SendPropertyChanged("GCSMScanOnCompoundingFlag");
					this.OnGCSMScanOnCompoundingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnLoadFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnLoadFlag
		{
			get
			{
				return this._GCSMScanOnLoadFlag;
			}
			set
			{
				if ((this._GCSMScanOnLoadFlag != value))
				{
					this.OnGCSMScanOnLoadFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnLoadFlag = value;
					this.SendPropertyChanged("GCSMScanOnLoadFlag");
					this.OnGCSMScanOnLoadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnIssueFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnIssueFlag
		{
			get
			{
				return this._GCSMScanOnIssueFlag;
			}
			set
			{
				if ((this._GCSMScanOnIssueFlag != value))
				{
					this.OnGCSMScanOnIssueFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnIssueFlag = value;
					this.SendPropertyChanged("GCSMScanOnIssueFlag");
					this.OnGCSMScanOnIssueFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnPrescriptionFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnPrescriptionFlag
		{
			get
			{
				return this._GCSMScanOnPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMScanOnPrescriptionFlag != value))
				{
					this.OnGCSMScanOnPrescriptionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnPrescriptionFlag = value;
					this.SendPropertyChanged("GCSMScanOnPrescriptionFlag");
					this.OnGCSMScanOnPrescriptionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnReceiveFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnReceiveFlag
		{
			get
			{
				return this._GCSMScanOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMScanOnReceiveFlag != value))
				{
					this.OnGCSMScanOnReceiveFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnReceiveFlag = value;
					this.SendPropertyChanged("GCSMScanOnReceiveFlag");
					this.OnGCSMScanOnReceiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnRestockADMFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnRestockADMFlag
		{
			get
			{
				return this._GCSMScanOnRestockADMFlag;
			}
			set
			{
				if ((this._GCSMScanOnRestockADMFlag != value))
				{
					this.OnGCSMScanOnRestockADMFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnRestockADMFlag = value;
					this.SendPropertyChanged("GCSMScanOnRestockADMFlag");
					this.OnGCSMScanOnRestockADMFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnReturnFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnReturnFlag
		{
			get
			{
				return this._GCSMScanOnReturnFlag;
			}
			set
			{
				if ((this._GCSMScanOnReturnFlag != value))
				{
					this.OnGCSMScanOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnReturnFlag = value;
					this.SendPropertyChanged("GCSMScanOnReturnFlag");
					this.OnGCSMScanOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnSellFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnSellFlag
		{
			get
			{
				return this._GCSMScanOnSellFlag;
			}
			set
			{
				if ((this._GCSMScanOnSellFlag != value))
				{
					this.OnGCSMScanOnSellFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnSellFlag = value;
					this.SendPropertyChanged("GCSMScanOnSellFlag");
					this.OnGCSMScanOnSellFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnStockTransferFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnStockTransferFlag
		{
			get
			{
				return this._GCSMScanOnStockTransferFlag;
			}
			set
			{
				if ((this._GCSMScanOnStockTransferFlag != value))
				{
					this.OnGCSMScanOnStockTransferFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnStockTransferFlag = value;
					this.SendPropertyChanged("GCSMScanOnStockTransferFlag");
					this.OnGCSMScanOnStockTransferFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnCompoundingFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnCompoundingFlag
		{
			get
			{
				return this._GCSMWitnessOnCompoundingFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnCompoundingFlag != value))
				{
					this.OnGCSMWitnessOnCompoundingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnCompoundingFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnCompoundingFlag");
					this.OnGCSMWitnessOnCompoundingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnEmptyDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnEmptyDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnEmptyDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnEmptyDestructionBinFlag != value))
				{
					this.OnGCSMWitnessOnEmptyDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnEmptyDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnEmptyDestructionBinFlag");
					this.OnGCSMWitnessOnEmptyDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnInventoryFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnInventoryFlag
		{
			get
			{
				return this._GCSMWitnessOnInventoryFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnInventoryFlag != value))
				{
					this.OnGCSMWitnessOnInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnInventoryFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnInventoryFlag");
					this.OnGCSMWitnessOnInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnIssueFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnIssueFlag
		{
			get
			{
				return this._GCSMWitnessOnIssueFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnIssueFlag != value))
				{
					this.OnGCSMWitnessOnIssueFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnIssueFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnIssueFlag");
					this.OnGCSMWitnessOnIssueFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnOutdateFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnOutdateFlag
		{
			get
			{
				return this._GCSMWitnessOnOutdateFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnOutdateFlag != value))
				{
					this.OnGCSMWitnessOnOutdateFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnOutdateFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnOutdateFlag");
					this.OnGCSMWitnessOnOutdateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnPrescriptionFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnPrescriptionFlag
		{
			get
			{
				return this._GCSMWitnessOnPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnPrescriptionFlag != value))
				{
					this.OnGCSMWitnessOnPrescriptionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnPrescriptionFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnPrescriptionFlag");
					this.OnGCSMWitnessOnPrescriptionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnRecallFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnRecallFlag
		{
			get
			{
				return this._GCSMWitnessOnRecallFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnRecallFlag != value))
				{
					this.OnGCSMWitnessOnRecallFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnRecallFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnRecallFlag");
					this.OnGCSMWitnessOnRecallFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReceiveFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnReceiveFlag
		{
			get
			{
				return this._GCSMWitnessOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReceiveFlag != value))
				{
					this.OnGCSMWitnessOnReceiveFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnReceiveFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnReceiveFlag");
					this.OnGCSMWitnessOnReceiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnRestockADMFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnRestockADMFlag
		{
			get
			{
				return this._GCSMWitnessOnRestockADMFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnRestockADMFlag != value))
				{
					this.OnGCSMWitnessOnRestockADMFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnRestockADMFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnRestockADMFlag");
					this.OnGCSMWitnessOnRestockADMFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReturnFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnReturnFlag
		{
			get
			{
				return this._GCSMWitnessOnReturnFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReturnFlag != value))
				{
					this.OnGCSMWitnessOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnReturnFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnReturnFlag");
					this.OnGCSMWitnessOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReverseCompoundingFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnReverseCompoundingFlag
		{
			get
			{
				return this._GCSMWitnessOnReverseCompoundingFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReverseCompoundingFlag != value))
				{
					this.OnGCSMWitnessOnReverseCompoundingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnReverseCompoundingFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnReverseCompoundingFlag");
					this.OnGCSMWitnessOnReverseCompoundingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnSellFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnSellFlag
		{
			get
			{
				return this._GCSMWitnessOnSellFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnSellFlag != value))
				{
					this.OnGCSMWitnessOnSellFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnSellFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnSellFlag");
					this.OnGCSMWitnessOnSellFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnStockTransferFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnStockTransferFlag
		{
			get
			{
				return this._GCSMWitnessOnStockTransferFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnStockTransferFlag != value))
				{
					this.OnGCSMWitnessOnStockTransferFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnStockTransferFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnStockTransferFlag");
					this.OnGCSMWitnessOnStockTransferFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnUnloadFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnUnloadFlag
		{
			get
			{
				return this._GCSMWitnessOnUnloadFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnUnloadFlag != value))
				{
					this.OnGCSMWitnessOnUnloadFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnUnloadFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnUnloadFlag");
					this.OnGCSMWitnessOnUnloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnWasteFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnWasteFlag
		{
			get
			{
				return this._GCSMWitnessOnWasteFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnWasteFlag != value))
				{
					this.OnGCSMWitnessOnWasteFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnWasteFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnWasteFlag");
					this.OnGCSMWitnessOnWasteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnceDispenseFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnceDispenseFlag
		{
			get
			{
				return this._GCSMWitnessOnceDispenseFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnceDispenseFlag != value))
				{
					this.OnGCSMWitnessOnceDispenseFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnceDispenseFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnceDispenseFlag");
					this.OnGCSMWitnessOnceDispenseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnceInventoryFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnceInventoryFlag
		{
			get
			{
				return this._GCSMWitnessOnceInventoryFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnceInventoryFlag != value))
				{
					this.OnGCSMWitnessOnceInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnceInventoryFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnceInventoryFlag");
					this.OnGCSMWitnessOnceInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnRecoverFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnRecoverFlag
		{
			get
			{
				return this._GCSMWitnessOnRecoverFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnRecoverFlag != value))
				{
					this.OnGCSMWitnessOnRecoverFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnRecoverFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnRecoverFlag");
					this.OnGCSMWitnessOnRecoverFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMBlindCountFlag", DbType="Bit NOT NULL")]
		public bool GCSMBlindCountFlag
		{
			get
			{
				return this._GCSMBlindCountFlag;
			}
			set
			{
				if ((this._GCSMBlindCountFlag != value))
				{
					this.OnGCSMBlindCountFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMBlindCountFlag = value;
					this.SendPropertyChanged("GCSMBlindCountFlag");
					this.OnGCSMBlindCountFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnAccessToDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnAccessToDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAccessToDestructionBinFlag != value))
				{
					this.OnGCSMWitnessOnAccessToDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnAccessToDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnAccessToDestructionBinFlag");
					this.OnGCSMWitnessOnAccessToDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnAddToDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnAddToDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAddToDestructionBinFlag != value))
				{
					this.OnGCSMWitnessOnAddToDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnAddToDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnAddToDestructionBinFlag");
					this.OnGCSMWitnessOnAddToDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnAccessDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnAccessDestructionBinFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnAccessDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnAccessDestructionBinFlag != value))
				{
					this.OnGCSMPrintReceiptOnAccessDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnAccessDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnAccessDestructionBinFlag");
					this.OnGCSMPrintReceiptOnAccessDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnDiscrepancyResolutionFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnDiscrepancyResolutionFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnDiscrepancyResolutionFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnDiscrepancyResolutionFlag != value))
				{
					this.OnGCSMPrintReceiptOnDiscrepancyResolutionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnDiscrepancyResolutionFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnDiscrepancyResolutionFlag");
					this.OnGCSMPrintReceiptOnDiscrepancyResolutionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnEmptyDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnEmptyDestructionBinFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnEmptyDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnEmptyDestructionBinFlag != value))
				{
					this.OnGCSMPrintReceiptOnEmptyDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnEmptyDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnEmptyDestructionBinFlag");
					this.OnGCSMPrintReceiptOnEmptyDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnFillPrescriptionFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnFillPrescriptionFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnFillPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnFillPrescriptionFlag != value))
				{
					this.OnGCSMPrintReceiptOnFillPrescriptionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnFillPrescriptionFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnFillPrescriptionFlag");
					this.OnGCSMPrintReceiptOnFillPrescriptionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnManageStockFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnManageStockFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnManageStockFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnManageStockFlag != value))
				{
					this.OnGCSMPrintReceiptOnManageStockFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnManageStockFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnManageStockFlag");
					this.OnGCSMPrintReceiptOnManageStockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnNonStandardCompoundRecordFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnNonStandardCompoundRecordFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnNonStandardCompoundRecordFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnNonStandardCompoundRecordFlag != value))
				{
					this.OnGCSMPrintReceiptOnNonStandardCompoundRecordFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnNonStandardCompoundRecordFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnNonStandardCompoundRecordFlag");
					this.OnGCSMPrintReceiptOnNonStandardCompoundRecordFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnOutdateFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnOutdateFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnOutdateFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnOutdateFlag != value))
				{
					this.OnGCSMPrintReceiptOnOutdateFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnOutdateFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnOutdateFlag");
					this.OnGCSMPrintReceiptOnOutdateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnPendingStandardCompoundRecordFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnPendingStandardCompoundRecordFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnPendingStandardCompoundRecordFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnPendingStandardCompoundRecordFlag != value))
				{
					this.OnGCSMPrintReceiptOnPendingStandardCompoundRecordFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnPendingStandardCompoundRecordFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnPendingStandardCompoundRecordFlag");
					this.OnGCSMPrintReceiptOnPendingStandardCompoundRecordFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnRecallFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnRecallFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnRecallFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnRecallFlag != value))
				{
					this.OnGCSMPrintReceiptOnRecallFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnRecallFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnRecallFlag");
					this.OnGCSMPrintReceiptOnRecallFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnReceiveFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnReceiveFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnReceiveFlag != value))
				{
					this.OnGCSMPrintReceiptOnReceiveFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnReceiveFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnReceiveFlag");
					this.OnGCSMPrintReceiptOnReceiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnReturnFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnReturnFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnReturnFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnReturnFlag != value))
				{
					this.OnGCSMPrintReceiptOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnReturnFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnReturnFlag");
					this.OnGCSMPrintReceiptOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnReverseNonStandardCompoundFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnReverseNonStandardCompoundFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnReverseNonStandardCompoundFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnReverseNonStandardCompoundFlag != value))
				{
					this.OnGCSMPrintReceiptOnReverseNonStandardCompoundFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnReverseNonStandardCompoundFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnReverseNonStandardCompoundFlag");
					this.OnGCSMPrintReceiptOnReverseNonStandardCompoundFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag != value))
				{
					this.OnGCSMPrintReceiptOnStandardCompoundDispositionSummaryFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag");
					this.OnGCSMPrintReceiptOnStandardCompoundDispositionSummaryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnSellFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnSellFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnSellFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnSellFlag != value))
				{
					this.OnGCSMPrintReceiptOnSellFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnSellFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnSellFlag");
					this.OnGCSMPrintReceiptOnSellFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnUnloadFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnUnloadFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnUnloadFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnUnloadFlag != value))
				{
					this.OnGCSMPrintReceiptOnUnloadFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnUnloadFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnUnloadFlag");
					this.OnGCSMPrintReceiptOnUnloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnWasteFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintReceiptOnWasteFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnWasteFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnWasteFlag != value))
				{
					this.OnGCSMPrintReceiptOnWasteFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintReceiptOnWasteFlag = value;
					this.SendPropertyChanged("GCSMPrintReceiptOnWasteFlag");
					this.OnGCSMPrintReceiptOnWasteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnAccessDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnAccessDestructionBinFlag
		{
			get
			{
				return this._GCSMPrintLabelOnAccessDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnAccessDestructionBinFlag != value))
				{
					this.OnGCSMPrintLabelOnAccessDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnAccessDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnAccessDestructionBinFlag");
					this.OnGCSMPrintLabelOnAccessDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnFillPrescriptionFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnFillPrescriptionFlag
		{
			get
			{
				return this._GCSMPrintLabelOnFillPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnFillPrescriptionFlag != value))
				{
					this.OnGCSMPrintLabelOnFillPrescriptionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnFillPrescriptionFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnFillPrescriptionFlag");
					this.OnGCSMPrintLabelOnFillPrescriptionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnNonStandardCompoundIngredientFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnNonStandardCompoundIngredientFlag
		{
			get
			{
				return this._GCSMPrintLabelOnNonStandardCompoundIngredientFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnNonStandardCompoundIngredientFlag != value))
				{
					this.OnGCSMPrintLabelOnNonStandardCompoundIngredientFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnNonStandardCompoundIngredientFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnNonStandardCompoundIngredientFlag");
					this.OnGCSMPrintLabelOnNonStandardCompoundIngredientFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnNonStandardCompoundMedFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnNonStandardCompoundMedFlag
		{
			get
			{
				return this._GCSMPrintLabelOnNonStandardCompoundMedFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnNonStandardCompoundMedFlag != value))
				{
					this.OnGCSMPrintLabelOnNonStandardCompoundMedFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnNonStandardCompoundMedFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnNonStandardCompoundMedFlag");
					this.OnGCSMPrintLabelOnNonStandardCompoundMedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnOutdateFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnOutdateFlag
		{
			get
			{
				return this._GCSMPrintLabelOnOutdateFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnOutdateFlag != value))
				{
					this.OnGCSMPrintLabelOnOutdateFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnOutdateFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnOutdateFlag");
					this.OnGCSMPrintLabelOnOutdateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnRecallFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnRecallFlag
		{
			get
			{
				return this._GCSMPrintLabelOnRecallFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnRecallFlag != value))
				{
					this.OnGCSMPrintLabelOnRecallFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnRecallFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnRecallFlag");
					this.OnGCSMPrintLabelOnRecallFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnReturnFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnReturnFlag
		{
			get
			{
				return this._GCSMPrintLabelOnReturnFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnReturnFlag != value))
				{
					this.OnGCSMPrintLabelOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnReturnFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnReturnFlag");
					this.OnGCSMPrintLabelOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnSellFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnSellFlag
		{
			get
			{
				return this._GCSMPrintLabelOnSellFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnSellFlag != value))
				{
					this.OnGCSMPrintLabelOnSellFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnSellFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnSellFlag");
					this.OnGCSMPrintLabelOnSellFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnStandardCompoundMedFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnStandardCompoundMedFlag
		{
			get
			{
				return this._GCSMPrintLabelOnStandardCompoundMedFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnStandardCompoundMedFlag != value))
				{
					this.OnGCSMPrintLabelOnStandardCompoundMedFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnStandardCompoundMedFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnStandardCompoundMedFlag");
					this.OnGCSMPrintLabelOnStandardCompoundMedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnStandardCompoundIngredientFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnStandardCompoundIngredientFlag
		{
			get
			{
				return this._GCSMPrintLabelOnStandardCompoundIngredientFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnStandardCompoundIngredientFlag != value))
				{
					this.OnGCSMPrintLabelOnStandardCompoundIngredientFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnStandardCompoundIngredientFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnStandardCompoundIngredientFlag");
					this.OnGCSMPrintLabelOnStandardCompoundIngredientFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnWasteFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintLabelOnWasteFlag
		{
			get
			{
				return this._GCSMPrintLabelOnWasteFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnWasteFlag != value))
				{
					this.OnGCSMPrintLabelOnWasteFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelOnWasteFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelOnWasteFlag");
					this.OnGCSMPrintLabelOnWasteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnAutorestockFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintPullListOnAutorestockFlag
		{
			get
			{
				return this._GCSMPrintPullListOnAutorestockFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnAutorestockFlag != value))
				{
					this.OnGCSMPrintPullListOnAutorestockFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintPullListOnAutorestockFlag = value;
					this.SendPropertyChanged("GCSMPrintPullListOnAutorestockFlag");
					this.OnGCSMPrintPullListOnAutorestockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnDispenseToLocationFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintPullListOnDispenseToLocationFlag
		{
			get
			{
				return this._GCSMPrintPullListOnDispenseToLocationFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnDispenseToLocationFlag != value))
				{
					this.OnGCSMPrintPullListOnDispenseToLocationFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintPullListOnDispenseToLocationFlag = value;
					this.SendPropertyChanged("GCSMPrintPullListOnDispenseToLocationFlag");
					this.OnGCSMPrintPullListOnDispenseToLocationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnKitFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintPullListOnKitFlag
		{
			get
			{
				return this._GCSMPrintPullListOnKitFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnKitFlag != value))
				{
					this.OnGCSMPrintPullListOnKitFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintPullListOnKitFlag = value;
					this.SendPropertyChanged("GCSMPrintPullListOnKitFlag");
					this.OnGCSMPrintPullListOnKitFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnKitComponentFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintPullListOnKitComponentFlag
		{
			get
			{
				return this._GCSMPrintPullListOnKitComponentFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnKitComponentFlag != value))
				{
					this.OnGCSMPrintPullListOnKitComponentFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintPullListOnKitComponentFlag = value;
					this.SendPropertyChanged("GCSMPrintPullListOnKitComponentFlag");
					this.OnGCSMPrintPullListOnKitComponentFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnManageExcessStockFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintPullListOnManageExcessStockFlag
		{
			get
			{
				return this._GCSMPrintPullListOnManageExcessStockFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnManageExcessStockFlag != value))
				{
					this.OnGCSMPrintPullListOnManageExcessStockFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintPullListOnManageExcessStockFlag = value;
					this.SendPropertyChanged("GCSMPrintPullListOnManageExcessStockFlag");
					this.OnGCSMPrintPullListOnManageExcessStockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnNonStandardCompoundFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintPullListOnNonStandardCompoundFlag
		{
			get
			{
				return this._GCSMPrintPullListOnNonStandardCompoundFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnNonStandardCompoundFlag != value))
				{
					this.OnGCSMPrintPullListOnNonStandardCompoundFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintPullListOnNonStandardCompoundFlag = value;
					this.SendPropertyChanged("GCSMPrintPullListOnNonStandardCompoundFlag");
					this.OnGCSMPrintPullListOnNonStandardCompoundFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnNonStandardCompoundIngredientFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintPullListOnNonStandardCompoundIngredientFlag
		{
			get
			{
				return this._GCSMPrintPullListOnNonStandardCompoundIngredientFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnNonStandardCompoundIngredientFlag != value))
				{
					this.OnGCSMPrintPullListOnNonStandardCompoundIngredientFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintPullListOnNonStandardCompoundIngredientFlag = value;
					this.SendPropertyChanged("GCSMPrintPullListOnNonStandardCompoundIngredientFlag");
					this.OnGCSMPrintPullListOnNonStandardCompoundIngredientFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnStandardCompoundFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintPullListOnStandardCompoundFlag
		{
			get
			{
				return this._GCSMPrintPullListOnStandardCompoundFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnStandardCompoundFlag != value))
				{
					this.OnGCSMPrintPullListOnStandardCompoundFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintPullListOnStandardCompoundFlag = value;
					this.SendPropertyChanged("GCSMPrintPullListOnStandardCompoundFlag");
					this.OnGCSMPrintPullListOnStandardCompoundFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnStandardCompoundIngredientFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintPullListOnStandardCompoundIngredientFlag
		{
			get
			{
				return this._GCSMPrintPullListOnStandardCompoundIngredientFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnStandardCompoundIngredientFlag != value))
				{
					this.OnGCSMPrintPullListOnStandardCompoundIngredientFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintPullListOnStandardCompoundIngredientFlag = value;
					this.SendPropertyChanged("GCSMPrintPullListOnStandardCompoundIngredientFlag");
					this.OnGCSMPrintPullListOnStandardCompoundIngredientFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMHideAreaFilterFlag", DbType="Bit NOT NULL")]
		public bool GCSMHideAreaFilterFlag
		{
			get
			{
				return this._GCSMHideAreaFilterFlag;
			}
			set
			{
				if ((this._GCSMHideAreaFilterFlag != value))
				{
					this.OnGCSMHideAreaFilterFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMHideAreaFilterFlag = value;
					this.SendPropertyChanged("GCSMHideAreaFilterFlag");
					this.OnGCSMHideAreaFilterFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMHideZoneFilterFlag", DbType="Bit NOT NULL")]
		public bool GCSMHideZoneFilterFlag
		{
			get
			{
				return this._GCSMHideZoneFilterFlag;
			}
			set
			{
				if ((this._GCSMHideZoneFilterFlag != value))
				{
					this.OnGCSMHideZoneFilterFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMHideZoneFilterFlag = value;
					this.SendPropertyChanged("GCSMHideZoneFilterFlag");
					this.OnGCSMHideZoneFilterFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCompareReportStandardRangeInternalCode", DbType="VarChar(20)")]
		public string GCSMCompareReportStandardRangeInternalCode
		{
			get
			{
				return this._GCSMCompareReportStandardRangeInternalCode;
			}
			set
			{
				if ((this._GCSMCompareReportStandardRangeInternalCode != value))
				{
					this.OnGCSMCompareReportStandardRangeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._GCSMCompareReportStandardRangeInternalCode = value;
					this.SendPropertyChanged("GCSMCompareReportStandardRangeInternalCode");
					this.OnGCSMCompareReportStandardRangeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMOriginDispensingDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GCSMOriginDispensingDeviceKey
		{
			get
			{
				return this._GCSMOriginDispensingDeviceKey;
			}
			set
			{
				if ((this._GCSMOriginDispensingDeviceKey != value))
				{
					this.OnGCSMOriginDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._GCSMOriginDispensingDeviceKey = value;
					this.SendPropertyChanged("GCSMOriginDispensingDeviceKey");
					this.OnGCSMOriginDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDestinationDispensingDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GCSMDestinationDispensingDeviceKey
		{
			get
			{
				return this._GCSMDestinationDispensingDeviceKey;
			}
			set
			{
				if ((this._GCSMDestinationDispensingDeviceKey != value))
				{
					this.OnGCSMDestinationDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._GCSMDestinationDispensingDeviceKey = value;
					this.SendPropertyChanged("GCSMDestinationDispensingDeviceKey");
					this.OnGCSMDestinationDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCompareReportViewFilterFocusedFlag", DbType="Bit NOT NULL")]
		public bool GCSMCompareReportViewFilterFocusedFlag
		{
			get
			{
				return this._GCSMCompareReportViewFilterFocusedFlag;
			}
			set
			{
				if ((this._GCSMCompareReportViewFilterFocusedFlag != value))
				{
					this.OnGCSMCompareReportViewFilterFocusedFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMCompareReportViewFilterFocusedFlag = value;
					this.SendPropertyChanged("GCSMCompareReportViewFilterFocusedFlag");
					this.OnGCSMCompareReportViewFilterFocusedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_DispensingDeviceStorageSpaceEntity", Storage="_DispensingDeviceStorageSpaceEntities", ThisKey="Key", OtherKey="DispensingDeviceKey")]
		public EntitySet<DispensingDeviceStorageSpaceEntity> DispensingDeviceStorageSpaceEntities
		{
			get
			{
				return this._DispensingDeviceStorageSpaceEntities;
			}
			set
			{
				this._DispensingDeviceStorageSpaceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_DispensingDeviceOverrideGroupEntity", Storage="_DispensingDeviceOverrideGroupEntities", ThisKey="Key", OtherKey="DispensingDeviceKey")]
		public EntitySet<DispensingDeviceOverrideGroupEntity> DispensingDeviceOverrideGroupEntities
		{
			get
			{
				return this._DispensingDeviceOverrideGroupEntities;
			}
			set
			{
				this._DispensingDeviceOverrideGroupEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_CriticalOverridePeriodEntity", Storage="_CriticalOverridePeriodEntities", ThisKey="Key", OtherKey="DispensingDeviceKey")]
		public EntitySet<CriticalOverridePeriodEntity> CriticalOverridePeriodEntities
		{
			get
			{
				return this._CriticalOverridePeriodEntities;
			}
			set
			{
				this._CriticalOverridePeriodEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_DispensingDeviceUnitRoomEntity", Storage="_DispensingDeviceUnitRoomEntities", ThisKey="Key", OtherKey="DispensingDeviceKey")]
		public EntitySet<DispensingDeviceUnitRoomEntity> DispensingDeviceUnitRoomEntities
		{
			get
			{
				return this._DispensingDeviceUnitRoomEntities;
			}
			set
			{
				this._DispensingDeviceUnitRoomEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_DispensingDeviceSystemBusDeviceEntity", Storage="_DispensingDeviceSystemBusDeviceEntities", ThisKey="Key", OtherKey="DispensingDeviceKey")]
		public EntitySet<DispensingDeviceSystemBusDeviceEntity> DispensingDeviceSystemBusDeviceEntities
		{
			get
			{
				return this._DispensingDeviceSystemBusDeviceEntities;
			}
			set
			{
				this._DispensingDeviceSystemBusDeviceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_DispensingDeviceCriticalOverrideModeReasonEntity", Storage="_DispensingDeviceCriticalOverrideModeReasonEntities", ThisKey="Key", OtherKey="DispensingDeviceKey")]
		public EntitySet<DispensingDeviceCriticalOverrideModeReasonEntity> DispensingDeviceCriticalOverrideModeReasonEntities
		{
			get
			{
				return this._DispensingDeviceCriticalOverrideModeReasonEntities;
			}
			set
			{
				this._DispensingDeviceCriticalOverrideModeReasonEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZoneEntity_DispensingDeviceEntity", Storage="_ZoneEntity", ThisKey="ZoneKey", OtherKey="Key", IsForeignKey=true)]
		public ZoneEntity ZoneEntity
		{
			get
			{
				return this._ZoneEntity.Entity;
			}
			set
			{
				ZoneEntity previousValue = this._ZoneEntity.Entity;
				if (((previousValue != value) 
							|| (this._ZoneEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZoneEntity.Entity = null;
						previousValue.DispensingDeviceEntities.Remove(this);
					}
					this._ZoneEntity.Entity = value;
					if ((value != null))
					{
						value.DispensingDeviceEntities.Add(this);
						this._ZoneKey = value.Key;
					}
					else
					{
						this._ZoneKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ZoneEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceTypeEntity_DispensingDeviceEntity", Storage="_DispensingDeviceTypeEntity", ThisKey="DispensingDeviceTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public DispensingDeviceTypeEntity DispensingDeviceTypeEntity
		{
			get
			{
				return this._DispensingDeviceTypeEntity.Entity;
			}
			set
			{
				DispensingDeviceTypeEntity previousValue = this._DispensingDeviceTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._DispensingDeviceTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DispensingDeviceTypeEntity.Entity = null;
						previousValue.DispensingDeviceEntities.Remove(this);
					}
					this._DispensingDeviceTypeEntity.Entity = value;
					if ((value != null))
					{
						value.DispensingDeviceEntities.Add(this);
						this._DispensingDeviceTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._DispensingDeviceTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("DispensingDeviceTypeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VirtualStockLocationEntity_DispensingDeviceEntity", Storage="_VirtualStockLocationEntity", ThisKey="VirtualStockLocationKey", OtherKey="Key", IsForeignKey=true)]
		public VirtualStockLocationEntity VirtualStockLocationEntity
		{
			get
			{
				return this._VirtualStockLocationEntity.Entity;
			}
			set
			{
				VirtualStockLocationEntity previousValue = this._VirtualStockLocationEntity.Entity;
				if (((previousValue != value) 
							|| (this._VirtualStockLocationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VirtualStockLocationEntity.Entity = null;
						previousValue.DispensingDeviceEntities.Remove(this);
					}
					this._VirtualStockLocationEntity.Entity = value;
					if ((value != null))
					{
						value.DispensingDeviceEntities.Add(this);
						this._VirtualStockLocationKey = value.Key;
					}
					else
					{
						this._VirtualStockLocationKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("VirtualStockLocationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DispensingDeviceStorageSpaceEntities(DispensingDeviceStorageSpaceEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = this;
		}
		
		private void detach_DispensingDeviceStorageSpaceEntities(DispensingDeviceStorageSpaceEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = null;
		}
		
		private void attach_DispensingDeviceOverrideGroupEntities(DispensingDeviceOverrideGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = this;
		}
		
		private void detach_DispensingDeviceOverrideGroupEntities(DispensingDeviceOverrideGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = null;
		}
		
		private void attach_CriticalOverridePeriodEntities(CriticalOverridePeriodEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = this;
		}
		
		private void detach_CriticalOverridePeriodEntities(CriticalOverridePeriodEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = null;
		}
		
		private void attach_DispensingDeviceUnitRoomEntities(DispensingDeviceUnitRoomEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = this;
		}
		
		private void detach_DispensingDeviceUnitRoomEntities(DispensingDeviceUnitRoomEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = null;
		}
		
		private void attach_DispensingDeviceSystemBusDeviceEntities(DispensingDeviceSystemBusDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = this;
		}
		
		private void detach_DispensingDeviceSystemBusDeviceEntities(DispensingDeviceSystemBusDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = null;
		}
		
		private void attach_DispensingDeviceCriticalOverrideModeReasonEntities(DispensingDeviceCriticalOverrideModeReasonEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = this;
		}
		
		private void detach_DispensingDeviceCriticalOverrideModeReasonEntities(DispensingDeviceCriticalOverrideModeReasonEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_DispensingDeviceStorageSpaceCurrent")]
	public partial class DispensingDeviceStorageSpaceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.Guid _StorageSpaceKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.DateTime> _DisassociationUTCDateTime;
		
		private System.Nullable<System.DateTime> _DisassociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Nullable<System.Guid> _DisassociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private EntityRef<StorageSpaceEntity> _StorageSpaceEntity;
		
		private EntityRef<DispensingDeviceEntity> _DispensingDeviceEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnStorageSpaceKeyChanging(System.Guid value);
    partial void OnStorageSpaceKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnDisassociationUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDisassociationUTCDateTimeChanged();
    partial void OnDisassociationLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDisassociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnDisassociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDisassociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    #endregion
		
		public DispensingDeviceStorageSpaceEntity()
		{
			this._StorageSpaceEntity = default(EntityRef<StorageSpaceEntity>);
			this._DispensingDeviceEntity = default(EntityRef<DispensingDeviceEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DispensingDeviceStorageSpaceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					if (this._DispensingDeviceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceKey
		{
			get
			{
				return this._StorageSpaceKey;
			}
			set
			{
				if ((this._StorageSpaceKey != value))
				{
					if (this._StorageSpaceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageSpaceKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceKey = value;
					this.SendPropertyChanged("StorageSpaceKey");
					this.OnStorageSpaceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisassociationUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DisassociationUTCDateTime
		{
			get
			{
				return this._DisassociationUTCDateTime;
			}
			set
			{
				if ((this._DisassociationUTCDateTime != value))
				{
					this.OnDisassociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DisassociationUTCDateTime = value;
					this.SendPropertyChanged("DisassociationUTCDateTime");
					this.OnDisassociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisassociationLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DisassociationLocalDateTime
		{
			get
			{
				return this._DisassociationLocalDateTime;
			}
			set
			{
				if ((this._DisassociationLocalDateTime != value))
				{
					this.OnDisassociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DisassociationLocalDateTime = value;
					this.SendPropertyChanged("DisassociationLocalDateTime");
					this.OnDisassociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisassociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DisassociationActorKey
		{
			get
			{
				return this._DisassociationActorKey;
			}
			set
			{
				if ((this._DisassociationActorKey != value))
				{
					this.OnDisassociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._DisassociationActorKey = value;
					this.SendPropertyChanged("DisassociationActorKey");
					this.OnDisassociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceEntity_DispensingDeviceStorageSpaceEntity", Storage="_StorageSpaceEntity", ThisKey="StorageSpaceKey", OtherKey="Key", IsForeignKey=true)]
		public StorageSpaceEntity StorageSpaceEntity
		{
			get
			{
				return this._StorageSpaceEntity.Entity;
			}
			set
			{
				StorageSpaceEntity previousValue = this._StorageSpaceEntity.Entity;
				if (((previousValue != value) 
							|| (this._StorageSpaceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageSpaceEntity.Entity = null;
						previousValue.DispensingDeviceStorageSpaceEntities.Remove(this);
					}
					this._StorageSpaceEntity.Entity = value;
					if ((value != null))
					{
						value.DispensingDeviceStorageSpaceEntities.Add(this);
						this._StorageSpaceKey = value.Key;
					}
					else
					{
						this._StorageSpaceKey = default(System.Guid);
					}
					this.SendPropertyChanged("StorageSpaceEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_DispensingDeviceStorageSpaceEntity", Storage="_DispensingDeviceEntity", ThisKey="DispensingDeviceKey", OtherKey="Key", IsForeignKey=true)]
		public DispensingDeviceEntity DispensingDeviceEntity
		{
			get
			{
				return this._DispensingDeviceEntity.Entity;
			}
			set
			{
				DispensingDeviceEntity previousValue = this._DispensingDeviceEntity.Entity;
				if (((previousValue != value) 
							|| (this._DispensingDeviceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DispensingDeviceEntity.Entity = null;
						previousValue.DispensingDeviceStorageSpaceEntities.Remove(this);
					}
					this._DispensingDeviceEntity.Entity = value;
					if ((value != null))
					{
						value.DispensingDeviceStorageSpaceEntities.Add(this);
						this._DispensingDeviceKey = value.Key;
					}
					else
					{
						this._DispensingDeviceKey = default(System.Guid);
					}
					this.SendPropertyChanged("DispensingDeviceEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_StorageSpaceItemCurrent")]
	public partial class StorageSpaceItemEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _StorageSpaceItemSnapshotKey;
		
		private System.Guid _StorageSpaceKey;
		
		private System.Guid _ItemKey;
		
		private bool _DispensingDeviceEjectWithInventoryFlag;
		
		private System.Nullable<System.DateTime> _LastDispenseUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastDispenseLocalDateTime;
		
		private System.Nullable<System.DateTime> _LastInventoryUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastInventoryLocalDateTime;
		
		private System.Nullable<System.DateTime> _LastLoadRefillUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastLoadRefillLocalDateTime;
		
		private bool _LastLoadRefillSuccessfulScanFlag;
		
		private System.Nullable<System.Guid> _LastLoadRefillActorKey;
		
		private System.Nullable<System.DateTime> _LastRxCheckUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastRxCheckLocalDateTime;
		
		private System.Nullable<System.DateTime> _LoadUTCDateTime;
		
		private System.Nullable<System.DateTime> _LoadLocalDateTime;
		
		private System.Nullable<System.DateTime> _LastKnownUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastKnownLocalDateTime;
		
		private bool _PendedAtServerFlag;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private string _StorageSpaceItemStatusInternalCode;
		
		private System.Nullable<decimal> _ParQuantity;
		
		private System.Nullable<decimal> _RefillPointQuantity;
		
		private System.Nullable<decimal> _CriticalLowQuantity;
		
		private System.Nullable<decimal> _PhysicalMaximumQuantity;
		
		private bool _StandardStockWithinDispensingDeviceFlag;
		
		private System.Nullable<System.Guid> _IssueUOMKey;
		
		private bool _OutdateTrackingFlag;
		
		private bool _DispenseFractionFlag;
		
		private bool _FromExternalSystemFlag;
		
		private System.Nullable<System.Guid> _SystemBusDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<StorageSpaceEntity> _StorageSpaceEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStorageSpaceItemSnapshotKeyChanging(System.Guid value);
    partial void OnStorageSpaceItemSnapshotKeyChanged();
    partial void OnStorageSpaceKeyChanging(System.Guid value);
    partial void OnStorageSpaceKeyChanged();
    partial void OnItemKeyChanging(System.Guid value);
    partial void OnItemKeyChanged();
    partial void OnDispensingDeviceEjectWithInventoryFlagChanging(bool value);
    partial void OnDispensingDeviceEjectWithInventoryFlagChanged();
    partial void OnLastDispenseUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDispenseUTCDateTimeChanged();
    partial void OnLastDispenseLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDispenseLocalDateTimeChanged();
    partial void OnLastInventoryUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastInventoryUTCDateTimeChanged();
    partial void OnLastInventoryLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastInventoryLocalDateTimeChanged();
    partial void OnLastLoadRefillUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoadRefillUTCDateTimeChanged();
    partial void OnLastLoadRefillLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoadRefillLocalDateTimeChanged();
    partial void OnLastLoadRefillSuccessfulScanFlagChanging(bool value);
    partial void OnLastLoadRefillSuccessfulScanFlagChanged();
    partial void OnLastLoadRefillActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastLoadRefillActorKeyChanged();
    partial void OnLastRxCheckUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRxCheckUTCDateTimeChanged();
    partial void OnLastRxCheckLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRxCheckLocalDateTimeChanged();
    partial void OnLoadUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLoadUTCDateTimeChanged();
    partial void OnLoadLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLoadLocalDateTimeChanged();
    partial void OnLastKnownUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastKnownUTCDateTimeChanged();
    partial void OnLastKnownLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastKnownLocalDateTimeChanged();
    partial void OnPendedAtServerFlagChanging(bool value);
    partial void OnPendedAtServerFlagChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnStorageSpaceItemStatusInternalCodeChanging(string value);
    partial void OnStorageSpaceItemStatusInternalCodeChanged();
    partial void OnParQuantityChanging(System.Nullable<decimal> value);
    partial void OnParQuantityChanged();
    partial void OnRefillPointQuantityChanging(System.Nullable<decimal> value);
    partial void OnRefillPointQuantityChanged();
    partial void OnCriticalLowQuantityChanging(System.Nullable<decimal> value);
    partial void OnCriticalLowQuantityChanged();
    partial void OnPhysicalMaximumQuantityChanging(System.Nullable<decimal> value);
    partial void OnPhysicalMaximumQuantityChanged();
    partial void OnStandardStockWithinDispensingDeviceFlagChanging(bool value);
    partial void OnStandardStockWithinDispensingDeviceFlagChanged();
    partial void OnIssueUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnIssueUOMKeyChanged();
    partial void OnOutdateTrackingFlagChanging(bool value);
    partial void OnOutdateTrackingFlagChanged();
    partial void OnDispenseFractionFlagChanging(bool value);
    partial void OnDispenseFractionFlagChanged();
    partial void OnFromExternalSystemFlagChanging(bool value);
    partial void OnFromExternalSystemFlagChanged();
    partial void OnSystemBusDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnSystemBusDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public StorageSpaceItemEntity()
		{
			this._StorageSpaceEntity = default(EntityRef<StorageSpaceEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StorageSpaceItemKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceItemSnapshotKey
		{
			get
			{
				return this._StorageSpaceItemSnapshotKey;
			}
			set
			{
				if ((this._StorageSpaceItemSnapshotKey != value))
				{
					this.OnStorageSpaceItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceItemSnapshotKey = value;
					this.SendPropertyChanged("StorageSpaceItemSnapshotKey");
					this.OnStorageSpaceItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceKey
		{
			get
			{
				return this._StorageSpaceKey;
			}
			set
			{
				if ((this._StorageSpaceKey != value))
				{
					if (this._StorageSpaceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageSpaceKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceKey = value;
					this.SendPropertyChanged("StorageSpaceKey");
					this.OnStorageSpaceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceEjectWithInventoryFlag", DbType="Bit NOT NULL")]
		public bool DispensingDeviceEjectWithInventoryFlag
		{
			get
			{
				return this._DispensingDeviceEjectWithInventoryFlag;
			}
			set
			{
				if ((this._DispensingDeviceEjectWithInventoryFlag != value))
				{
					this.OnDispensingDeviceEjectWithInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceEjectWithInventoryFlag = value;
					this.SendPropertyChanged("DispensingDeviceEjectWithInventoryFlag");
					this.OnDispensingDeviceEjectWithInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDispenseUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastDispenseUTCDateTime
		{
			get
			{
				return this._LastDispenseUTCDateTime;
			}
			set
			{
				if ((this._LastDispenseUTCDateTime != value))
				{
					this.OnLastDispenseUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastDispenseUTCDateTime = value;
					this.SendPropertyChanged("LastDispenseUTCDateTime");
					this.OnLastDispenseUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDispenseLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastDispenseLocalDateTime
		{
			get
			{
				return this._LastDispenseLocalDateTime;
			}
			set
			{
				if ((this._LastDispenseLocalDateTime != value))
				{
					this.OnLastDispenseLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastDispenseLocalDateTime = value;
					this.SendPropertyChanged("LastDispenseLocalDateTime");
					this.OnLastDispenseLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastInventoryUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastInventoryUTCDateTime
		{
			get
			{
				return this._LastInventoryUTCDateTime;
			}
			set
			{
				if ((this._LastInventoryUTCDateTime != value))
				{
					this.OnLastInventoryUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastInventoryUTCDateTime = value;
					this.SendPropertyChanged("LastInventoryUTCDateTime");
					this.OnLastInventoryUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastInventoryLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastInventoryLocalDateTime
		{
			get
			{
				return this._LastInventoryLocalDateTime;
			}
			set
			{
				if ((this._LastInventoryLocalDateTime != value))
				{
					this.OnLastInventoryLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastInventoryLocalDateTime = value;
					this.SendPropertyChanged("LastInventoryLocalDateTime");
					this.OnLastInventoryLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoadRefillUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastLoadRefillUTCDateTime
		{
			get
			{
				return this._LastLoadRefillUTCDateTime;
			}
			set
			{
				if ((this._LastLoadRefillUTCDateTime != value))
				{
					this.OnLastLoadRefillUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoadRefillUTCDateTime = value;
					this.SendPropertyChanged("LastLoadRefillUTCDateTime");
					this.OnLastLoadRefillUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoadRefillLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastLoadRefillLocalDateTime
		{
			get
			{
				return this._LastLoadRefillLocalDateTime;
			}
			set
			{
				if ((this._LastLoadRefillLocalDateTime != value))
				{
					this.OnLastLoadRefillLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoadRefillLocalDateTime = value;
					this.SendPropertyChanged("LastLoadRefillLocalDateTime");
					this.OnLastLoadRefillLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoadRefillSuccessfulScanFlag", DbType="Bit NOT NULL")]
		public bool LastLoadRefillSuccessfulScanFlag
		{
			get
			{
				return this._LastLoadRefillSuccessfulScanFlag;
			}
			set
			{
				if ((this._LastLoadRefillSuccessfulScanFlag != value))
				{
					this.OnLastLoadRefillSuccessfulScanFlagChanging(value);
					this.SendPropertyChanging();
					this._LastLoadRefillSuccessfulScanFlag = value;
					this.SendPropertyChanged("LastLoadRefillSuccessfulScanFlag");
					this.OnLastLoadRefillSuccessfulScanFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoadRefillActorKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LastLoadRefillActorKey
		{
			get
			{
				return this._LastLoadRefillActorKey;
			}
			set
			{
				if ((this._LastLoadRefillActorKey != value))
				{
					this.OnLastLoadRefillActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastLoadRefillActorKey = value;
					this.SendPropertyChanged("LastLoadRefillActorKey");
					this.OnLastLoadRefillActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRxCheckUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastRxCheckUTCDateTime
		{
			get
			{
				return this._LastRxCheckUTCDateTime;
			}
			set
			{
				if ((this._LastRxCheckUTCDateTime != value))
				{
					this.OnLastRxCheckUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastRxCheckUTCDateTime = value;
					this.SendPropertyChanged("LastRxCheckUTCDateTime");
					this.OnLastRxCheckUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRxCheckLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastRxCheckLocalDateTime
		{
			get
			{
				return this._LastRxCheckLocalDateTime;
			}
			set
			{
				if ((this._LastRxCheckLocalDateTime != value))
				{
					this.OnLastRxCheckLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastRxCheckLocalDateTime = value;
					this.SendPropertyChanged("LastRxCheckLocalDateTime");
					this.OnLastRxCheckLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LoadUTCDateTime
		{
			get
			{
				return this._LoadUTCDateTime;
			}
			set
			{
				if ((this._LoadUTCDateTime != value))
				{
					this.OnLoadUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LoadUTCDateTime = value;
					this.SendPropertyChanged("LoadUTCDateTime");
					this.OnLoadUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LoadLocalDateTime
		{
			get
			{
				return this._LoadLocalDateTime;
			}
			set
			{
				if ((this._LoadLocalDateTime != value))
				{
					this.OnLoadLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LoadLocalDateTime = value;
					this.SendPropertyChanged("LoadLocalDateTime");
					this.OnLoadLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastKnownUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastKnownUTCDateTime
		{
			get
			{
				return this._LastKnownUTCDateTime;
			}
			set
			{
				if ((this._LastKnownUTCDateTime != value))
				{
					this.OnLastKnownUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastKnownUTCDateTime = value;
					this.SendPropertyChanged("LastKnownUTCDateTime");
					this.OnLastKnownUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastKnownLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastKnownLocalDateTime
		{
			get
			{
				return this._LastKnownLocalDateTime;
			}
			set
			{
				if ((this._LastKnownLocalDateTime != value))
				{
					this.OnLastKnownLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastKnownLocalDateTime = value;
					this.SendPropertyChanged("LastKnownLocalDateTime");
					this.OnLastKnownLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendedAtServerFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PendedAtServerFlag
		{
			get
			{
				return this._PendedAtServerFlag;
			}
			set
			{
				if ((this._PendedAtServerFlag != value))
				{
					this.OnPendedAtServerFlagChanging(value);
					this.SendPropertyChanging();
					this._PendedAtServerFlag = value;
					this.SendPropertyChanged("PendedAtServerFlag");
					this.OnPendedAtServerFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemStatusInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StorageSpaceItemStatusInternalCode
		{
			get
			{
				return this._StorageSpaceItemStatusInternalCode;
			}
			set
			{
				if ((this._StorageSpaceItemStatusInternalCode != value))
				{
					this.OnStorageSpaceItemStatusInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceItemStatusInternalCode = value;
					this.SendPropertyChanged("StorageSpaceItemStatusInternalCode");
					this.OnStorageSpaceItemStatusInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParQuantity", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ParQuantity
		{
			get
			{
				return this._ParQuantity;
			}
			set
			{
				if ((this._ParQuantity != value))
				{
					this.OnParQuantityChanging(value);
					this.SendPropertyChanging();
					this._ParQuantity = value;
					this.SendPropertyChanged("ParQuantity");
					this.OnParQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillPointQuantity", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RefillPointQuantity
		{
			get
			{
				return this._RefillPointQuantity;
			}
			set
			{
				if ((this._RefillPointQuantity != value))
				{
					this.OnRefillPointQuantityChanging(value);
					this.SendPropertyChanging();
					this._RefillPointQuantity = value;
					this.SendPropertyChanged("RefillPointQuantity");
					this.OnRefillPointQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalLowQuantity", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CriticalLowQuantity
		{
			get
			{
				return this._CriticalLowQuantity;
			}
			set
			{
				if ((this._CriticalLowQuantity != value))
				{
					this.OnCriticalLowQuantityChanging(value);
					this.SendPropertyChanging();
					this._CriticalLowQuantity = value;
					this.SendPropertyChanged("CriticalLowQuantity");
					this.OnCriticalLowQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalMaximumQuantity", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PhysicalMaximumQuantity
		{
			get
			{
				return this._PhysicalMaximumQuantity;
			}
			set
			{
				if ((this._PhysicalMaximumQuantity != value))
				{
					this.OnPhysicalMaximumQuantityChanging(value);
					this.SendPropertyChanging();
					this._PhysicalMaximumQuantity = value;
					this.SendPropertyChanged("PhysicalMaximumQuantity");
					this.OnPhysicalMaximumQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardStockWithinDispensingDeviceFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool StandardStockWithinDispensingDeviceFlag
		{
			get
			{
				return this._StandardStockWithinDispensingDeviceFlag;
			}
			set
			{
				if ((this._StandardStockWithinDispensingDeviceFlag != value))
				{
					this.OnStandardStockWithinDispensingDeviceFlagChanging(value);
					this.SendPropertyChanging();
					this._StandardStockWithinDispensingDeviceFlag = value;
					this.SendPropertyChanged("StandardStockWithinDispensingDeviceFlag");
					this.OnStandardStockWithinDispensingDeviceFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> IssueUOMKey
		{
			get
			{
				return this._IssueUOMKey;
			}
			set
			{
				if ((this._IssueUOMKey != value))
				{
					this.OnIssueUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._IssueUOMKey = value;
					this.SendPropertyChanged("IssueUOMKey");
					this.OnIssueUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdateTrackingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OutdateTrackingFlag
		{
			get
			{
				return this._OutdateTrackingFlag;
			}
			set
			{
				if ((this._OutdateTrackingFlag != value))
				{
					this.OnOutdateTrackingFlagChanging(value);
					this.SendPropertyChanging();
					this._OutdateTrackingFlag = value;
					this.SendPropertyChanged("OutdateTrackingFlag");
					this.OnOutdateTrackingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispenseFractionFlag", DbType="Bit NOT NULL")]
		public bool DispenseFractionFlag
		{
			get
			{
				return this._DispenseFractionFlag;
			}
			set
			{
				if ((this._DispenseFractionFlag != value))
				{
					this.OnDispenseFractionFlagChanging(value);
					this.SendPropertyChanging();
					this._DispenseFractionFlag = value;
					this.SendPropertyChanged("DispenseFractionFlag");
					this.OnDispenseFractionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromExternalSystemFlag", DbType="Bit NOT NULL")]
		public bool FromExternalSystemFlag
		{
			get
			{
				return this._FromExternalSystemFlag;
			}
			set
			{
				if ((this._FromExternalSystemFlag != value))
				{
					this.OnFromExternalSystemFlagChanging(value);
					this.SendPropertyChanging();
					this._FromExternalSystemFlag = value;
					this.SendPropertyChanged("FromExternalSystemFlag");
					this.OnFromExternalSystemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemBusDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> SystemBusDeviceKey
		{
			get
			{
				return this._SystemBusDeviceKey;
			}
			set
			{
				if ((this._SystemBusDeviceKey != value))
				{
					this.OnSystemBusDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._SystemBusDeviceKey = value;
					this.SendPropertyChanged("SystemBusDeviceKey");
					this.OnSystemBusDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceEntity_StorageSpaceItemEntity", Storage="_StorageSpaceEntity", ThisKey="StorageSpaceKey", OtherKey="Key", IsForeignKey=true)]
		public StorageSpaceEntity StorageSpaceEntity
		{
			get
			{
				return this._StorageSpaceEntity.Entity;
			}
			set
			{
				StorageSpaceEntity previousValue = this._StorageSpaceEntity.Entity;
				if (((previousValue != value) 
							|| (this._StorageSpaceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageSpaceEntity.Entity = null;
						previousValue.StorageSpaceItemEntities.Remove(this);
					}
					this._StorageSpaceEntity.Entity = value;
					if ((value != null))
					{
						value.StorageSpaceItemEntities.Add(this);
						this._StorageSpaceKey = value.Key;
					}
					else
					{
						this._StorageSpaceKey = default(System.Guid);
					}
					this.SendPropertyChanged("StorageSpaceEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_StorageSpaceCurrent")]
	public partial class StorageSpaceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _StorageSpaceSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.Guid> _ParentStorageSpaceKey;
		
		private string _StorageSpaceTypeInternalCode;
		
		private System.Nullable<System.Guid> _StorageSpaceFormKey;
		
		private string _StorageSpaceName;
		
		private string _StorageSpaceDescriptionText;
		
		private string _PositionID;
		
		private System.Nullable<System.Guid> _AnchorStorageSpaceKey;
		
		private string _SerialID;
		
		private string _RegistrySerialID;
		
		private string _ProductName;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private System.Nullable<System.Guid> _SystemBusDeviceKey;
		
		private System.Nullable<System.Guid> _SecondSystemBusDeviceKey;
		
		private string _MiniDrawerTrayModeInternalCode;
		
		private string _PendingMiniDrawerTrayModeInternalCode;
		
		private string _ParentMiniDrawerTrayModeInternalCode;
		
		private string _ParentPendingMiniDrawerTrayModeInternalCode;
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		private string _StorageSpaceAbbreviatedName;
		
		private string _StorageSpaceShortName;
		
		private string _SortValue;
		
		private bool _FailureInHierarchyFlag;
		
		private bool _DefrostInHierarchyFlag;
		
		private System.Nullable<byte> _LevelNumber;
		
		private bool _MoreThanOneItemFlag;
		
		private bool _UnavailableForInventoryFlag;
		
		private bool _MobileFlag;
		
		private bool _RestrictedAccessFlag;
		
		private System.Nullable<long> _ShipToID;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<System.DateTime> _LastAccessedUTCDateTime;
		
		private string _InteriorCabinetLightIntensityModeInternalCode;
		
		private string _StackedSerialID;
		
		private EntitySet<DispensingDeviceStorageSpaceEntity> _DispensingDeviceStorageSpaceEntities;
		
		private EntitySet<StorageSpaceItemEntity> _StorageSpaceItemEntities;
		
		private EntitySet<StorageSpaceStateEntity> _StorageSpaceStateEntities;
		
		private EntityRef<StorageSpaceTypeEntity> _StorageSpaceTypeEntity;
		
		private EntityRef<StorageSpaceFormEntity> _StorageSpaceFormEntity;
		
		private EntityRef<MiniDrawerTrayModeEntity> _MiniDrawerTrayModeEntity;
		
		private EntityRef<MiniDrawerTrayModeEntity> _ParentMiniDrawerTrayModeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStorageSpaceSnapshotKeyChanging(System.Guid value);
    partial void OnStorageSpaceSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnParentStorageSpaceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnParentStorageSpaceKeyChanged();
    partial void OnStorageSpaceTypeInternalCodeChanging(string value);
    partial void OnStorageSpaceTypeInternalCodeChanged();
    partial void OnStorageSpaceFormKeyChanging(System.Nullable<System.Guid> value);
    partial void OnStorageSpaceFormKeyChanged();
    partial void OnStorageSpaceNameChanging(string value);
    partial void OnStorageSpaceNameChanged();
    partial void OnStorageSpaceDescriptionTextChanging(string value);
    partial void OnStorageSpaceDescriptionTextChanged();
    partial void OnPositionIDChanging(string value);
    partial void OnPositionIDChanged();
    partial void OnAnchorStorageSpaceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAnchorStorageSpaceKeyChanged();
    partial void OnSerialIDChanging(string value);
    partial void OnSerialIDChanged();
    partial void OnRegistrySerialIDChanging(string value);
    partial void OnRegistrySerialIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnFacilityKeyChanging(System.Nullable<System.Guid> value);
    partial void OnFacilityKeyChanged();
    partial void OnSystemBusDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnSystemBusDeviceKeyChanged();
    partial void OnSecondSystemBusDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnSecondSystemBusDeviceKeyChanged();
    partial void OnMiniDrawerTrayModeInternalCodeChanging(string value);
    partial void OnMiniDrawerTrayModeInternalCodeChanged();
    partial void OnPendingMiniDrawerTrayModeInternalCodeChanging(string value);
    partial void OnPendingMiniDrawerTrayModeInternalCodeChanged();
    partial void OnParentMiniDrawerTrayModeInternalCodeChanging(string value);
    partial void OnParentMiniDrawerTrayModeInternalCodeChanged();
    partial void OnParentPendingMiniDrawerTrayModeInternalCodeChanging(string value);
    partial void OnParentPendingMiniDrawerTrayModeInternalCodeChanged();
    partial void OnDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnStorageSpaceAbbreviatedNameChanging(string value);
    partial void OnStorageSpaceAbbreviatedNameChanged();
    partial void OnStorageSpaceShortNameChanging(string value);
    partial void OnStorageSpaceShortNameChanged();
    partial void OnSortValueChanging(string value);
    partial void OnSortValueChanged();
    partial void OnFailureInHierarchyFlagChanging(bool value);
    partial void OnFailureInHierarchyFlagChanged();
    partial void OnDefrostInHierarchyFlagChanging(bool value);
    partial void OnDefrostInHierarchyFlagChanged();
    partial void OnLevelNumberChanging(System.Nullable<byte> value);
    partial void OnLevelNumberChanged();
    partial void OnMoreThanOneItemFlagChanging(bool value);
    partial void OnMoreThanOneItemFlagChanged();
    partial void OnUnavailableForInventoryFlagChanging(bool value);
    partial void OnUnavailableForInventoryFlagChanged();
    partial void OnMobileFlagChanging(bool value);
    partial void OnMobileFlagChanged();
    partial void OnRestrictedAccessFlagChanging(bool value);
    partial void OnRestrictedAccessFlagChanged();
    partial void OnShipToIDChanging(System.Nullable<long> value);
    partial void OnShipToIDChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnLastAccessedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastAccessedUTCDateTimeChanged();
    partial void OnInteriorCabinetLightIntensityModeInternalCodeChanging(string value);
    partial void OnInteriorCabinetLightIntensityModeInternalCodeChanged();
    partial void OnStackedSerialIDChanging(string value);
    partial void OnStackedSerialIDChanged();
    #endregion
		
		public StorageSpaceEntity()
		{
			this._DispensingDeviceStorageSpaceEntities = new EntitySet<DispensingDeviceStorageSpaceEntity>(new Action<DispensingDeviceStorageSpaceEntity>(this.attach_DispensingDeviceStorageSpaceEntities), new Action<DispensingDeviceStorageSpaceEntity>(this.detach_DispensingDeviceStorageSpaceEntities));
			this._StorageSpaceItemEntities = new EntitySet<StorageSpaceItemEntity>(new Action<StorageSpaceItemEntity>(this.attach_StorageSpaceItemEntities), new Action<StorageSpaceItemEntity>(this.detach_StorageSpaceItemEntities));
			this._StorageSpaceStateEntities = new EntitySet<StorageSpaceStateEntity>(new Action<StorageSpaceStateEntity>(this.attach_StorageSpaceStateEntities), new Action<StorageSpaceStateEntity>(this.detach_StorageSpaceStateEntities));
			this._StorageSpaceTypeEntity = default(EntityRef<StorageSpaceTypeEntity>);
			this._StorageSpaceFormEntity = default(EntityRef<StorageSpaceFormEntity>);
			this._MiniDrawerTrayModeEntity = default(EntityRef<MiniDrawerTrayModeEntity>);
			this._ParentMiniDrawerTrayModeEntity = default(EntityRef<MiniDrawerTrayModeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StorageSpaceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceSnapshotKey
		{
			get
			{
				return this._StorageSpaceSnapshotKey;
			}
			set
			{
				if ((this._StorageSpaceSnapshotKey != value))
				{
					this.OnStorageSpaceSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceSnapshotKey = value;
					this.SendPropertyChanged("StorageSpaceSnapshotKey");
					this.OnStorageSpaceSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentStorageSpaceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ParentStorageSpaceKey
		{
			get
			{
				return this._ParentStorageSpaceKey;
			}
			set
			{
				if ((this._ParentStorageSpaceKey != value))
				{
					this.OnParentStorageSpaceKeyChanging(value);
					this.SendPropertyChanging();
					this._ParentStorageSpaceKey = value;
					this.SendPropertyChanged("ParentStorageSpaceKey");
					this.OnParentStorageSpaceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceTypeInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StorageSpaceTypeInternalCode
		{
			get
			{
				return this._StorageSpaceTypeInternalCode;
			}
			set
			{
				if ((this._StorageSpaceTypeInternalCode != value))
				{
					if (this._StorageSpaceTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageSpaceTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceTypeInternalCode = value;
					this.SendPropertyChanged("StorageSpaceTypeInternalCode");
					this.OnStorageSpaceTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceFormKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> StorageSpaceFormKey
		{
			get
			{
				return this._StorageSpaceFormKey;
			}
			set
			{
				if ((this._StorageSpaceFormKey != value))
				{
					if (this._StorageSpaceFormEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageSpaceFormKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceFormKey = value;
					this.SendPropertyChanged("StorageSpaceFormKey");
					this.OnStorageSpaceFormKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string StorageSpaceName
		{
			get
			{
				return this._StorageSpaceName;
			}
			set
			{
				if ((this._StorageSpaceName != value))
				{
					this.OnStorageSpaceNameChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceName = value;
					this.SendPropertyChanged("StorageSpaceName");
					this.OnStorageSpaceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceDescriptionText", DbType="VarChar(200)")]
		public string StorageSpaceDescriptionText
		{
			get
			{
				return this._StorageSpaceDescriptionText;
			}
			set
			{
				if ((this._StorageSpaceDescriptionText != value))
				{
					this.OnStorageSpaceDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceDescriptionText = value;
					this.SendPropertyChanged("StorageSpaceDescriptionText");
					this.OnStorageSpaceDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnchorStorageSpaceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AnchorStorageSpaceKey
		{
			get
			{
				return this._AnchorStorageSpaceKey;
			}
			set
			{
				if ((this._AnchorStorageSpaceKey != value))
				{
					this.OnAnchorStorageSpaceKeyChanging(value);
					this.SendPropertyChanging();
					this._AnchorStorageSpaceKey = value;
					this.SendPropertyChanged("AnchorStorageSpaceKey");
					this.OnAnchorStorageSpaceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialID", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string SerialID
		{
			get
			{
				return this._SerialID;
			}
			set
			{
				if ((this._SerialID != value))
				{
					this.OnSerialIDChanging(value);
					this.SendPropertyChanging();
					this._SerialID = value;
					this.SendPropertyChanged("SerialID");
					this.OnSerialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrySerialID", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string RegistrySerialID
		{
			get
			{
				return this._RegistrySerialID;
			}
			set
			{
				if ((this._RegistrySerialID != value))
				{
					this.OnRegistrySerialIDChanging(value);
					this.SendPropertyChanging();
					this._RegistrySerialID = value;
					this.SendPropertyChanged("RegistrySerialID");
					this.OnRegistrySerialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemBusDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> SystemBusDeviceKey
		{
			get
			{
				return this._SystemBusDeviceKey;
			}
			set
			{
				if ((this._SystemBusDeviceKey != value))
				{
					this.OnSystemBusDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._SystemBusDeviceKey = value;
					this.SendPropertyChanged("SystemBusDeviceKey");
					this.OnSystemBusDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondSystemBusDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SecondSystemBusDeviceKey
		{
			get
			{
				return this._SecondSystemBusDeviceKey;
			}
			set
			{
				if ((this._SecondSystemBusDeviceKey != value))
				{
					this.OnSecondSystemBusDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._SecondSystemBusDeviceKey = value;
					this.SendPropertyChanged("SecondSystemBusDeviceKey");
					this.OnSecondSystemBusDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayModeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string MiniDrawerTrayModeInternalCode
		{
			get
			{
				return this._MiniDrawerTrayModeInternalCode;
			}
			set
			{
				if ((this._MiniDrawerTrayModeInternalCode != value))
				{
					if (this._MiniDrawerTrayModeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMiniDrawerTrayModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._MiniDrawerTrayModeInternalCode = value;
					this.SendPropertyChanged("MiniDrawerTrayModeInternalCode");
					this.OnMiniDrawerTrayModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingMiniDrawerTrayModeInternalCode", DbType="VarChar(10)")]
		public string PendingMiniDrawerTrayModeInternalCode
		{
			get
			{
				return this._PendingMiniDrawerTrayModeInternalCode;
			}
			set
			{
				if ((this._PendingMiniDrawerTrayModeInternalCode != value))
				{
					this.OnPendingMiniDrawerTrayModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._PendingMiniDrawerTrayModeInternalCode = value;
					this.SendPropertyChanged("PendingMiniDrawerTrayModeInternalCode");
					this.OnPendingMiniDrawerTrayModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMiniDrawerTrayModeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ParentMiniDrawerTrayModeInternalCode
		{
			get
			{
				return this._ParentMiniDrawerTrayModeInternalCode;
			}
			set
			{
				if ((this._ParentMiniDrawerTrayModeInternalCode != value))
				{
					if (this._ParentMiniDrawerTrayModeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentMiniDrawerTrayModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ParentMiniDrawerTrayModeInternalCode = value;
					this.SendPropertyChanged("ParentMiniDrawerTrayModeInternalCode");
					this.OnParentMiniDrawerTrayModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPendingMiniDrawerTrayModeInternalCode", DbType="VarChar(10)")]
		public string ParentPendingMiniDrawerTrayModeInternalCode
		{
			get
			{
				return this._ParentPendingMiniDrawerTrayModeInternalCode;
			}
			set
			{
				if ((this._ParentPendingMiniDrawerTrayModeInternalCode != value))
				{
					this.OnParentPendingMiniDrawerTrayModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ParentPendingMiniDrawerTrayModeInternalCode = value;
					this.SendPropertyChanged("ParentPendingMiniDrawerTrayModeInternalCode");
					this.OnParentPendingMiniDrawerTrayModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceAbbreviatedName", DbType="NVarChar(100)")]
		public string StorageSpaceAbbreviatedName
		{
			get
			{
				return this._StorageSpaceAbbreviatedName;
			}
			set
			{
				if ((this._StorageSpaceAbbreviatedName != value))
				{
					this.OnStorageSpaceAbbreviatedNameChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceAbbreviatedName = value;
					this.SendPropertyChanged("StorageSpaceAbbreviatedName");
					this.OnStorageSpaceAbbreviatedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceShortName", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string StorageSpaceShortName
		{
			get
			{
				return this._StorageSpaceShortName;
			}
			set
			{
				if ((this._StorageSpaceShortName != value))
				{
					this.OnStorageSpaceShortNameChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceShortName = value;
					this.SendPropertyChanged("StorageSpaceShortName");
					this.OnStorageSpaceShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureInHierarchyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FailureInHierarchyFlag
		{
			get
			{
				return this._FailureInHierarchyFlag;
			}
			set
			{
				if ((this._FailureInHierarchyFlag != value))
				{
					this.OnFailureInHierarchyFlagChanging(value);
					this.SendPropertyChanging();
					this._FailureInHierarchyFlag = value;
					this.SendPropertyChanged("FailureInHierarchyFlag");
					this.OnFailureInHierarchyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefrostInHierarchyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DefrostInHierarchyFlag
		{
			get
			{
				return this._DefrostInHierarchyFlag;
			}
			set
			{
				if ((this._DefrostInHierarchyFlag != value))
				{
					this.OnDefrostInHierarchyFlagChanging(value);
					this.SendPropertyChanging();
					this._DefrostInHierarchyFlag = value;
					this.SendPropertyChanged("DefrostInHierarchyFlag");
					this.OnDefrostInHierarchyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelNumber", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> LevelNumber
		{
			get
			{
				return this._LevelNumber;
			}
			set
			{
				if ((this._LevelNumber != value))
				{
					this.OnLevelNumberChanging(value);
					this.SendPropertyChanging();
					this._LevelNumber = value;
					this.SendPropertyChanged("LevelNumber");
					this.OnLevelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoreThanOneItemFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MoreThanOneItemFlag
		{
			get
			{
				return this._MoreThanOneItemFlag;
			}
			set
			{
				if ((this._MoreThanOneItemFlag != value))
				{
					this.OnMoreThanOneItemFlagChanging(value);
					this.SendPropertyChanging();
					this._MoreThanOneItemFlag = value;
					this.SendPropertyChanged("MoreThanOneItemFlag");
					this.OnMoreThanOneItemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnavailableForInventoryFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool UnavailableForInventoryFlag
		{
			get
			{
				return this._UnavailableForInventoryFlag;
			}
			set
			{
				if ((this._UnavailableForInventoryFlag != value))
				{
					this.OnUnavailableForInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._UnavailableForInventoryFlag = value;
					this.SendPropertyChanged("UnavailableForInventoryFlag");
					this.OnUnavailableForInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileFlag", DbType="Bit NOT NULL")]
		public bool MobileFlag
		{
			get
			{
				return this._MobileFlag;
			}
			set
			{
				if ((this._MobileFlag != value))
				{
					this.OnMobileFlagChanging(value);
					this.SendPropertyChanging();
					this._MobileFlag = value;
					this.SendPropertyChanged("MobileFlag");
					this.OnMobileFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictedAccessFlag", DbType="Bit NOT NULL")]
		public bool RestrictedAccessFlag
		{
			get
			{
				return this._RestrictedAccessFlag;
			}
			set
			{
				if ((this._RestrictedAccessFlag != value))
				{
					this.OnRestrictedAccessFlagChanging(value);
					this.SendPropertyChanging();
					this._RestrictedAccessFlag = value;
					this.SendPropertyChanged("RestrictedAccessFlag");
					this.OnRestrictedAccessFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToID", DbType="BigInt")]
		public System.Nullable<long> ShipToID
		{
			get
			{
				return this._ShipToID;
			}
			set
			{
				if ((this._ShipToID != value))
				{
					this.OnShipToIDChanging(value);
					this.SendPropertyChanging();
					this._ShipToID = value;
					this.SendPropertyChanged("ShipToID");
					this.OnShipToIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccessedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastAccessedUTCDateTime
		{
			get
			{
				return this._LastAccessedUTCDateTime;
			}
			set
			{
				if ((this._LastAccessedUTCDateTime != value))
				{
					this.OnLastAccessedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastAccessedUTCDateTime = value;
					this.SendPropertyChanged("LastAccessedUTCDateTime");
					this.OnLastAccessedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorCabinetLightIntensityModeInternalCode", DbType="VarChar(10)")]
		public string InteriorCabinetLightIntensityModeInternalCode
		{
			get
			{
				return this._InteriorCabinetLightIntensityModeInternalCode;
			}
			set
			{
				if ((this._InteriorCabinetLightIntensityModeInternalCode != value))
				{
					this.OnInteriorCabinetLightIntensityModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InteriorCabinetLightIntensityModeInternalCode = value;
					this.SendPropertyChanged("InteriorCabinetLightIntensityModeInternalCode");
					this.OnInteriorCabinetLightIntensityModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackedSerialID", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string StackedSerialID
		{
			get
			{
				return this._StackedSerialID;
			}
			set
			{
				if ((this._StackedSerialID != value))
				{
					this.OnStackedSerialIDChanging(value);
					this.SendPropertyChanging();
					this._StackedSerialID = value;
					this.SendPropertyChanged("StackedSerialID");
					this.OnStackedSerialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceEntity_DispensingDeviceStorageSpaceEntity", Storage="_DispensingDeviceStorageSpaceEntities", ThisKey="Key", OtherKey="StorageSpaceKey")]
		public EntitySet<DispensingDeviceStorageSpaceEntity> DispensingDeviceStorageSpaceEntities
		{
			get
			{
				return this._DispensingDeviceStorageSpaceEntities;
			}
			set
			{
				this._DispensingDeviceStorageSpaceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceEntity_StorageSpaceItemEntity", Storage="_StorageSpaceItemEntities", ThisKey="Key", OtherKey="StorageSpaceKey")]
		public EntitySet<StorageSpaceItemEntity> StorageSpaceItemEntities
		{
			get
			{
				return this._StorageSpaceItemEntities;
			}
			set
			{
				this._StorageSpaceItemEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceEntity_StorageSpaceStateEntity", Storage="_StorageSpaceStateEntities", ThisKey="Key", OtherKey="StorageSpaceKey")]
		public EntitySet<StorageSpaceStateEntity> StorageSpaceStateEntities
		{
			get
			{
				return this._StorageSpaceStateEntities;
			}
			set
			{
				this._StorageSpaceStateEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceTypeEntity_StorageSpaceEntity", Storage="_StorageSpaceTypeEntity", ThisKey="StorageSpaceTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public StorageSpaceTypeEntity StorageSpaceTypeEntity
		{
			get
			{
				return this._StorageSpaceTypeEntity.Entity;
			}
			set
			{
				StorageSpaceTypeEntity previousValue = this._StorageSpaceTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._StorageSpaceTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageSpaceTypeEntity.Entity = null;
						previousValue.StorageSpaceEntities.Remove(this);
					}
					this._StorageSpaceTypeEntity.Entity = value;
					if ((value != null))
					{
						value.StorageSpaceEntities.Add(this);
						this._StorageSpaceTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._StorageSpaceTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("StorageSpaceTypeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceFormEntity_StorageSpaceEntity", Storage="_StorageSpaceFormEntity", ThisKey="StorageSpaceFormKey", OtherKey="Key", IsForeignKey=true)]
		public StorageSpaceFormEntity StorageSpaceFormEntity
		{
			get
			{
				return this._StorageSpaceFormEntity.Entity;
			}
			set
			{
				StorageSpaceFormEntity previousValue = this._StorageSpaceFormEntity.Entity;
				if (((previousValue != value) 
							|| (this._StorageSpaceFormEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageSpaceFormEntity.Entity = null;
						previousValue.StorageSpaceEntities.Remove(this);
					}
					this._StorageSpaceFormEntity.Entity = value;
					if ((value != null))
					{
						value.StorageSpaceEntities.Add(this);
						this._StorageSpaceFormKey = value.Key;
					}
					else
					{
						this._StorageSpaceFormKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StorageSpaceFormEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MiniDrawerTrayModeEntity_StorageSpaceEntity", Storage="_MiniDrawerTrayModeEntity", ThisKey="MiniDrawerTrayModeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public MiniDrawerTrayModeEntity MiniDrawerTrayModeEntity
		{
			get
			{
				return this._MiniDrawerTrayModeEntity.Entity;
			}
			set
			{
				if ((this._MiniDrawerTrayModeEntity.Entity != value))
				{
					this.SendPropertyChanging();
					this._MiniDrawerTrayModeEntity.Entity = value;
					this.SendPropertyChanged("MiniDrawerTrayModeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MiniDrawerTrayModeEntity_StorageSpaceEntity1", Storage="_ParentMiniDrawerTrayModeEntity", ThisKey="ParentMiniDrawerTrayModeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public MiniDrawerTrayModeEntity ParentMiniDrawerTrayModeEntity
		{
			get
			{
				return this._ParentMiniDrawerTrayModeEntity.Entity;
			}
			set
			{
				if ((this._ParentMiniDrawerTrayModeEntity.Entity != value))
				{
					this.SendPropertyChanging();
					this._ParentMiniDrawerTrayModeEntity.Entity = value;
					this.SendPropertyChanged("ParentMiniDrawerTrayModeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DispensingDeviceStorageSpaceEntities(DispensingDeviceStorageSpaceEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceEntity = this;
		}
		
		private void detach_DispensingDeviceStorageSpaceEntities(DispensingDeviceStorageSpaceEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceEntity = null;
		}
		
		private void attach_StorageSpaceItemEntities(StorageSpaceItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceEntity = this;
		}
		
		private void detach_StorageSpaceItemEntities(StorageSpaceItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceEntity = null;
		}
		
		private void attach_StorageSpaceStateEntities(StorageSpaceStateEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceEntity = this;
		}
		
		private void detach_StorageSpaceStateEntities(StorageSpaceStateEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.SystemBusDeviceType")]
	public partial class SystemBusDeviceTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _ProductGenerationInternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private string _GeneralSystemBusDeviceTypeInternalCode;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<GeneralSystemBusDeviceTypeEntity> _GeneralSystemBusDeviceTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnProductGenerationInternalCodeChanging(string value);
    partial void OnProductGenerationInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnGeneralSystemBusDeviceTypeInternalCodeChanging(string value);
    partial void OnGeneralSystemBusDeviceTypeInternalCodeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public SystemBusDeviceTypeEntity()
		{
			this._GeneralSystemBusDeviceTypeEntity = default(EntityRef<GeneralSystemBusDeviceTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SystemBusDeviceTypeInternalCode", Storage="_InternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGenerationInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProductGenerationInternalCode
		{
			get
			{
				return this._ProductGenerationInternalCode;
			}
			set
			{
				if ((this._ProductGenerationInternalCode != value))
				{
					this.OnProductGenerationInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductGenerationInternalCode = value;
					this.SendPropertyChanged("ProductGenerationInternalCode");
					this.OnProductGenerationInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralSystemBusDeviceTypeInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GeneralSystemBusDeviceTypeInternalCode
		{
			get
			{
				return this._GeneralSystemBusDeviceTypeInternalCode;
			}
			set
			{
				if ((this._GeneralSystemBusDeviceTypeInternalCode != value))
				{
					if (this._GeneralSystemBusDeviceTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeneralSystemBusDeviceTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._GeneralSystemBusDeviceTypeInternalCode = value;
					this.SendPropertyChanged("GeneralSystemBusDeviceTypeInternalCode");
					this.OnGeneralSystemBusDeviceTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeneralSystemBusDeviceTypeEntity_SystemBusDeviceTypeEntity", Storage="_GeneralSystemBusDeviceTypeEntity", ThisKey="GeneralSystemBusDeviceTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public GeneralSystemBusDeviceTypeEntity GeneralSystemBusDeviceTypeEntity
		{
			get
			{
				return this._GeneralSystemBusDeviceTypeEntity.Entity;
			}
			set
			{
				GeneralSystemBusDeviceTypeEntity previousValue = this._GeneralSystemBusDeviceTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._GeneralSystemBusDeviceTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeneralSystemBusDeviceTypeEntity.Entity = null;
						previousValue.SystemBusDeviceTypeEntities.Remove(this);
					}
					this._GeneralSystemBusDeviceTypeEntity.Entity = value;
					if ((value != null))
					{
						value.SystemBusDeviceTypeEntities.Add(this);
						this._GeneralSystemBusDeviceTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._GeneralSystemBusDeviceTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("GeneralSystemBusDeviceTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.GeneralSystemBusDeviceType")]
	public partial class GeneralSystemBusDeviceTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DisplayCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<SystemBusDeviceTypeEntity> _SystemBusDeviceTypeEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public GeneralSystemBusDeviceTypeEntity()
		{
			this._SystemBusDeviceTypeEntities = new EntitySet<SystemBusDeviceTypeEntity>(new Action<SystemBusDeviceTypeEntity>(this.attach_SystemBusDeviceTypeEntities), new Action<SystemBusDeviceTypeEntity>(this.detach_SystemBusDeviceTypeEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GeneralSystemBusDeviceTypeInternalCode", Storage="_InternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeneralSystemBusDeviceTypeEntity_SystemBusDeviceTypeEntity", Storage="_SystemBusDeviceTypeEntities", ThisKey="InternalCode", OtherKey="GeneralSystemBusDeviceTypeInternalCode")]
		public EntitySet<SystemBusDeviceTypeEntity> SystemBusDeviceTypeEntities
		{
			get
			{
				return this._SystemBusDeviceTypeEntities;
			}
			set
			{
				this._SystemBusDeviceTypeEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SystemBusDeviceTypeEntities(SystemBusDeviceTypeEntity entity)
		{
			this.SendPropertyChanging();
			entity.GeneralSystemBusDeviceTypeEntity = this;
		}
		
		private void detach_SystemBusDeviceTypeEntities(SystemBusDeviceTypeEntity entity)
		{
			this.SendPropertyChanging();
			entity.GeneralSystemBusDeviceTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.StorageSpaceFailureReason")]
	public partial class StorageSpaceFailureReasonEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StorageSpaceFailureReasonInternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<StorageSpaceStateEntity> _StorageSpaceStateEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public StorageSpaceFailureReasonEntity()
		{
			this._StorageSpaceStateEntities = new EntitySet<StorageSpaceStateEntity>(new Action<StorageSpaceStateEntity>(this.attach_StorageSpaceStateEntities), new Action<StorageSpaceStateEntity>(this.detach_StorageSpaceStateEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StorageSpaceFailureReasonInternalCode", Storage="_StorageSpaceFailureReasonInternalCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._StorageSpaceFailureReasonInternalCode;
			}
			set
			{
				if ((this._StorageSpaceFailureReasonInternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceFailureReasonInternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceFailureReasonEntity_StorageSpaceStateEntity", Storage="_StorageSpaceStateEntities", ThisKey="InternalCode", OtherKey="StorageSpaceFailureReasonInternalCode")]
		public EntitySet<StorageSpaceStateEntity> StorageSpaceStateEntities
		{
			get
			{
				return this._StorageSpaceStateEntities;
			}
			set
			{
				this._StorageSpaceStateEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StorageSpaceStateEntities(StorageSpaceStateEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceFailureReasonEntity = this;
		}
		
		private void detach_StorageSpaceStateEntities(StorageSpaceStateEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceFailureReasonEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_StorageSpaceStateCurrent")]
	public partial class StorageSpaceStateEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _StorageSpaceKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private bool _ClosedFlag;
		
		private bool _LockedFlag;
		
		private bool _FailedFlag;
		
		private bool _DefrostFlag;
		
		private bool _OnBatteryFlag;
		
		private string _StorageSpaceFailureReasonInternalCode;
		
		private bool _FailureRequiresMaintenanceFlag;
		
		private string _StorageSpaceShortName;
		
		private string _StorageSpaceAbbreviatedName;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<StorageSpaceEntity> _StorageSpaceEntity;
		
		private EntityRef<StorageSpaceFailureReasonEntity> _StorageSpaceFailureReasonEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStorageSpaceKeyChanging(System.Guid value);
    partial void OnStorageSpaceKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnClosedFlagChanging(bool value);
    partial void OnClosedFlagChanged();
    partial void OnLockedFlagChanging(bool value);
    partial void OnLockedFlagChanged();
    partial void OnFailedFlagChanging(bool value);
    partial void OnFailedFlagChanged();
    partial void OnDefrostFlagChanging(bool value);
    partial void OnDefrostFlagChanged();
    partial void OnOnBatteryFlagChanging(bool value);
    partial void OnOnBatteryFlagChanged();
    partial void OnStorageSpaceFailureReasonInternalCodeChanging(string value);
    partial void OnStorageSpaceFailureReasonInternalCodeChanged();
    partial void OnFailureRequiresMaintenanceFlagChanging(bool value);
    partial void OnFailureRequiresMaintenanceFlagChanged();
    partial void OnStorageSpaceShortNameChanging(string value);
    partial void OnStorageSpaceShortNameChanged();
    partial void OnStorageSpaceAbbreviatedNameChanging(string value);
    partial void OnStorageSpaceAbbreviatedNameChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public StorageSpaceStateEntity()
		{
			this._StorageSpaceEntity = default(EntityRef<StorageSpaceEntity>);
			this._StorageSpaceFailureReasonEntity = default(EntityRef<StorageSpaceFailureReasonEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StorageSpaceStateKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceKey
		{
			get
			{
				return this._StorageSpaceKey;
			}
			set
			{
				if ((this._StorageSpaceKey != value))
				{
					if (this._StorageSpaceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageSpaceKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceKey = value;
					this.SendPropertyChanged("StorageSpaceKey");
					this.OnStorageSpaceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ClosedFlag
		{
			get
			{
				return this._ClosedFlag;
			}
			set
			{
				if ((this._ClosedFlag != value))
				{
					this.OnClosedFlagChanging(value);
					this.SendPropertyChanging();
					this._ClosedFlag = value;
					this.SendPropertyChanged("ClosedFlag");
					this.OnClosedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LockedFlag
		{
			get
			{
				return this._LockedFlag;
			}
			set
			{
				if ((this._LockedFlag != value))
				{
					this.OnLockedFlagChanging(value);
					this.SendPropertyChanging();
					this._LockedFlag = value;
					this.SendPropertyChanged("LockedFlag");
					this.OnLockedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FailedFlag
		{
			get
			{
				return this._FailedFlag;
			}
			set
			{
				if ((this._FailedFlag != value))
				{
					this.OnFailedFlagChanging(value);
					this.SendPropertyChanging();
					this._FailedFlag = value;
					this.SendPropertyChanged("FailedFlag");
					this.OnFailedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefrostFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DefrostFlag
		{
			get
			{
				return this._DefrostFlag;
			}
			set
			{
				if ((this._DefrostFlag != value))
				{
					this.OnDefrostFlagChanging(value);
					this.SendPropertyChanging();
					this._DefrostFlag = value;
					this.SendPropertyChanged("DefrostFlag");
					this.OnDefrostFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnBatteryFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OnBatteryFlag
		{
			get
			{
				return this._OnBatteryFlag;
			}
			set
			{
				if ((this._OnBatteryFlag != value))
				{
					this.OnOnBatteryFlagChanging(value);
					this.SendPropertyChanging();
					this._OnBatteryFlag = value;
					this.SendPropertyChanged("OnBatteryFlag");
					this.OnOnBatteryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceFailureReasonInternalCode", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string StorageSpaceFailureReasonInternalCode
		{
			get
			{
				return this._StorageSpaceFailureReasonInternalCode;
			}
			set
			{
				if ((this._StorageSpaceFailureReasonInternalCode != value))
				{
					if (this._StorageSpaceFailureReasonEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageSpaceFailureReasonInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceFailureReasonInternalCode = value;
					this.SendPropertyChanged("StorageSpaceFailureReasonInternalCode");
					this.OnStorageSpaceFailureReasonInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureRequiresMaintenanceFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FailureRequiresMaintenanceFlag
		{
			get
			{
				return this._FailureRequiresMaintenanceFlag;
			}
			set
			{
				if ((this._FailureRequiresMaintenanceFlag != value))
				{
					this.OnFailureRequiresMaintenanceFlagChanging(value);
					this.SendPropertyChanging();
					this._FailureRequiresMaintenanceFlag = value;
					this.SendPropertyChanged("FailureRequiresMaintenanceFlag");
					this.OnFailureRequiresMaintenanceFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceShortName", DbType="NVarChar(150)")]
		public string StorageSpaceShortName
		{
			get
			{
				return this._StorageSpaceShortName;
			}
			set
			{
				if ((this._StorageSpaceShortName != value))
				{
					this.OnStorageSpaceShortNameChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceShortName = value;
					this.SendPropertyChanged("StorageSpaceShortName");
					this.OnStorageSpaceShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceAbbreviatedName", DbType="NVarChar(100)")]
		public string StorageSpaceAbbreviatedName
		{
			get
			{
				return this._StorageSpaceAbbreviatedName;
			}
			set
			{
				if ((this._StorageSpaceAbbreviatedName != value))
				{
					this.OnStorageSpaceAbbreviatedNameChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceAbbreviatedName = value;
					this.SendPropertyChanged("StorageSpaceAbbreviatedName");
					this.OnStorageSpaceAbbreviatedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceEntity_StorageSpaceStateEntity", Storage="_StorageSpaceEntity", ThisKey="StorageSpaceKey", OtherKey="Key", IsForeignKey=true)]
		public StorageSpaceEntity StorageSpaceEntity
		{
			get
			{
				return this._StorageSpaceEntity.Entity;
			}
			set
			{
				StorageSpaceEntity previousValue = this._StorageSpaceEntity.Entity;
				if (((previousValue != value) 
							|| (this._StorageSpaceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageSpaceEntity.Entity = null;
						previousValue.StorageSpaceStateEntities.Remove(this);
					}
					this._StorageSpaceEntity.Entity = value;
					if ((value != null))
					{
						value.StorageSpaceStateEntities.Add(this);
						this._StorageSpaceKey = value.Key;
					}
					else
					{
						this._StorageSpaceKey = default(System.Guid);
					}
					this.SendPropertyChanged("StorageSpaceEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceFailureReasonEntity_StorageSpaceStateEntity", Storage="_StorageSpaceFailureReasonEntity", ThisKey="StorageSpaceFailureReasonInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public StorageSpaceFailureReasonEntity StorageSpaceFailureReasonEntity
		{
			get
			{
				return this._StorageSpaceFailureReasonEntity.Entity;
			}
			set
			{
				StorageSpaceFailureReasonEntity previousValue = this._StorageSpaceFailureReasonEntity.Entity;
				if (((previousValue != value) 
							|| (this._StorageSpaceFailureReasonEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageSpaceFailureReasonEntity.Entity = null;
						previousValue.StorageSpaceStateEntities.Remove(this);
					}
					this._StorageSpaceFailureReasonEntity.Entity = value;
					if ((value != null))
					{
						value.StorageSpaceStateEntities.Add(this);
						this._StorageSpaceFailureReasonInternalCode = value.InternalCode;
					}
					else
					{
						this._StorageSpaceFailureReasonInternalCode = default(string);
					}
					this.SendPropertyChanged("StorageSpaceFailureReasonEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_DispensingDeviceOverrideGroupCurrent")]
	public partial class DispensingDeviceOverrideGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.Guid _OverrideGroupKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<DispensingDeviceEntity> _DispensingDeviceEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnOverrideGroupKeyChanging(System.Guid value);
    partial void OnOverrideGroupKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public DispensingDeviceOverrideGroupEntity()
		{
			this._DispensingDeviceEntity = default(EntityRef<DispensingDeviceEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DispensingDeviceOverrideGroupKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					if (this._DispensingDeviceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideGroupKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid OverrideGroupKey
		{
			get
			{
				return this._OverrideGroupKey;
			}
			set
			{
				if ((this._OverrideGroupKey != value))
				{
					this.OnOverrideGroupKeyChanging(value);
					this.SendPropertyChanging();
					this._OverrideGroupKey = value;
					this.SendPropertyChanged("OverrideGroupKey");
					this.OnOverrideGroupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_DispensingDeviceOverrideGroupEntity", Storage="_DispensingDeviceEntity", ThisKey="DispensingDeviceKey", OtherKey="Key", IsForeignKey=true)]
		public DispensingDeviceEntity DispensingDeviceEntity
		{
			get
			{
				return this._DispensingDeviceEntity.Entity;
			}
			set
			{
				DispensingDeviceEntity previousValue = this._DispensingDeviceEntity.Entity;
				if (((previousValue != value) 
							|| (this._DispensingDeviceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DispensingDeviceEntity.Entity = null;
						previousValue.DispensingDeviceOverrideGroupEntities.Remove(this);
					}
					this._DispensingDeviceEntity.Entity = value;
					if ((value != null))
					{
						value.DispensingDeviceOverrideGroupEntities.Add(this);
						this._DispensingDeviceKey = value.Key;
					}
					else
					{
						this._DispensingDeviceKey = default(System.Guid);
					}
					this.SendPropertyChanged("DispensingDeviceEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_ZoneCurrent")]
	public partial class ZoneEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ZoneSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _FacilityKey;
		
		private string _ZoneName;
		
		private System.Nullable<short> _ZoneNumber;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<DispensingDeviceEntity> _DispensingDeviceEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnZoneSnapshotKeyChanging(System.Guid value);
    partial void OnZoneSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnZoneNameChanging(string value);
    partial void OnZoneNameChanged();
    partial void OnZoneNumberChanging(System.Nullable<short> value);
    partial void OnZoneNumberChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ZoneEntity()
		{
			this._DispensingDeviceEntities = new EntitySet<DispensingDeviceEntity>(new Action<DispensingDeviceEntity>(this.attach_DispensingDeviceEntities), new Action<DispensingDeviceEntity>(this.detach_DispensingDeviceEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ZoneKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ZoneSnapshotKey
		{
			get
			{
				return this._ZoneSnapshotKey;
			}
			set
			{
				if ((this._ZoneSnapshotKey != value))
				{
					this.OnZoneSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ZoneSnapshotKey = value;
					this.SendPropertyChanged("ZoneSnapshotKey");
					this.OnZoneSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ZoneName
		{
			get
			{
				return this._ZoneName;
			}
			set
			{
				if ((this._ZoneName != value))
				{
					this.OnZoneNameChanging(value);
					this.SendPropertyChanging();
					this._ZoneName = value;
					this.SendPropertyChanged("ZoneName");
					this.OnZoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneNumber", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> ZoneNumber
		{
			get
			{
				return this._ZoneNumber;
			}
			set
			{
				if ((this._ZoneNumber != value))
				{
					this.OnZoneNumberChanging(value);
					this.SendPropertyChanging();
					this._ZoneNumber = value;
					this.SendPropertyChanged("ZoneNumber");
					this.OnZoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZoneEntity_DispensingDeviceEntity", Storage="_DispensingDeviceEntities", ThisKey="Key", OtherKey="ZoneKey")]
		public EntitySet<DispensingDeviceEntity> DispensingDeviceEntities
		{
			get
			{
				return this._DispensingDeviceEntities;
			}
			set
			{
				this._DispensingDeviceEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DispensingDeviceEntities(DispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.ZoneEntity = this;
		}
		
		private void detach_DispensingDeviceEntities(DispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.ZoneEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_CriticalOverridePeriodCurrent")]
	public partial class CriticalOverridePeriodEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _CriticalOverridePeriodSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _DispensingDeviceKey;
		
		private string _CriticalOverridePeriodName;
		
		private short _StartTimeOfDayValue;
		
		private short _EndTimeOfDayValue;
		
		private bool _MondayFlag;
		
		private bool _TuesdayFlag;
		
		private bool _WednesdayFlag;
		
		private bool _ThursdayFlag;
		
		private bool _FridayFlag;
		
		private bool _SaturdayFlag;
		
		private bool _SundayFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.Guid> _CreatedActorKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<DispensingDeviceEntity> _DispensingDeviceEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnCriticalOverridePeriodSnapshotKeyChanging(System.Guid value);
    partial void OnCriticalOverridePeriodSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnCriticalOverridePeriodNameChanging(string value);
    partial void OnCriticalOverridePeriodNameChanged();
    partial void OnStartTimeOfDayValueChanging(short value);
    partial void OnStartTimeOfDayValueChanged();
    partial void OnEndTimeOfDayValueChanging(short value);
    partial void OnEndTimeOfDayValueChanged();
    partial void OnMondayFlagChanging(bool value);
    partial void OnMondayFlagChanged();
    partial void OnTuesdayFlagChanging(bool value);
    partial void OnTuesdayFlagChanged();
    partial void OnWednesdayFlagChanging(bool value);
    partial void OnWednesdayFlagChanged();
    partial void OnThursdayFlagChanging(bool value);
    partial void OnThursdayFlagChanged();
    partial void OnFridayFlagChanging(bool value);
    partial void OnFridayFlagChanged();
    partial void OnSaturdayFlagChanging(bool value);
    partial void OnSaturdayFlagChanged();
    partial void OnSundayFlagChanging(bool value);
    partial void OnSundayFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedActorKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public CriticalOverridePeriodEntity()
		{
			this._DispensingDeviceEntity = default(EntityRef<DispensingDeviceEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CriticalOverridePeriodKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalOverridePeriodSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid CriticalOverridePeriodSnapshotKey
		{
			get
			{
				return this._CriticalOverridePeriodSnapshotKey;
			}
			set
			{
				if ((this._CriticalOverridePeriodSnapshotKey != value))
				{
					this.OnCriticalOverridePeriodSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._CriticalOverridePeriodSnapshotKey = value;
					this.SendPropertyChanged("CriticalOverridePeriodSnapshotKey");
					this.OnCriticalOverridePeriodSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					if (this._DispensingDeviceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalOverridePeriodName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CriticalOverridePeriodName
		{
			get
			{
				return this._CriticalOverridePeriodName;
			}
			set
			{
				if ((this._CriticalOverridePeriodName != value))
				{
					this.OnCriticalOverridePeriodNameChanging(value);
					this.SendPropertyChanging();
					this._CriticalOverridePeriodName = value;
					this.SendPropertyChanged("CriticalOverridePeriodName");
					this.OnCriticalOverridePeriodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTimeOfDayValue", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short StartTimeOfDayValue
		{
			get
			{
				return this._StartTimeOfDayValue;
			}
			set
			{
				if ((this._StartTimeOfDayValue != value))
				{
					this.OnStartTimeOfDayValueChanging(value);
					this.SendPropertyChanging();
					this._StartTimeOfDayValue = value;
					this.SendPropertyChanged("StartTimeOfDayValue");
					this.OnStartTimeOfDayValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTimeOfDayValue", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short EndTimeOfDayValue
		{
			get
			{
				return this._EndTimeOfDayValue;
			}
			set
			{
				if ((this._EndTimeOfDayValue != value))
				{
					this.OnEndTimeOfDayValueChanging(value);
					this.SendPropertyChanging();
					this._EndTimeOfDayValue = value;
					this.SendPropertyChanged("EndTimeOfDayValue");
					this.OnEndTimeOfDayValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MondayFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MondayFlag
		{
			get
			{
				return this._MondayFlag;
			}
			set
			{
				if ((this._MondayFlag != value))
				{
					this.OnMondayFlagChanging(value);
					this.SendPropertyChanging();
					this._MondayFlag = value;
					this.SendPropertyChanged("MondayFlag");
					this.OnMondayFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TuesdayFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TuesdayFlag
		{
			get
			{
				return this._TuesdayFlag;
			}
			set
			{
				if ((this._TuesdayFlag != value))
				{
					this.OnTuesdayFlagChanging(value);
					this.SendPropertyChanging();
					this._TuesdayFlag = value;
					this.SendPropertyChanged("TuesdayFlag");
					this.OnTuesdayFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WednesdayFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WednesdayFlag
		{
			get
			{
				return this._WednesdayFlag;
			}
			set
			{
				if ((this._WednesdayFlag != value))
				{
					this.OnWednesdayFlagChanging(value);
					this.SendPropertyChanging();
					this._WednesdayFlag = value;
					this.SendPropertyChanged("WednesdayFlag");
					this.OnWednesdayFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThursdayFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ThursdayFlag
		{
			get
			{
				return this._ThursdayFlag;
			}
			set
			{
				if ((this._ThursdayFlag != value))
				{
					this.OnThursdayFlagChanging(value);
					this.SendPropertyChanging();
					this._ThursdayFlag = value;
					this.SendPropertyChanged("ThursdayFlag");
					this.OnThursdayFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FridayFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FridayFlag
		{
			get
			{
				return this._FridayFlag;
			}
			set
			{
				if ((this._FridayFlag != value))
				{
					this.OnFridayFlagChanging(value);
					this.SendPropertyChanging();
					this._FridayFlag = value;
					this.SendPropertyChanged("FridayFlag");
					this.OnFridayFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaturdayFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SaturdayFlag
		{
			get
			{
				return this._SaturdayFlag;
			}
			set
			{
				if ((this._SaturdayFlag != value))
				{
					this.OnSaturdayFlagChanging(value);
					this.SendPropertyChanging();
					this._SaturdayFlag = value;
					this.SendPropertyChanged("SaturdayFlag");
					this.OnSaturdayFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SundayFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SundayFlag
		{
			get
			{
				return this._SundayFlag;
			}
			set
			{
				if ((this._SundayFlag != value))
				{
					this.OnSundayFlagChanging(value);
					this.SendPropertyChanging();
					this._SundayFlag = value;
					this.SendPropertyChanged("SundayFlag");
					this.OnSundayFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedActorKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedActorKey
		{
			get
			{
				return this._CreatedActorKey;
			}
			set
			{
				if ((this._CreatedActorKey != value))
				{
					this.OnCreatedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedActorKey = value;
					this.SendPropertyChanged("CreatedActorKey");
					this.OnCreatedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_CriticalOverridePeriodEntity", Storage="_DispensingDeviceEntity", ThisKey="DispensingDeviceKey", OtherKey="Key", IsForeignKey=true)]
		public DispensingDeviceEntity DispensingDeviceEntity
		{
			get
			{
				return this._DispensingDeviceEntity.Entity;
			}
			set
			{
				DispensingDeviceEntity previousValue = this._DispensingDeviceEntity.Entity;
				if (((previousValue != value) 
							|| (this._DispensingDeviceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DispensingDeviceEntity.Entity = null;
						previousValue.CriticalOverridePeriodEntities.Remove(this);
					}
					this._DispensingDeviceEntity.Entity = value;
					if ((value != null))
					{
						value.CriticalOverridePeriodEntities.Add(this);
						this._DispensingDeviceKey = value.Key;
					}
					else
					{
						this._DispensingDeviceKey = default(System.Guid);
					}
					this.SendPropertyChanged("DispensingDeviceEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.StorageSpaceType")]
	public partial class StorageSpaceTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Key;
		
		private string _ProductGenerationInternalCode;
		
		private string _DescriptionText;
		
		private string _ShortName;
		
		private int _SortValue;
		
		private bool _DirectlyContainsInventoryFlag;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<StorageSpaceEntity> _StorageSpaceEntities;
		
		private EntitySet<StorageSpaceFormEntity> _StorageSpaceFormEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnProductGenerationInternalCodeChanging(string value);
    partial void OnProductGenerationInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnDirectlyContainsInventoryFlagChanging(bool value);
    partial void OnDirectlyContainsInventoryFlagChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public StorageSpaceTypeEntity()
		{
			this._StorageSpaceEntities = new EntitySet<StorageSpaceEntity>(new Action<StorageSpaceEntity>(this.attach_StorageSpaceEntities), new Action<StorageSpaceEntity>(this.detach_StorageSpaceEntities));
			this._StorageSpaceFormEntities = new EntitySet<StorageSpaceFormEntity>(new Action<StorageSpaceFormEntity>(this.attach_StorageSpaceFormEntities), new Action<StorageSpaceFormEntity>(this.detach_StorageSpaceFormEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StorageSpaceTypeInternalCode", Storage="_Key", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGenerationInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ProductGenerationInternalCode
		{
			get
			{
				return this._ProductGenerationInternalCode;
			}
			set
			{
				if ((this._ProductGenerationInternalCode != value))
				{
					this.OnProductGenerationInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductGenerationInternalCode = value;
					this.SendPropertyChanged("ProductGenerationInternalCode");
					this.OnProductGenerationInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectlyContainsInventoryFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DirectlyContainsInventoryFlag
		{
			get
			{
				return this._DirectlyContainsInventoryFlag;
			}
			set
			{
				if ((this._DirectlyContainsInventoryFlag != value))
				{
					this.OnDirectlyContainsInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._DirectlyContainsInventoryFlag = value;
					this.SendPropertyChanged("DirectlyContainsInventoryFlag");
					this.OnDirectlyContainsInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceTypeEntity_StorageSpaceEntity", Storage="_StorageSpaceEntities", ThisKey="InternalCode", OtherKey="StorageSpaceTypeInternalCode")]
		public EntitySet<StorageSpaceEntity> StorageSpaceEntities
		{
			get
			{
				return this._StorageSpaceEntities;
			}
			set
			{
				this._StorageSpaceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceTypeEntity_StorageSpaceFormEntity", Storage="_StorageSpaceFormEntities", ThisKey="InternalCode", OtherKey="StorageSpaceTypeInternalCode")]
		public EntitySet<StorageSpaceFormEntity> StorageSpaceFormEntities
		{
			get
			{
				return this._StorageSpaceFormEntities;
			}
			set
			{
				this._StorageSpaceFormEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StorageSpaceEntities(StorageSpaceEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceTypeEntity = this;
		}
		
		private void detach_StorageSpaceEntities(StorageSpaceEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceTypeEntity = null;
		}
		
		private void attach_StorageSpaceFormEntities(StorageSpaceFormEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceTypeEntity = this;
		}
		
		private void detach_StorageSpaceFormEntities(StorageSpaceFormEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.StorageSpaceForm")]
	public partial class StorageSpaceFormEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private string _StorageSpaceFormInternalCode;
		
		private string _StorageSpaceTypeInternalCode;
		
		private string _DescriptionText;
		
		private string _ShortName;
		
		private string _StorageSpaceSizeInternalCode;
		
		private int _SortValue;
		
		private bool _ActiveFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<StorageSpaceEntity> _StorageSpaceEntities;
		
		private EntityRef<StorageSpaceTypeEntity> _StorageSpaceTypeEntity;
		
		private EntityRef<StorageSpaceSizeEntity> _StorageSpaceSizeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStorageSpaceFormInternalCodeChanging(string value);
    partial void OnStorageSpaceFormInternalCodeChanged();
    partial void OnStorageSpaceTypeInternalCodeChanging(string value);
    partial void OnStorageSpaceTypeInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnStorageSpaceSizeInternalCodeChanging(string value);
    partial void OnStorageSpaceSizeInternalCodeChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public StorageSpaceFormEntity()
		{
			this._StorageSpaceEntities = new EntitySet<StorageSpaceEntity>(new Action<StorageSpaceEntity>(this.attach_StorageSpaceEntities), new Action<StorageSpaceEntity>(this.detach_StorageSpaceEntities));
			this._StorageSpaceTypeEntity = default(EntityRef<StorageSpaceTypeEntity>);
			this._StorageSpaceSizeEntity = default(EntityRef<StorageSpaceSizeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StorageSpaceFormKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceFormInternalCode", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string StorageSpaceFormInternalCode
		{
			get
			{
				return this._StorageSpaceFormInternalCode;
			}
			set
			{
				if ((this._StorageSpaceFormInternalCode != value))
				{
					this.OnStorageSpaceFormInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceFormInternalCode = value;
					this.SendPropertyChanged("StorageSpaceFormInternalCode");
					this.OnStorageSpaceFormInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceTypeInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StorageSpaceTypeInternalCode
		{
			get
			{
				return this._StorageSpaceTypeInternalCode;
			}
			set
			{
				if ((this._StorageSpaceTypeInternalCode != value))
				{
					if (this._StorageSpaceTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageSpaceTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceTypeInternalCode = value;
					this.SendPropertyChanged("StorageSpaceTypeInternalCode");
					this.OnStorageSpaceTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceSizeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string StorageSpaceSizeInternalCode
		{
			get
			{
				return this._StorageSpaceSizeInternalCode;
			}
			set
			{
				if ((this._StorageSpaceSizeInternalCode != value))
				{
					if (this._StorageSpaceSizeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageSpaceSizeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceSizeInternalCode = value;
					this.SendPropertyChanged("StorageSpaceSizeInternalCode");
					this.OnStorageSpaceSizeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceFormEntity_StorageSpaceEntity", Storage="_StorageSpaceEntities", ThisKey="Key", OtherKey="StorageSpaceFormKey")]
		public EntitySet<StorageSpaceEntity> StorageSpaceEntities
		{
			get
			{
				return this._StorageSpaceEntities;
			}
			set
			{
				this._StorageSpaceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceTypeEntity_StorageSpaceFormEntity", Storage="_StorageSpaceTypeEntity", ThisKey="StorageSpaceTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public StorageSpaceTypeEntity StorageSpaceTypeEntity
		{
			get
			{
				return this._StorageSpaceTypeEntity.Entity;
			}
			set
			{
				StorageSpaceTypeEntity previousValue = this._StorageSpaceTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._StorageSpaceTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageSpaceTypeEntity.Entity = null;
						previousValue.StorageSpaceFormEntities.Remove(this);
					}
					this._StorageSpaceTypeEntity.Entity = value;
					if ((value != null))
					{
						value.StorageSpaceFormEntities.Add(this);
						this._StorageSpaceTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._StorageSpaceTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("StorageSpaceTypeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceSizeEntity_StorageSpaceFormEntity", Storage="_StorageSpaceSizeEntity", ThisKey="StorageSpaceSizeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public StorageSpaceSizeEntity StorageSpaceSizeEntity
		{
			get
			{
				return this._StorageSpaceSizeEntity.Entity;
			}
			set
			{
				StorageSpaceSizeEntity previousValue = this._StorageSpaceSizeEntity.Entity;
				if (((previousValue != value) 
							|| (this._StorageSpaceSizeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageSpaceSizeEntity.Entity = null;
						previousValue.StorageSpaceFormEntities.Remove(this);
					}
					this._StorageSpaceSizeEntity.Entity = value;
					if ((value != null))
					{
						value.StorageSpaceFormEntities.Add(this);
						this._StorageSpaceSizeInternalCode = value.InternalCode;
					}
					else
					{
						this._StorageSpaceSizeInternalCode = default(string);
					}
					this.SendPropertyChanged("StorageSpaceSizeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StorageSpaceEntities(StorageSpaceEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceFormEntity = this;
		}
		
		private void detach_StorageSpaceEntities(StorageSpaceEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceFormEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.StorageSpaceSize")]
	public partial class StorageSpaceSizeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DisplayCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<StorageSpaceFormEntity> _StorageSpaceFormEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public StorageSpaceSizeEntity()
		{
			this._StorageSpaceFormEntities = new EntitySet<StorageSpaceFormEntity>(new Action<StorageSpaceFormEntity>(this.attach_StorageSpaceFormEntities), new Action<StorageSpaceFormEntity>(this.detach_StorageSpaceFormEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StorageSpaceSizeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceSizeEntity_StorageSpaceFormEntity", Storage="_StorageSpaceFormEntities", ThisKey="InternalCode", OtherKey="StorageSpaceSizeInternalCode")]
		public EntitySet<StorageSpaceFormEntity> StorageSpaceFormEntities
		{
			get
			{
				return this._StorageSpaceFormEntities;
			}
			set
			{
				this._StorageSpaceFormEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StorageSpaceFormEntities(StorageSpaceFormEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceSizeEntity = this;
		}
		
		private void detach_StorageSpaceFormEntities(StorageSpaceFormEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceSizeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_DispensingDeviceUnitRoomCurrent")]
	public partial class DispensingDeviceUnitRoomEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.Guid _UnitRoomKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Nullable<System.Guid> _DisassociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<DispensingDeviceEntity> _DispensingDeviceEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnUnitRoomKeyChanging(System.Guid value);
    partial void OnUnitRoomKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnDisassociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDisassociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public DispensingDeviceUnitRoomEntity()
		{
			this._DispensingDeviceEntity = default(EntityRef<DispensingDeviceEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DispensingDeviceUnitRoomKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					if (this._DispensingDeviceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitRoomKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UnitRoomKey
		{
			get
			{
				return this._UnitRoomKey;
			}
			set
			{
				if ((this._UnitRoomKey != value))
				{
					this.OnUnitRoomKeyChanging(value);
					this.SendPropertyChanging();
					this._UnitRoomKey = value;
					this.SendPropertyChanged("UnitRoomKey");
					this.OnUnitRoomKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisassociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DisassociationActorKey
		{
			get
			{
				return this._DisassociationActorKey;
			}
			set
			{
				if ((this._DisassociationActorKey != value))
				{
					this.OnDisassociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._DisassociationActorKey = value;
					this.SendPropertyChanged("DisassociationActorKey");
					this.OnDisassociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_DispensingDeviceUnitRoomEntity", Storage="_DispensingDeviceEntity", ThisKey="DispensingDeviceKey", OtherKey="Key", IsForeignKey=true)]
		public DispensingDeviceEntity DispensingDeviceEntity
		{
			get
			{
				return this._DispensingDeviceEntity.Entity;
			}
			set
			{
				DispensingDeviceEntity previousValue = this._DispensingDeviceEntity.Entity;
				if (((previousValue != value) 
							|| (this._DispensingDeviceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DispensingDeviceEntity.Entity = null;
						previousValue.DispensingDeviceUnitRoomEntities.Remove(this);
					}
					this._DispensingDeviceEntity.Entity = value;
					if ((value != null))
					{
						value.DispensingDeviceUnitRoomEntities.Add(this);
						this._DispensingDeviceKey = value.Key;
					}
					else
					{
						this._DispensingDeviceKey = default(System.Guid);
					}
					this.SendPropertyChanged("DispensingDeviceEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.MiniDrawerTrayMode")]
	public partial class MiniDrawerTrayModeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public MiniDrawerTrayModeEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MiniDrawerTrayModeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_SystemBusDeviceCurrent")]
	public partial class SystemBusDeviceEntity
	{
		
		private System.Guid _SystemBusDeviceSnapshotKey;
		
		private System.Guid _Key;
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.Guid> _ControllingSystemBusDeviceKey;
		
		private System.Nullable<long> _DeviceNumber;
		
		private System.Nullable<int> _PositionNumber;
		
		private System.Nullable<short> _WidthQuantity;
		
		private System.Nullable<short> _HeightQuantity;
		
		private System.Nullable<short> _DepthQuantity;
		
		private System.Nullable<short> _OffsetQuantity;
		
		private bool _DeleteFlag;
		
		private bool _FirstSnapshotFlag;
		
		private string _SystemBusDeviceTypeInternalCode;
		
		private string _CommunicationCubeTypeInternalCode;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public SystemBusDeviceEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemBusDeviceSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid SystemBusDeviceSnapshotKey
		{
			get
			{
				return this._SystemBusDeviceSnapshotKey;
			}
			set
			{
				if ((this._SystemBusDeviceSnapshotKey != value))
				{
					this._SystemBusDeviceSnapshotKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SystemBusDeviceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this._Key = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this._StartUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this._StartLocalDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControllingSystemBusDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ControllingSystemBusDeviceKey
		{
			get
			{
				return this._ControllingSystemBusDeviceKey;
			}
			set
			{
				if ((this._ControllingSystemBusDeviceKey != value))
				{
					this._ControllingSystemBusDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceNumber", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> DeviceNumber
		{
			get
			{
				return this._DeviceNumber;
			}
			set
			{
				if ((this._DeviceNumber != value))
				{
					this._DeviceNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionNumber", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PositionNumber
		{
			get
			{
				return this._PositionNumber;
			}
			set
			{
				if ((this._PositionNumber != value))
				{
					this._PositionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidthQuantity", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> WidthQuantity
		{
			get
			{
				return this._WidthQuantity;
			}
			set
			{
				if ((this._WidthQuantity != value))
				{
					this._WidthQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightQuantity", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> HeightQuantity
		{
			get
			{
				return this._HeightQuantity;
			}
			set
			{
				if ((this._HeightQuantity != value))
				{
					this._HeightQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepthQuantity", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DepthQuantity
		{
			get
			{
				return this._DepthQuantity;
			}
			set
			{
				if ((this._DepthQuantity != value))
				{
					this._DepthQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OffsetQuantity", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> OffsetQuantity
		{
			get
			{
				return this._OffsetQuantity;
			}
			set
			{
				if ((this._OffsetQuantity != value))
				{
					this._OffsetQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstSnapshotFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FirstSnapshotFlag
		{
			get
			{
				return this._FirstSnapshotFlag;
			}
			set
			{
				if ((this._FirstSnapshotFlag != value))
				{
					this._FirstSnapshotFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemBusDeviceTypeInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SystemBusDeviceTypeInternalCode
		{
			get
			{
				return this._SystemBusDeviceTypeInternalCode;
			}
			set
			{
				if ((this._SystemBusDeviceTypeInternalCode != value))
				{
					this._SystemBusDeviceTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunicationCubeTypeInternalCode", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string CommunicationCubeTypeInternalCode
		{
			get
			{
				return this._CommunicationCubeTypeInternalCode;
			}
			set
			{
				if ((this._CommunicationCubeTypeInternalCode != value))
				{
					this._CommunicationCubeTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this._LastModifiedActorKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_DispensingDeviceSystemBusDeviceCurrent")]
	public partial class DispensingDeviceSystemBusDeviceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.Guid _SystemBusDeviceKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.DateTime> _DisassociationUTCDateTime;
		
		private System.Nullable<System.DateTime> _DisassociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Nullable<System.Guid> _DisassociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<DispensingDeviceEntity> _DispensingDeviceEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnSystemBusDeviceKeyChanging(System.Guid value);
    partial void OnSystemBusDeviceKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnDisassociationUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDisassociationUTCDateTimeChanged();
    partial void OnDisassociationLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDisassociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnDisassociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDisassociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public DispensingDeviceSystemBusDeviceEntity()
		{
			this._DispensingDeviceEntity = default(EntityRef<DispensingDeviceEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DispensingDeviceSystemBusDeviceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					if (this._DispensingDeviceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemBusDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid SystemBusDeviceKey
		{
			get
			{
				return this._SystemBusDeviceKey;
			}
			set
			{
				if ((this._SystemBusDeviceKey != value))
				{
					this.OnSystemBusDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._SystemBusDeviceKey = value;
					this.SendPropertyChanged("SystemBusDeviceKey");
					this.OnSystemBusDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisassociationUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DisassociationUTCDateTime
		{
			get
			{
				return this._DisassociationUTCDateTime;
			}
			set
			{
				if ((this._DisassociationUTCDateTime != value))
				{
					this.OnDisassociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DisassociationUTCDateTime = value;
					this.SendPropertyChanged("DisassociationUTCDateTime");
					this.OnDisassociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisassociationLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DisassociationLocalDateTime
		{
			get
			{
				return this._DisassociationLocalDateTime;
			}
			set
			{
				if ((this._DisassociationLocalDateTime != value))
				{
					this.OnDisassociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DisassociationLocalDateTime = value;
					this.SendPropertyChanged("DisassociationLocalDateTime");
					this.OnDisassociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisassociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DisassociationActorKey
		{
			get
			{
				return this._DisassociationActorKey;
			}
			set
			{
				if ((this._DisassociationActorKey != value))
				{
					this.OnDisassociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._DisassociationActorKey = value;
					this.SendPropertyChanged("DisassociationActorKey");
					this.OnDisassociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_DispensingDeviceSystemBusDeviceEntity", Storage="_DispensingDeviceEntity", ThisKey="DispensingDeviceKey", OtherKey="Key", IsForeignKey=true)]
		public DispensingDeviceEntity DispensingDeviceEntity
		{
			get
			{
				return this._DispensingDeviceEntity.Entity;
			}
			set
			{
				DispensingDeviceEntity previousValue = this._DispensingDeviceEntity.Entity;
				if (((previousValue != value) 
							|| (this._DispensingDeviceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DispensingDeviceEntity.Entity = null;
						previousValue.DispensingDeviceSystemBusDeviceEntities.Remove(this);
					}
					this._DispensingDeviceEntity.Entity = value;
					if ((value != null))
					{
						value.DispensingDeviceSystemBusDeviceEntities.Add(this);
						this._DispensingDeviceKey = value.Key;
					}
					else
					{
						this._DispensingDeviceKey = default(System.Guid);
					}
					this.SendPropertyChanged("DispensingDeviceEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.CommunicationCubeType")]
	public partial class CommunicationCubeTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public CommunicationCubeTypeEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CommunicationCubeTypeInternalCode", Storage="_InternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.CriticalOverrideModeReason")]
	public partial class CriticalOverrideModeReasonEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<DispensingDeviceCriticalOverrideModeReasonEntity> _DispensingDeviceCriticalOverrideModeReasonEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public CriticalOverrideModeReasonEntity()
		{
			this._DispensingDeviceCriticalOverrideModeReasonEntities = new EntitySet<DispensingDeviceCriticalOverrideModeReasonEntity>(new Action<DispensingDeviceCriticalOverrideModeReasonEntity>(this.attach_DispensingDeviceCriticalOverrideModeReasonEntities), new Action<DispensingDeviceCriticalOverrideModeReasonEntity>(this.detach_DispensingDeviceCriticalOverrideModeReasonEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CriticalOverrideModeReasonInternalCode", Storage="_InternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CriticalOverrideModeReasonEntity_DispensingDeviceCriticalOverrideModeReasonEntity" +
			"", Storage="_DispensingDeviceCriticalOverrideModeReasonEntities", ThisKey="InternalCode", OtherKey="CriticalOverrideModeReasonInternalCode")]
		public EntitySet<DispensingDeviceCriticalOverrideModeReasonEntity> DispensingDeviceCriticalOverrideModeReasonEntities
		{
			get
			{
				return this._DispensingDeviceCriticalOverrideModeReasonEntities;
			}
			set
			{
				this._DispensingDeviceCriticalOverrideModeReasonEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DispensingDeviceCriticalOverrideModeReasonEntities(DispensingDeviceCriticalOverrideModeReasonEntity entity)
		{
			this.SendPropertyChanging();
			entity.CriticalOverrideModeReasonEntity = this;
		}
		
		private void detach_DispensingDeviceCriticalOverrideModeReasonEntities(DispensingDeviceCriticalOverrideModeReasonEntity entity)
		{
			this.SendPropertyChanging();
			entity.CriticalOverrideModeReasonEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_DispensingDeviceCriticalOverrideModeReasonCurrent")]
	public partial class DispensingDeviceCriticalOverrideModeReasonEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _DispensingDeviceKey;
		
		private string _CriticalOverrideModeReasonInternalCode;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<CriticalOverrideModeReasonEntity> _CriticalOverrideModeReasonEntity;
		
		private EntityRef<DispensingDeviceEntity> _DispensingDeviceEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnCriticalOverrideModeReasonInternalCodeChanging(string value);
    partial void OnCriticalOverrideModeReasonInternalCodeChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public DispensingDeviceCriticalOverrideModeReasonEntity()
		{
			this._CriticalOverrideModeReasonEntity = default(EntityRef<CriticalOverrideModeReasonEntity>);
			this._DispensingDeviceEntity = default(EntityRef<DispensingDeviceEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DispensingDeviceCriticalOverrideModeReasonKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					if (this._DispensingDeviceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalOverrideModeReasonInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CriticalOverrideModeReasonInternalCode
		{
			get
			{
				return this._CriticalOverrideModeReasonInternalCode;
			}
			set
			{
				if ((this._CriticalOverrideModeReasonInternalCode != value))
				{
					if (this._CriticalOverrideModeReasonEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCriticalOverrideModeReasonInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._CriticalOverrideModeReasonInternalCode = value;
					this.SendPropertyChanged("CriticalOverrideModeReasonInternalCode");
					this.OnCriticalOverrideModeReasonInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CriticalOverrideModeReasonEntity_DispensingDeviceCriticalOverrideModeReasonEntity" +
			"", Storage="_CriticalOverrideModeReasonEntity", ThisKey="CriticalOverrideModeReasonInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public CriticalOverrideModeReasonEntity CriticalOverrideModeReasonEntity
		{
			get
			{
				return this._CriticalOverrideModeReasonEntity.Entity;
			}
			set
			{
				CriticalOverrideModeReasonEntity previousValue = this._CriticalOverrideModeReasonEntity.Entity;
				if (((previousValue != value) 
							|| (this._CriticalOverrideModeReasonEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CriticalOverrideModeReasonEntity.Entity = null;
						previousValue.DispensingDeviceCriticalOverrideModeReasonEntities.Remove(this);
					}
					this._CriticalOverrideModeReasonEntity.Entity = value;
					if ((value != null))
					{
						value.DispensingDeviceCriticalOverrideModeReasonEntities.Add(this);
						this._CriticalOverrideModeReasonInternalCode = value.InternalCode;
					}
					else
					{
						this._CriticalOverrideModeReasonInternalCode = default(string);
					}
					this.SendPropertyChanged("CriticalOverrideModeReasonEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceEntity_DispensingDeviceCriticalOverrideModeReasonEntity", Storage="_DispensingDeviceEntity", ThisKey="DispensingDeviceKey", OtherKey="Key", IsForeignKey=true)]
		public DispensingDeviceEntity DispensingDeviceEntity
		{
			get
			{
				return this._DispensingDeviceEntity.Entity;
			}
			set
			{
				DispensingDeviceEntity previousValue = this._DispensingDeviceEntity.Entity;
				if (((previousValue != value) 
							|| (this._DispensingDeviceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DispensingDeviceEntity.Entity = null;
						previousValue.DispensingDeviceCriticalOverrideModeReasonEntities.Remove(this);
					}
					this._DispensingDeviceEntity.Entity = value;
					if ((value != null))
					{
						value.DispensingDeviceCriticalOverrideModeReasonEntities.Add(this);
						this._DispensingDeviceKey = value.Key;
					}
					else
					{
						this._DispensingDeviceKey = default(System.Guid);
					}
					this.SendPropertyChanged("DispensingDeviceEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.DispensingDeviceType")]
	public partial class DispensingDeviceTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<DispensingDeviceEntity> _DispensingDeviceEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public DispensingDeviceTypeEntity()
		{
			this._DispensingDeviceEntities = new EntitySet<DispensingDeviceEntity>(new Action<DispensingDeviceEntity>(this.attach_DispensingDeviceEntities), new Action<DispensingDeviceEntity>(this.detach_DispensingDeviceEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DispensingDeviceTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispensingDeviceTypeEntity_DispensingDeviceEntity", Storage="_DispensingDeviceEntities", ThisKey="InternalCode", OtherKey="DispensingDeviceTypeInternalCode")]
		public EntitySet<DispensingDeviceEntity> DispensingDeviceEntities
		{
			get
			{
				return this._DispensingDeviceEntities;
			}
			set
			{
				this._DispensingDeviceEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DispensingDeviceEntities(DispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceTypeEntity = this;
		}
		
		private void detach_DispensingDeviceEntities(DispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.DispensingDeviceTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Strg.vw_VirtualStockLocationCurrent")]
	public partial class VirtualStockLocationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _VirtualStockLocationSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _FacilityKey;
		
		private string _VirtualStockLocationName;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<DispensingDeviceEntity> _DispensingDeviceEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnVirtualStockLocationSnapshotKeyChanging(System.Guid value);
    partial void OnVirtualStockLocationSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnVirtualStockLocationNameChanging(string value);
    partial void OnVirtualStockLocationNameChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public VirtualStockLocationEntity()
		{
			this._DispensingDeviceEntities = new EntitySet<DispensingDeviceEntity>(new Action<DispensingDeviceEntity>(this.attach_DispensingDeviceEntities), new Action<DispensingDeviceEntity>(this.detach_DispensingDeviceEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="VirtualStockLocationKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualStockLocationSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid VirtualStockLocationSnapshotKey
		{
			get
			{
				return this._VirtualStockLocationSnapshotKey;
			}
			set
			{
				if ((this._VirtualStockLocationSnapshotKey != value))
				{
					this.OnVirtualStockLocationSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._VirtualStockLocationSnapshotKey = value;
					this.SendPropertyChanged("VirtualStockLocationSnapshotKey");
					this.OnVirtualStockLocationSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualStockLocationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VirtualStockLocationName
		{
			get
			{
				return this._VirtualStockLocationName;
			}
			set
			{
				if ((this._VirtualStockLocationName != value))
				{
					this.OnVirtualStockLocationNameChanging(value);
					this.SendPropertyChanging();
					this._VirtualStockLocationName = value;
					this.SendPropertyChanged("VirtualStockLocationName");
					this.OnVirtualStockLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VirtualStockLocationEntity_DispensingDeviceEntity", Storage="_DispensingDeviceEntities", ThisKey="Key", OtherKey="VirtualStockLocationKey")]
		public EntitySet<DispensingDeviceEntity> DispensingDeviceEntities
		{
			get
			{
				return this._DispensingDeviceEntities;
			}
			set
			{
				this._DispensingDeviceEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DispensingDeviceEntities(DispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.VirtualStockLocationEntity = this;
		}
		
		private void detach_DispensingDeviceEntities(DispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.VirtualStockLocationEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class CriticalOverridePeriodResult
	{
		
		private System.Guid _CriticalOverridePeriodKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private string _CriticalOverridePeriodName;
		
		private short _StartTimeOfDayValue;
		
		private short _EndTimeOfDayValue;
		
		private bool _MondayFlag;
		
		private bool _TuesdayFlag;
		
		private bool _WednesdayFlag;
		
		private bool _ThursdayFlag;
		
		private bool _FridayFlag;
		
		private bool _SaturdayFlag;
		
		private bool _SundayFlag;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private string _DispensingDeviceName;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _CreatedActorKey;
		
		private string _CreatedActorName;
		
		private int _DeviceCount;
		
		public CriticalOverridePeriodResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalOverridePeriodKey")]
		public System.Guid CriticalOverridePeriodKey
		{
			get
			{
				return this._CriticalOverridePeriodKey;
			}
			set
			{
				if ((this._CriticalOverridePeriodKey != value))
				{
					this._CriticalOverridePeriodKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey")]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalOverridePeriodName", CanBeNull=false)]
		public string CriticalOverridePeriodName
		{
			get
			{
				return this._CriticalOverridePeriodName;
			}
			set
			{
				if ((this._CriticalOverridePeriodName != value))
				{
					this._CriticalOverridePeriodName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTimeOfDayValue")]
		public short StartTimeOfDayValue
		{
			get
			{
				return this._StartTimeOfDayValue;
			}
			set
			{
				if ((this._StartTimeOfDayValue != value))
				{
					this._StartTimeOfDayValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTimeOfDayValue")]
		public short EndTimeOfDayValue
		{
			get
			{
				return this._EndTimeOfDayValue;
			}
			set
			{
				if ((this._EndTimeOfDayValue != value))
				{
					this._EndTimeOfDayValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MondayFlag")]
		public bool MondayFlag
		{
			get
			{
				return this._MondayFlag;
			}
			set
			{
				if ((this._MondayFlag != value))
				{
					this._MondayFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TuesdayFlag")]
		public bool TuesdayFlag
		{
			get
			{
				return this._TuesdayFlag;
			}
			set
			{
				if ((this._TuesdayFlag != value))
				{
					this._TuesdayFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WednesdayFlag")]
		public bool WednesdayFlag
		{
			get
			{
				return this._WednesdayFlag;
			}
			set
			{
				if ((this._WednesdayFlag != value))
				{
					this._WednesdayFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThursdayFlag")]
		public bool ThursdayFlag
		{
			get
			{
				return this._ThursdayFlag;
			}
			set
			{
				if ((this._ThursdayFlag != value))
				{
					this._ThursdayFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FridayFlag")]
		public bool FridayFlag
		{
			get
			{
				return this._FridayFlag;
			}
			set
			{
				if ((this._FridayFlag != value))
				{
					this._FridayFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaturdayFlag")]
		public bool SaturdayFlag
		{
			get
			{
				return this._SaturdayFlag;
			}
			set
			{
				if ((this._SaturdayFlag != value))
				{
					this._SaturdayFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SundayFlag")]
		public bool SundayFlag
		{
			get
			{
				return this._SundayFlag;
			}
			set
			{
				if ((this._SundayFlag != value))
				{
					this._SundayFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceName")]
		public string DispensingDeviceName
		{
			get
			{
				return this._DispensingDeviceName;
			}
			set
			{
				if ((this._DispensingDeviceName != value))
				{
					this._DispensingDeviceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime")]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this._CreatedUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime")]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this._CreatedLocalDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedActorKey")]
		public System.Nullable<System.Guid> CreatedActorKey
		{
			get
			{
				return this._CreatedActorKey;
			}
			set
			{
				if ((this._CreatedActorKey != value))
				{
					this._CreatedActorKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedActorName")]
		public string CreatedActorName
		{
			get
			{
				return this._CreatedActorName;
			}
			set
			{
				if ((this._CreatedActorName != value))
				{
					this._CreatedActorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceCount")]
		public int DeviceCount
		{
			get
			{
				return this._DeviceCount;
			}
			set
			{
				if ((this._DeviceCount != value))
				{
					this._DeviceCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class DispensingDeviceAreaResult
	{
		
		private System.Guid _AreaDispensingDeviceKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.Guid _AreaKey;
		
		private string _AreaName;
		
		public DispensingDeviceAreaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaDispensingDeviceKey")]
		public System.Guid AreaDispensingDeviceKey
		{
			get
			{
				return this._AreaDispensingDeviceKey;
			}
			set
			{
				if ((this._AreaDispensingDeviceKey != value))
				{
					this._AreaDispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey")]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey")]
		public System.Guid AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					this._AreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaName", CanBeNull=false)]
		public string AreaName
		{
			get
			{
				return this._AreaName;
			}
			set
			{
				if ((this._AreaName != value))
				{
					this._AreaName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class DispensingDeviceOverrideGroupResult
	{
		
		private System.Guid _DispensingDeviceOverrideGroupKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.Guid _OverrideGroupKey;
		
		private string _DisplayCode;
		
		private string _DescriptionText;
		
		private bool _ActiveFlag;
		
		public DispensingDeviceOverrideGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceOverrideGroupKey")]
		public System.Guid DispensingDeviceOverrideGroupKey
		{
			get
			{
				return this._DispensingDeviceOverrideGroupKey;
			}
			set
			{
				if ((this._DispensingDeviceOverrideGroupKey != value))
				{
					this._DispensingDeviceOverrideGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey")]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideGroupKey")]
		public System.Guid OverrideGroupKey
		{
			get
			{
				return this._OverrideGroupKey;
			}
			set
			{
				if ((this._OverrideGroupKey != value))
				{
					this._OverrideGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", CanBeNull=false)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this._DisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", CanBeNull=false)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this._DescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class DispensingDeviceClinicalDataSubjectResult
	{
		
		private System.Guid _ClinicalDataSubjectDispensingDeviceKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.Guid _ClinicalDataSubjectKey;
		
		public DispensingDeviceClinicalDataSubjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectDispensingDeviceKey")]
		public System.Guid ClinicalDataSubjectDispensingDeviceKey
		{
			get
			{
				return this._ClinicalDataSubjectDispensingDeviceKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectDispensingDeviceKey != value))
				{
					this._ClinicalDataSubjectDispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey")]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectKey")]
		public System.Guid ClinicalDataSubjectKey
		{
			get
			{
				return this._ClinicalDataSubjectKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectKey != value))
				{
					this._ClinicalDataSubjectKey = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class DispensingDeviceFacilityKitResult
	{
		
		private System.Guid _FacilityKitDispensingDeviceKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.Guid _FacilityKitKey;
		
		private bool _StatFlag;
		
		public DispensingDeviceFacilityKitResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKitDispensingDeviceKey")]
		public System.Guid FacilityKitDispensingDeviceKey
		{
			get
			{
				return this._FacilityKitDispensingDeviceKey;
			}
			set
			{
				if ((this._FacilityKitDispensingDeviceKey != value))
				{
					this._FacilityKitDispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey")]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKitKey")]
		public System.Guid FacilityKitKey
		{
			get
			{
				return this._FacilityKitKey;
			}
			set
			{
				if ((this._FacilityKitKey != value))
				{
					this._FacilityKitKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatFlag")]
		public bool StatFlag
		{
			get
			{
				return this._StatFlag;
			}
			set
			{
				if ((this._StatFlag != value))
				{
					this._StatFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class DispensingDeviceSummaryResult
	{
		
		private System.Guid _DispensingDeviceKey;
		
		private string _DispensingDeviceName;
		
		private string _DispensingDeviceTypeInternalCode;
		
		private string _DispensingDeviceTypeDescriptionText;
		
		private System.Guid _FacilityKey;
		
		private string _FacilityCode;
		
		private string _FacilityName;
		
		private bool _OutOfServiceFlag;
		
		private bool _ProfileModeFlag;
		
		private long _TotalRows;
		
		public DispensingDeviceSummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey")]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceName", CanBeNull=false)]
		public string DispensingDeviceName
		{
			get
			{
				return this._DispensingDeviceName;
			}
			set
			{
				if ((this._DispensingDeviceName != value))
				{
					this._DispensingDeviceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceTypeInternalCode", CanBeNull=false)]
		public string DispensingDeviceTypeInternalCode
		{
			get
			{
				return this._DispensingDeviceTypeInternalCode;
			}
			set
			{
				if ((this._DispensingDeviceTypeInternalCode != value))
				{
					this._DispensingDeviceTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceTypeDescriptionText", CanBeNull=false)]
		public string DispensingDeviceTypeDescriptionText
		{
			get
			{
				return this._DispensingDeviceTypeDescriptionText;
			}
			set
			{
				if ((this._DispensingDeviceTypeDescriptionText != value))
				{
					this._DispensingDeviceTypeDescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey")]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityCode", CanBeNull=false)]
		public string FacilityCode
		{
			get
			{
				return this._FacilityCode;
			}
			set
			{
				if ((this._FacilityCode != value))
				{
					this._FacilityCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", CanBeNull=false)]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this._FacilityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutOfServiceFlag")]
		public bool OutOfServiceFlag
		{
			get
			{
				return this._OutOfServiceFlag;
			}
			set
			{
				if ((this._OutOfServiceFlag != value))
				{
					this._OutOfServiceFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileModeFlag")]
		public bool ProfileModeFlag
		{
			get
			{
				return this._ProfileModeFlag;
			}
			set
			{
				if ((this._ProfileModeFlag != value))
				{
					this._ProfileModeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRows")]
		public long TotalRows
		{
			get
			{
				return this._TotalRows;
			}
			set
			{
				if ((this._TotalRows != value))
				{
					this._TotalRows = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class DispensingDeviceCommonAttributeResult
	{
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private string _DispensingDeviceTypeInternalCode;
		
		private string _ClientDatabaseVersionText;
		
		private byte _ClientDatabaseVersionTextNullValueFlag;
		
		private System.Nullable<System.Guid> _SyncServerKey;
		
		private byte _SyncServerKeyNullValueFlag;
		
		private string _AuthenticationMethodInternalCode;
		
		private string _BioIDExemptInternalCode;
		
		private byte _BioIDExemptInternalCodeNullValueFlag;
		
		private string _UserScanModeInternalCode;
		
		private byte _UserScanModeInternalCodeNullValueFlag;
		
		private System.Nullable<System.Guid> _ZoneKey;
		
		private byte _ZoneKeyNullValueFlag;
		
		private System.Nullable<byte> _OutOfServiceFlag;
		
		private System.Nullable<byte> _ProfileModeFlag;
		
		private System.Nullable<short> _MenuTimeOutDurationAmount;
		
		private System.Nullable<short> _OpenDrawerTimeOutDurationAmount;
		
		private System.Nullable<short> _EmptyReturnBinTimeOutDurationAmount;
		
		private System.Nullable<short> _InventoryDrawerMapTimeOutDurationAmount;
		
		private System.Nullable<short> _AnesthesiaTimeOutDurationAmount;
		
		private System.Nullable<short> _ReverificationTimeOutDurationAmount;
		
		private System.Nullable<byte> _AnesthesiaSwitchUserFlag;
		
		private System.Nullable<short> _AnesthesiaSwitchUserDurationAmount;
		
		private byte _AnesthesiaSwitchUserDurationAmountNullValueFlag;
		
		private System.Nullable<short> _PatientCaseTransactionHoldDurationAmount;
		
		private System.Nullable<byte> _AccessInventoryFeatureOffFlag;
		
		private System.Nullable<byte> _TemporaryNonProfileModeFlag;
		
		private System.Nullable<short> _RemoveBeforeOrderStartDurationAmount;
		
		private byte _RemoveBeforeOrderStartDurationAmountNullValueFlag;
		
		private System.Nullable<short> _RemoveAfterOrderExpiredDurationAmount;
		
		private byte _RemoveAfterOrderExpiredDurationAmountNullValueFlag;
		
		private System.Nullable<short> _BeforeMedDueNowDurationAmount;
		
		private System.Nullable<short> _AfterMedDueNowDurationAmount;
		
		private System.Nullable<byte> _OverrideReasonRequiredFlag;
		
		private System.Nullable<byte> _TooCloseWarningFlag;
		
		private System.Nullable<byte> _WitnessOnDispenseFlag;
		
		private System.Nullable<byte> _WitnessOnReturnFlag;
		
		private System.Nullable<byte> _WitnessOnDisposeFlag;
		
		private System.Nullable<byte> _WitnessOnLoadRefillFlag;
		
		private System.Nullable<byte> _WitnessOnUnloadFlag;
		
		private System.Nullable<byte> _WitnessOnOverrideFlag;
		
		private System.Nullable<byte> _WitnessOnOutdateFlag;
		
		private System.Nullable<byte> _WitnessOnInventoryFlag;
		
		private System.Nullable<byte> _WitnessOnEmptyReturnBinFlag;
		
		private System.Nullable<byte> _WitnessOnDestockFlag;
		
		private System.Nullable<byte> _WitnessOnRxCheckFlag;
		
		private System.Nullable<byte> _WitnessOnCubieEjectFlag;
		
		private System.Nullable<byte> _ScanOnLoadRefillFlag;
		
		private System.Nullable<byte> _ScanOnRemoveFlag;
		
		private System.Nullable<byte> _ScanOnReturnFlag;
		
		private System.Nullable<byte> _RequireLotIDOnRemoveFlag;
		
		private System.Nullable<byte> _RequireLotIDOnReturnFlag;
		
		private System.Nullable<byte> _RequireSerialIDOnRemoveFlag;
		
		private System.Nullable<byte> _RequireSerialIDOnReturnFlag;
		
		private System.Nullable<byte> _RequireExpirationDateOnRemoveFlag;
		
		private System.Nullable<byte> _RequireExpirationDateOnReturnFlag;
		
		private System.Nullable<byte> _CriticalOverrideFlag;
		
		private System.Nullable<short> _AutoCriticalOverrideDurationAmount;
		
		private byte _AutoCriticalOverrideDurationAmountNullValueFlag;
		
		private System.Nullable<byte> _BlindCountFlag;
		
		private System.Nullable<byte> _OutdateTrackingFlag;
		
		private System.Nullable<byte> _ReturnToStockFlag;
		
		private System.Nullable<short> _UpgradeTimeOfDayValue;
		
		private System.Nullable<byte> _ManualUpgradeFlag;
		
		private System.Nullable<byte> _DefaultGlobalPatientSearchFlag;
		
		private System.Nullable<byte> _PrintMedOutdateFlag;
		
		private System.Nullable<byte> _PrintMedUnloadFlag;
		
		private System.Nullable<byte> _PrintMedEmptyReturnBinFlag;
		
		private System.Nullable<byte> _PrintMedReturnFlag;
		
		private System.Nullable<byte> _PrintMedRemoveFlag;
		
		private System.Nullable<byte> _PrintMedDisposeFlag;
		
		private System.Nullable<byte> _PrintMedDestockFlag;
		
		private System.Nullable<byte> _PrintMedRxCheckFlag;
		
		private string _CriticalLowNoticePrinterName;
		
		private byte _CriticalLowNoticePrinterNameNullValueFlag;
		
		private string _StockOutNoticePrinterName;
		
		private byte _StockOutNoticePrinterNameNullValueFlag;
		
		private System.Nullable<byte> _ShowPreadmissionFlag;
		
		private System.Nullable<byte> _ShowRecurringAdmissionFlag;
		
		private System.Nullable<short> _PreadmissionLeadDurationAmount;
		
		private System.Nullable<short> _PreadmissionProlongedInactivityDurationAmount;
		
		private System.Nullable<short> _AdmissionProlongedInactivityDurationAmount;
		
		private System.Nullable<short> _DischargeDelayDurationAmount;
		
		private System.Nullable<short> _TransferDelayDurationAmount;
		
		private System.Nullable<System.Guid> _ReplenishmentAreaKey;
		
		private byte _ReplenishmentAreaKeyNullValueFlag;
		
		private System.Nullable<System.Guid> _VirtualStockLocationKey;
		
		private byte _VirtualStockLocationKeyNullValueFlag;
		
		private System.Nullable<byte> _RxCheckFlag;
		
		private System.Nullable<byte> _AutoMedLabelFlag;
		
		private System.Nullable<byte> _SyncUploadAllowSkipFlag;
		
		private System.Nullable<byte> _SyncAllowDownloadOnUploadFailureFlag;
		
		private System.Nullable<short> _SyncUploadMaximumRetryQuantity;
		
		private System.Nullable<short> _SyncUploadRetryIntervalAmount;
		
		private byte _AnesthesiaSystemPresentFlag;
		
		private System.Nullable<byte> _PrintMedLoadRefillFlag;
		
		private string _WasteModeInternalCode;
		
		private byte _WasteModeInternalCodeNullValueFlag;
		
		private System.Nullable<byte> _PrintPatientLabelRemoveFlag;
		
		private System.Nullable<byte> _PharmacyOrderDispenseQuantityFlag;
		
		private System.Nullable<short> _FutureTaskWarningDurationAmount;
		
		private string _CardExemptInternalCode;
		
		private byte _CardExemptInternalCodeNullValueFlag;
		
		private System.Nullable<byte> _UseEquivalenciesFlag;
		
		private System.Nullable<byte> _DisplayPatientPreferredNameFlag;
		
		private System.Nullable<short> _OneTimePasswordTimeoutDurationAmount;
		
		private byte _GCSMSystemPresentFlag;
		
		private System.Nullable<short> _LeaveOfAbsenceDelayDurationAmount;
		
		private System.Nullable<short> _GCSMDestructionBinTimeOutDurationAmount;
		
		private System.Nullable<byte> _GCSMScanOnCompoundingFlag;
		
		private System.Nullable<byte> _GCSMScanOnIssueFlag;
		
		private System.Nullable<byte> _GCSMScanOnPrescriptionFlag;
		
		private System.Nullable<byte> _GCSMScanOnReceiveFlag;
		
		private System.Nullable<byte> _GCSMScanOnRestockADMFlag;
		
		private System.Nullable<byte> _GCSMScanOnSellFlag;
		
		private System.Nullable<byte> _GCSMScanOnStockTransferFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnCompoundingFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnEmptyDestructionBinFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnInventoryFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnIssueFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnOutdateFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnPrescriptionFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnReceiveFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnRestockADMFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnReturnFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnReverseCompoundingFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnSellFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnStockTransferFlag;
		
		private System.Nullable<byte> _ReceiveBarcodeInventoryDecrementExternalFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnRecallFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnUnloadFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnWasteFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnRecoverFlag;
		
		private System.Nullable<System.Guid> _ControlledSubstanceLicenseKey;
		
		private System.Nullable<byte> _IsGrabScan;
		
		private System.Nullable<byte> _GCSMBlindCountFlag;
		
		private System.Nullable<byte> _GCSMScanOnReturnFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnAccessDestructionBinFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnDiscrepancyResolutionFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnEmptyDestructionBinFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnFillPrescriptionFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnManageStockFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnNonStandardCompoundRecordFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnOutdateFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnPendingStandardCompoundRecordFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnRecallFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnReceiveFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnReturnFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnReverseNonStandardCompoundFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnSellFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnUnloadFlag;
		
		private System.Nullable<byte> _GCSMPrintReceiptOnWasteFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnAccessDestructionBinFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnFillPrescriptionFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnNonStandardCompoundIngredientFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnNonStandardCompoundMedFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnOutdateFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnRecallFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnReturnFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnSellFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnStandardCompoundMedFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnStandardCompoundIngredientFlag;
		
		private System.Nullable<byte> _GCSMPrintLabelOnWasteFlag;
		
		private System.Nullable<byte> _GCSMPrintPullListOnAutorestockFlag;
		
		private System.Nullable<byte> _GCSMPrintPullListOnDispenseToLocationFlag;
		
		private System.Nullable<byte> _GCSMPrintPullListOnKitFlag;
		
		private System.Nullable<byte> _GCSMPrintPullListOnKitComponentFlag;
		
		private System.Nullable<byte> _GCSMPrintPullListOnManageExcessStockFlag;
		
		private System.Nullable<byte> _GCSMPrintPullListOnNonStandardCompoundFlag;
		
		private System.Nullable<byte> _GCSMPrintPullListOnNonStandardCompoundIngredientFlag;
		
		private System.Nullable<byte> _GCSMPrintPullListOnStandardCompoundFlag;
		
		private System.Nullable<byte> _GCSMPrintPullListOnStandardCompoundIngredientFlag;
		
		private System.Nullable<byte> _GCSMHideAreaFilterFlag;
		
		private System.Nullable<byte> _GCSMHideZoneFilterFlag;
		
		private string _GCSMCompareReportStandardRangeInternalCode;
		
		private byte _GCSMCompareReportStandardRangeInternalCodeNullValueFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnAccessToDestructionBinFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnAddToDestructionBinFlag;
		
		private System.Nullable<System.Guid> _GCSMOriginDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _GCSMDestinationDispensingDeviceKey;
		
		private System.Nullable<byte> _GCSMCompareReportViewFilterFocusedFlag;
		
		public DispensingDeviceCommonAttributeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey")]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceTypeInternalCode")]
		public string DispensingDeviceTypeInternalCode
		{
			get
			{
				return this._DispensingDeviceTypeInternalCode;
			}
			set
			{
				if ((this._DispensingDeviceTypeInternalCode != value))
				{
					this._DispensingDeviceTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientDatabaseVersionText")]
		public string ClientDatabaseVersionText
		{
			get
			{
				return this._ClientDatabaseVersionText;
			}
			set
			{
				if ((this._ClientDatabaseVersionText != value))
				{
					this._ClientDatabaseVersionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientDatabaseVersionTextNullValueFlag")]
		public byte ClientDatabaseVersionTextNullValueFlag
		{
			get
			{
				return this._ClientDatabaseVersionTextNullValueFlag;
			}
			set
			{
				if ((this._ClientDatabaseVersionTextNullValueFlag != value))
				{
					this._ClientDatabaseVersionTextNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncServerKey")]
		public System.Nullable<System.Guid> SyncServerKey
		{
			get
			{
				return this._SyncServerKey;
			}
			set
			{
				if ((this._SyncServerKey != value))
				{
					this._SyncServerKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncServerKeyNullValueFlag")]
		public byte SyncServerKeyNullValueFlag
		{
			get
			{
				return this._SyncServerKeyNullValueFlag;
			}
			set
			{
				if ((this._SyncServerKeyNullValueFlag != value))
				{
					this._SyncServerKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationMethodInternalCode")]
		public string AuthenticationMethodInternalCode
		{
			get
			{
				return this._AuthenticationMethodInternalCode;
			}
			set
			{
				if ((this._AuthenticationMethodInternalCode != value))
				{
					this._AuthenticationMethodInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BioIDExemptInternalCode")]
		public string BioIDExemptInternalCode
		{
			get
			{
				return this._BioIDExemptInternalCode;
			}
			set
			{
				if ((this._BioIDExemptInternalCode != value))
				{
					this._BioIDExemptInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BioIDExemptInternalCodeNullValueFlag")]
		public byte BioIDExemptInternalCodeNullValueFlag
		{
			get
			{
				return this._BioIDExemptInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._BioIDExemptInternalCodeNullValueFlag != value))
				{
					this._BioIDExemptInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserScanModeInternalCode")]
		public string UserScanModeInternalCode
		{
			get
			{
				return this._UserScanModeInternalCode;
			}
			set
			{
				if ((this._UserScanModeInternalCode != value))
				{
					this._UserScanModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserScanModeInternalCodeNullValueFlag")]
		public byte UserScanModeInternalCodeNullValueFlag
		{
			get
			{
				return this._UserScanModeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._UserScanModeInternalCodeNullValueFlag != value))
				{
					this._UserScanModeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneKey")]
		public System.Nullable<System.Guid> ZoneKey
		{
			get
			{
				return this._ZoneKey;
			}
			set
			{
				if ((this._ZoneKey != value))
				{
					this._ZoneKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneKeyNullValueFlag")]
		public byte ZoneKeyNullValueFlag
		{
			get
			{
				return this._ZoneKeyNullValueFlag;
			}
			set
			{
				if ((this._ZoneKeyNullValueFlag != value))
				{
					this._ZoneKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutOfServiceFlag")]
		public System.Nullable<byte> OutOfServiceFlag
		{
			get
			{
				return this._OutOfServiceFlag;
			}
			set
			{
				if ((this._OutOfServiceFlag != value))
				{
					this._OutOfServiceFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileModeFlag")]
		public System.Nullable<byte> ProfileModeFlag
		{
			get
			{
				return this._ProfileModeFlag;
			}
			set
			{
				if ((this._ProfileModeFlag != value))
				{
					this._ProfileModeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuTimeOutDurationAmount")]
		public System.Nullable<short> MenuTimeOutDurationAmount
		{
			get
			{
				return this._MenuTimeOutDurationAmount;
			}
			set
			{
				if ((this._MenuTimeOutDurationAmount != value))
				{
					this._MenuTimeOutDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenDrawerTimeOutDurationAmount")]
		public System.Nullable<short> OpenDrawerTimeOutDurationAmount
		{
			get
			{
				return this._OpenDrawerTimeOutDurationAmount;
			}
			set
			{
				if ((this._OpenDrawerTimeOutDurationAmount != value))
				{
					this._OpenDrawerTimeOutDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmptyReturnBinTimeOutDurationAmount")]
		public System.Nullable<short> EmptyReturnBinTimeOutDurationAmount
		{
			get
			{
				return this._EmptyReturnBinTimeOutDurationAmount;
			}
			set
			{
				if ((this._EmptyReturnBinTimeOutDurationAmount != value))
				{
					this._EmptyReturnBinTimeOutDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDrawerMapTimeOutDurationAmount")]
		public System.Nullable<short> InventoryDrawerMapTimeOutDurationAmount
		{
			get
			{
				return this._InventoryDrawerMapTimeOutDurationAmount;
			}
			set
			{
				if ((this._InventoryDrawerMapTimeOutDurationAmount != value))
				{
					this._InventoryDrawerMapTimeOutDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaTimeOutDurationAmount")]
		public System.Nullable<short> AnesthesiaTimeOutDurationAmount
		{
			get
			{
				return this._AnesthesiaTimeOutDurationAmount;
			}
			set
			{
				if ((this._AnesthesiaTimeOutDurationAmount != value))
				{
					this._AnesthesiaTimeOutDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReverificationTimeOutDurationAmount")]
		public System.Nullable<short> ReverificationTimeOutDurationAmount
		{
			get
			{
				return this._ReverificationTimeOutDurationAmount;
			}
			set
			{
				if ((this._ReverificationTimeOutDurationAmount != value))
				{
					this._ReverificationTimeOutDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaSwitchUserFlag")]
		public System.Nullable<byte> AnesthesiaSwitchUserFlag
		{
			get
			{
				return this._AnesthesiaSwitchUserFlag;
			}
			set
			{
				if ((this._AnesthesiaSwitchUserFlag != value))
				{
					this._AnesthesiaSwitchUserFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaSwitchUserDurationAmount")]
		public System.Nullable<short> AnesthesiaSwitchUserDurationAmount
		{
			get
			{
				return this._AnesthesiaSwitchUserDurationAmount;
			}
			set
			{
				if ((this._AnesthesiaSwitchUserDurationAmount != value))
				{
					this._AnesthesiaSwitchUserDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaSwitchUserDurationAmountNullValueFlag")]
		public byte AnesthesiaSwitchUserDurationAmountNullValueFlag
		{
			get
			{
				return this._AnesthesiaSwitchUserDurationAmountNullValueFlag;
			}
			set
			{
				if ((this._AnesthesiaSwitchUserDurationAmountNullValueFlag != value))
				{
					this._AnesthesiaSwitchUserDurationAmountNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientCaseTransactionHoldDurationAmount")]
		public System.Nullable<short> PatientCaseTransactionHoldDurationAmount
		{
			get
			{
				return this._PatientCaseTransactionHoldDurationAmount;
			}
			set
			{
				if ((this._PatientCaseTransactionHoldDurationAmount != value))
				{
					this._PatientCaseTransactionHoldDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessInventoryFeatureOffFlag")]
		public System.Nullable<byte> AccessInventoryFeatureOffFlag
		{
			get
			{
				return this._AccessInventoryFeatureOffFlag;
			}
			set
			{
				if ((this._AccessInventoryFeatureOffFlag != value))
				{
					this._AccessInventoryFeatureOffFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryNonProfileModeFlag")]
		public System.Nullable<byte> TemporaryNonProfileModeFlag
		{
			get
			{
				return this._TemporaryNonProfileModeFlag;
			}
			set
			{
				if ((this._TemporaryNonProfileModeFlag != value))
				{
					this._TemporaryNonProfileModeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveBeforeOrderStartDurationAmount")]
		public System.Nullable<short> RemoveBeforeOrderStartDurationAmount
		{
			get
			{
				return this._RemoveBeforeOrderStartDurationAmount;
			}
			set
			{
				if ((this._RemoveBeforeOrderStartDurationAmount != value))
				{
					this._RemoveBeforeOrderStartDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveBeforeOrderStartDurationAmountNullValueFlag")]
		public byte RemoveBeforeOrderStartDurationAmountNullValueFlag
		{
			get
			{
				return this._RemoveBeforeOrderStartDurationAmountNullValueFlag;
			}
			set
			{
				if ((this._RemoveBeforeOrderStartDurationAmountNullValueFlag != value))
				{
					this._RemoveBeforeOrderStartDurationAmountNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveAfterOrderExpiredDurationAmount")]
		public System.Nullable<short> RemoveAfterOrderExpiredDurationAmount
		{
			get
			{
				return this._RemoveAfterOrderExpiredDurationAmount;
			}
			set
			{
				if ((this._RemoveAfterOrderExpiredDurationAmount != value))
				{
					this._RemoveAfterOrderExpiredDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveAfterOrderExpiredDurationAmountNullValueFlag")]
		public byte RemoveAfterOrderExpiredDurationAmountNullValueFlag
		{
			get
			{
				return this._RemoveAfterOrderExpiredDurationAmountNullValueFlag;
			}
			set
			{
				if ((this._RemoveAfterOrderExpiredDurationAmountNullValueFlag != value))
				{
					this._RemoveAfterOrderExpiredDurationAmountNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeforeMedDueNowDurationAmount")]
		public System.Nullable<short> BeforeMedDueNowDurationAmount
		{
			get
			{
				return this._BeforeMedDueNowDurationAmount;
			}
			set
			{
				if ((this._BeforeMedDueNowDurationAmount != value))
				{
					this._BeforeMedDueNowDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfterMedDueNowDurationAmount")]
		public System.Nullable<short> AfterMedDueNowDurationAmount
		{
			get
			{
				return this._AfterMedDueNowDurationAmount;
			}
			set
			{
				if ((this._AfterMedDueNowDurationAmount != value))
				{
					this._AfterMedDueNowDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideReasonRequiredFlag")]
		public System.Nullable<byte> OverrideReasonRequiredFlag
		{
			get
			{
				return this._OverrideReasonRequiredFlag;
			}
			set
			{
				if ((this._OverrideReasonRequiredFlag != value))
				{
					this._OverrideReasonRequiredFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseWarningFlag")]
		public System.Nullable<byte> TooCloseWarningFlag
		{
			get
			{
				return this._TooCloseWarningFlag;
			}
			set
			{
				if ((this._TooCloseWarningFlag != value))
				{
					this._TooCloseWarningFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDispenseFlag")]
		public System.Nullable<byte> WitnessOnDispenseFlag
		{
			get
			{
				return this._WitnessOnDispenseFlag;
			}
			set
			{
				if ((this._WitnessOnDispenseFlag != value))
				{
					this._WitnessOnDispenseFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnReturnFlag")]
		public System.Nullable<byte> WitnessOnReturnFlag
		{
			get
			{
				return this._WitnessOnReturnFlag;
			}
			set
			{
				if ((this._WitnessOnReturnFlag != value))
				{
					this._WitnessOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDisposeFlag")]
		public System.Nullable<byte> WitnessOnDisposeFlag
		{
			get
			{
				return this._WitnessOnDisposeFlag;
			}
			set
			{
				if ((this._WitnessOnDisposeFlag != value))
				{
					this._WitnessOnDisposeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnLoadRefillFlag")]
		public System.Nullable<byte> WitnessOnLoadRefillFlag
		{
			get
			{
				return this._WitnessOnLoadRefillFlag;
			}
			set
			{
				if ((this._WitnessOnLoadRefillFlag != value))
				{
					this._WitnessOnLoadRefillFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnUnloadFlag")]
		public System.Nullable<byte> WitnessOnUnloadFlag
		{
			get
			{
				return this._WitnessOnUnloadFlag;
			}
			set
			{
				if ((this._WitnessOnUnloadFlag != value))
				{
					this._WitnessOnUnloadFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnOverrideFlag")]
		public System.Nullable<byte> WitnessOnOverrideFlag
		{
			get
			{
				return this._WitnessOnOverrideFlag;
			}
			set
			{
				if ((this._WitnessOnOverrideFlag != value))
				{
					this._WitnessOnOverrideFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnOutdateFlag")]
		public System.Nullable<byte> WitnessOnOutdateFlag
		{
			get
			{
				return this._WitnessOnOutdateFlag;
			}
			set
			{
				if ((this._WitnessOnOutdateFlag != value))
				{
					this._WitnessOnOutdateFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnInventoryFlag")]
		public System.Nullable<byte> WitnessOnInventoryFlag
		{
			get
			{
				return this._WitnessOnInventoryFlag;
			}
			set
			{
				if ((this._WitnessOnInventoryFlag != value))
				{
					this._WitnessOnInventoryFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnEmptyReturnBinFlag")]
		public System.Nullable<byte> WitnessOnEmptyReturnBinFlag
		{
			get
			{
				return this._WitnessOnEmptyReturnBinFlag;
			}
			set
			{
				if ((this._WitnessOnEmptyReturnBinFlag != value))
				{
					this._WitnessOnEmptyReturnBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDestockFlag")]
		public System.Nullable<byte> WitnessOnDestockFlag
		{
			get
			{
				return this._WitnessOnDestockFlag;
			}
			set
			{
				if ((this._WitnessOnDestockFlag != value))
				{
					this._WitnessOnDestockFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnRxCheckFlag")]
		public System.Nullable<byte> WitnessOnRxCheckFlag
		{
			get
			{
				return this._WitnessOnRxCheckFlag;
			}
			set
			{
				if ((this._WitnessOnRxCheckFlag != value))
				{
					this._WitnessOnRxCheckFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnCubieEjectFlag")]
		public System.Nullable<byte> WitnessOnCubieEjectFlag
		{
			get
			{
				return this._WitnessOnCubieEjectFlag;
			}
			set
			{
				if ((this._WitnessOnCubieEjectFlag != value))
				{
					this._WitnessOnCubieEjectFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnLoadRefillFlag")]
		public System.Nullable<byte> ScanOnLoadRefillFlag
		{
			get
			{
				return this._ScanOnLoadRefillFlag;
			}
			set
			{
				if ((this._ScanOnLoadRefillFlag != value))
				{
					this._ScanOnLoadRefillFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnRemoveFlag")]
		public System.Nullable<byte> ScanOnRemoveFlag
		{
			get
			{
				return this._ScanOnRemoveFlag;
			}
			set
			{
				if ((this._ScanOnRemoveFlag != value))
				{
					this._ScanOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnReturnFlag")]
		public System.Nullable<byte> ScanOnReturnFlag
		{
			get
			{
				return this._ScanOnReturnFlag;
			}
			set
			{
				if ((this._ScanOnReturnFlag != value))
				{
					this._ScanOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLotIDOnRemoveFlag")]
		public System.Nullable<byte> RequireLotIDOnRemoveFlag
		{
			get
			{
				return this._RequireLotIDOnRemoveFlag;
			}
			set
			{
				if ((this._RequireLotIDOnRemoveFlag != value))
				{
					this._RequireLotIDOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLotIDOnReturnFlag")]
		public System.Nullable<byte> RequireLotIDOnReturnFlag
		{
			get
			{
				return this._RequireLotIDOnReturnFlag;
			}
			set
			{
				if ((this._RequireLotIDOnReturnFlag != value))
				{
					this._RequireLotIDOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSerialIDOnRemoveFlag")]
		public System.Nullable<byte> RequireSerialIDOnRemoveFlag
		{
			get
			{
				return this._RequireSerialIDOnRemoveFlag;
			}
			set
			{
				if ((this._RequireSerialIDOnRemoveFlag != value))
				{
					this._RequireSerialIDOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSerialIDOnReturnFlag")]
		public System.Nullable<byte> RequireSerialIDOnReturnFlag
		{
			get
			{
				return this._RequireSerialIDOnReturnFlag;
			}
			set
			{
				if ((this._RequireSerialIDOnReturnFlag != value))
				{
					this._RequireSerialIDOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireExpirationDateOnRemoveFlag")]
		public System.Nullable<byte> RequireExpirationDateOnRemoveFlag
		{
			get
			{
				return this._RequireExpirationDateOnRemoveFlag;
			}
			set
			{
				if ((this._RequireExpirationDateOnRemoveFlag != value))
				{
					this._RequireExpirationDateOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireExpirationDateOnReturnFlag")]
		public System.Nullable<byte> RequireExpirationDateOnReturnFlag
		{
			get
			{
				return this._RequireExpirationDateOnReturnFlag;
			}
			set
			{
				if ((this._RequireExpirationDateOnReturnFlag != value))
				{
					this._RequireExpirationDateOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalOverrideFlag")]
		public System.Nullable<byte> CriticalOverrideFlag
		{
			get
			{
				return this._CriticalOverrideFlag;
			}
			set
			{
				if ((this._CriticalOverrideFlag != value))
				{
					this._CriticalOverrideFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoCriticalOverrideDurationAmount")]
		public System.Nullable<short> AutoCriticalOverrideDurationAmount
		{
			get
			{
				return this._AutoCriticalOverrideDurationAmount;
			}
			set
			{
				if ((this._AutoCriticalOverrideDurationAmount != value))
				{
					this._AutoCriticalOverrideDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoCriticalOverrideDurationAmountNullValueFlag")]
		public byte AutoCriticalOverrideDurationAmountNullValueFlag
		{
			get
			{
				return this._AutoCriticalOverrideDurationAmountNullValueFlag;
			}
			set
			{
				if ((this._AutoCriticalOverrideDurationAmountNullValueFlag != value))
				{
					this._AutoCriticalOverrideDurationAmountNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlindCountFlag")]
		public System.Nullable<byte> BlindCountFlag
		{
			get
			{
				return this._BlindCountFlag;
			}
			set
			{
				if ((this._BlindCountFlag != value))
				{
					this._BlindCountFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdateTrackingFlag")]
		public System.Nullable<byte> OutdateTrackingFlag
		{
			get
			{
				return this._OutdateTrackingFlag;
			}
			set
			{
				if ((this._OutdateTrackingFlag != value))
				{
					this._OutdateTrackingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnToStockFlag")]
		public System.Nullable<byte> ReturnToStockFlag
		{
			get
			{
				return this._ReturnToStockFlag;
			}
			set
			{
				if ((this._ReturnToStockFlag != value))
				{
					this._ReturnToStockFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeTimeOfDayValue")]
		public System.Nullable<short> UpgradeTimeOfDayValue
		{
			get
			{
				return this._UpgradeTimeOfDayValue;
			}
			set
			{
				if ((this._UpgradeTimeOfDayValue != value))
				{
					this._UpgradeTimeOfDayValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualUpgradeFlag")]
		public System.Nullable<byte> ManualUpgradeFlag
		{
			get
			{
				return this._ManualUpgradeFlag;
			}
			set
			{
				if ((this._ManualUpgradeFlag != value))
				{
					this._ManualUpgradeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultGlobalPatientSearchFlag")]
		public System.Nullable<byte> DefaultGlobalPatientSearchFlag
		{
			get
			{
				return this._DefaultGlobalPatientSearchFlag;
			}
			set
			{
				if ((this._DefaultGlobalPatientSearchFlag != value))
				{
					this._DefaultGlobalPatientSearchFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedOutdateFlag")]
		public System.Nullable<byte> PrintMedOutdateFlag
		{
			get
			{
				return this._PrintMedOutdateFlag;
			}
			set
			{
				if ((this._PrintMedOutdateFlag != value))
				{
					this._PrintMedOutdateFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedUnloadFlag")]
		public System.Nullable<byte> PrintMedUnloadFlag
		{
			get
			{
				return this._PrintMedUnloadFlag;
			}
			set
			{
				if ((this._PrintMedUnloadFlag != value))
				{
					this._PrintMedUnloadFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedEmptyReturnBinFlag")]
		public System.Nullable<byte> PrintMedEmptyReturnBinFlag
		{
			get
			{
				return this._PrintMedEmptyReturnBinFlag;
			}
			set
			{
				if ((this._PrintMedEmptyReturnBinFlag != value))
				{
					this._PrintMedEmptyReturnBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedReturnFlag")]
		public System.Nullable<byte> PrintMedReturnFlag
		{
			get
			{
				return this._PrintMedReturnFlag;
			}
			set
			{
				if ((this._PrintMedReturnFlag != value))
				{
					this._PrintMedReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedRemoveFlag")]
		public System.Nullable<byte> PrintMedRemoveFlag
		{
			get
			{
				return this._PrintMedRemoveFlag;
			}
			set
			{
				if ((this._PrintMedRemoveFlag != value))
				{
					this._PrintMedRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedDisposeFlag")]
		public System.Nullable<byte> PrintMedDisposeFlag
		{
			get
			{
				return this._PrintMedDisposeFlag;
			}
			set
			{
				if ((this._PrintMedDisposeFlag != value))
				{
					this._PrintMedDisposeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedDestockFlag")]
		public System.Nullable<byte> PrintMedDestockFlag
		{
			get
			{
				return this._PrintMedDestockFlag;
			}
			set
			{
				if ((this._PrintMedDestockFlag != value))
				{
					this._PrintMedDestockFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedRxCheckFlag")]
		public System.Nullable<byte> PrintMedRxCheckFlag
		{
			get
			{
				return this._PrintMedRxCheckFlag;
			}
			set
			{
				if ((this._PrintMedRxCheckFlag != value))
				{
					this._PrintMedRxCheckFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalLowNoticePrinterName")]
		public string CriticalLowNoticePrinterName
		{
			get
			{
				return this._CriticalLowNoticePrinterName;
			}
			set
			{
				if ((this._CriticalLowNoticePrinterName != value))
				{
					this._CriticalLowNoticePrinterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalLowNoticePrinterNameNullValueFlag")]
		public byte CriticalLowNoticePrinterNameNullValueFlag
		{
			get
			{
				return this._CriticalLowNoticePrinterNameNullValueFlag;
			}
			set
			{
				if ((this._CriticalLowNoticePrinterNameNullValueFlag != value))
				{
					this._CriticalLowNoticePrinterNameNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockOutNoticePrinterName")]
		public string StockOutNoticePrinterName
		{
			get
			{
				return this._StockOutNoticePrinterName;
			}
			set
			{
				if ((this._StockOutNoticePrinterName != value))
				{
					this._StockOutNoticePrinterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockOutNoticePrinterNameNullValueFlag")]
		public byte StockOutNoticePrinterNameNullValueFlag
		{
			get
			{
				return this._StockOutNoticePrinterNameNullValueFlag;
			}
			set
			{
				if ((this._StockOutNoticePrinterNameNullValueFlag != value))
				{
					this._StockOutNoticePrinterNameNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowPreadmissionFlag")]
		public System.Nullable<byte> ShowPreadmissionFlag
		{
			get
			{
				return this._ShowPreadmissionFlag;
			}
			set
			{
				if ((this._ShowPreadmissionFlag != value))
				{
					this._ShowPreadmissionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowRecurringAdmissionFlag")]
		public System.Nullable<byte> ShowRecurringAdmissionFlag
		{
			get
			{
				return this._ShowRecurringAdmissionFlag;
			}
			set
			{
				if ((this._ShowRecurringAdmissionFlag != value))
				{
					this._ShowRecurringAdmissionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmissionLeadDurationAmount")]
		public System.Nullable<short> PreadmissionLeadDurationAmount
		{
			get
			{
				return this._PreadmissionLeadDurationAmount;
			}
			set
			{
				if ((this._PreadmissionLeadDurationAmount != value))
				{
					this._PreadmissionLeadDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmissionProlongedInactivityDurationAmount")]
		public System.Nullable<short> PreadmissionProlongedInactivityDurationAmount
		{
			get
			{
				return this._PreadmissionProlongedInactivityDurationAmount;
			}
			set
			{
				if ((this._PreadmissionProlongedInactivityDurationAmount != value))
				{
					this._PreadmissionProlongedInactivityDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionProlongedInactivityDurationAmount")]
		public System.Nullable<short> AdmissionProlongedInactivityDurationAmount
		{
			get
			{
				return this._AdmissionProlongedInactivityDurationAmount;
			}
			set
			{
				if ((this._AdmissionProlongedInactivityDurationAmount != value))
				{
					this._AdmissionProlongedInactivityDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDelayDurationAmount")]
		public System.Nullable<short> DischargeDelayDurationAmount
		{
			get
			{
				return this._DischargeDelayDurationAmount;
			}
			set
			{
				if ((this._DischargeDelayDurationAmount != value))
				{
					this._DischargeDelayDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDelayDurationAmount")]
		public System.Nullable<short> TransferDelayDurationAmount
		{
			get
			{
				return this._TransferDelayDurationAmount;
			}
			set
			{
				if ((this._TransferDelayDurationAmount != value))
				{
					this._TransferDelayDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentAreaKey")]
		public System.Nullable<System.Guid> ReplenishmentAreaKey
		{
			get
			{
				return this._ReplenishmentAreaKey;
			}
			set
			{
				if ((this._ReplenishmentAreaKey != value))
				{
					this._ReplenishmentAreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentAreaKeyNullValueFlag")]
		public byte ReplenishmentAreaKeyNullValueFlag
		{
			get
			{
				return this._ReplenishmentAreaKeyNullValueFlag;
			}
			set
			{
				if ((this._ReplenishmentAreaKeyNullValueFlag != value))
				{
					this._ReplenishmentAreaKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualStockLocationKey")]
		public System.Nullable<System.Guid> VirtualStockLocationKey
		{
			get
			{
				return this._VirtualStockLocationKey;
			}
			set
			{
				if ((this._VirtualStockLocationKey != value))
				{
					this._VirtualStockLocationKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualStockLocationKeyNullValueFlag")]
		public byte VirtualStockLocationKeyNullValueFlag
		{
			get
			{
				return this._VirtualStockLocationKeyNullValueFlag;
			}
			set
			{
				if ((this._VirtualStockLocationKeyNullValueFlag != value))
				{
					this._VirtualStockLocationKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxCheckFlag")]
		public System.Nullable<byte> RxCheckFlag
		{
			get
			{
				return this._RxCheckFlag;
			}
			set
			{
				if ((this._RxCheckFlag != value))
				{
					this._RxCheckFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoMedLabelFlag")]
		public System.Nullable<byte> AutoMedLabelFlag
		{
			get
			{
				return this._AutoMedLabelFlag;
			}
			set
			{
				if ((this._AutoMedLabelFlag != value))
				{
					this._AutoMedLabelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncUploadAllowSkipFlag")]
		public System.Nullable<byte> SyncUploadAllowSkipFlag
		{
			get
			{
				return this._SyncUploadAllowSkipFlag;
			}
			set
			{
				if ((this._SyncUploadAllowSkipFlag != value))
				{
					this._SyncUploadAllowSkipFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncAllowDownloadOnUploadFailureFlag")]
		public System.Nullable<byte> SyncAllowDownloadOnUploadFailureFlag
		{
			get
			{
				return this._SyncAllowDownloadOnUploadFailureFlag;
			}
			set
			{
				if ((this._SyncAllowDownloadOnUploadFailureFlag != value))
				{
					this._SyncAllowDownloadOnUploadFailureFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncUploadMaximumRetryQuantity")]
		public System.Nullable<short> SyncUploadMaximumRetryQuantity
		{
			get
			{
				return this._SyncUploadMaximumRetryQuantity;
			}
			set
			{
				if ((this._SyncUploadMaximumRetryQuantity != value))
				{
					this._SyncUploadMaximumRetryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncUploadRetryIntervalAmount")]
		public System.Nullable<short> SyncUploadRetryIntervalAmount
		{
			get
			{
				return this._SyncUploadRetryIntervalAmount;
			}
			set
			{
				if ((this._SyncUploadRetryIntervalAmount != value))
				{
					this._SyncUploadRetryIntervalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaSystemPresentFlag")]
		public byte AnesthesiaSystemPresentFlag
		{
			get
			{
				return this._AnesthesiaSystemPresentFlag;
			}
			set
			{
				if ((this._AnesthesiaSystemPresentFlag != value))
				{
					this._AnesthesiaSystemPresentFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMedLoadRefillFlag")]
		public System.Nullable<byte> PrintMedLoadRefillFlag
		{
			get
			{
				return this._PrintMedLoadRefillFlag;
			}
			set
			{
				if ((this._PrintMedLoadRefillFlag != value))
				{
					this._PrintMedLoadRefillFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasteModeInternalCode")]
		public string WasteModeInternalCode
		{
			get
			{
				return this._WasteModeInternalCode;
			}
			set
			{
				if ((this._WasteModeInternalCode != value))
				{
					this._WasteModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasteModeInternalCodeNullValueFlag")]
		public byte WasteModeInternalCodeNullValueFlag
		{
			get
			{
				return this._WasteModeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._WasteModeInternalCodeNullValueFlag != value))
				{
					this._WasteModeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintPatientLabelRemoveFlag")]
		public System.Nullable<byte> PrintPatientLabelRemoveFlag
		{
			get
			{
				return this._PrintPatientLabelRemoveFlag;
			}
			set
			{
				if ((this._PrintPatientLabelRemoveFlag != value))
				{
					this._PrintPatientLabelRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderDispenseQuantityFlag")]
		public System.Nullable<byte> PharmacyOrderDispenseQuantityFlag
		{
			get
			{
				return this._PharmacyOrderDispenseQuantityFlag;
			}
			set
			{
				if ((this._PharmacyOrderDispenseQuantityFlag != value))
				{
					this._PharmacyOrderDispenseQuantityFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FutureTaskWarningDurationAmount")]
		public System.Nullable<short> FutureTaskWarningDurationAmount
		{
			get
			{
				return this._FutureTaskWarningDurationAmount;
			}
			set
			{
				if ((this._FutureTaskWarningDurationAmount != value))
				{
					this._FutureTaskWarningDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardExemptInternalCode", CanBeNull=false)]
		public string CardExemptInternalCode
		{
			get
			{
				return this._CardExemptInternalCode;
			}
			set
			{
				if ((this._CardExemptInternalCode != value))
				{
					this._CardExemptInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardExemptInternalCodeNullValueFlag")]
		public byte CardExemptInternalCodeNullValueFlag
		{
			get
			{
				return this._CardExemptInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._CardExemptInternalCodeNullValueFlag != value))
				{
					this._CardExemptInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseEquivalenciesFlag")]
		public System.Nullable<byte> UseEquivalenciesFlag
		{
			get
			{
				return this._UseEquivalenciesFlag;
			}
			set
			{
				if ((this._UseEquivalenciesFlag != value))
				{
					this._UseEquivalenciesFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayPatientPreferredNameFlag")]
		public System.Nullable<byte> DisplayPatientPreferredNameFlag
		{
			get
			{
				return this._DisplayPatientPreferredNameFlag;
			}
			set
			{
				if ((this._DisplayPatientPreferredNameFlag != value))
				{
					this._DisplayPatientPreferredNameFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OneTimePasswordTimeoutDurationAmount")]
		public System.Nullable<short> OneTimePasswordTimeoutDurationAmount
		{
			get
			{
				return this._OneTimePasswordTimeoutDurationAmount;
			}
			set
			{
				if ((this._OneTimePasswordTimeoutDurationAmount != value))
				{
					this._OneTimePasswordTimeoutDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMSystemPresentFlag")]
		public byte GCSMSystemPresentFlag
		{
			get
			{
				return this._GCSMSystemPresentFlag;
			}
			set
			{
				if ((this._GCSMSystemPresentFlag != value))
				{
					this._GCSMSystemPresentFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceDelayDurationAmount")]
		public System.Nullable<short> LeaveOfAbsenceDelayDurationAmount
		{
			get
			{
				return this._LeaveOfAbsenceDelayDurationAmount;
			}
			set
			{
				if ((this._LeaveOfAbsenceDelayDurationAmount != value))
				{
					this._LeaveOfAbsenceDelayDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDestructionBinTimeOutDurationAmount")]
		public System.Nullable<short> GCSMDestructionBinTimeOutDurationAmount
		{
			get
			{
				return this._GCSMDestructionBinTimeOutDurationAmount;
			}
			set
			{
				if ((this._GCSMDestructionBinTimeOutDurationAmount != value))
				{
					this._GCSMDestructionBinTimeOutDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnCompoundingFlag")]
		public System.Nullable<byte> GCSMScanOnCompoundingFlag
		{
			get
			{
				return this._GCSMScanOnCompoundingFlag;
			}
			set
			{
				if ((this._GCSMScanOnCompoundingFlag != value))
				{
					this._GCSMScanOnCompoundingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnIssueFlag")]
		public System.Nullable<byte> GCSMScanOnIssueFlag
		{
			get
			{
				return this._GCSMScanOnIssueFlag;
			}
			set
			{
				if ((this._GCSMScanOnIssueFlag != value))
				{
					this._GCSMScanOnIssueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnPrescriptionFlag")]
		public System.Nullable<byte> GCSMScanOnPrescriptionFlag
		{
			get
			{
				return this._GCSMScanOnPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMScanOnPrescriptionFlag != value))
				{
					this._GCSMScanOnPrescriptionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnReceiveFlag")]
		public System.Nullable<byte> GCSMScanOnReceiveFlag
		{
			get
			{
				return this._GCSMScanOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMScanOnReceiveFlag != value))
				{
					this._GCSMScanOnReceiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnRestockADMFlag")]
		public System.Nullable<byte> GCSMScanOnRestockADMFlag
		{
			get
			{
				return this._GCSMScanOnRestockADMFlag;
			}
			set
			{
				if ((this._GCSMScanOnRestockADMFlag != value))
				{
					this._GCSMScanOnRestockADMFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnSellFlag")]
		public System.Nullable<byte> GCSMScanOnSellFlag
		{
			get
			{
				return this._GCSMScanOnSellFlag;
			}
			set
			{
				if ((this._GCSMScanOnSellFlag != value))
				{
					this._GCSMScanOnSellFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnStockTransferFlag")]
		public System.Nullable<byte> GCSMScanOnStockTransferFlag
		{
			get
			{
				return this._GCSMScanOnStockTransferFlag;
			}
			set
			{
				if ((this._GCSMScanOnStockTransferFlag != value))
				{
					this._GCSMScanOnStockTransferFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnCompoundingFlag")]
		public System.Nullable<byte> GCSMWitnessOnCompoundingFlag
		{
			get
			{
				return this._GCSMWitnessOnCompoundingFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnCompoundingFlag != value))
				{
					this._GCSMWitnessOnCompoundingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnEmptyDestructionBinFlag")]
		public System.Nullable<byte> GCSMWitnessOnEmptyDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnEmptyDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnEmptyDestructionBinFlag != value))
				{
					this._GCSMWitnessOnEmptyDestructionBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnInventoryFlag")]
		public System.Nullable<byte> GCSMWitnessOnInventoryFlag
		{
			get
			{
				return this._GCSMWitnessOnInventoryFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnInventoryFlag != value))
				{
					this._GCSMWitnessOnInventoryFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnIssueFlag")]
		public System.Nullable<byte> GCSMWitnessOnIssueFlag
		{
			get
			{
				return this._GCSMWitnessOnIssueFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnIssueFlag != value))
				{
					this._GCSMWitnessOnIssueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnOutdateFlag")]
		public System.Nullable<byte> GCSMWitnessOnOutdateFlag
		{
			get
			{
				return this._GCSMWitnessOnOutdateFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnOutdateFlag != value))
				{
					this._GCSMWitnessOnOutdateFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnPrescriptionFlag")]
		public System.Nullable<byte> GCSMWitnessOnPrescriptionFlag
		{
			get
			{
				return this._GCSMWitnessOnPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnPrescriptionFlag != value))
				{
					this._GCSMWitnessOnPrescriptionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReceiveFlag")]
		public System.Nullable<byte> GCSMWitnessOnReceiveFlag
		{
			get
			{
				return this._GCSMWitnessOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReceiveFlag != value))
				{
					this._GCSMWitnessOnReceiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnRestockADMFlag")]
		public System.Nullable<byte> GCSMWitnessOnRestockADMFlag
		{
			get
			{
				return this._GCSMWitnessOnRestockADMFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnRestockADMFlag != value))
				{
					this._GCSMWitnessOnRestockADMFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReturnFlag")]
		public System.Nullable<byte> GCSMWitnessOnReturnFlag
		{
			get
			{
				return this._GCSMWitnessOnReturnFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReturnFlag != value))
				{
					this._GCSMWitnessOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReverseCompoundingFlag")]
		public System.Nullable<byte> GCSMWitnessOnReverseCompoundingFlag
		{
			get
			{
				return this._GCSMWitnessOnReverseCompoundingFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReverseCompoundingFlag != value))
				{
					this._GCSMWitnessOnReverseCompoundingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnSellFlag")]
		public System.Nullable<byte> GCSMWitnessOnSellFlag
		{
			get
			{
				return this._GCSMWitnessOnSellFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnSellFlag != value))
				{
					this._GCSMWitnessOnSellFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnStockTransferFlag")]
		public System.Nullable<byte> GCSMWitnessOnStockTransferFlag
		{
			get
			{
				return this._GCSMWitnessOnStockTransferFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnStockTransferFlag != value))
				{
					this._GCSMWitnessOnStockTransferFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveBarcodeInventoryDecrementExternalFlag")]
		public System.Nullable<byte> ReceiveBarcodeInventoryDecrementExternalFlag
		{
			get
			{
				return this._ReceiveBarcodeInventoryDecrementExternalFlag;
			}
			set
			{
				if ((this._ReceiveBarcodeInventoryDecrementExternalFlag != value))
				{
					this._ReceiveBarcodeInventoryDecrementExternalFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnRecallFlag")]
		public System.Nullable<byte> GCSMWitnessOnRecallFlag
		{
			get
			{
				return this._GCSMWitnessOnRecallFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnRecallFlag != value))
				{
					this._GCSMWitnessOnRecallFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnUnloadFlag")]
		public System.Nullable<byte> GCSMWitnessOnUnloadFlag
		{
			get
			{
				return this._GCSMWitnessOnUnloadFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnUnloadFlag != value))
				{
					this._GCSMWitnessOnUnloadFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnWasteFlag")]
		public System.Nullable<byte> GCSMWitnessOnWasteFlag
		{
			get
			{
				return this._GCSMWitnessOnWasteFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnWasteFlag != value))
				{
					this._GCSMWitnessOnWasteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnRecoverFlag")]
		public System.Nullable<byte> GCSMWitnessOnRecoverFlag
		{
			get
			{
				return this._GCSMWitnessOnRecoverFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnRecoverFlag != value))
				{
					this._GCSMWitnessOnRecoverFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlledSubstanceLicenseKey")]
		public System.Nullable<System.Guid> ControlledSubstanceLicenseKey
		{
			get
			{
				return this._ControlledSubstanceLicenseKey;
			}
			set
			{
				if ((this._ControlledSubstanceLicenseKey != value))
				{
					this._ControlledSubstanceLicenseKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGrabScan")]
		public System.Nullable<byte> GrabScanFlag
		{
			get
			{
				return this._IsGrabScan;
			}
			set
			{
				if ((this._IsGrabScan != value))
				{
					this._IsGrabScan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMBlindCountFlag")]
		public System.Nullable<byte> GCSMBlindCountFlag
		{
			get
			{
				return this._GCSMBlindCountFlag;
			}
			set
			{
				if ((this._GCSMBlindCountFlag != value))
				{
					this._GCSMBlindCountFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnReturnFlag")]
		public System.Nullable<byte> GCSMScanOnReturnFlag
		{
			get
			{
				return this._GCSMScanOnReturnFlag;
			}
			set
			{
				if ((this._GCSMScanOnReturnFlag != value))
				{
					this._GCSMScanOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnAccessDestructionBinFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnAccessDestructionBinFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnAccessDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnAccessDestructionBinFlag != value))
				{
					this._GCSMPrintReceiptOnAccessDestructionBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnDiscrepancyResolutionFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnDiscrepancyResolutionFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnDiscrepancyResolutionFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnDiscrepancyResolutionFlag != value))
				{
					this._GCSMPrintReceiptOnDiscrepancyResolutionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnEmptyDestructionBinFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnEmptyDestructionBinFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnEmptyDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnEmptyDestructionBinFlag != value))
				{
					this._GCSMPrintReceiptOnEmptyDestructionBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnFillPrescriptionFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnFillPrescriptionFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnFillPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnFillPrescriptionFlag != value))
				{
					this._GCSMPrintReceiptOnFillPrescriptionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnManageStockFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnManageStockFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnManageStockFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnManageStockFlag != value))
				{
					this._GCSMPrintReceiptOnManageStockFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnNonStandardCompoundRecordFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnNonStandardCompoundRecordFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnNonStandardCompoundRecordFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnNonStandardCompoundRecordFlag != value))
				{
					this._GCSMPrintReceiptOnNonStandardCompoundRecordFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnOutdateFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnOutdateFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnOutdateFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnOutdateFlag != value))
				{
					this._GCSMPrintReceiptOnOutdateFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnPendingStandardCompoundRecordFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnPendingStandardCompoundRecordFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnPendingStandardCompoundRecordFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnPendingStandardCompoundRecordFlag != value))
				{
					this._GCSMPrintReceiptOnPendingStandardCompoundRecordFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnRecallFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnRecallFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnRecallFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnRecallFlag != value))
				{
					this._GCSMPrintReceiptOnRecallFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnReceiveFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnReceiveFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnReceiveFlag != value))
				{
					this._GCSMPrintReceiptOnReceiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnReturnFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnReturnFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnReturnFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnReturnFlag != value))
				{
					this._GCSMPrintReceiptOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnReverseNonStandardCompoundFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnReverseNonStandardCompoundFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnReverseNonStandardCompoundFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnReverseNonStandardCompoundFlag != value))
				{
					this._GCSMPrintReceiptOnReverseNonStandardCompoundFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag != value))
				{
					this._GCSMPrintReceiptOnStandardCompoundDispositionSummaryFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnSellFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnSellFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnSellFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnSellFlag != value))
				{
					this._GCSMPrintReceiptOnSellFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnUnloadFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnUnloadFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnUnloadFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnUnloadFlag != value))
				{
					this._GCSMPrintReceiptOnUnloadFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintReceiptOnWasteFlag")]
		public System.Nullable<byte> GCSMPrintReceiptOnWasteFlag
		{
			get
			{
				return this._GCSMPrintReceiptOnWasteFlag;
			}
			set
			{
				if ((this._GCSMPrintReceiptOnWasteFlag != value))
				{
					this._GCSMPrintReceiptOnWasteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnAccessDestructionBinFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnAccessDestructionBinFlag
		{
			get
			{
				return this._GCSMPrintLabelOnAccessDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnAccessDestructionBinFlag != value))
				{
					this._GCSMPrintLabelOnAccessDestructionBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnFillPrescriptionFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnFillPrescriptionFlag
		{
			get
			{
				return this._GCSMPrintLabelOnFillPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnFillPrescriptionFlag != value))
				{
					this._GCSMPrintLabelOnFillPrescriptionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnNonStandardCompoundIngredientFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnNonStandardCompoundIngredientFlag
		{
			get
			{
				return this._GCSMPrintLabelOnNonStandardCompoundIngredientFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnNonStandardCompoundIngredientFlag != value))
				{
					this._GCSMPrintLabelOnNonStandardCompoundIngredientFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnNonStandardCompoundMedFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnNonStandardCompoundMedFlag
		{
			get
			{
				return this._GCSMPrintLabelOnNonStandardCompoundMedFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnNonStandardCompoundMedFlag != value))
				{
					this._GCSMPrintLabelOnNonStandardCompoundMedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnOutdateFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnOutdateFlag
		{
			get
			{
				return this._GCSMPrintLabelOnOutdateFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnOutdateFlag != value))
				{
					this._GCSMPrintLabelOnOutdateFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnRecallFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnRecallFlag
		{
			get
			{
				return this._GCSMPrintLabelOnRecallFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnRecallFlag != value))
				{
					this._GCSMPrintLabelOnRecallFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnReturnFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnReturnFlag
		{
			get
			{
				return this._GCSMPrintLabelOnReturnFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnReturnFlag != value))
				{
					this._GCSMPrintLabelOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnSellFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnSellFlag
		{
			get
			{
				return this._GCSMPrintLabelOnSellFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnSellFlag != value))
				{
					this._GCSMPrintLabelOnSellFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnStandardCompoundMedFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnStandardCompoundMedFlag
		{
			get
			{
				return this._GCSMPrintLabelOnStandardCompoundMedFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnStandardCompoundMedFlag != value))
				{
					this._GCSMPrintLabelOnStandardCompoundMedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnStandardCompoundIngredientFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnStandardCompoundIngredientFlag
		{
			get
			{
				return this._GCSMPrintLabelOnStandardCompoundIngredientFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnStandardCompoundIngredientFlag != value))
				{
					this._GCSMPrintLabelOnStandardCompoundIngredientFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelOnWasteFlag")]
		public System.Nullable<byte> GCSMPrintLabelOnWasteFlag
		{
			get
			{
				return this._GCSMPrintLabelOnWasteFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelOnWasteFlag != value))
				{
					this._GCSMPrintLabelOnWasteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnAutorestockFlag")]
		public System.Nullable<byte> GCSMPrintPullListOnAutorestockFlag
		{
			get
			{
				return this._GCSMPrintPullListOnAutorestockFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnAutorestockFlag != value))
				{
					this._GCSMPrintPullListOnAutorestockFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnDispenseToLocationFlag")]
		public System.Nullable<byte> GCSMPrintPullListOnDispenseToLocationFlag
		{
			get
			{
				return this._GCSMPrintPullListOnDispenseToLocationFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnDispenseToLocationFlag != value))
				{
					this._GCSMPrintPullListOnDispenseToLocationFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnKitFlag")]
		public System.Nullable<byte> GCSMPrintPullListOnKitFlag
		{
			get
			{
				return this._GCSMPrintPullListOnKitFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnKitFlag != value))
				{
					this._GCSMPrintPullListOnKitFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnKitComponentFlag")]
		public System.Nullable<byte> GCSMPrintPullListOnKitComponentFlag
		{
			get
			{
				return this._GCSMPrintPullListOnKitComponentFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnKitComponentFlag != value))
				{
					this._GCSMPrintPullListOnKitComponentFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnManageExcessStockFlag")]
		public System.Nullable<byte> GCSMPrintPullListOnManageExcessStockFlag
		{
			get
			{
				return this._GCSMPrintPullListOnManageExcessStockFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnManageExcessStockFlag != value))
				{
					this._GCSMPrintPullListOnManageExcessStockFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnNonStandardCompoundFlag")]
		public System.Nullable<byte> GCSMPrintPullListOnNonStandardCompoundFlag
		{
			get
			{
				return this._GCSMPrintPullListOnNonStandardCompoundFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnNonStandardCompoundFlag != value))
				{
					this._GCSMPrintPullListOnNonStandardCompoundFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnNonStandardCompoundIngredientFlag")]
		public System.Nullable<byte> GCSMPrintPullListOnNonStandardCompoundIngredientFlag
		{
			get
			{
				return this._GCSMPrintPullListOnNonStandardCompoundIngredientFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnNonStandardCompoundIngredientFlag != value))
				{
					this._GCSMPrintPullListOnNonStandardCompoundIngredientFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnStandardCompoundFlag")]
		public System.Nullable<byte> GCSMPrintPullListOnStandardCompoundFlag
		{
			get
			{
				return this._GCSMPrintPullListOnStandardCompoundFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnStandardCompoundFlag != value))
				{
					this._GCSMPrintPullListOnStandardCompoundFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintPullListOnStandardCompoundIngredientFlag")]
		public System.Nullable<byte> GCSMPrintPullListOnStandardCompoundIngredientFlag
		{
			get
			{
				return this._GCSMPrintPullListOnStandardCompoundIngredientFlag;
			}
			set
			{
				if ((this._GCSMPrintPullListOnStandardCompoundIngredientFlag != value))
				{
					this._GCSMPrintPullListOnStandardCompoundIngredientFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMHideAreaFilterFlag")]
		public System.Nullable<byte> GCSMHideAreaFilterFlag
		{
			get
			{
				return this._GCSMHideAreaFilterFlag;
			}
			set
			{
				if ((this._GCSMHideAreaFilterFlag != value))
				{
					this._GCSMHideAreaFilterFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMHideZoneFilterFlag")]
		public System.Nullable<byte> GCSMHideZoneFilterFlag
		{
			get
			{
				return this._GCSMHideZoneFilterFlag;
			}
			set
			{
				if ((this._GCSMHideZoneFilterFlag != value))
				{
					this._GCSMHideZoneFilterFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCompareReportStandardRangeInternalCode")]
		public string GCSMCompareReportStandardRangeInternalCode
		{
			get
			{
				return this._GCSMCompareReportStandardRangeInternalCode;
			}
			set
			{
				if ((this._GCSMCompareReportStandardRangeInternalCode != value))
				{
					this._GCSMCompareReportStandardRangeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCompareReportStandardRangeInternalCodeNullValueFlag")]
		public byte GCSMCompareReportStandardRangeInternalCodeNullValueFlag
		{
			get
			{
				return this._GCSMCompareReportStandardRangeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._GCSMCompareReportStandardRangeInternalCodeNullValueFlag != value))
				{
					this._GCSMCompareReportStandardRangeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnAccessToDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnAccessToDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAccessToDestructionBinFlag != value))
				{
					this._GCSMWitnessOnAccessToDestructionBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnAddToDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnAddToDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAddToDestructionBinFlag != value))
				{
					this._GCSMWitnessOnAddToDestructionBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMOriginDispensingDeviceKey")]
		public System.Nullable<System.Guid> GCSMOriginDispensingDeviceKey
		{
			get
			{
				return this._GCSMOriginDispensingDeviceKey;
			}
			set
			{
				if ((this._GCSMOriginDispensingDeviceKey != value))
				{
					this._GCSMOriginDispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDestinationDispensingDeviceKey")]
		public System.Nullable<System.Guid> GCSMDestinationDispensingDeviceKey
		{
			get
			{
				return this._GCSMDestinationDispensingDeviceKey;
			}
			set
			{
				if ((this._GCSMDestinationDispensingDeviceKey != value))
				{
					this._GCSMDestinationDispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCompareReportViewFilterFocusedFlag")]
		public System.Nullable<byte> GCSMCompareReportViewFilterFocusedFlag
		{
			get
			{
				return this._GCSMCompareReportViewFilterFocusedFlag;
			}
			set
			{
				if ((this._GCSMCompareReportViewFilterFocusedFlag != value))
				{
					this._GCSMCompareReportViewFilterFocusedFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class AreaCommonAttributeResult
	{
		
		private System.Guid _AreaKey;
		
		private string _AreaName;
		
		public AreaCommonAttributeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey")]
		public System.Guid AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					this._AreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaName", CanBeNull=false)]
		public string AreaName
		{
			get
			{
				return this._AreaName;
			}
			set
			{
				if ((this._AreaName != value))
				{
					this._AreaName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class DispensingDeviceRestockGroupResult
	{
		
		private System.Guid _GCSMRestockGroupKey;
		
		private System.Guid _GCSMDispensingDeviceKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private string _RestockGroupName;
		
		private string _DescriptionText;
		
		private string _GCSMDispensingDeviceName;
		
		private bool _ActiveFlag;
		
		private string _FacilityName;
		
		public DispensingDeviceRestockGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMRestockGroupKey")]
		public System.Guid GCSMRestockGroupKey
		{
			get
			{
				return this._GCSMRestockGroupKey;
			}
			set
			{
				if ((this._GCSMRestockGroupKey != value))
				{
					this._GCSMRestockGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDispensingDeviceKey")]
		public System.Guid GCSMDispensingDeviceKey
		{
			get
			{
				return this._GCSMDispensingDeviceKey;
			}
			set
			{
				if ((this._GCSMDispensingDeviceKey != value))
				{
					this._GCSMDispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey")]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestockGroupName", CanBeNull=false)]
		public string RestockGroupName
		{
			get
			{
				return this._RestockGroupName;
			}
			set
			{
				if ((this._RestockGroupName != value))
				{
					this._RestockGroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText")]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this._DescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDispensingDeviceName", CanBeNull=false)]
		public string GCSMDispensingDeviceName
		{
			get
			{
				return this._GCSMDispensingDeviceName;
			}
			set
			{
				if ((this._GCSMDispensingDeviceName != value))
				{
					this._GCSMDispensingDeviceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", CanBeNull=false)]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this._FacilityName = value;
				}
			}
		}
	}
	
	public partial class bsp_ListInventoryCountChildrenItemSummaryResult
	{
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private System.Nullable<System.Guid> _FacilityItemKey;
		
		private System.Nullable<System.Guid> _ItemKey;
		
		private System.Nullable<System.Guid> _MedItemKey;
		
		private string _ItemID;
		
		private string _GenericName;
		
		private string _BrandName;
		
		private string _DosageForm;
		
		private System.Nullable<decimal> _StrengthAmount;
		
		private string _StrengthUOM;
		
		private string _IssueUOM;
		
		private System.Nullable<System.Guid> _IssueUOMKey;
		
		private string _RefillUOM;
		
		private System.Nullable<System.Guid> _RefillUOMKey;
		
		private System.Nullable<decimal> _UOIPerUORAmount;
		
		private System.Nullable<bool> _OutdateTrackingFlag;
		
		private System.Nullable<bool> _ActiveFlag;
		
		private System.Nullable<bool> _AutoResolveDiscrepancyFlag;
		
		private System.Nullable<System.Guid> _StorageSpaceKey;
		
		private string _StorageSpaceShortName;
		
		private string _PositionID;
		
		private string _StorageSpaceSortValue;
		
		private System.Nullable<bool> _StorageSpaceStateClosedFlag;
		
		private System.Nullable<bool> _StorageSpaceStateLockedFlag;
		
		private System.Nullable<bool> _StorageSpaceStateFailedFlag;
		
		private string _StorageSpaceStateFailureReason;
		
		private System.Nullable<System.Guid> _StorageSpaceItemKey;
		
		private string _StorageSpaceItemStatusInternalCode;
		
		private System.Nullable<decimal> _ParQuantity;
		
		private System.Nullable<decimal> _RefillPointQuantity;
		
		private System.Nullable<decimal> _PhysicalMaximumQuantity;
		
		private System.Nullable<System.Guid> _StartStorageSpaceInventoryKey;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<System.DateTime> _EarliestNextExpirationDate;
		
		private System.Nullable<bool> _WitnessRequiredFlag;
		
		private System.Nullable<bool> _ControlledMedFlag;
		
		private System.Nullable<bool> _BlindCountFlag;
		
		private string _StorageSpaceFormInternalCode;
		
		private string _MiniDrawerTrayModeInternalCode;
		
		private string _MiniDrawerTrayModeDescription;
		
		private System.Nullable<bool> _MiniDrawerTrayFlag;
		
		private System.Nullable<decimal> _MiniDrawerTrayTotalParQuantity;
		
		private System.Nullable<int> _MiniDrawerTrayTotalPocketCount;
		
		private System.Nullable<System.Guid> _ParentStorageSpaceKey;
		
		private System.Nullable<bool> _StandardStockWithinDispensingDeviceFlag;
		
		private string _DisplayName;
		
		private System.Nullable<decimal> _TotalVolumeAmount;
		
		private string _TotalVolumeUnitOfMeasureDisplayCode;
		
		private System.Nullable<decimal> _ConcentrationVolumeAmount;
		
		private string _ConcentrationVolumeUnitOfMeasureDisplayCode;
		
		private string _MedClassDescription;
		
		private string _MedClassCode;
		
		private System.Nullable<System.Guid> _MedClassKey;
		
		private string _HazardousWasteDisposalInstructions;
		
		private string _HazardousWasteDescription;
		
		private System.Nullable<System.Guid> _ItemSecurityGroupKey;
		
		private System.Nullable<bool> _HasDrawerAccessFlag;
		
		private System.Nullable<int> _InventoryCountStatus;
		
		private System.Nullable<bool> _StorageSpaceAccessedFlag;
		
		private string _StorageSpaceTypeInternalCode;
		
		private bool _NonMedItemFlag;
		
		private bool _TrackInventoryQuantityFlag;
		
		private string _StorageSpaceFormShortName;
		
		private string _PharmacyNotes;
		
		private System.Nullable<bool> _ExpiredMedFlag;
		
		private System.Nullable<bool> _BackorderedFlag;
		
		public bsp_ListInventoryCountChildrenItemSummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this._ItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MedItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					this._MedItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="VarChar(100)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericName", DbType="VarChar(150)")]
		public string GenericName
		{
			get
			{
				return this._GenericName;
			}
			set
			{
				if ((this._GenericName != value))
				{
					this._GenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(100)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageForm", DbType="VarChar(100)")]
		public string DosageForm
		{
			get
			{
				return this._DosageForm;
			}
			set
			{
				if ((this._DosageForm != value))
				{
					this._DosageForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StrengthAmount
		{
			get
			{
				return this._StrengthAmount;
			}
			set
			{
				if ((this._StrengthAmount != value))
				{
					this._StrengthAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOM", DbType="VarChar(250)")]
		public string StrengthUOM
		{
			get
			{
				return this._StrengthUOM;
			}
			set
			{
				if ((this._StrengthUOM != value))
				{
					this._StrengthUOM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUOM", DbType="VarChar(250)")]
		public string IssueUOM
		{
			get
			{
				return this._IssueUOM;
			}
			set
			{
				if ((this._IssueUOM != value))
				{
					this._IssueUOM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IssueUOMKey
		{
			get
			{
				return this._IssueUOMKey;
			}
			set
			{
				if ((this._IssueUOMKey != value))
				{
					this._IssueUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillUOM", DbType="NVarChar(250)")]
		public string RefillUOM
		{
			get
			{
				return this._RefillUOM;
			}
			set
			{
				if ((this._RefillUOM != value))
				{
					this._RefillUOM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RefillUOMKey
		{
			get
			{
				return this._RefillUOMKey;
			}
			set
			{
				if ((this._RefillUOMKey != value))
				{
					this._RefillUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOIPerUORAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> UOIPerUORAmount
		{
			get
			{
				return this._UOIPerUORAmount;
			}
			set
			{
				if ((this._UOIPerUORAmount != value))
				{
					this._UOIPerUORAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdateTrackingFlag", DbType="Bit")]
		public System.Nullable<bool> OutdateTrackingFlag
		{
			get
			{
				return this._OutdateTrackingFlag;
			}
			set
			{
				if ((this._OutdateTrackingFlag != value))
				{
					this._OutdateTrackingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit")]
		public System.Nullable<bool> ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoResolveDiscrepancyFlag", DbType="Bit")]
		public System.Nullable<bool> AutoResolveDiscrepancyFlag
		{
			get
			{
				return this._AutoResolveDiscrepancyFlag;
			}
			set
			{
				if ((this._AutoResolveDiscrepancyFlag != value))
				{
					this._AutoResolveDiscrepancyFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StorageSpaceKey
		{
			get
			{
				return this._StorageSpaceKey;
			}
			set
			{
				if ((this._StorageSpaceKey != value))
				{
					this._StorageSpaceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceShortName", DbType="VarChar(500)")]
		public string StorageSpaceShortName
		{
			get
			{
				return this._StorageSpaceShortName;
			}
			set
			{
				if ((this._StorageSpaceShortName != value))
				{
					this._StorageSpaceShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="VarChar(50)")]
		public string PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this._PositionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceSortValue", DbType="VarChar(500)")]
		public string StorageSpaceSortValue
		{
			get
			{
				return this._StorageSpaceSortValue;
			}
			set
			{
				if ((this._StorageSpaceSortValue != value))
				{
					this._StorageSpaceSortValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateClosedFlag", DbType="Bit")]
		public System.Nullable<bool> StorageSpaceStateClosedFlag
		{
			get
			{
				return this._StorageSpaceStateClosedFlag;
			}
			set
			{
				if ((this._StorageSpaceStateClosedFlag != value))
				{
					this._StorageSpaceStateClosedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateLockedFlag", DbType="Bit")]
		public System.Nullable<bool> StorageSpaceStateLockedFlag
		{
			get
			{
				return this._StorageSpaceStateLockedFlag;
			}
			set
			{
				if ((this._StorageSpaceStateLockedFlag != value))
				{
					this._StorageSpaceStateLockedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateFailedFlag", DbType="Bit")]
		public System.Nullable<bool> StorageSpaceStateFailedFlag
		{
			get
			{
				return this._StorageSpaceStateFailedFlag;
			}
			set
			{
				if ((this._StorageSpaceStateFailedFlag != value))
				{
					this._StorageSpaceStateFailedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateFailureReason", DbType="VarChar(50)")]
		public string StorageSpaceStateFailureReason
		{
			get
			{
				return this._StorageSpaceStateFailureReason;
			}
			set
			{
				if ((this._StorageSpaceStateFailureReason != value))
				{
					this._StorageSpaceStateFailureReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StorageSpaceItemKey
		{
			get
			{
				return this._StorageSpaceItemKey;
			}
			set
			{
				if ((this._StorageSpaceItemKey != value))
				{
					this._StorageSpaceItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemStatusInternalCode", DbType="VarChar(10)")]
		public string StorageSpaceItemStatusInternalCode
		{
			get
			{
				return this._StorageSpaceItemStatusInternalCode;
			}
			set
			{
				if ((this._StorageSpaceItemStatusInternalCode != value))
				{
					this._StorageSpaceItemStatusInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> ParQuantity
		{
			get
			{
				return this._ParQuantity;
			}
			set
			{
				if ((this._ParQuantity != value))
				{
					this._ParQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillPointQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> RefillPointQuantity
		{
			get
			{
				return this._RefillPointQuantity;
			}
			set
			{
				if ((this._RefillPointQuantity != value))
				{
					this._RefillPointQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalMaximumQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> PhysicalMaximumQuantity
		{
			get
			{
				return this._PhysicalMaximumQuantity;
			}
			set
			{
				if ((this._PhysicalMaximumQuantity != value))
				{
					this._PhysicalMaximumQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartStorageSpaceInventoryKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StartStorageSpaceInventoryKey
		{
			get
			{
				return this._StartStorageSpaceInventoryKey;
			}
			set
			{
				if ((this._StartStorageSpaceInventoryKey != value))
				{
					this._StartStorageSpaceInventoryKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarliestNextExpirationDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> EarliestNextExpirationDate
		{
			get
			{
				return this._EarliestNextExpirationDate;
			}
			set
			{
				if ((this._EarliestNextExpirationDate != value))
				{
					this._EarliestNextExpirationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessRequiredFlag", DbType="Bit")]
		public System.Nullable<bool> WitnessRequiredFlag
		{
			get
			{
				return this._WitnessRequiredFlag;
			}
			set
			{
				if ((this._WitnessRequiredFlag != value))
				{
					this._WitnessRequiredFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlledMedFlag", DbType="Bit")]
		public System.Nullable<bool> ControlledMedFlag
		{
			get
			{
				return this._ControlledMedFlag;
			}
			set
			{
				if ((this._ControlledMedFlag != value))
				{
					this._ControlledMedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlindCountFlag", DbType="Bit")]
		public System.Nullable<bool> BlindCountFlag
		{
			get
			{
				return this._BlindCountFlag;
			}
			set
			{
				if ((this._BlindCountFlag != value))
				{
					this._BlindCountFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceFormInternalCode", DbType="VarChar(20)")]
		public string StorageSpaceFormInternalCode
		{
			get
			{
				return this._StorageSpaceFormInternalCode;
			}
			set
			{
				if ((this._StorageSpaceFormInternalCode != value))
				{
					this._StorageSpaceFormInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayModeInternalCode", DbType="VarChar(20)")]
		public string MiniDrawerTrayModeInternalCode
		{
			get
			{
				return this._MiniDrawerTrayModeInternalCode;
			}
			set
			{
				if ((this._MiniDrawerTrayModeInternalCode != value))
				{
					this._MiniDrawerTrayModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayModeDescription", DbType="VarChar(50)")]
		public string MiniDrawerTrayModeDescription
		{
			get
			{
				return this._MiniDrawerTrayModeDescription;
			}
			set
			{
				if ((this._MiniDrawerTrayModeDescription != value))
				{
					this._MiniDrawerTrayModeDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayFlag", DbType="Bit")]
		public System.Nullable<bool> MiniDrawerTrayFlag
		{
			get
			{
				return this._MiniDrawerTrayFlag;
			}
			set
			{
				if ((this._MiniDrawerTrayFlag != value))
				{
					this._MiniDrawerTrayFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayTotalParQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> MiniDrawerTrayTotalParQuantity
		{
			get
			{
				return this._MiniDrawerTrayTotalParQuantity;
			}
			set
			{
				if ((this._MiniDrawerTrayTotalParQuantity != value))
				{
					this._MiniDrawerTrayTotalParQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayTotalPocketCount", DbType="Int")]
		public System.Nullable<int> MiniDrawerTrayTotalPocketCount
		{
			get
			{
				return this._MiniDrawerTrayTotalPocketCount;
			}
			set
			{
				if ((this._MiniDrawerTrayTotalPocketCount != value))
				{
					this._MiniDrawerTrayTotalPocketCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentStorageSpaceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentStorageSpaceKey
		{
			get
			{
				return this._ParentStorageSpaceKey;
			}
			set
			{
				if ((this._ParentStorageSpaceKey != value))
				{
					this._ParentStorageSpaceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardStockWithinDispensingDeviceFlag", DbType="Bit")]
		public System.Nullable<bool> StandardStockWithinDispensingDeviceFlag
		{
			get
			{
				return this._StandardStockWithinDispensingDeviceFlag;
			}
			set
			{
				if ((this._StandardStockWithinDispensingDeviceFlag != value))
				{
					this._StandardStockWithinDispensingDeviceFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(500)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> TotalVolumeAmount
		{
			get
			{
				return this._TotalVolumeAmount;
			}
			set
			{
				if ((this._TotalVolumeAmount != value))
				{
					this._TotalVolumeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeUnitOfMeasureDisplayCode", DbType="VarChar(10)")]
		public string TotalVolumeUnitOfMeasureDisplayCode
		{
			get
			{
				return this._TotalVolumeUnitOfMeasureDisplayCode;
			}
			set
			{
				if ((this._TotalVolumeUnitOfMeasureDisplayCode != value))
				{
					this._TotalVolumeUnitOfMeasureDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> ConcentrationVolumeAmount
		{
			get
			{
				return this._ConcentrationVolumeAmount;
			}
			set
			{
				if ((this._ConcentrationVolumeAmount != value))
				{
					this._ConcentrationVolumeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeUnitOfMeasureDisplayCode", DbType="NVarChar(50)")]
		public string ConcentrationVolumeUnitOfMeasureDisplayCode
		{
			get
			{
				return this._ConcentrationVolumeUnitOfMeasureDisplayCode;
			}
			set
			{
				if ((this._ConcentrationVolumeUnitOfMeasureDisplayCode != value))
				{
					this._ConcentrationVolumeUnitOfMeasureDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassDescription", DbType="VarChar(100)")]
		public string MedClassDescription
		{
			get
			{
				return this._MedClassDescription;
			}
			set
			{
				if ((this._MedClassDescription != value))
				{
					this._MedClassDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassCode", DbType="VarChar(20)")]
		public string MedClassCode
		{
			get
			{
				return this._MedClassCode;
			}
			set
			{
				if ((this._MedClassCode != value))
				{
					this._MedClassCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MedClassKey
		{
			get
			{
				return this._MedClassKey;
			}
			set
			{
				if ((this._MedClassKey != value))
				{
					this._MedClassKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardousWasteDisposalInstructions", DbType="VarChar(250)")]
		public string HazardousWasteDisposalInstructions
		{
			get
			{
				return this._HazardousWasteDisposalInstructions;
			}
			set
			{
				if ((this._HazardousWasteDisposalInstructions != value))
				{
					this._HazardousWasteDisposalInstructions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardousWasteDescription", DbType="VarChar(100)")]
		public string HazardousWasteDescription
		{
			get
			{
				return this._HazardousWasteDescription;
			}
			set
			{
				if ((this._HazardousWasteDescription != value))
				{
					this._HazardousWasteDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSecurityGroupKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ItemSecurityGroupKey
		{
			get
			{
				return this._ItemSecurityGroupKey;
			}
			set
			{
				if ((this._ItemSecurityGroupKey != value))
				{
					this._ItemSecurityGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDrawerAccessFlag", DbType="Bit")]
		public System.Nullable<bool> HasDrawerAccessFlag
		{
			get
			{
				return this._HasDrawerAccessFlag;
			}
			set
			{
				if ((this._HasDrawerAccessFlag != value))
				{
					this._HasDrawerAccessFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryCountStatus", DbType="Int")]
		public System.Nullable<int> InventoryCountStatus
		{
			get
			{
				return this._InventoryCountStatus;
			}
			set
			{
				if ((this._InventoryCountStatus != value))
				{
					this._InventoryCountStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceAccessedFlag", DbType="Bit")]
		public System.Nullable<bool> StorageSpaceAccessedFlag
		{
			get
			{
				return this._StorageSpaceAccessedFlag;
			}
			set
			{
				if ((this._StorageSpaceAccessedFlag != value))
				{
					this._StorageSpaceAccessedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceTypeInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StorageSpaceTypeInternalCode
		{
			get
			{
				return this._StorageSpaceTypeInternalCode;
			}
			set
			{
				if ((this._StorageSpaceTypeInternalCode != value))
				{
					this._StorageSpaceTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonMedItemFlag", DbType="Bit NOT NULL")]
		public bool NonMedItemFlag
		{
			get
			{
				return this._NonMedItemFlag;
			}
			set
			{
				if ((this._NonMedItemFlag != value))
				{
					this._NonMedItemFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackInventoryQuantityFlag", DbType="Bit NOT NULL")]
		public bool TrackInventoryQuantityFlag
		{
			get
			{
				return this._TrackInventoryQuantityFlag;
			}
			set
			{
				if ((this._TrackInventoryQuantityFlag != value))
				{
					this._TrackInventoryQuantityFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceFormShortName", DbType="VarChar(20)")]
		public string StorageSpaceFormShortName
		{
			get
			{
				return this._StorageSpaceFormShortName;
			}
			set
			{
				if ((this._StorageSpaceFormShortName != value))
				{
					this._StorageSpaceFormShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyNotes", DbType="VarChar(250)")]
		public string PharmacyNotes
		{
			get
			{
				return this._PharmacyNotes;
			}
			set
			{
				if ((this._PharmacyNotes != value))
				{
					this._PharmacyNotes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredMedFlag", DbType="Bit")]
		public System.Nullable<bool> ExpiredMedFlag
		{
			get
			{
				return this._ExpiredMedFlag;
			}
			set
			{
				if ((this._ExpiredMedFlag != value))
				{
					this._ExpiredMedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackorderedFlag", DbType="Bit")]
		public System.Nullable<bool> BackorderedFlag
		{
			get
			{
				return this._BackorderedFlag;
			}
			set
			{
				if ((this._BackorderedFlag != value))
				{
					this._BackorderedFlag = value;
				}
			}
		}
	}
	
	public partial class bsp_ListSavedInventoryCountItemSummaryResult
	{
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private System.Nullable<System.Guid> _FacilityItemKey;
		
		private System.Nullable<System.Guid> _ItemKey;
		
		private System.Nullable<System.Guid> _MedItemKey;
		
		private string _ItemID;
		
		private string _GenericName;
		
		private string _BrandName;
		
		private string _DosageForm;
		
		private System.Nullable<decimal> _StrengthAmount;
		
		private string _StrengthUOM;
		
		private string _IssueUOM;
		
		private System.Nullable<System.Guid> _IssueUOMKey;
		
		private string _RefillUOM;
		
		private System.Nullable<System.Guid> _RefillUOMKey;
		
		private System.Nullable<decimal> _UOIPerUORAmount;
		
		private System.Nullable<bool> _OutdateTrackingFlag;
		
		private System.Nullable<bool> _ActiveFlag;
		
		private System.Nullable<bool> _AutoResolveDiscrepancyFlag;
		
		private System.Nullable<System.Guid> _StorageSpaceKey;
		
		private string _StorageSpaceShortName;
		
		private string _PositionID;
		
		private string _StorageSpaceSortValue;
		
		private System.Nullable<bool> _StorageSpaceStateClosedFlag;
		
		private System.Nullable<bool> _StorageSpaceStateLockedFlag;
		
		private System.Nullable<bool> _StorageSpaceStateFailedFlag;
		
		private string _StorageSpaceStateFailureReason;
		
		private System.Nullable<System.Guid> _StorageSpaceItemKey;
		
		private string _StorageSpaceItemStatusInternalCode;
		
		private System.Nullable<decimal> _ParQuantity;
		
		private System.Nullable<decimal> _RefillPointQuantity;
		
		private System.Nullable<decimal> _PhysicalMaximumQuantity;
		
		private System.Nullable<System.Guid> _StartStorageSpaceInventoryKey;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<System.DateTime> _EarliestNextExpirationDate;
		
		private System.Nullable<bool> _WitnessRequiredFlag;
		
		private System.Nullable<bool> _ControlledMedFlag;
		
		private System.Nullable<bool> _BlindCountFlag;
		
		private string _StorageSpaceFormInternalCode;
		
		private string _MiniDrawerTrayModeInternalCode;
		
		private string _MiniDrawerTrayModeDescription;
		
		private System.Nullable<bool> _MiniDrawerTrayFlag;
		
		private System.Nullable<decimal> _MiniDrawerTrayTotalParQuantity;
		
		private System.Nullable<int> _MiniDrawerTrayTotalPocketCount;
		
		private System.Nullable<System.Guid> _ParentStorageSpaceKey;
		
		private System.Nullable<bool> _StandardStockWithinDispensingDeviceFlag;
		
		private string _DisplayName;
		
		private System.Nullable<decimal> _TotalVolumeAmount;
		
		private string _TotalVolumeUnitOfMeasureDisplayCode;
		
		private System.Nullable<decimal> _ConcentrationVolumeAmount;
		
		private string _ConcentrationVolumeUnitOfMeasureDisplayCode;
		
		private string _MedClassDescription;
		
		private string _MedClassCode;
		
		private System.Nullable<System.Guid> _MedClassKey;
		
		private string _HazardousWasteDisposalInstructions;
		
		private string _HazardousWasteDescription;
		
		private System.Nullable<System.Guid> _ItemSecurityGroupKey;
		
		private System.Nullable<bool> _HasDrawerAccessFlag;
		
		private System.Nullable<int> _InventoryCountStatus;
		
		private System.Nullable<bool> _StorageSpaceAccessedFlag;
		
		private string _StorageSpaceTypeInternalCode;
		
		private bool _NonMedItemFlag;
		
		private bool _TrackInventoryQuantityFlag;
		
		private string _StorageSpaceFormShortName;
		
		private string _VerifyCountModeInternalCode;
		
		private string _PharmacyNotes;
		
		private System.Nullable<bool> _ExpiredMedFlag;
		
		private System.Nullable<bool> _BackorderedFlag;
		
		public bsp_ListSavedInventoryCountItemSummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this._ItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MedItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					this._MedItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="VarChar(100)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericName", DbType="VarChar(150)")]
		public string GenericName
		{
			get
			{
				return this._GenericName;
			}
			set
			{
				if ((this._GenericName != value))
				{
					this._GenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(100)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageForm", DbType="VarChar(100)")]
		public string DosageForm
		{
			get
			{
				return this._DosageForm;
			}
			set
			{
				if ((this._DosageForm != value))
				{
					this._DosageForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StrengthAmount
		{
			get
			{
				return this._StrengthAmount;
			}
			set
			{
				if ((this._StrengthAmount != value))
				{
					this._StrengthAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOM", DbType="VarChar(250)")]
		public string StrengthUOM
		{
			get
			{
				return this._StrengthUOM;
			}
			set
			{
				if ((this._StrengthUOM != value))
				{
					this._StrengthUOM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUOM", DbType="VarChar(250)")]
		public string IssueUOM
		{
			get
			{
				return this._IssueUOM;
			}
			set
			{
				if ((this._IssueUOM != value))
				{
					this._IssueUOM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IssueUOMKey
		{
			get
			{
				return this._IssueUOMKey;
			}
			set
			{
				if ((this._IssueUOMKey != value))
				{
					this._IssueUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillUOM", DbType="NVarChar(250)")]
		public string RefillUOM
		{
			get
			{
				return this._RefillUOM;
			}
			set
			{
				if ((this._RefillUOM != value))
				{
					this._RefillUOM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RefillUOMKey
		{
			get
			{
				return this._RefillUOMKey;
			}
			set
			{
				if ((this._RefillUOMKey != value))
				{
					this._RefillUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOIPerUORAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> UOIPerUORAmount
		{
			get
			{
				return this._UOIPerUORAmount;
			}
			set
			{
				if ((this._UOIPerUORAmount != value))
				{
					this._UOIPerUORAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdateTrackingFlag", DbType="Bit")]
		public System.Nullable<bool> OutdateTrackingFlag
		{
			get
			{
				return this._OutdateTrackingFlag;
			}
			set
			{
				if ((this._OutdateTrackingFlag != value))
				{
					this._OutdateTrackingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit")]
		public System.Nullable<bool> ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoResolveDiscrepancyFlag", DbType="Bit")]
		public System.Nullable<bool> AutoResolveDiscrepancyFlag
		{
			get
			{
				return this._AutoResolveDiscrepancyFlag;
			}
			set
			{
				if ((this._AutoResolveDiscrepancyFlag != value))
				{
					this._AutoResolveDiscrepancyFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StorageSpaceKey
		{
			get
			{
				return this._StorageSpaceKey;
			}
			set
			{
				if ((this._StorageSpaceKey != value))
				{
					this._StorageSpaceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceShortName", DbType="VarChar(500)")]
		public string StorageSpaceShortName
		{
			get
			{
				return this._StorageSpaceShortName;
			}
			set
			{
				if ((this._StorageSpaceShortName != value))
				{
					this._StorageSpaceShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="VarChar(50)")]
		public string PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this._PositionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceSortValue", DbType="VarChar(500)")]
		public string StorageSpaceSortValue
		{
			get
			{
				return this._StorageSpaceSortValue;
			}
			set
			{
				if ((this._StorageSpaceSortValue != value))
				{
					this._StorageSpaceSortValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateClosedFlag", DbType="Bit")]
		public System.Nullable<bool> StorageSpaceStateClosedFlag
		{
			get
			{
				return this._StorageSpaceStateClosedFlag;
			}
			set
			{
				if ((this._StorageSpaceStateClosedFlag != value))
				{
					this._StorageSpaceStateClosedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateLockedFlag", DbType="Bit")]
		public System.Nullable<bool> StorageSpaceStateLockedFlag
		{
			get
			{
				return this._StorageSpaceStateLockedFlag;
			}
			set
			{
				if ((this._StorageSpaceStateLockedFlag != value))
				{
					this._StorageSpaceStateLockedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateFailedFlag", DbType="Bit")]
		public System.Nullable<bool> StorageSpaceStateFailedFlag
		{
			get
			{
				return this._StorageSpaceStateFailedFlag;
			}
			set
			{
				if ((this._StorageSpaceStateFailedFlag != value))
				{
					this._StorageSpaceStateFailedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateFailureReason", DbType="VarChar(50)")]
		public string StorageSpaceStateFailureReason
		{
			get
			{
				return this._StorageSpaceStateFailureReason;
			}
			set
			{
				if ((this._StorageSpaceStateFailureReason != value))
				{
					this._StorageSpaceStateFailureReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StorageSpaceItemKey
		{
			get
			{
				return this._StorageSpaceItemKey;
			}
			set
			{
				if ((this._StorageSpaceItemKey != value))
				{
					this._StorageSpaceItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemStatusInternalCode", DbType="VarChar(10)")]
		public string StorageSpaceItemStatusInternalCode
		{
			get
			{
				return this._StorageSpaceItemStatusInternalCode;
			}
			set
			{
				if ((this._StorageSpaceItemStatusInternalCode != value))
				{
					this._StorageSpaceItemStatusInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> ParQuantity
		{
			get
			{
				return this._ParQuantity;
			}
			set
			{
				if ((this._ParQuantity != value))
				{
					this._ParQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillPointQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> RefillPointQuantity
		{
			get
			{
				return this._RefillPointQuantity;
			}
			set
			{
				if ((this._RefillPointQuantity != value))
				{
					this._RefillPointQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalMaximumQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> PhysicalMaximumQuantity
		{
			get
			{
				return this._PhysicalMaximumQuantity;
			}
			set
			{
				if ((this._PhysicalMaximumQuantity != value))
				{
					this._PhysicalMaximumQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartStorageSpaceInventoryKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StartStorageSpaceInventoryKey
		{
			get
			{
				return this._StartStorageSpaceInventoryKey;
			}
			set
			{
				if ((this._StartStorageSpaceInventoryKey != value))
				{
					this._StartStorageSpaceInventoryKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarliestNextExpirationDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> EarliestNextExpirationDate
		{
			get
			{
				return this._EarliestNextExpirationDate;
			}
			set
			{
				if ((this._EarliestNextExpirationDate != value))
				{
					this._EarliestNextExpirationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessRequiredFlag", DbType="Bit")]
		public System.Nullable<bool> WitnessRequiredFlag
		{
			get
			{
				return this._WitnessRequiredFlag;
			}
			set
			{
				if ((this._WitnessRequiredFlag != value))
				{
					this._WitnessRequiredFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlledMedFlag", DbType="Bit")]
		public System.Nullable<bool> ControlledMedFlag
		{
			get
			{
				return this._ControlledMedFlag;
			}
			set
			{
				if ((this._ControlledMedFlag != value))
				{
					this._ControlledMedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlindCountFlag", DbType="Bit")]
		public System.Nullable<bool> BlindCountFlag
		{
			get
			{
				return this._BlindCountFlag;
			}
			set
			{
				if ((this._BlindCountFlag != value))
				{
					this._BlindCountFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceFormInternalCode", DbType="VarChar(20)")]
		public string StorageSpaceFormInternalCode
		{
			get
			{
				return this._StorageSpaceFormInternalCode;
			}
			set
			{
				if ((this._StorageSpaceFormInternalCode != value))
				{
					this._StorageSpaceFormInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayModeInternalCode", DbType="VarChar(20)")]
		public string MiniDrawerTrayModeInternalCode
		{
			get
			{
				return this._MiniDrawerTrayModeInternalCode;
			}
			set
			{
				if ((this._MiniDrawerTrayModeInternalCode != value))
				{
					this._MiniDrawerTrayModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayModeDescription", DbType="VarChar(50)")]
		public string MiniDrawerTrayModeDescription
		{
			get
			{
				return this._MiniDrawerTrayModeDescription;
			}
			set
			{
				if ((this._MiniDrawerTrayModeDescription != value))
				{
					this._MiniDrawerTrayModeDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayFlag", DbType="Bit")]
		public System.Nullable<bool> MiniDrawerTrayFlag
		{
			get
			{
				return this._MiniDrawerTrayFlag;
			}
			set
			{
				if ((this._MiniDrawerTrayFlag != value))
				{
					this._MiniDrawerTrayFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayTotalParQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> MiniDrawerTrayTotalParQuantity
		{
			get
			{
				return this._MiniDrawerTrayTotalParQuantity;
			}
			set
			{
				if ((this._MiniDrawerTrayTotalParQuantity != value))
				{
					this._MiniDrawerTrayTotalParQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayTotalPocketCount", DbType="Int")]
		public System.Nullable<int> MiniDrawerTrayTotalPocketCount
		{
			get
			{
				return this._MiniDrawerTrayTotalPocketCount;
			}
			set
			{
				if ((this._MiniDrawerTrayTotalPocketCount != value))
				{
					this._MiniDrawerTrayTotalPocketCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentStorageSpaceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentStorageSpaceKey
		{
			get
			{
				return this._ParentStorageSpaceKey;
			}
			set
			{
				if ((this._ParentStorageSpaceKey != value))
				{
					this._ParentStorageSpaceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardStockWithinDispensingDeviceFlag", DbType="Bit")]
		public System.Nullable<bool> StandardStockWithinDispensingDeviceFlag
		{
			get
			{
				return this._StandardStockWithinDispensingDeviceFlag;
			}
			set
			{
				if ((this._StandardStockWithinDispensingDeviceFlag != value))
				{
					this._StandardStockWithinDispensingDeviceFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(500)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> TotalVolumeAmount
		{
			get
			{
				return this._TotalVolumeAmount;
			}
			set
			{
				if ((this._TotalVolumeAmount != value))
				{
					this._TotalVolumeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeUnitOfMeasureDisplayCode", DbType="VarChar(10)")]
		public string TotalVolumeUnitOfMeasureDisplayCode
		{
			get
			{
				return this._TotalVolumeUnitOfMeasureDisplayCode;
			}
			set
			{
				if ((this._TotalVolumeUnitOfMeasureDisplayCode != value))
				{
					this._TotalVolumeUnitOfMeasureDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> ConcentrationVolumeAmount
		{
			get
			{
				return this._ConcentrationVolumeAmount;
			}
			set
			{
				if ((this._ConcentrationVolumeAmount != value))
				{
					this._ConcentrationVolumeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeUnitOfMeasureDisplayCode", DbType="NVarChar(50)")]
		public string ConcentrationVolumeUnitOfMeasureDisplayCode
		{
			get
			{
				return this._ConcentrationVolumeUnitOfMeasureDisplayCode;
			}
			set
			{
				if ((this._ConcentrationVolumeUnitOfMeasureDisplayCode != value))
				{
					this._ConcentrationVolumeUnitOfMeasureDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassDescription", DbType="VarChar(100)")]
		public string MedClassDescription
		{
			get
			{
				return this._MedClassDescription;
			}
			set
			{
				if ((this._MedClassDescription != value))
				{
					this._MedClassDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassCode", DbType="VarChar(20)")]
		public string MedClassCode
		{
			get
			{
				return this._MedClassCode;
			}
			set
			{
				if ((this._MedClassCode != value))
				{
					this._MedClassCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MedClassKey
		{
			get
			{
				return this._MedClassKey;
			}
			set
			{
				if ((this._MedClassKey != value))
				{
					this._MedClassKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardousWasteDisposalInstructions", DbType="VarChar(250)")]
		public string HazardousWasteDisposalInstructions
		{
			get
			{
				return this._HazardousWasteDisposalInstructions;
			}
			set
			{
				if ((this._HazardousWasteDisposalInstructions != value))
				{
					this._HazardousWasteDisposalInstructions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardousWasteDescription", DbType="VarChar(100)")]
		public string HazardousWasteDescription
		{
			get
			{
				return this._HazardousWasteDescription;
			}
			set
			{
				if ((this._HazardousWasteDescription != value))
				{
					this._HazardousWasteDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSecurityGroupKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ItemSecurityGroupKey
		{
			get
			{
				return this._ItemSecurityGroupKey;
			}
			set
			{
				if ((this._ItemSecurityGroupKey != value))
				{
					this._ItemSecurityGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDrawerAccessFlag", DbType="Bit")]
		public System.Nullable<bool> HasDrawerAccessFlag
		{
			get
			{
				return this._HasDrawerAccessFlag;
			}
			set
			{
				if ((this._HasDrawerAccessFlag != value))
				{
					this._HasDrawerAccessFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryCountStatus", DbType="Int")]
		public System.Nullable<int> InventoryCountStatus
		{
			get
			{
				return this._InventoryCountStatus;
			}
			set
			{
				if ((this._InventoryCountStatus != value))
				{
					this._InventoryCountStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceAccessedFlag", DbType="Bit")]
		public System.Nullable<bool> StorageSpaceAccessedFlag
		{
			get
			{
				return this._StorageSpaceAccessedFlag;
			}
			set
			{
				if ((this._StorageSpaceAccessedFlag != value))
				{
					this._StorageSpaceAccessedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceTypeInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StorageSpaceTypeInternalCode
		{
			get
			{
				return this._StorageSpaceTypeInternalCode;
			}
			set
			{
				if ((this._StorageSpaceTypeInternalCode != value))
				{
					this._StorageSpaceTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonMedItemFlag", DbType="Bit NOT NULL")]
		public bool NonMedItemFlag
		{
			get
			{
				return this._NonMedItemFlag;
			}
			set
			{
				if ((this._NonMedItemFlag != value))
				{
					this._NonMedItemFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackInventoryQuantityFlag", DbType="Bit NOT NULL")]
		public bool TrackInventoryQuantityFlag
		{
			get
			{
				return this._TrackInventoryQuantityFlag;
			}
			set
			{
				if ((this._TrackInventoryQuantityFlag != value))
				{
					this._TrackInventoryQuantityFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceFormShortName", DbType="VarChar(20)")]
		public string StorageSpaceFormShortName
		{
			get
			{
				return this._StorageSpaceFormShortName;
			}
			set
			{
				if ((this._StorageSpaceFormShortName != value))
				{
					this._StorageSpaceFormShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCountModeInternalCode", DbType="VarChar(10)")]
		public string VerifyCountModeInternalCode
		{
			get
			{
				return this._VerifyCountModeInternalCode;
			}
			set
			{
				if ((this._VerifyCountModeInternalCode != value))
				{
					this._VerifyCountModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyNotes", DbType="VarChar(250)")]
		public string PharmacyNotes
		{
			get
			{
				return this._PharmacyNotes;
			}
			set
			{
				if ((this._PharmacyNotes != value))
				{
					this._PharmacyNotes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredMedFlag", DbType="Bit")]
		public System.Nullable<bool> ExpiredMedFlag
		{
			get
			{
				return this._ExpiredMedFlag;
			}
			set
			{
				if ((this._ExpiredMedFlag != value))
				{
					this._ExpiredMedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackorderedFlag", DbType="Bit")]
		public System.Nullable<bool> BackorderedFlag
		{
			get
			{
				return this._BackorderedFlag;
			}
			set
			{
				if ((this._BackorderedFlag != value))
				{
					this._BackorderedFlag = value;
				}
			}
		}
	}
	
	public partial class bsp_ListInventoryItemSummaryResult
	{
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private System.Guid _FacilityItemKey;
		
		private System.Guid _ItemKey;
		
		private System.Guid _MedItemKey;
		
		private string _ItemID;
		
		private string _GenericName;
		
		private string _BrandName;
		
		private string _DosageForm;
		
		private System.Nullable<decimal> _StrengthAmount;
		
		private string _StrengthUOM;
		
		private string _IssueUOM;
		
		private System.Nullable<System.Guid> _IssueUOMKey;
		
		private string _RefillUOM;
		
		private System.Nullable<System.Guid> _RefillUOMKey;
		
		private System.Nullable<decimal> _UOIPerUORAmount;
		
		private System.Nullable<bool> _ScanOnLoadRefillFlag;
		
		private System.Nullable<bool> _OutdateTrackingFlag;
		
		private bool _ActiveFlag;
		
		private bool _AutoResolveDiscrepancyFlag;
		
		private System.Guid _StorageSpaceKey;
		
		private string _StorageSpaceShortName;
		
		private string _PositionID;
		
		private string _StorageSpaceSortValue;
		
		private System.Nullable<bool> _StorageSpaceStateClosedFlag;
		
		private System.Nullable<bool> _StorageSpaceStateLockedFlag;
		
		private bool _StorageSpaceStateFailedFlag;
		
		private string _StorageSpaceStateFailureReason;
		
		private System.Guid _StorageSpaceItemKey;
		
		private string _StorageSpaceItemStatusInternalCode;
		
		private System.Nullable<decimal> _ParQuantity;
		
		private System.Nullable<decimal> _RefillPointQuantity;
		
		private System.Nullable<decimal> _PhysicalMaximumQuantity;
		
		private System.Guid _StartStorageSpaceInventoryKey;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<System.DateTime> _EarliestNextExpirationDate;
		
		private System.Nullable<bool> _LoadFlag;
		
		private System.Nullable<bool> _RefillFlag;
		
		private System.Nullable<bool> _WitnessRequiredFlag;
		
		private System.Nullable<bool> _ControlledMedFlag;
		
		private System.Nullable<bool> _ExpiredMedFlag;
		
		private System.Nullable<bool> _UnloadRequiredFlag;
		
		private System.Nullable<bool> _BlindCountFlag;
		
		private System.Nullable<bool> _LeastRemovedFlag;
		
		private string _StorageSpaceFormInternalCode;
		
		private string _MiniDrawerTrayModeInternalCode;
		
		private string _MiniDrawerTrayModeDescription;
		
		private System.Nullable<bool> _MiniDrawerTrayFlag;
		
		private System.Nullable<int> _MiniDrawerTrayTotalParQuantity;
		
		private System.Nullable<int> _MiniDrawerTrayTotalPocketCount;
		
		private System.Nullable<System.Guid> _ParentStorageSpaceKey;
		
		private bool _StandardStockWithinDispensingDeviceFlag;
		
		private System.Nullable<bool> _ExpiringMedFlag;
		
		private string _DisplayName;
		
		private System.Nullable<decimal> _TotalVolumeAmount;
		
		private string _TotalVolumeUnitOfMeasureDisplayCode;
		
		private System.Nullable<decimal> _ConcentrationVolumeAmount;
		
		private string _ConcentrationVolumeUnitOfMeasureDisplayCode;
		
		private string _MedClassDescription;
		
		private string _MedClassCode;
		
		private System.Nullable<System.Guid> _MedClassKey;
		
		private string _HazardousWasteDisposalInstructions;
		
		private string _HazardousWasteDescription;
		
		private System.Nullable<System.Guid> _ItemSecurityGroupKey;
		
		private System.Nullable<bool> _HasDrawerAccessFlag;
		
		private System.Nullable<int> _LastRemovedDays;
		
		private string _PharmacyNotes;
		
		private System.Nullable<bool> _NonMedItemFlag;
		
		private bool _TrackInventoryQuantityFlag;
		
		private string _StorageSpaceFormShortName;
		
		private string _StorageSpaceTypeInternalCode;
		
		private System.Nullable<bool> _BackorderedFlag;
		
		private string _PendingMiniDrawerTrayModeInternalCode;
		
		private string _PendingMiniDrawerTrayModeDescription;
		
		public bsp_ListInventoryItemSummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this._ItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MedItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					this._MedItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="NVarChar(100)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string GenericName
		{
			get
			{
				return this._GenericName;
			}
			set
			{
				if ((this._GenericName != value))
				{
					this._GenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(100)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageForm", DbType="NVarChar(20)")]
		public string DosageForm
		{
			get
			{
				return this._DosageForm;
			}
			set
			{
				if ((this._DosageForm != value))
				{
					this._DosageForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StrengthAmount
		{
			get
			{
				return this._StrengthAmount;
			}
			set
			{
				if ((this._StrengthAmount != value))
				{
					this._StrengthAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOM", DbType="NVarChar(50)")]
		public string StrengthUOM
		{
			get
			{
				return this._StrengthUOM;
			}
			set
			{
				if ((this._StrengthUOM != value))
				{
					this._StrengthUOM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUOM", DbType="NVarChar(50)")]
		public string IssueUOM
		{
			get
			{
				return this._IssueUOM;
			}
			set
			{
				if ((this._IssueUOM != value))
				{
					this._IssueUOM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IssueUOMKey
		{
			get
			{
				return this._IssueUOMKey;
			}
			set
			{
				if ((this._IssueUOMKey != value))
				{
					this._IssueUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillUOM", DbType="NVarChar(50)")]
		public string RefillUOM
		{
			get
			{
				return this._RefillUOM;
			}
			set
			{
				if ((this._RefillUOM != value))
				{
					this._RefillUOM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RefillUOMKey
		{
			get
			{
				return this._RefillUOMKey;
			}
			set
			{
				if ((this._RefillUOMKey != value))
				{
					this._RefillUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOIPerUORAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> UOIPerUORAmount
		{
			get
			{
				return this._UOIPerUORAmount;
			}
			set
			{
				if ((this._UOIPerUORAmount != value))
				{
					this._UOIPerUORAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnLoadRefillFlag", DbType="Bit")]
		public System.Nullable<bool> ScanOnLoadRefillFlag
		{
			get
			{
				return this._ScanOnLoadRefillFlag;
			}
			set
			{
				if ((this._ScanOnLoadRefillFlag != value))
				{
					this._ScanOnLoadRefillFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdateTrackingFlag", DbType="Bit")]
		public System.Nullable<bool> OutdateTrackingFlag
		{
			get
			{
				return this._OutdateTrackingFlag;
			}
			set
			{
				if ((this._OutdateTrackingFlag != value))
				{
					this._OutdateTrackingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoResolveDiscrepancyFlag", DbType="Bit NOT NULL")]
		public bool AutoResolveDiscrepancyFlag
		{
			get
			{
				return this._AutoResolveDiscrepancyFlag;
			}
			set
			{
				if ((this._AutoResolveDiscrepancyFlag != value))
				{
					this._AutoResolveDiscrepancyFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StorageSpaceKey
		{
			get
			{
				return this._StorageSpaceKey;
			}
			set
			{
				if ((this._StorageSpaceKey != value))
				{
					this._StorageSpaceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceShortName", DbType="NVarChar(500)")]
		public string StorageSpaceShortName
		{
			get
			{
				return this._StorageSpaceShortName;
			}
			set
			{
				if ((this._StorageSpaceShortName != value))
				{
					this._StorageSpaceShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="NVarChar(50)")]
		public string PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this._PositionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceSortValue", DbType="VarChar(500)")]
		public string StorageSpaceSortValue
		{
			get
			{
				return this._StorageSpaceSortValue;
			}
			set
			{
				if ((this._StorageSpaceSortValue != value))
				{
					this._StorageSpaceSortValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateClosedFlag", DbType="Bit")]
		public System.Nullable<bool> StorageSpaceStateClosedFlag
		{
			get
			{
				return this._StorageSpaceStateClosedFlag;
			}
			set
			{
				if ((this._StorageSpaceStateClosedFlag != value))
				{
					this._StorageSpaceStateClosedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateLockedFlag", DbType="Bit")]
		public System.Nullable<bool> StorageSpaceStateLockedFlag
		{
			get
			{
				return this._StorageSpaceStateLockedFlag;
			}
			set
			{
				if ((this._StorageSpaceStateLockedFlag != value))
				{
					this._StorageSpaceStateLockedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateFailedFlag", DbType="Bit NOT NULL")]
		public bool StorageSpaceStateFailedFlag
		{
			get
			{
				return this._StorageSpaceStateFailedFlag;
			}
			set
			{
				if ((this._StorageSpaceStateFailedFlag != value))
				{
					this._StorageSpaceStateFailedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceStateFailureReason", DbType="NVarChar(50)")]
		public string StorageSpaceStateFailureReason
		{
			get
			{
				return this._StorageSpaceStateFailureReason;
			}
			set
			{
				if ((this._StorageSpaceStateFailureReason != value))
				{
					this._StorageSpaceStateFailureReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StorageSpaceItemKey
		{
			get
			{
				return this._StorageSpaceItemKey;
			}
			set
			{
				if ((this._StorageSpaceItemKey != value))
				{
					this._StorageSpaceItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemStatusInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StorageSpaceItemStatusInternalCode
		{
			get
			{
				return this._StorageSpaceItemStatusInternalCode;
			}
			set
			{
				if ((this._StorageSpaceItemStatusInternalCode != value))
				{
					this._StorageSpaceItemStatusInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> ParQuantity
		{
			get
			{
				return this._ParQuantity;
			}
			set
			{
				if ((this._ParQuantity != value))
				{
					this._ParQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillPointQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> RefillPointQuantity
		{
			get
			{
				return this._RefillPointQuantity;
			}
			set
			{
				if ((this._RefillPointQuantity != value))
				{
					this._RefillPointQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalMaximumQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> PhysicalMaximumQuantity
		{
			get
			{
				return this._PhysicalMaximumQuantity;
			}
			set
			{
				if ((this._PhysicalMaximumQuantity != value))
				{
					this._PhysicalMaximumQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartStorageSpaceInventoryKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StartStorageSpaceInventoryKey
		{
			get
			{
				return this._StartStorageSpaceInventoryKey;
			}
			set
			{
				if ((this._StartStorageSpaceInventoryKey != value))
				{
					this._StartStorageSpaceInventoryKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarliestNextExpirationDate", DbType="Date")]
		public System.Nullable<System.DateTime> EarliestNextExpirationDate
		{
			get
			{
				return this._EarliestNextExpirationDate;
			}
			set
			{
				if ((this._EarliestNextExpirationDate != value))
				{
					this._EarliestNextExpirationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadFlag", DbType="Bit")]
		public System.Nullable<bool> LoadFlag
		{
			get
			{
				return this._LoadFlag;
			}
			set
			{
				if ((this._LoadFlag != value))
				{
					this._LoadFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillFlag", DbType="Bit")]
		public System.Nullable<bool> RefillFlag
		{
			get
			{
				return this._RefillFlag;
			}
			set
			{
				if ((this._RefillFlag != value))
				{
					this._RefillFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessRequiredFlag", DbType="Bit")]
		public System.Nullable<bool> WitnessRequiredFlag
		{
			get
			{
				return this._WitnessRequiredFlag;
			}
			set
			{
				if ((this._WitnessRequiredFlag != value))
				{
					this._WitnessRequiredFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlledMedFlag", DbType="Bit")]
		public System.Nullable<bool> ControlledMedFlag
		{
			get
			{
				return this._ControlledMedFlag;
			}
			set
			{
				if ((this._ControlledMedFlag != value))
				{
					this._ControlledMedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredMedFlag", DbType="Bit")]
		public System.Nullable<bool> ExpiredMedFlag
		{
			get
			{
				return this._ExpiredMedFlag;
			}
			set
			{
				if ((this._ExpiredMedFlag != value))
				{
					this._ExpiredMedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnloadRequiredFlag", DbType="Bit")]
		public System.Nullable<bool> UnloadRequiredFlag
		{
			get
			{
				return this._UnloadRequiredFlag;
			}
			set
			{
				if ((this._UnloadRequiredFlag != value))
				{
					this._UnloadRequiredFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlindCountFlag", DbType="Bit")]
		public System.Nullable<bool> BlindCountFlag
		{
			get
			{
				return this._BlindCountFlag;
			}
			set
			{
				if ((this._BlindCountFlag != value))
				{
					this._BlindCountFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeastRemovedFlag", DbType="Bit")]
		public System.Nullable<bool> LeastRemovedFlag
		{
			get
			{
				return this._LeastRemovedFlag;
			}
			set
			{
				if ((this._LeastRemovedFlag != value))
				{
					this._LeastRemovedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceFormInternalCode", DbType="VarChar(20)")]
		public string StorageSpaceFormInternalCode
		{
			get
			{
				return this._StorageSpaceFormInternalCode;
			}
			set
			{
				if ((this._StorageSpaceFormInternalCode != value))
				{
					this._StorageSpaceFormInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayModeInternalCode", DbType="VarChar(10)")]
		public string MiniDrawerTrayModeInternalCode
		{
			get
			{
				return this._MiniDrawerTrayModeInternalCode;
			}
			set
			{
				if ((this._MiniDrawerTrayModeInternalCode != value))
				{
					this._MiniDrawerTrayModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayModeDescription", DbType="NVarChar(50)")]
		public string MiniDrawerTrayModeDescription
		{
			get
			{
				return this._MiniDrawerTrayModeDescription;
			}
			set
			{
				if ((this._MiniDrawerTrayModeDescription != value))
				{
					this._MiniDrawerTrayModeDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayFlag", DbType="Bit")]
		public System.Nullable<bool> MiniDrawerTrayFlag
		{
			get
			{
				return this._MiniDrawerTrayFlag;
			}
			set
			{
				if ((this._MiniDrawerTrayFlag != value))
				{
					this._MiniDrawerTrayFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayTotalParQuantity", DbType="Int")]
		public System.Nullable<int> MiniDrawerTrayTotalParQuantity
		{
			get
			{
				return this._MiniDrawerTrayTotalParQuantity;
			}
			set
			{
				if ((this._MiniDrawerTrayTotalParQuantity != value))
				{
					this._MiniDrawerTrayTotalParQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiniDrawerTrayTotalPocketCount", DbType="Int")]
		public System.Nullable<int> MiniDrawerTrayTotalPocketCount
		{
			get
			{
				return this._MiniDrawerTrayTotalPocketCount;
			}
			set
			{
				if ((this._MiniDrawerTrayTotalPocketCount != value))
				{
					this._MiniDrawerTrayTotalPocketCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentStorageSpaceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentStorageSpaceKey
		{
			get
			{
				return this._ParentStorageSpaceKey;
			}
			set
			{
				if ((this._ParentStorageSpaceKey != value))
				{
					this._ParentStorageSpaceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardStockWithinDispensingDeviceFlag", DbType="Bit NOT NULL")]
		public bool StandardStockWithinDispensingDeviceFlag
		{
			get
			{
				return this._StandardStockWithinDispensingDeviceFlag;
			}
			set
			{
				if ((this._StandardStockWithinDispensingDeviceFlag != value))
				{
					this._StandardStockWithinDispensingDeviceFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiringMedFlag", DbType="Bit")]
		public System.Nullable<bool> ExpiringMedFlag
		{
			get
			{
				return this._ExpiringMedFlag;
			}
			set
			{
				if ((this._ExpiringMedFlag != value))
				{
					this._ExpiringMedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(500)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> TotalVolumeAmount
		{
			get
			{
				return this._TotalVolumeAmount;
			}
			set
			{
				if ((this._TotalVolumeAmount != value))
				{
					this._TotalVolumeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeUnitOfMeasureDisplayCode", DbType="NVarChar(50)")]
		public string TotalVolumeUnitOfMeasureDisplayCode
		{
			get
			{
				return this._TotalVolumeUnitOfMeasureDisplayCode;
			}
			set
			{
				if ((this._TotalVolumeUnitOfMeasureDisplayCode != value))
				{
					this._TotalVolumeUnitOfMeasureDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeAmount", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> ConcentrationVolumeAmount
		{
			get
			{
				return this._ConcentrationVolumeAmount;
			}
			set
			{
				if ((this._ConcentrationVolumeAmount != value))
				{
					this._ConcentrationVolumeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeUnitOfMeasureDisplayCode", DbType="NVarChar(50)")]
		public string ConcentrationVolumeUnitOfMeasureDisplayCode
		{
			get
			{
				return this._ConcentrationVolumeUnitOfMeasureDisplayCode;
			}
			set
			{
				if ((this._ConcentrationVolumeUnitOfMeasureDisplayCode != value))
				{
					this._ConcentrationVolumeUnitOfMeasureDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassDescription", DbType="NVarChar(100)")]
		public string MedClassDescription
		{
			get
			{
				return this._MedClassDescription;
			}
			set
			{
				if ((this._MedClassDescription != value))
				{
					this._MedClassDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassCode", DbType="NVarChar(20)")]
		public string MedClassCode
		{
			get
			{
				return this._MedClassCode;
			}
			set
			{
				if ((this._MedClassCode != value))
				{
					this._MedClassCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MedClassKey
		{
			get
			{
				return this._MedClassKey;
			}
			set
			{
				if ((this._MedClassKey != value))
				{
					this._MedClassKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardousWasteDisposalInstructions", DbType="NVarChar(250)")]
		public string HazardousWasteDisposalInstructions
		{
			get
			{
				return this._HazardousWasteDisposalInstructions;
			}
			set
			{
				if ((this._HazardousWasteDisposalInstructions != value))
				{
					this._HazardousWasteDisposalInstructions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardousWasteDescription", DbType="NVarChar(100)")]
		public string HazardousWasteDescription
		{
			get
			{
				return this._HazardousWasteDescription;
			}
			set
			{
				if ((this._HazardousWasteDescription != value))
				{
					this._HazardousWasteDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSecurityGroupKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ItemSecurityGroupKey
		{
			get
			{
				return this._ItemSecurityGroupKey;
			}
			set
			{
				if ((this._ItemSecurityGroupKey != value))
				{
					this._ItemSecurityGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDrawerAccessFlag", DbType="Bit")]
		public System.Nullable<bool> HasDrawerAccessFlag
		{
			get
			{
				return this._HasDrawerAccessFlag;
			}
			set
			{
				if ((this._HasDrawerAccessFlag != value))
				{
					this._HasDrawerAccessFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRemovedDays", DbType="Int")]
		public System.Nullable<int> LastRemovedDays
		{
			get
			{
				return this._LastRemovedDays;
			}
			set
			{
				if ((this._LastRemovedDays != value))
				{
					this._LastRemovedDays = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyNotes", DbType="NVarChar(250)")]
		public string PharmacyNotes
		{
			get
			{
				return this._PharmacyNotes;
			}
			set
			{
				if ((this._PharmacyNotes != value))
				{
					this._PharmacyNotes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonMedItemFlag", DbType="Bit")]
		public System.Nullable<bool> NonMedItemFlag
		{
			get
			{
				return this._NonMedItemFlag;
			}
			set
			{
				if ((this._NonMedItemFlag != value))
				{
					this._NonMedItemFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackInventoryQuantityFlag", DbType="Bit NOT NULL")]
		public bool TrackInventoryQuantityFlag
		{
			get
			{
				return this._TrackInventoryQuantityFlag;
			}
			set
			{
				if ((this._TrackInventoryQuantityFlag != value))
				{
					this._TrackInventoryQuantityFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceFormShortName", DbType="VarChar(20)")]
		public string StorageSpaceFormShortName
		{
			get
			{
				return this._StorageSpaceFormShortName;
			}
			set
			{
				if ((this._StorageSpaceFormShortName != value))
				{
					this._StorageSpaceFormShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceTypeInternalCode", DbType="VarChar(20)")]
		public string StorageSpaceTypeInternalCode
		{
			get
			{
				return this._StorageSpaceTypeInternalCode;
			}
			set
			{
				if ((this._StorageSpaceTypeInternalCode != value))
				{
					this._StorageSpaceTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackorderedFlag", DbType="Bit")]
		public System.Nullable<bool> BackorderedFlag
		{
			get
			{
				return this._BackorderedFlag;
			}
			set
			{
				if ((this._BackorderedFlag != value))
				{
					this._BackorderedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingMiniDrawerTrayModeInternalCode", DbType="VarChar(10)")]
		public string PendingMiniDrawerTrayModeInternalCode
		{
			get
			{
				return this._PendingMiniDrawerTrayModeInternalCode;
			}
			set
			{
				if ((this._PendingMiniDrawerTrayModeInternalCode != value))
				{
					this._PendingMiniDrawerTrayModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingMiniDrawerTrayModeDescription", DbType="NVarChar(50)")]
		public string PendingMiniDrawerTrayModeDescription
		{
			get
			{
				return this._PendingMiniDrawerTrayModeDescription;
			}
			set
			{
				if ((this._PendingMiniDrawerTrayModeDescription != value))
				{
					this._PendingMiniDrawerTrayModeDescription = value;
				}
			}
		}
	}
	
	public partial class bsp_GetZonesResult
	{
		
		private System.Guid _ZoneKey;
		
		private System.Guid _FacilityKey;
		
		private string _FacilityCode;
		
		private string _FacilityName;
		
		private string _ZoneName;
		
		private System.Nullable<short> _ZoneNumber;
		
		private bool _DeleteFlag;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public bsp_GetZonesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ZoneKey
		{
			get
			{
				return this._ZoneKey;
			}
			set
			{
				if ((this._ZoneKey != value))
				{
					this._ZoneKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityCode", DbType="NVarChar(20)")]
		public string FacilityCode
		{
			get
			{
				return this._FacilityCode;
			}
			set
			{
				if ((this._FacilityCode != value))
				{
					this._FacilityCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", DbType="NVarChar(50)")]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this._FacilityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ZoneName
		{
			get
			{
				return this._ZoneName;
			}
			set
			{
				if ((this._ZoneName != value))
				{
					this._ZoneName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneNumber", DbType="SmallInt")]
		public System.Nullable<short> ZoneNumber
		{
			get
			{
				return this._ZoneNumber;
			}
			set
			{
				if ((this._ZoneNumber != value))
				{
					this._ZoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", DbType="rowversion NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	public partial class bsp_GetVirtualStockLocationsResult
	{
		
		private System.Guid _VirtualStockLocationKey;
		
		private System.Guid _FacilityKey;
		
		private string _FacilityCode;
		
		private string _FacilityName;
		
		private string _VirtualStockLocationName;
		
		private bool _DeleteFlag;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public bsp_GetVirtualStockLocationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualStockLocationKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VirtualStockLocationKey
		{
			get
			{
				return this._VirtualStockLocationKey;
			}
			set
			{
				if ((this._VirtualStockLocationKey != value))
				{
					this._VirtualStockLocationKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string FacilityCode
		{
			get
			{
				return this._FacilityCode;
			}
			set
			{
				if ((this._FacilityCode != value))
				{
					this._FacilityCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this._FacilityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualStockLocationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VirtualStockLocationName
		{
			get
			{
				return this._VirtualStockLocationName;
			}
			set
			{
				if ((this._VirtualStockLocationName != value))
				{
					this._VirtualStockLocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this._DeleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", DbType="rowversion NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	public partial class bsp_ListDrawersByDispensingDeviceResult
	{
		
		private System.Guid _StorageSpaceKey;
		
		private string _StorageSpaceTypeInternalCode;
		
		private string _DescriptionText;
		
		private string _StorageSpaceShortName;
		
		private bool _FailureInHierarchyFlag;
		
		public bsp_ListDrawersByDispensingDeviceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StorageSpaceKey
		{
			get
			{
				return this._StorageSpaceKey;
			}
			set
			{
				if ((this._StorageSpaceKey != value))
				{
					this._StorageSpaceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceTypeInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StorageSpaceTypeInternalCode
		{
			get
			{
				return this._StorageSpaceTypeInternalCode;
			}
			set
			{
				if ((this._StorageSpaceTypeInternalCode != value))
				{
					this._StorageSpaceTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this._DescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceShortName", DbType="NVarChar(150)")]
		public string StorageSpaceShortName
		{
			get
			{
				return this._StorageSpaceShortName;
			}
			set
			{
				if ((this._StorageSpaceShortName != value))
				{
					this._StorageSpaceShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailureInHierarchyFlag", DbType="Bit NOT NULL")]
		public bool FailureInHierarchyFlag
		{
			get
			{
				return this._FailureInHierarchyFlag;
			}
			set
			{
				if ((this._FailureInHierarchyFlag != value))
				{
					this._FailureInHierarchyFlag = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
