#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CareFusion.Dispensing.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSServerOLTP")]
	public partial class ExtDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertExternalUnitOfMeasureEntity(ExternalUnitOfMeasureEntity instance);
    partial void UpdateExternalUnitOfMeasureEntity(ExternalUnitOfMeasureEntity instance);
    partial void DeleteExternalUnitOfMeasureEntity(ExternalUnitOfMeasureEntity instance);
    partial void InsertSendInventoryEventEntity(SendInventoryEventEntity instance);
    partial void UpdateSendInventoryEventEntity(SendInventoryEventEntity instance);
    partial void DeleteSendInventoryEventEntity(SendInventoryEventEntity instance);
    partial void InsertSendInventoryEventDispensingDeviceEntity(SendInventoryEventDispensingDeviceEntity instance);
    partial void UpdateSendInventoryEventDispensingDeviceEntity(SendInventoryEventDispensingDeviceEntity instance);
    partial void DeleteSendInventoryEventDispensingDeviceEntity(SendInventoryEventDispensingDeviceEntity instance);
    partial void InsertSendInventoryEventTypeEntity(SendInventoryEventTypeEntity instance);
    partial void UpdateSendInventoryEventTypeEntity(SendInventoryEventTypeEntity instance);
    partial void DeleteSendInventoryEventTypeEntity(SendInventoryEventTypeEntity instance);
    partial void InsertSendInventoryFailureEntity(SendInventoryFailureEntity instance);
    partial void UpdateSendInventoryFailureEntity(SendInventoryFailureEntity instance);
    partial void DeleteSendInventoryFailureEntity(SendInventoryFailureEntity instance);
    partial void InsertNewItemIDEventEntity(NewItemIDEventEntity instance);
    partial void UpdateNewItemIDEventEntity(NewItemIDEventEntity instance);
    partial void DeleteNewItemIDEventEntity(NewItemIDEventEntity instance);
    partial void InsertEquivalencyChangeEventEntity(EquivalencyChangeEventEntity instance);
    partial void UpdateEquivalencyChangeEventEntity(EquivalencyChangeEventEntity instance);
    partial void DeleteEquivalencyChangeEventEntity(EquivalencyChangeEventEntity instance);
    #endregion
		
		public ExtDataContext() : 
				base("Data Source=.;Initial Catalog=DSServerOLTP;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public ExtDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ExternalUnitOfMeasureEntity> ExternalUnitOfMeasureEntities
		{
			get
			{
				return this.GetTable<ExternalUnitOfMeasureEntity>();
			}
		}
		
		public System.Data.Linq.Table<SendInventoryEventEntity> SendInventoryEventEntities
		{
			get
			{
				return this.GetTable<SendInventoryEventEntity>();
			}
		}
		
		public System.Data.Linq.Table<SendInventoryEventDispensingDeviceEntity> SendInventoryEventDispensingDeviceEntities
		{
			get
			{
				return this.GetTable<SendInventoryEventDispensingDeviceEntity>();
			}
		}
		
		public System.Data.Linq.Table<SendInventoryEventTypeEntity> SendInventoryEventTypeEntities
		{
			get
			{
				return this.GetTable<SendInventoryEventTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<SendInventoryFailureEntity> SendInventoryFailureEntities
		{
			get
			{
				return this.GetTable<SendInventoryFailureEntity>();
			}
		}
		
		public System.Data.Linq.Table<NewItemIDEventEntity> NewItemIDEventEntities
		{
			get
			{
				return this.GetTable<NewItemIDEventEntity>();
			}
		}
		
		public System.Data.Linq.Table<EquivalencyChangeEventEntity> EquivalencyChangeEventEntities
		{
			get
			{
				return this.GetTable<EquivalencyChangeEventEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Ext.usp_NewItemIDEventUpdate")]
		public int usp_NewItemIDEventUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompletedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> completedUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompletedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> completedLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewItemIDEventKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> newItemIDEventKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), completedUTCDateTime, completedLocalDateTime, newItemIDEventKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Ext.usp_EquivalencyChangeEventUpdate")]
		public int usp_EquivalencyChangeEventUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompletedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> completedUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompletedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> completedLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EquivalencyChangeEventKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> equivalencyChangeEventKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), completedUTCDateTime, completedLocalDateTime, equivalencyChangeEventKey);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Ext.vw_ExternalUOMCurrent")]
	public partial class ExternalUnitOfMeasureEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExternalUOMKey;
		
		private System.Guid _ExternalSystemKey;
		
		private string _UOMRoleInternalCode;
		
		private string _UOMCode;
		
		private System.Nullable<System.Guid> _UOMKey;
		
		private bool _UseOnOutboundFlag;
		
		private System.Nullable<int> _SortValue;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnExternalSystemKeyChanging(System.Guid value);
    partial void OnExternalSystemKeyChanged();
    partial void OnUOMRoleInternalCodeChanging(string value);
    partial void OnUOMRoleInternalCodeChanged();
    partial void OnUOMCodeChanging(string value);
    partial void OnUOMCodeChanged();
    partial void OnUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnUOMKeyChanged();
    partial void OnUseOnOutboundFlagChanging(bool value);
    partial void OnUseOnOutboundFlagChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ExternalUnitOfMeasureEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExternalUOMKey", Storage="_ExternalUOMKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._ExternalUOMKey;
			}
			set
			{
				if ((this._ExternalUOMKey != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalUOMKey = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMRoleInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UOMRoleInternalCode
		{
			get
			{
				return this._UOMRoleInternalCode;
			}
			set
			{
				if ((this._UOMRoleInternalCode != value))
				{
					this.OnUOMRoleInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._UOMRoleInternalCode = value;
					this.SendPropertyChanged("UOMRoleInternalCode");
					this.OnUOMRoleInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMCode", DbType="NVarChar(75) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UOMCode
		{
			get
			{
				return this._UOMCode;
			}
			set
			{
				if ((this._UOMCode != value))
				{
					this.OnUOMCodeChanging(value);
					this.SendPropertyChanging();
					this._UOMCode = value;
					this.SendPropertyChanged("UOMCode");
					this.OnUOMCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UOMKey
		{
			get
			{
				return this._UOMKey;
			}
			set
			{
				if ((this._UOMKey != value))
				{
					this.OnUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._UOMKey = value;
					this.SendPropertyChanged("UOMKey");
					this.OnUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseOnOutboundFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool UseOnOutboundFlag
		{
			get
			{
				return this._UseOnOutboundFlag;
			}
			set
			{
				if ((this._UseOnOutboundFlag != value))
				{
					this.OnUseOnOutboundFlagChanging(value);
					this.SendPropertyChanging();
					this._UseOnOutboundFlag = value;
					this.SendPropertyChanged("UseOnOutboundFlag");
					this.OnUseOnOutboundFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Ext.SendInventoryEvent")]
	public partial class SendInventoryEventEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private long _SequenceNumber;
		
		private string _SendInventoryEventTypeInternalCode;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private string _ItemTransactionTypeInternalCode;
		
		private System.Nullable<System.Guid> _UserAccountKey;
		
		private System.DateTime _CreatedUTCDateTime;
		
		private System.DateTime _CreatedLocalDateTime;
		
		private System.Nullable<System.DateTime> _CompletedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CompletedLocalDateTime;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<SendInventoryEventDispensingDeviceEntity> _SendInventoryEventDispensingDeviceEntities;
		
		private EntityRef<SendInventoryEventTypeEntity> _SendInventoryEventTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnSequenceNumberChanging(long value);
    partial void OnSequenceNumberChanged();
    partial void OnSendInventoryEventTypeInternalCodeChanging(string value);
    partial void OnSendInventoryEventTypeInternalCodeChanged();
    partial void OnFacilityKeyChanging(System.Nullable<System.Guid> value);
    partial void OnFacilityKeyChanged();
    partial void OnItemTransactionTypeInternalCodeChanging(string value);
    partial void OnItemTransactionTypeInternalCodeChanged();
    partial void OnUserAccountKeyChanging(System.Nullable<System.Guid> value);
    partial void OnUserAccountKeyChanged();
    partial void OnCreatedUTCDateTimeChanging(System.DateTime value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.DateTime value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnCompletedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedUTCDateTimeChanged();
    partial void OnCompletedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedLocalDateTimeChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public SendInventoryEventEntity()
		{
			this._SendInventoryEventDispensingDeviceEntities = new EntitySet<SendInventoryEventDispensingDeviceEntity>(new Action<SendInventoryEventDispensingDeviceEntity>(this.attach_SendInventoryEventDispensingDeviceEntities), new Action<SendInventoryEventDispensingDeviceEntity>(this.detach_SendInventoryEventDispensingDeviceEntities));
			this._SendInventoryEventTypeEntity = default(EntityRef<SendInventoryEventTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SendInventoryEventKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this.OnSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._SequenceNumber = value;
					this.SendPropertyChanged("SequenceNumber");
					this.OnSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendInventoryEventTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SendInventoryEventTypeInternalCode
		{
			get
			{
				return this._SendInventoryEventTypeInternalCode;
			}
			set
			{
				if ((this._SendInventoryEventTypeInternalCode != value))
				{
					if (this._SendInventoryEventTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSendInventoryEventTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._SendInventoryEventTypeInternalCode = value;
					this.SendPropertyChanged("SendInventoryEventTypeInternalCode");
					this.OnSendInventoryEventTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionTypeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ItemTransactionTypeInternalCode
		{
			get
			{
				return this._ItemTransactionTypeInternalCode;
			}
			set
			{
				if ((this._ItemTransactionTypeInternalCode != value))
				{
					this.OnItemTransactionTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionTypeInternalCode = value;
					this.SendPropertyChanged("ItemTransactionTypeInternalCode");
					this.OnItemTransactionTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CompletedUTCDateTime
		{
			get
			{
				return this._CompletedUTCDateTime;
			}
			set
			{
				if ((this._CompletedUTCDateTime != value))
				{
					this.OnCompletedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CompletedUTCDateTime = value;
					this.SendPropertyChanged("CompletedUTCDateTime");
					this.OnCompletedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CompletedLocalDateTime
		{
			get
			{
				return this._CompletedLocalDateTime;
			}
			set
			{
				if ((this._CompletedLocalDateTime != value))
				{
					this.OnCompletedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CompletedLocalDateTime = value;
					this.SendPropertyChanged("CompletedLocalDateTime");
					this.OnCompletedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SendInventoryEventEntity_SendInventoryEventDispensingDeviceEntity", Storage="_SendInventoryEventDispensingDeviceEntities", ThisKey="Key", OtherKey="SendInventoryEventKey")]
		public EntitySet<SendInventoryEventDispensingDeviceEntity> SendInventoryEventDispensingDeviceEntities
		{
			get
			{
				return this._SendInventoryEventDispensingDeviceEntities;
			}
			set
			{
				this._SendInventoryEventDispensingDeviceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SendInventoryEventTypeEntity_SendInventoryEventEntity", Storage="_SendInventoryEventTypeEntity", ThisKey="SendInventoryEventTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public SendInventoryEventTypeEntity SendInventoryEventTypeEntity
		{
			get
			{
				return this._SendInventoryEventTypeEntity.Entity;
			}
			set
			{
				SendInventoryEventTypeEntity previousValue = this._SendInventoryEventTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._SendInventoryEventTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SendInventoryEventTypeEntity.Entity = null;
						previousValue.SendInventoryEventEntities.Remove(this);
					}
					this._SendInventoryEventTypeEntity.Entity = value;
					if ((value != null))
					{
						value.SendInventoryEventEntities.Add(this);
						this._SendInventoryEventTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._SendInventoryEventTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("SendInventoryEventTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SendInventoryEventDispensingDeviceEntities(SendInventoryEventDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.SendInventoryEventEntity = this;
		}
		
		private void detach_SendInventoryEventDispensingDeviceEntities(SendInventoryEventDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.SendInventoryEventEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Ext.SendInventoryEventDispensingDevice")]
	public partial class SendInventoryEventDispensingDeviceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _SendInventoryEventKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private string _SendInventoryFailureInternalCode;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<SendInventoryEventEntity> _SendInventoryEventEntity;
		
		private EntityRef<SendInventoryFailureEntity> _SendInventoryFailureEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnSendInventoryEventKeyChanging(System.Guid value);
    partial void OnSendInventoryEventKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnSendInventoryFailureInternalCodeChanging(string value);
    partial void OnSendInventoryFailureInternalCodeChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public SendInventoryEventDispensingDeviceEntity()
		{
			this._SendInventoryEventEntity = default(EntityRef<SendInventoryEventEntity>);
			this._SendInventoryFailureEntity = default(EntityRef<SendInventoryFailureEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SendInventoryEventDispensingDeviceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendInventoryEventKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid SendInventoryEventKey
		{
			get
			{
				return this._SendInventoryEventKey;
			}
			set
			{
				if ((this._SendInventoryEventKey != value))
				{
					if (this._SendInventoryEventEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSendInventoryEventKeyChanging(value);
					this.SendPropertyChanging();
					this._SendInventoryEventKey = value;
					this.SendPropertyChanged("SendInventoryEventKey");
					this.OnSendInventoryEventKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendInventoryFailureInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string SendInventoryFailureInternalCode
		{
			get
			{
				return this._SendInventoryFailureInternalCode;
			}
			set
			{
				if ((this._SendInventoryFailureInternalCode != value))
				{
					if (this._SendInventoryFailureEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSendInventoryFailureInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._SendInventoryFailureInternalCode = value;
					this.SendPropertyChanged("SendInventoryFailureInternalCode");
					this.OnSendInventoryFailureInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SendInventoryEventEntity_SendInventoryEventDispensingDeviceEntity", Storage="_SendInventoryEventEntity", ThisKey="SendInventoryEventKey", OtherKey="Key", IsForeignKey=true)]
		public SendInventoryEventEntity SendInventoryEventEntity
		{
			get
			{
				return this._SendInventoryEventEntity.Entity;
			}
			set
			{
				SendInventoryEventEntity previousValue = this._SendInventoryEventEntity.Entity;
				if (((previousValue != value) 
							|| (this._SendInventoryEventEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SendInventoryEventEntity.Entity = null;
						previousValue.SendInventoryEventDispensingDeviceEntities.Remove(this);
					}
					this._SendInventoryEventEntity.Entity = value;
					if ((value != null))
					{
						value.SendInventoryEventDispensingDeviceEntities.Add(this);
						this._SendInventoryEventKey = value.Key;
					}
					else
					{
						this._SendInventoryEventKey = default(System.Guid);
					}
					this.SendPropertyChanged("SendInventoryEventEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SendInventoryFailureEntity_SendInventoryEventDispensingDeviceEntity", Storage="_SendInventoryFailureEntity", ThisKey="SendInventoryFailureInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public SendInventoryFailureEntity SendInventoryFailureEntity
		{
			get
			{
				return this._SendInventoryFailureEntity.Entity;
			}
			set
			{
				SendInventoryFailureEntity previousValue = this._SendInventoryFailureEntity.Entity;
				if (((previousValue != value) 
							|| (this._SendInventoryFailureEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SendInventoryFailureEntity.Entity = null;
						previousValue.SendInventoryEventDispensingDeviceEntities.Remove(this);
					}
					this._SendInventoryFailureEntity.Entity = value;
					if ((value != null))
					{
						value.SendInventoryEventDispensingDeviceEntities.Add(this);
						this._SendInventoryFailureInternalCode = value.InternalCode;
					}
					else
					{
						this._SendInventoryFailureInternalCode = default(string);
					}
					this.SendPropertyChanged("SendInventoryFailureEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Ext.SendInventoryEventType")]
	public partial class SendInventoryEventTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<SendInventoryEventEntity> _SendInventoryEventEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public SendInventoryEventTypeEntity()
		{
			this._SendInventoryEventEntities = new EntitySet<SendInventoryEventEntity>(new Action<SendInventoryEventEntity>(this.attach_SendInventoryEventEntities), new Action<SendInventoryEventEntity>(this.detach_SendInventoryEventEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SendInventoryEventTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SendInventoryEventTypeEntity_SendInventoryEventEntity", Storage="_SendInventoryEventEntities", ThisKey="InternalCode", OtherKey="SendInventoryEventTypeInternalCode")]
		public EntitySet<SendInventoryEventEntity> SendInventoryEventEntities
		{
			get
			{
				return this._SendInventoryEventEntities;
			}
			set
			{
				this._SendInventoryEventEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SendInventoryEventEntities(SendInventoryEventEntity entity)
		{
			this.SendPropertyChanging();
			entity.SendInventoryEventTypeEntity = this;
		}
		
		private void detach_SendInventoryEventEntities(SendInventoryEventEntity entity)
		{
			this.SendPropertyChanging();
			entity.SendInventoryEventTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Ext.SendInventoryFailure")]
	public partial class SendInventoryFailureEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<SendInventoryEventDispensingDeviceEntity> _SendInventoryEventDispensingDeviceEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public SendInventoryFailureEntity()
		{
			this._SendInventoryEventDispensingDeviceEntities = new EntitySet<SendInventoryEventDispensingDeviceEntity>(new Action<SendInventoryEventDispensingDeviceEntity>(this.attach_SendInventoryEventDispensingDeviceEntities), new Action<SendInventoryEventDispensingDeviceEntity>(this.detach_SendInventoryEventDispensingDeviceEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SendInventoryFailureInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SendInventoryFailureEntity_SendInventoryEventDispensingDeviceEntity", Storage="_SendInventoryEventDispensingDeviceEntities", ThisKey="InternalCode", OtherKey="SendInventoryFailureInternalCode")]
		public EntitySet<SendInventoryEventDispensingDeviceEntity> SendInventoryEventDispensingDeviceEntities
		{
			get
			{
				return this._SendInventoryEventDispensingDeviceEntities;
			}
			set
			{
				this._SendInventoryEventDispensingDeviceEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SendInventoryEventDispensingDeviceEntities(SendInventoryEventDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.SendInventoryFailureEntity = this;
		}
		
		private void detach_SendInventoryEventDispensingDeviceEntities(SendInventoryEventDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.SendInventoryFailureEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Ext.NewItemIDEvent")]
	public partial class NewItemIDEventEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private long _SequenceNumber;
		
		private System.Guid _ExternalSystemKey;
		
		private System.Guid _ItemKey;
		
		private string _NewItemID;
		
		private System.DateTime _CreatedUTCDateTime;
		
		private System.DateTime _CreatedLocalDateTime;
		
		private System.Nullable<System.DateTime> _CompletedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CompletedLocalDateTime;
		
		private System.Nullable<System.Guid> _ActorKey;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnSequenceNumberChanging(long value);
    partial void OnSequenceNumberChanged();
    partial void OnExternalSystemKeyChanging(System.Guid value);
    partial void OnExternalSystemKeyChanged();
    partial void OnItemKeyChanging(System.Guid value);
    partial void OnItemKeyChanged();
    partial void OnNewItemIDChanging(string value);
    partial void OnNewItemIDChanged();
    partial void OnCreatedUTCDateTimeChanging(System.DateTime value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.DateTime value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnCompletedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedUTCDateTimeChanged();
    partial void OnCompletedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedLocalDateTimeChanged();
    partial void OnActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnActorKeyChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public NewItemIDEventEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="NewItemIDEventKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this.OnSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._SequenceNumber = value;
					this.SendPropertyChanged("SequenceNumber");
					this.OnSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewItemID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NewItemID
		{
			get
			{
				return this._NewItemID;
			}
			set
			{
				if ((this._NewItemID != value))
				{
					this.OnNewItemIDChanging(value);
					this.SendPropertyChanging();
					this._NewItemID = value;
					this.SendPropertyChanged("NewItemID");
					this.OnNewItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CompletedUTCDateTime
		{
			get
			{
				return this._CompletedUTCDateTime;
			}
			set
			{
				if ((this._CompletedUTCDateTime != value))
				{
					this.OnCompletedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CompletedUTCDateTime = value;
					this.SendPropertyChanged("CompletedUTCDateTime");
					this.OnCompletedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CompletedLocalDateTime
		{
			get
			{
				return this._CompletedLocalDateTime;
			}
			set
			{
				if ((this._CompletedLocalDateTime != value))
				{
					this.OnCompletedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CompletedLocalDateTime = value;
					this.SendPropertyChanged("CompletedLocalDateTime");
					this.OnCompletedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ActorKey
		{
			get
			{
				return this._ActorKey;
			}
			set
			{
				if ((this._ActorKey != value))
				{
					this.OnActorKeyChanging(value);
					this.SendPropertyChanging();
					this._ActorKey = value;
					this.SendPropertyChanged("ActorKey");
					this.OnActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Ext.EquivalencyChangeEvent")]
	public partial class EquivalencyChangeEventEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private long _SequenceNumber;
		
		private System.Guid _ItemKey;
		
		private System.DateTime _CreatedUTCDateTime;
		
		private System.DateTime _CreatedLocalDateTime;
		
		private System.Nullable<System.DateTime> _CompletedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CompletedLocalDateTime;
		
		private System.Nullable<System.Guid> _CreatedActorKey;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnSequenceNumberChanging(long value);
    partial void OnSequenceNumberChanged();
    partial void OnItemKeyChanging(System.Guid value);
    partial void OnItemKeyChanged();
    partial void OnCreatedUTCDateTimeChanging(System.DateTime value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.DateTime value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnCompletedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedUTCDateTimeChanged();
    partial void OnCompletedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedLocalDateTimeChanged();
    partial void OnCreatedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedActorKeyChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EquivalencyChangeEventEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EquivalencyChangeEventKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this.OnSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._SequenceNumber = value;
					this.SendPropertyChanged("SequenceNumber");
					this.OnSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CompletedUTCDateTime
		{
			get
			{
				return this._CompletedUTCDateTime;
			}
			set
			{
				if ((this._CompletedUTCDateTime != value))
				{
					this.OnCompletedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CompletedUTCDateTime = value;
					this.SendPropertyChanged("CompletedUTCDateTime");
					this.OnCompletedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CompletedLocalDateTime
		{
			get
			{
				return this._CompletedLocalDateTime;
			}
			set
			{
				if ((this._CompletedLocalDateTime != value))
				{
					this.OnCompletedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CompletedLocalDateTime = value;
					this.SendPropertyChanged("CompletedLocalDateTime");
					this.OnCompletedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CreatedActorKey
		{
			get
			{
				return this._CreatedActorKey;
			}
			set
			{
				if ((this._CreatedActorKey != value))
				{
					this.OnCreatedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedActorKey = value;
					this.SendPropertyChanged("CreatedActorKey");
					this.OnCreatedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
