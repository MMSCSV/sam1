#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CareFusion.Dispensing.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSServerOLTP")]
	internal partial class LocationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFacilityEntity(FacilityEntity instance);
    partial void UpdateFacilityEntity(FacilityEntity instance);
    partial void DeleteFacilityEntity(FacilityEntity instance);
    partial void InsertUnitEntity(UnitEntity instance);
    partial void UpdateUnitEntity(UnitEntity instance);
    partial void DeleteUnitEntity(UnitEntity instance);
    partial void InsertUnitRoomEntity(UnitRoomEntity instance);
    partial void UpdateUnitRoomEntity(UnitRoomEntity instance);
    partial void DeleteUnitRoomEntity(UnitRoomEntity instance);
    partial void InsertAreaEntity(AreaEntity instance);
    partial void UpdateAreaEntity(AreaEntity instance);
    partial void DeleteAreaEntity(AreaEntity instance);
    partial void InsertAreaDispensingDeviceEntity(AreaDispensingDeviceEntity instance);
    partial void UpdateAreaDispensingDeviceEntity(AreaDispensingDeviceEntity instance);
    partial void DeleteAreaDispensingDeviceEntity(AreaDispensingDeviceEntity instance);
    partial void InsertAreaUnitEntity(AreaUnitEntity instance);
    partial void UpdateAreaUnitEntity(AreaUnitEntity instance);
    partial void DeleteAreaUnitEntity(AreaUnitEntity instance);
    partial void InsertFacilityPatientSiloEntity(FacilityPatientSiloEntity instance);
    partial void UpdateFacilityPatientSiloEntity(FacilityPatientSiloEntity instance);
    partial void DeleteFacilityPatientSiloEntity(FacilityPatientSiloEntity instance);
    partial void InsertUserRoleAreaEntity(UserRoleAreaEntity instance);
    partial void UpdateUserRoleAreaEntity(UserRoleAreaEntity instance);
    partial void DeleteUserRoleAreaEntity(UserRoleAreaEntity instance);
    partial void InsertFacilityPatientSiloStatusEntity(FacilityPatientSiloStatusEntity instance);
    partial void UpdateFacilityPatientSiloStatusEntity(FacilityPatientSiloStatusEntity instance);
    partial void DeleteFacilityPatientSiloStatusEntity(FacilityPatientSiloStatusEntity instance);
    #endregion
		
		public LocationDataContext() : 
				base("Data Source=.;Initial Catalog=DSServerOLTP;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public LocationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LocationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LocationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LocationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FacilityEntity> FacilityEntities
		{
			get
			{
				return this.GetTable<FacilityEntity>();
			}
		}
		
		public System.Data.Linq.Table<UnitEntity> UnitEntities
		{
			get
			{
				return this.GetTable<UnitEntity>();
			}
		}
		
		public System.Data.Linq.Table<UnitRoomEntity> UnitRoomEntities
		{
			get
			{
				return this.GetTable<UnitRoomEntity>();
			}
		}
		
		public System.Data.Linq.Table<AreaEntity> AreaEntities
		{
			get
			{
				return this.GetTable<AreaEntity>();
			}
		}
		
		public System.Data.Linq.Table<AreaDispensingDeviceEntity> AreaDispensingDeviceEntities
		{
			get
			{
				return this.GetTable<AreaDispensingDeviceEntity>();
			}
		}
		
		public System.Data.Linq.Table<AreaUnitEntity> AreaUnitEntities
		{
			get
			{
				return this.GetTable<AreaUnitEntity>();
			}
		}
		
		public System.Data.Linq.Table<FacilityPatientSiloEntity> FacilityPatientSiloEntities
		{
			get
			{
				return this.GetTable<FacilityPatientSiloEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserRoleAreaEntity> UserRoleAreaEntities
		{
			get
			{
				return this.GetTable<UserRoleAreaEntity>();
			}
		}
		
		public System.Data.Linq.Table<FacilityPatientSiloStatusEntity> FacilityPatientSiloStatusEntities
		{
			get
			{
				return this.GetTable<FacilityPatientSiloStatusEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Location.vw_FacilityCurrent")]
	public partial class FacilityEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FacilitySnapshotKey;
		
		private string _LocationTypeInternalCode;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private string _FacilityCode;
		
		private string _FacilityName;
		
		private string _DescriptionText;
		
		private bool _ActiveFlag;
		
		private System.Nullable<short> _PatientReconciliationDefaultFilterDurationAmount;
		
		private short _TemporaryPatientDurationAmount;
		
		private short _ResendAfterTemporaryRemainsUnmergedDurationAmount;
		
		private string _StreetAddressText;
		
		private string _CityName;
		
		private string _SubdivisionName;
		
		private string _PostalCode;
		
		private string _CountryName;
		
		private string _NotesText;
		
		private string _SiteID;
		
		private string _TimeZoneID;
		
		private System.Nullable<System.Guid> _PharmacyInformationSystemKey;
		
		private short _MedTemporaryUserAccessDurationAmount;
		
		private bool _UseVisitorRolesInMedTemporaryUserAccessFlag;
		
		private System.Nullable<short> _TooCloseRemoveDurationAmount;
		
		private System.Nullable<short> _NoADTMessageReceivedDurationAmount;
		
		private System.Nullable<short> _NoPISMessageReceivedDurationAmount;
		
		private System.Nullable<short> _PISMessageProcessingBehindDurationAmount;
		
		private System.Nullable<short> _ADTMessageProcessingBehindDurationAmount;
		
		private string _BioIDFailoverInternalCode;
		
		private string _UserScanModeInternalCode;
		
		private bool _FreeFormReasonFlag;
		
		private bool _UseUnverifiedScanCodeFlag;
		
		private short _LateRemoveDurationAmount;
		
		private short _MedExpirationCheckDurationAmount;
		
		private bool _CriticalOverrideSchedulingFlag;
		
		private System.Nullable<short> _LeastRemovedDurationAmount;
		
		private bool _SelectAllForRemoveListFlag;
		
		private short _NoticeDiscrepancyDelayDurationAmount;
		
		private short _NoticeDeviceNotCommunicatingDelayDurationAmount;
		
		private bool _NoticeIncludeScheduledCriticalOverrideFlag;
		
		private short _NoticeETLDelayDurationAmount;
		
		private bool _DecreaseOrderedDoseFlag;
		
		private bool _OMNLToPrintEquivalenciesFlag;
		
		private string _TemporaryPatientNoIDText;
		
		private bool _DisplayEncounterIDFlag;
		
		private bool _DisplayAlternateEncounterIDFlag;
		
		private bool _DisplayAccountIDFlag;
		
		private System.Nullable<System.Guid> _DisplayPatientIDTypeKey;
		
		private bool _OptionalTemporaryEncounterIDFlag;
		
		private bool _OptionalTemporaryAlternateEncounterIDFlag;
		
		private bool _OptionalTemporaryAccountIDFlag;
		
		private System.Nullable<System.Guid> _OptionalTemporaryPatientIDTypeKey;
		
		private bool _RemoveMedLabelDisplayIDFlag;
		
		private bool _RemoveMedLabelEncounterIDFlag;
		
		private bool _RemoveMedLabelAlternateEncounterIDFlag;
		
		private bool _RemoveMedLabelAccountIDFlag;
		
		private System.Nullable<System.Guid> _RemoveMedLabelPatientIDTypeKey;
		
		private bool _RemoveMedLabelProductIDFlag;
		
		private string _NotReturnableMedMessageText;
		
		private bool _AllowSingleMultiDoseDispenseCancelFlag;
		
		private bool _RemoveOrderedItemWithoutDoseFlag;
		
		private bool _RemoteDispensingFlag;
		
		private bool _DeliveryFlag;
		
		private short _MedQueueDurationAmount;
		
		private short _MedQueueBeforeDueDurationAmount;
		
		private System.Nullable<short> _MedQueueBeforeOrderStartDurationAmount;
		
		private System.Nullable<short> _MedQueueAfterOrderExpiredDurationAmount;
		
		private short _MedQueueBeforeDueNowDurationAmount;
		
		private short _MedQueueAfterDueNowDurationAmount;
		
		private short _PreadmissionLeadDurationAmount;
		
		private short _PreadmissionProlongedInactivityDurationAmount;
		
		private short _AdmissionProlongedInactivityDurationAmount;
		
		private short _DischargeDelayDurationAmount;
		
		private short _TransferDelayDurationAmount;
		
		private short _LeaveOfAbsenceDelayDurationAmount;
		
		private System.Nullable<short> _MyItemsNotificationDurationAmount;
		
		private short _DeliveryStatusDisplayDurationAmount;
		
		private System.Nullable<short> _DiscontinueOrdersOnReadmitDurationAmount;
		
		private bool _PartialMuiltiComponentOrderRemoveFlag;
		
		private short _RxCheckDelayDurationAmount;
		
		private bool _IncreaseOrderedDoseFlag;
		
		private short _RxCheckExpirationDurationAmount;
		
		private bool _ExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlag;
		
		private bool _ExcludeRxCheckScanOnLoadRefillFlag;
		
		private string _JITMgmtURLID;
		
		private string _PharmogisticsURLID;
		
		private bool _AddFacilityNonMedItemOnlyFlag;
		
		private bool _DisablePendAssignOutdateTrackingFlag;
		
		private string _TruncatedAllergyCommentText;
		
		private string _TruncatedOrderCommentText;
		
		private bool _DispensingDeviceUserScanFlag;
		
		private bool _MatchByUserScanCodeFlag;
		
		private string _UserIDScanCodePrefixText;
		
		private string _UserIDScanCodeSuffixText;
		
		private string _OrderIDScanCodePrefixText;
		
		private System.Nullable<byte> _OrderIDScanCodeSuffixLengthQuantity;
		
		private string _OrderIDScanCodeSuffixText;
		
		private System.Nullable<byte> _OrderIDScanCodePrefixLengthQuantity;
		
		private System.Nullable<short> _RepickWaitDurationAmount;
		
		private bool _CUBIEESFlag;
		
		private bool _InsertUncheckedCUBIEFlag;
		
		private bool _CUBIEAnotherDestinationFlag;
		
		private bool _CardinalASSISTFlag;
		
		private bool _LongTermCareFlag;
		
		private bool _DispensingDeviceAllOrdersFlag;
		
		private bool _MixedDeviceTypeQueuingModeProfileFlag;
		
		private bool _RequestPharmacyOrderDoseFlag;
		
		private short _RequestPharmacyOrderDoseDurationAmount;
		
		private bool _RemoveMedLabelItemIDBarcodeFlag;
		
		private bool _RemovePatientIDBarcodeFlag;
		
		private string _SequentialDrainModeInternalCode;
		
		private bool _ExternalInventoryCountRequestFlag;
		
		private bool _ExternalRefillRequestFlag;
		
		private short _ExternalRefillRequestExpirationDurationAmount;
		
		private bool _UseEquivalenciesFlag;
		
		private bool _FacilitySpecificEquivalenciesFlag;
		
		private bool _AutoApprovePISItemFlag;
		
		private short _ReverseDischargeDurationAmount;
		
		private bool _ReverseDischargeFlag;
		
		private bool _MedSearchStringFlag;
		
		private byte _MedSearchStringLengthQuantity;
		
		private bool _MedSelectionOrderFlag;
		
		private bool _AllowPatientsToBeSearchedByLocationFlag;
		
		private bool _DefaultSortPatientsByLocationFlag;
		
		private short _UserAuthenticationRequestDuration2Amount;
		
		private bool _DisplayPatientPreferredNameOnRemoveLabelFlag;
		
		private bool _GCSMReceivePurchaseOrderRequiredFlag;
		
		private bool _GCSMLogisticsOrderingInterfaceSupportFlag;
		
		private bool _GCSMLogisticsReceiveInterfaceSupportFlag;
		
		private bool _GCSMCardinalAssistInterfaceSupportFlag;
		
		private System.Nullable<System.Guid> _GCSMDefaultOnReceiveDistributorKey;
		
		private bool _GCSMAllDeviceEventsReviewSignaturesFlag;
		
		private bool _GCSMPrintADMLabelFlag;
		
		private bool _GCSMPrintLabelByDispenseOrderFlag;
		
		private bool _GCSMShowInvoiceTypeFlag;
		
		private bool _GCSMDispenseMultiMedSheetReconciliationFlag;
		
		private bool _FirstSnapshotFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private bool _GCSMChangeEmptyDestructionBinQuantityFlag;
		
		private bool _GCSMAddItemFromCountDestructionBinFlag;
		
		private bool _GCSMAddItemFromEmptyDestructionBinFlag;
		
		private string _GCSMDestructionBinEmptyWithDiscrepancyModeInternalCode;
		
		private bool _DisablePyxisBarcodeScanOnLoadRefillFlag;
		
		private bool _PreventCardPINAuthenticationFailoverFlag;
		
		private string _RFIDFailoverInternalCode;
		
		private EntitySet<UnitEntity> _UnitEntities;
		
		private EntitySet<AreaEntity> _AreaEntities;
		
		private EntitySet<FacilityPatientSiloEntity> _FacilityPatientSiloEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFacilitySnapshotKeyChanging(System.Guid value);
    partial void OnFacilitySnapshotKeyChanged();
    partial void OnLocationTypeInternalCodeChanging(string value);
    partial void OnLocationTypeInternalCodeChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnFacilityCodeChanging(string value);
    partial void OnFacilityCodeChanged();
    partial void OnFacilityNameChanging(string value);
    partial void OnFacilityNameChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnPatientReconciliationDefaultFilterDurationAmountChanging(System.Nullable<short> value);
    partial void OnPatientReconciliationDefaultFilterDurationAmountChanged();
    partial void OnTemporaryPatientDurationAmountChanging(short value);
    partial void OnTemporaryPatientDurationAmountChanged();
    partial void OnResendAfterTemporaryRemainsUnmergedDurationAmountChanging(short value);
    partial void OnResendAfterTemporaryRemainsUnmergedDurationAmountChanged();
    partial void OnStreetAddressTextChanging(string value);
    partial void OnStreetAddressTextChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnSubdivisionNameChanging(string value);
    partial void OnSubdivisionNameChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnNotesTextChanging(string value);
    partial void OnNotesTextChanged();
    partial void OnSiteIDChanging(string value);
    partial void OnSiteIDChanged();
    partial void OnTimeZoneIDChanging(string value);
    partial void OnTimeZoneIDChanged();
    partial void OnPharmacyInformationSystemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyInformationSystemKeyChanged();
    partial void OnMedTemporaryUserAccessDurationAmountChanging(short value);
    partial void OnMedTemporaryUserAccessDurationAmountChanged();
    partial void OnUseVisitorRolesInMedTemporaryUserAccessFlagChanging(bool value);
    partial void OnUseVisitorRolesInMedTemporaryUserAccessFlagChanged();
    partial void OnTooCloseRemoveDurationAmountChanging(System.Nullable<short> value);
    partial void OnTooCloseRemoveDurationAmountChanged();
    partial void OnNoADTMessageReceivedDurationAmountChanging(System.Nullable<short> value);
    partial void OnNoADTMessageReceivedDurationAmountChanged();
    partial void OnNoPISMessageReceivedDurationAmountChanging(System.Nullable<short> value);
    partial void OnNoPISMessageReceivedDurationAmountChanged();
    partial void OnPISMessageProcessingBehindDurationAmountChanging(System.Nullable<short> value);
    partial void OnPISMessageProcessingBehindDurationAmountChanged();
    partial void OnADTMessageProcessingBehindDurationAmountChanging(System.Nullable<short> value);
    partial void OnADTMessageProcessingBehindDurationAmountChanged();
    partial void OnBioIDFailoverInternalCodeChanging(string value);
    partial void OnBioIDFailoverInternalCodeChanged();
    partial void OnUserScanModeInternalCodeChanging(string value);
    partial void OnUserScanModeInternalCodeChanged();
    partial void OnFreeFormReasonFlagChanging(bool value);
    partial void OnFreeFormReasonFlagChanged();
    partial void OnUseUnverifiedScanCodeFlagChanging(bool value);
    partial void OnUseUnverifiedScanCodeFlagChanged();
    partial void OnLateRemoveDurationAmountChanging(short value);
    partial void OnLateRemoveDurationAmountChanged();
    partial void OnMedExpirationCheckDurationAmountChanging(short value);
    partial void OnMedExpirationCheckDurationAmountChanged();
    partial void OnCriticalOverrideSchedulingFlagChanging(bool value);
    partial void OnCriticalOverrideSchedulingFlagChanged();
    partial void OnLeastRemovedDurationAmountChanging(System.Nullable<short> value);
    partial void OnLeastRemovedDurationAmountChanged();
    partial void OnSelectAllForRemoveListFlagChanging(bool value);
    partial void OnSelectAllForRemoveListFlagChanged();
    partial void OnNoticeDiscrepancyDelayDurationAmountChanging(short value);
    partial void OnNoticeDiscrepancyDelayDurationAmountChanged();
    partial void OnNoticeDeviceNotCommunicatingDelayDurationAmountChanging(short value);
    partial void OnNoticeDeviceNotCommunicatingDelayDurationAmountChanged();
    partial void OnNoticeIncludeScheduledCriticalOverrideFlagChanging(bool value);
    partial void OnNoticeIncludeScheduledCriticalOverrideFlagChanged();
    partial void OnNoticeETLDelayDurationAmountChanging(short value);
    partial void OnNoticeETLDelayDurationAmountChanged();
    partial void OnDecreaseOrderedDoseFlagChanging(bool value);
    partial void OnDecreaseOrderedDoseFlagChanged();
    partial void OnOMNLToPrintEquivalenciesFlagChanging(bool value);
    partial void OnOMNLToPrintEquivalenciesFlagChanged();
    partial void OnTemporaryPatientNoIDTextChanging(string value);
    partial void OnTemporaryPatientNoIDTextChanged();
    partial void OnDisplayEncounterIDFlagChanging(bool value);
    partial void OnDisplayEncounterIDFlagChanged();
    partial void OnDisplayAlternateEncounterIDFlagChanging(bool value);
    partial void OnDisplayAlternateEncounterIDFlagChanged();
    partial void OnDisplayAccountIDFlagChanging(bool value);
    partial void OnDisplayAccountIDFlagChanged();
    partial void OnDisplayPatientIDTypeKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDisplayPatientIDTypeKeyChanged();
    partial void OnOptionalTemporaryEncounterIDFlagChanging(bool value);
    partial void OnOptionalTemporaryEncounterIDFlagChanged();
    partial void OnOptionalTemporaryAlternateEncounterIDFlagChanging(bool value);
    partial void OnOptionalTemporaryAlternateEncounterIDFlagChanged();
    partial void OnOptionalTemporaryAccountIDFlagChanging(bool value);
    partial void OnOptionalTemporaryAccountIDFlagChanged();
    partial void OnOptionalTemporaryPatientIDTypeKeyChanging(System.Nullable<System.Guid> value);
    partial void OnOptionalTemporaryPatientIDTypeKeyChanged();
    partial void OnRemoveMedLabelDisplayIDFlagChanging(bool value);
    partial void OnRemoveMedLabelDisplayIDFlagChanged();
    partial void OnRemoveMedLabelEncounterIDFlagChanging(bool value);
    partial void OnRemoveMedLabelEncounterIDFlagChanged();
    partial void OnRemoveMedLabelAlternateEncounterIDFlagChanging(bool value);
    partial void OnRemoveMedLabelAlternateEncounterIDFlagChanged();
    partial void OnRemoveMedLabelAccountIDFlagChanging(bool value);
    partial void OnRemoveMedLabelAccountIDFlagChanged();
    partial void OnRemoveMedLabelPatientIDTypeKeyChanging(System.Nullable<System.Guid> value);
    partial void OnRemoveMedLabelPatientIDTypeKeyChanged();
    partial void OnRemoveMedLabelProductIDFlagChanging(bool value);
    partial void OnRemoveMedLabelProductIDFlagChanged();
    partial void OnNotReturnableMedMessageTextChanging(string value);
    partial void OnNotReturnableMedMessageTextChanged();
    partial void OnAllowSingleMultiDoseDispenseCancelFlagChanging(bool value);
    partial void OnAllowSingleMultiDoseDispenseCancelFlagChanged();
    partial void OnRemoveOrderedItemWithoutDoseFlagChanging(bool value);
    partial void OnRemoveOrderedItemWithoutDoseFlagChanged();
    partial void OnRemoteDispensingFlagChanging(bool value);
    partial void OnRemoteDispensingFlagChanged();
    partial void OnDeliveryFlagChanging(bool value);
    partial void OnDeliveryFlagChanged();
    partial void OnMedQueueDurationAmountChanging(short value);
    partial void OnMedQueueDurationAmountChanged();
    partial void OnMedQueueBeforeDueDurationAmountChanging(short value);
    partial void OnMedQueueBeforeDueDurationAmountChanged();
    partial void OnMedQueueBeforeOrderStartDurationAmountChanging(System.Nullable<short> value);
    partial void OnMedQueueBeforeOrderStartDurationAmountChanged();
    partial void OnMedQueueAfterOrderExpiredDurationAmountChanging(System.Nullable<short> value);
    partial void OnMedQueueAfterOrderExpiredDurationAmountChanged();
    partial void OnMedQueueBeforeDueNowDurationAmountChanging(short value);
    partial void OnMedQueueBeforeDueNowDurationAmountChanged();
    partial void OnMedQueueAfterDueNowDurationAmountChanging(short value);
    partial void OnMedQueueAfterDueNowDurationAmountChanged();
    partial void OnPreadmissionLeadDurationAmountChanging(short value);
    partial void OnPreadmissionLeadDurationAmountChanged();
    partial void OnPreadmissionProlongedInactivityDurationAmountChanging(short value);
    partial void OnPreadmissionProlongedInactivityDurationAmountChanged();
    partial void OnAdmissionProlongedInactivityDurationAmountChanging(short value);
    partial void OnAdmissionProlongedInactivityDurationAmountChanged();
    partial void OnDischargeDelayDurationAmountChanging(short value);
    partial void OnDischargeDelayDurationAmountChanged();
    partial void OnTransferDelayDurationAmountChanging(short value);
    partial void OnTransferDelayDurationAmountChanged();
    partial void OnLeaveOfAbsenceDelayDurationAmountChanging(short value);
    partial void OnLeaveOfAbsenceDelayDurationAmountChanged();
    partial void OnMyItemsNotificationDurationAmountChanging(System.Nullable<short> value);
    partial void OnMyItemsNotificationDurationAmountChanged();
    partial void OnDeliveryStatusDisplayDurationAmountChanging(short value);
    partial void OnDeliveryStatusDisplayDurationAmountChanged();
    partial void OnDiscontinueOrdersOnReadmitDurationAmountChanging(System.Nullable<short> value);
    partial void OnDiscontinueOrdersOnReadmitDurationAmountChanged();
    partial void OnPartialMultiComponentOrderRemoveFlagChanging(bool value);
    partial void OnPartialMultiComponentOrderRemoveFlagChanged();
    partial void OnRxCheckDelayDurationAmountChanging(short value);
    partial void OnRxCheckDelayDurationAmountChanged();
    partial void OnIncreaseOrderedDoseFlagChanging(bool value);
    partial void OnIncreaseOrderedDoseFlagChanged();
    partial void OnRxCheckExpirationDurationAmountChanging(short value);
    partial void OnRxCheckExpirationDurationAmountChanged();
    partial void OnExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlagChanging(bool value);
    partial void OnExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlagChanged();
    partial void OnExcludeRxCheckScanOnLoadRefillFlagChanging(bool value);
    partial void OnExcludeRxCheckScanOnLoadRefillFlagChanged();
    partial void OnJITMgmtURLIDChanging(string value);
    partial void OnJITMgmtURLIDChanged();
    partial void OnPharmogisticsURLIDChanging(string value);
    partial void OnPharmogisticsURLIDChanged();
    partial void OnAddFacilityNonMedItemOnlyFlagChanging(bool value);
    partial void OnAddFacilityNonMedItemOnlyFlagChanged();
    partial void OnDisablePendAssignOutdateTrackingFlagChanging(bool value);
    partial void OnDisablePendAssignOutdateTrackingFlagChanged();
    partial void OnTruncatedAllergyCommentTextChanging(string value);
    partial void OnTruncatedAllergyCommentTextChanged();
    partial void OnTruncatedOrderCommentTextChanging(string value);
    partial void OnTruncatedOrderCommentTextChanged();
    partial void OnDispensingDeviceUserScanFlagChanging(bool value);
    partial void OnDispensingDeviceUserScanFlagChanged();
    partial void OnMatchByUserScanCodeFlagChanging(bool value);
    partial void OnMatchByUserScanCodeFlagChanged();
    partial void OnUserIDScanCodePrefixTextChanging(string value);
    partial void OnUserIDScanCodePrefixTextChanged();
    partial void OnUserIDScanCodeSuffixTextChanging(string value);
    partial void OnUserIDScanCodeSuffixTextChanged();
    partial void OnOrderIDScanCodePrefixTextChanging(string value);
    partial void OnOrderIDScanCodePrefixTextChanged();
    partial void OnOrderIDScanCodeSuffixLengthQuantityChanging(System.Nullable<byte> value);
    partial void OnOrderIDScanCodeSuffixLengthQuantityChanged();
    partial void OnOrderIDScanCodeSuffixTextChanging(string value);
    partial void OnOrderIDScanCodeSuffixTextChanged();
    partial void OnOrderIDScanCodePrefixLengthQuantityChanging(System.Nullable<byte> value);
    partial void OnOrderIDScanCodePrefixLengthQuantityChanged();
    partial void OnRepickWaitDurationAmountChanging(System.Nullable<short> value);
    partial void OnRepickWaitDurationAmountChanged();
    partial void OnCUBIEESFlagChanging(bool value);
    partial void OnCUBIEESFlagChanged();
    partial void OnInsertUncheckedCUBIEFlagChanging(bool value);
    partial void OnInsertUncheckedCUBIEFlagChanged();
    partial void OnCUBIEAnotherDestinationFlagChanging(bool value);
    partial void OnCUBIEAnotherDestinationFlagChanged();
    partial void OnCardinalASSISTFlagChanging(bool value);
    partial void OnCardinalASSISTFlagChanged();
    partial void OnLongTermCareFlagChanging(bool value);
    partial void OnLongTermCareFlagChanged();
    partial void OnDispensingDeviceAllOrdersFlagChanging(bool value);
    partial void OnDispensingDeviceAllOrdersFlagChanged();
    partial void OnMixedDeviceTypeQueuingModeProfileFlagChanging(bool value);
    partial void OnMixedDeviceTypeQueuingModeProfileFlagChanged();
    partial void OnRequestPharmacyOrderDoseFlagChanging(bool value);
    partial void OnRequestPharmacyOrderDoseFlagChanged();
    partial void OnRequestPharmacyOrderDoseDurationAmountChanging(short value);
    partial void OnRequestPharmacyOrderDoseDurationAmountChanged();
    partial void OnRemoveMedLabelItemIDBarcodeFlagChanging(bool value);
    partial void OnRemoveMedLabelItemIDBarcodeFlagChanged();
    partial void OnRemovePatientIDBarcodeFlagChanging(bool value);
    partial void OnRemovePatientIDBarcodeFlagChanged();
    partial void OnSequentialDrainModeInternalCodeChanging(string value);
    partial void OnSequentialDrainModeInternalCodeChanged();
    partial void OnExternalInventoryCountRequestFlagChanging(bool value);
    partial void OnExternalInventoryCountRequestFlagChanged();
    partial void OnExternalRefillRequestFlagChanging(bool value);
    partial void OnExternalRefillRequestFlagChanged();
    partial void OnExternalRefillRequestExpirationDurationAmountChanging(short value);
    partial void OnExternalRefillRequestExpirationDurationAmountChanged();
    partial void OnUseEquivalenciesFlagChanging(bool value);
    partial void OnUseEquivalenciesFlagChanged();
    partial void OnFacilitySpecificEquivalenciesFlagChanging(bool value);
    partial void OnFacilitySpecificEquivalenciesFlagChanged();
    partial void OnAutoApprovePISItemFlagChanging(bool value);
    partial void OnAutoApprovePISItemFlagChanged();
    partial void OnReverseDischargeDurationAmountChanging(short value);
    partial void OnReverseDischargeDurationAmountChanged();
    partial void OnReverseDischargeFlagChanging(bool value);
    partial void OnReverseDischargeFlagChanged();
    partial void OnMedSearchStringFlagChanging(bool value);
    partial void OnMedSearchStringFlagChanged();
    partial void OnMedSearchStringLengthQuantityChanging(byte value);
    partial void OnMedSearchStringLengthQuantityChanged();
    partial void OnMedSelectionOrderFlagChanging(bool value);
    partial void OnMedSelectionOrderFlagChanged();
    partial void OnAllowPatientsToBeSearchedByLocationFlagChanging(bool value);
    partial void OnAllowPatientsToBeSearchedByLocationFlagChanged();
    partial void OnDefaultSortPatientsByLocationFlagChanging(bool value);
    partial void OnDefaultSortPatientsByLocationFlagChanged();
    partial void OnUserAuthenticationRequestDuration2AmountChanging(short value);
    partial void OnUserAuthenticationRequestDuration2AmountChanged();
    partial void OnDisplayPatientPreferredNameOnRemoveLabelFlagChanging(bool value);
    partial void OnDisplayPatientPreferredNameOnRemoveLabelFlagChanged();
    partial void OnGCSMReceivePurchaseOrderRequiredFlagChanging(bool value);
    partial void OnGCSMReceivePurchaseOrderRequiredFlagChanged();
    partial void OnGCSMLogisticsOrderingInterfaceSupportFlagChanging(bool value);
    partial void OnGCSMLogisticsOrderingInterfaceSupportFlagChanged();
    partial void OnGCSMLogisticsReceiveInterfaceSupportFlagChanging(bool value);
    partial void OnGCSMLogisticsReceiveInterfaceSupportFlagChanged();
    partial void OnGCSMCardinalAssistInterfaceSupportFlagChanging(bool value);
    partial void OnGCSMCardinalAssistInterfaceSupportFlagChanged();
    partial void OnGCSMDefaultOnReceiveDistributorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnGCSMDefaultOnReceiveDistributorKeyChanged();
    partial void OnGCSMAllDeviceEventsReviewSignaturesFlagChanging(bool value);
    partial void OnGCSMAllDeviceEventsReviewSignaturesFlagChanged();
    partial void OnGCSMPrintADMLabelFlagChanging(bool value);
    partial void OnGCSMPrintADMLabelFlagChanged();
    partial void OnGCSMPrintLabelByDispenseOrderFlagChanging(bool value);
    partial void OnGCSMPrintLabelByDispenseOrderFlagChanged();
    partial void OnGCSMShowInvoiceTypeFlagChanging(bool value);
    partial void OnGCSMShowInvoiceTypeFlagChanged();
    partial void OnGCSMDispenseMultiMedSheetReconciliationFlagChanging(bool value);
    partial void OnGCSMDispenseMultiMedSheetReconciliationFlagChanged();
    partial void OnFirstSnapshotFlagChanging(bool value);
    partial void OnFirstSnapshotFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnGCSMChangeEmptyDestructionBinQuantityFlagChanging(bool value);
    partial void OnGCSMChangeEmptyDestructionBinQuantityFlagChanged();
    partial void OnGCSMAddItemFromCountDestructionBinFlagChanging(bool value);
    partial void OnGCSMAddItemFromCountDestructionBinFlagChanged();
    partial void OnGCSMAddItemFromEmptyDestructionBinFlagChanging(bool value);
    partial void OnGCSMAddItemFromEmptyDestructionBinFlagChanged();
    partial void OnGCSMDestructionBinEmptyWithDiscrepancyModeInternalCodeChanging(string value);
    partial void OnGCSMDestructionBinEmptyWithDiscrepancyModeInternalCodeChanged();
    partial void OnDisablePyxisBarcodeScanOnLoadRefillFlagChanging(bool value);
    partial void OnDisablePyxisBarcodeScanOnLoadRefillFlagChanged();
    partial void OnPreventCardPINAuthenticationFailoverFlagChanging(bool value);
    partial void OnPreventCardPINAuthenticationFailoverFlagChanged();
    partial void OnRFIDFailoverInternalCodeChanging(string value);
    partial void OnRFIDFailoverInternalCodeChanged();
    #endregion
		
		public FacilityEntity()
		{
			this._UnitEntities = new EntitySet<UnitEntity>(new Action<UnitEntity>(this.attach_UnitEntities), new Action<UnitEntity>(this.detach_UnitEntities));
			this._AreaEntities = new EntitySet<AreaEntity>(new Action<AreaEntity>(this.attach_AreaEntities), new Action<AreaEntity>(this.detach_AreaEntities));
			this._FacilityPatientSiloEntities = new EntitySet<FacilityPatientSiloEntity>(new Action<FacilityPatientSiloEntity>(this.attach_FacilityPatientSiloEntities), new Action<FacilityPatientSiloEntity>(this.detach_FacilityPatientSiloEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FacilityKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitySnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilitySnapshotKey
		{
			get
			{
				return this._FacilitySnapshotKey;
			}
			set
			{
				if ((this._FacilitySnapshotKey != value))
				{
					this.OnFacilitySnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilitySnapshotKey = value;
					this.SendPropertyChanged("FacilitySnapshotKey");
					this.OnFacilitySnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LocationTypeInternalCode
		{
			get
			{
				return this._LocationTypeInternalCode;
			}
			set
			{
				if ((this._LocationTypeInternalCode != value))
				{
					this.OnLocationTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationTypeInternalCode = value;
					this.SendPropertyChanged("LocationTypeInternalCode");
					this.OnLocationTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FacilityCode
		{
			get
			{
				return this._FacilityCode;
			}
			set
			{
				if ((this._FacilityCode != value))
				{
					this.OnFacilityCodeChanging(value);
					this.SendPropertyChanging();
					this._FacilityCode = value;
					this.SendPropertyChanged("FacilityCode");
					this.OnFacilityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this.OnFacilityNameChanging(value);
					this.SendPropertyChanging();
					this._FacilityName = value;
					this.SendPropertyChanged("FacilityName");
					this.OnFacilityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientReconciliationDefaultFilterDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> PatientReconciliationDefaultFilterDurationAmount
		{
			get
			{
				return this._PatientReconciliationDefaultFilterDurationAmount;
			}
			set
			{
				if ((this._PatientReconciliationDefaultFilterDurationAmount != value))
				{
					this.OnPatientReconciliationDefaultFilterDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._PatientReconciliationDefaultFilterDurationAmount = value;
					this.SendPropertyChanged("PatientReconciliationDefaultFilterDurationAmount");
					this.OnPatientReconciliationDefaultFilterDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryPatientDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short TemporaryPatientDurationAmount
		{
			get
			{
				return this._TemporaryPatientDurationAmount;
			}
			set
			{
				if ((this._TemporaryPatientDurationAmount != value))
				{
					this.OnTemporaryPatientDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._TemporaryPatientDurationAmount = value;
					this.SendPropertyChanged("TemporaryPatientDurationAmount");
					this.OnTemporaryPatientDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResendAfterTemporaryRemainsUnmergedDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short ResendAfterTemporaryRemainsUnmergedDurationAmount
		{
			get
			{
				return this._ResendAfterTemporaryRemainsUnmergedDurationAmount;
			}
			set
			{
				if ((this._ResendAfterTemporaryRemainsUnmergedDurationAmount != value))
				{
					this.OnResendAfterTemporaryRemainsUnmergedDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._ResendAfterTemporaryRemainsUnmergedDurationAmount = value;
					this.SendPropertyChanged("ResendAfterTemporaryRemainsUnmergedDurationAmount");
					this.OnResendAfterTemporaryRemainsUnmergedDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddressText", DbType="NVarChar(120)", UpdateCheck=UpdateCheck.Never)]
		public string StreetAddressText
		{
			get
			{
				return this._StreetAddressText;
			}
			set
			{
				if ((this._StreetAddressText != value))
				{
					this.OnStreetAddressTextChanging(value);
					this.SendPropertyChanging();
					this._StreetAddressText = value;
					this.SendPropertyChanged("StreetAddressText");
					this.OnStreetAddressTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubdivisionName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SubdivisionName
		{
			get
			{
				return this._SubdivisionName;
			}
			set
			{
				if ((this._SubdivisionName != value))
				{
					this.OnSubdivisionNameChanging(value);
					this.SendPropertyChanging();
					this._SubdivisionName = value;
					this.SendPropertyChanged("SubdivisionName");
					this.OnSubdivisionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotesText", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string NotesText
		{
			get
			{
				return this._NotesText;
			}
			set
			{
				if ((this._NotesText != value))
				{
					this.OnNotesTextChanging(value);
					this.SendPropertyChanging();
					this._NotesText = value;
					this.SendPropertyChanged("NotesText");
					this.OnNotesTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneID", DbType="VarChar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TimeZoneID
		{
			get
			{
				return this._TimeZoneID;
			}
			set
			{
				if ((this._TimeZoneID != value))
				{
					this.OnTimeZoneIDChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneID = value;
					this.SendPropertyChanged("TimeZoneID");
					this.OnTimeZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyInformationSystemKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyInformationSystemKey
		{
			get
			{
				return this._PharmacyInformationSystemKey;
			}
			set
			{
				if ((this._PharmacyInformationSystemKey != value))
				{
					this.OnPharmacyInformationSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyInformationSystemKey = value;
					this.SendPropertyChanged("PharmacyInformationSystemKey");
					this.OnPharmacyInformationSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedTemporaryUserAccessDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short MedTemporaryUserAccessDurationAmount
		{
			get
			{
				return this._MedTemporaryUserAccessDurationAmount;
			}
			set
			{
				if ((this._MedTemporaryUserAccessDurationAmount != value))
				{
					this.OnMedTemporaryUserAccessDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._MedTemporaryUserAccessDurationAmount = value;
					this.SendPropertyChanged("MedTemporaryUserAccessDurationAmount");
					this.OnMedTemporaryUserAccessDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseVisitorRolesInMedTemporaryUserAccessFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool UseVisitorRolesInMedTemporaryUserAccessFlag
		{
			get
			{
				return this._UseVisitorRolesInMedTemporaryUserAccessFlag;
			}
			set
			{
				if ((this._UseVisitorRolesInMedTemporaryUserAccessFlag != value))
				{
					this.OnUseVisitorRolesInMedTemporaryUserAccessFlagChanging(value);
					this.SendPropertyChanging();
					this._UseVisitorRolesInMedTemporaryUserAccessFlag = value;
					this.SendPropertyChanged("UseVisitorRolesInMedTemporaryUserAccessFlag");
					this.OnUseVisitorRolesInMedTemporaryUserAccessFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseRemoveDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TooCloseRemoveDurationAmount
		{
			get
			{
				return this._TooCloseRemoveDurationAmount;
			}
			set
			{
				if ((this._TooCloseRemoveDurationAmount != value))
				{
					this.OnTooCloseRemoveDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._TooCloseRemoveDurationAmount = value;
					this.SendPropertyChanged("TooCloseRemoveDurationAmount");
					this.OnTooCloseRemoveDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoADTMessageReceivedDurationAmount", DbType="SmallInt")]
		public System.Nullable<short> NoADTMessageReceivedDurationAmount
		{
			get
			{
				return this._NoADTMessageReceivedDurationAmount;
			}
			set
			{
				if ((this._NoADTMessageReceivedDurationAmount != value))
				{
					this.OnNoADTMessageReceivedDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._NoADTMessageReceivedDurationAmount = value;
					this.SendPropertyChanged("NoADTMessageReceivedDurationAmount");
					this.OnNoADTMessageReceivedDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoPISMessageReceivedDurationAmount", DbType="SmallInt")]
		public System.Nullable<short> NoPISMessageReceivedDurationAmount
		{
			get
			{
				return this._NoPISMessageReceivedDurationAmount;
			}
			set
			{
				if ((this._NoPISMessageReceivedDurationAmount != value))
				{
					this.OnNoPISMessageReceivedDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._NoPISMessageReceivedDurationAmount = value;
					this.SendPropertyChanged("NoPISMessageReceivedDurationAmount");
					this.OnNoPISMessageReceivedDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PISMessageProcessingBehindDurationAmount", DbType="SmallInt")]
		public System.Nullable<short> PISMessageProcessingBehindDurationAmount
		{
			get
			{
				return this._PISMessageProcessingBehindDurationAmount;
			}
			set
			{
				if ((this._PISMessageProcessingBehindDurationAmount != value))
				{
					this.OnPISMessageProcessingBehindDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._PISMessageProcessingBehindDurationAmount = value;
					this.SendPropertyChanged("PISMessageProcessingBehindDurationAmount");
					this.OnPISMessageProcessingBehindDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADTMessageProcessingBehindDurationAmount", DbType="SmallInt")]
		public System.Nullable<short> ADTMessageProcessingBehindDurationAmount
		{
			get
			{
				return this._ADTMessageProcessingBehindDurationAmount;
			}
			set
			{
				if ((this._ADTMessageProcessingBehindDurationAmount != value))
				{
					this.OnADTMessageProcessingBehindDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._ADTMessageProcessingBehindDurationAmount = value;
					this.SendPropertyChanged("ADTMessageProcessingBehindDurationAmount");
					this.OnADTMessageProcessingBehindDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BioIDFailoverInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BioIDFailoverInternalCode
		{
			get
			{
				return this._BioIDFailoverInternalCode;
			}
			set
			{
				if ((this._BioIDFailoverInternalCode != value))
				{
					this.OnBioIDFailoverInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._BioIDFailoverInternalCode = value;
					this.SendPropertyChanged("BioIDFailoverInternalCode");
					this.OnBioIDFailoverInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserScanModeInternalCode", DbType="VarChar(10)")]
		public string UserScanModeInternalCode
		{
			get
			{
				return this._UserScanModeInternalCode;
			}
			set
			{
				if ((this._UserScanModeInternalCode != value))
				{
					this.OnUserScanModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._UserScanModeInternalCode = value;
					this.SendPropertyChanged("UserScanModeInternalCode");
					this.OnUserScanModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeFormReasonFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FreeFormReasonFlag
		{
			get
			{
				return this._FreeFormReasonFlag;
			}
			set
			{
				if ((this._FreeFormReasonFlag != value))
				{
					this.OnFreeFormReasonFlagChanging(value);
					this.SendPropertyChanging();
					this._FreeFormReasonFlag = value;
					this.SendPropertyChanged("FreeFormReasonFlag");
					this.OnFreeFormReasonFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseUnverifiedScanCodeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool UseUnverifiedScanCodeFlag
		{
			get
			{
				return this._UseUnverifiedScanCodeFlag;
			}
			set
			{
				if ((this._UseUnverifiedScanCodeFlag != value))
				{
					this.OnUseUnverifiedScanCodeFlagChanging(value);
					this.SendPropertyChanging();
					this._UseUnverifiedScanCodeFlag = value;
					this.SendPropertyChanged("UseUnverifiedScanCodeFlag");
					this.OnUseUnverifiedScanCodeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateRemoveDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short LateRemoveDurationAmount
		{
			get
			{
				return this._LateRemoveDurationAmount;
			}
			set
			{
				if ((this._LateRemoveDurationAmount != value))
				{
					this.OnLateRemoveDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._LateRemoveDurationAmount = value;
					this.SendPropertyChanged("LateRemoveDurationAmount");
					this.OnLateRemoveDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedExpirationCheckDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short MedExpirationCheckDurationAmount
		{
			get
			{
				return this._MedExpirationCheckDurationAmount;
			}
			set
			{
				if ((this._MedExpirationCheckDurationAmount != value))
				{
					this.OnMedExpirationCheckDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._MedExpirationCheckDurationAmount = value;
					this.SendPropertyChanged("MedExpirationCheckDurationAmount");
					this.OnMedExpirationCheckDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalOverrideSchedulingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CriticalOverrideSchedulingFlag
		{
			get
			{
				return this._CriticalOverrideSchedulingFlag;
			}
			set
			{
				if ((this._CriticalOverrideSchedulingFlag != value))
				{
					this.OnCriticalOverrideSchedulingFlagChanging(value);
					this.SendPropertyChanging();
					this._CriticalOverrideSchedulingFlag = value;
					this.SendPropertyChanged("CriticalOverrideSchedulingFlag");
					this.OnCriticalOverrideSchedulingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeastRemovedDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> LeastRemovedDurationAmount
		{
			get
			{
				return this._LeastRemovedDurationAmount;
			}
			set
			{
				if ((this._LeastRemovedDurationAmount != value))
				{
					this.OnLeastRemovedDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._LeastRemovedDurationAmount = value;
					this.SendPropertyChanged("LeastRemovedDurationAmount");
					this.OnLeastRemovedDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectAllForRemoveListFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SelectAllForRemoveListFlag
		{
			get
			{
				return this._SelectAllForRemoveListFlag;
			}
			set
			{
				if ((this._SelectAllForRemoveListFlag != value))
				{
					this.OnSelectAllForRemoveListFlagChanging(value);
					this.SendPropertyChanging();
					this._SelectAllForRemoveListFlag = value;
					this.SendPropertyChanged("SelectAllForRemoveListFlag");
					this.OnSelectAllForRemoveListFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeDiscrepancyDelayDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short NoticeDiscrepancyDelayDurationAmount
		{
			get
			{
				return this._NoticeDiscrepancyDelayDurationAmount;
			}
			set
			{
				if ((this._NoticeDiscrepancyDelayDurationAmount != value))
				{
					this.OnNoticeDiscrepancyDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._NoticeDiscrepancyDelayDurationAmount = value;
					this.SendPropertyChanged("NoticeDiscrepancyDelayDurationAmount");
					this.OnNoticeDiscrepancyDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeDeviceNotCommunicatingDelayDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short NoticeDeviceNotCommunicatingDelayDurationAmount
		{
			get
			{
				return this._NoticeDeviceNotCommunicatingDelayDurationAmount;
			}
			set
			{
				if ((this._NoticeDeviceNotCommunicatingDelayDurationAmount != value))
				{
					this.OnNoticeDeviceNotCommunicatingDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._NoticeDeviceNotCommunicatingDelayDurationAmount = value;
					this.SendPropertyChanged("NoticeDeviceNotCommunicatingDelayDurationAmount");
					this.OnNoticeDeviceNotCommunicatingDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeIncludeScheduledCriticalOverrideFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool NoticeIncludeScheduledCriticalOverrideFlag
		{
			get
			{
				return this._NoticeIncludeScheduledCriticalOverrideFlag;
			}
			set
			{
				if ((this._NoticeIncludeScheduledCriticalOverrideFlag != value))
				{
					this.OnNoticeIncludeScheduledCriticalOverrideFlagChanging(value);
					this.SendPropertyChanging();
					this._NoticeIncludeScheduledCriticalOverrideFlag = value;
					this.SendPropertyChanged("NoticeIncludeScheduledCriticalOverrideFlag");
					this.OnNoticeIncludeScheduledCriticalOverrideFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeETLDelayDurationAmount", DbType="SmallInt NOT NULL")]
		public short NoticeETLDelayDurationAmount
		{
			get
			{
				return this._NoticeETLDelayDurationAmount;
			}
			set
			{
				if ((this._NoticeETLDelayDurationAmount != value))
				{
					this.OnNoticeETLDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._NoticeETLDelayDurationAmount = value;
					this.SendPropertyChanged("NoticeETLDelayDurationAmount");
					this.OnNoticeETLDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecreaseOrderedDoseFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DecreaseOrderedDoseFlag
		{
			get
			{
				return this._DecreaseOrderedDoseFlag;
			}
			set
			{
				if ((this._DecreaseOrderedDoseFlag != value))
				{
					this.OnDecreaseOrderedDoseFlagChanging(value);
					this.SendPropertyChanging();
					this._DecreaseOrderedDoseFlag = value;
					this.SendPropertyChanged("DecreaseOrderedDoseFlag");
					this.OnDecreaseOrderedDoseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMNLToPrintEquivalenciesFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OMNLToPrintEquivalenciesFlag
		{
			get
			{
				return this._OMNLToPrintEquivalenciesFlag;
			}
			set
			{
				if ((this._OMNLToPrintEquivalenciesFlag != value))
				{
					this.OnOMNLToPrintEquivalenciesFlagChanging(value);
					this.SendPropertyChanging();
					this._OMNLToPrintEquivalenciesFlag = value;
					this.SendPropertyChanged("OMNLToPrintEquivalenciesFlag");
					this.OnOMNLToPrintEquivalenciesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryPatientNoIDText", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string TemporaryPatientNoIDText
		{
			get
			{
				return this._TemporaryPatientNoIDText;
			}
			set
			{
				if ((this._TemporaryPatientNoIDText != value))
				{
					this.OnTemporaryPatientNoIDTextChanging(value);
					this.SendPropertyChanging();
					this._TemporaryPatientNoIDText = value;
					this.SendPropertyChanged("TemporaryPatientNoIDText");
					this.OnTemporaryPatientNoIDTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayEncounterIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DisplayEncounterIDFlag
		{
			get
			{
				return this._DisplayEncounterIDFlag;
			}
			set
			{
				if ((this._DisplayEncounterIDFlag != value))
				{
					this.OnDisplayEncounterIDFlagChanging(value);
					this.SendPropertyChanging();
					this._DisplayEncounterIDFlag = value;
					this.SendPropertyChanged("DisplayEncounterIDFlag");
					this.OnDisplayEncounterIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayAlternateEncounterIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DisplayAlternateEncounterIDFlag
		{
			get
			{
				return this._DisplayAlternateEncounterIDFlag;
			}
			set
			{
				if ((this._DisplayAlternateEncounterIDFlag != value))
				{
					this.OnDisplayAlternateEncounterIDFlagChanging(value);
					this.SendPropertyChanging();
					this._DisplayAlternateEncounterIDFlag = value;
					this.SendPropertyChanged("DisplayAlternateEncounterIDFlag");
					this.OnDisplayAlternateEncounterIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayAccountIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DisplayAccountIDFlag
		{
			get
			{
				return this._DisplayAccountIDFlag;
			}
			set
			{
				if ((this._DisplayAccountIDFlag != value))
				{
					this.OnDisplayAccountIDFlagChanging(value);
					this.SendPropertyChanging();
					this._DisplayAccountIDFlag = value;
					this.SendPropertyChanged("DisplayAccountIDFlag");
					this.OnDisplayAccountIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayPatientIDTypeKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DisplayPatientIDTypeKey
		{
			get
			{
				return this._DisplayPatientIDTypeKey;
			}
			set
			{
				if ((this._DisplayPatientIDTypeKey != value))
				{
					this.OnDisplayPatientIDTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._DisplayPatientIDTypeKey = value;
					this.SendPropertyChanged("DisplayPatientIDTypeKey");
					this.OnDisplayPatientIDTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionalTemporaryEncounterIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OptionalTemporaryEncounterIDFlag
		{
			get
			{
				return this._OptionalTemporaryEncounterIDFlag;
			}
			set
			{
				if ((this._OptionalTemporaryEncounterIDFlag != value))
				{
					this.OnOptionalTemporaryEncounterIDFlagChanging(value);
					this.SendPropertyChanging();
					this._OptionalTemporaryEncounterIDFlag = value;
					this.SendPropertyChanged("OptionalTemporaryEncounterIDFlag");
					this.OnOptionalTemporaryEncounterIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionalTemporaryAlternateEncounterIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OptionalTemporaryAlternateEncounterIDFlag
		{
			get
			{
				return this._OptionalTemporaryAlternateEncounterIDFlag;
			}
			set
			{
				if ((this._OptionalTemporaryAlternateEncounterIDFlag != value))
				{
					this.OnOptionalTemporaryAlternateEncounterIDFlagChanging(value);
					this.SendPropertyChanging();
					this._OptionalTemporaryAlternateEncounterIDFlag = value;
					this.SendPropertyChanged("OptionalTemporaryAlternateEncounterIDFlag");
					this.OnOptionalTemporaryAlternateEncounterIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionalTemporaryAccountIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OptionalTemporaryAccountIDFlag
		{
			get
			{
				return this._OptionalTemporaryAccountIDFlag;
			}
			set
			{
				if ((this._OptionalTemporaryAccountIDFlag != value))
				{
					this.OnOptionalTemporaryAccountIDFlagChanging(value);
					this.SendPropertyChanging();
					this._OptionalTemporaryAccountIDFlag = value;
					this.SendPropertyChanged("OptionalTemporaryAccountIDFlag");
					this.OnOptionalTemporaryAccountIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionalTemporaryPatientIDTypeKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> OptionalTemporaryPatientIDTypeKey
		{
			get
			{
				return this._OptionalTemporaryPatientIDTypeKey;
			}
			set
			{
				if ((this._OptionalTemporaryPatientIDTypeKey != value))
				{
					this.OnOptionalTemporaryPatientIDTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._OptionalTemporaryPatientIDTypeKey = value;
					this.SendPropertyChanged("OptionalTemporaryPatientIDTypeKey");
					this.OnOptionalTemporaryPatientIDTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveMedLabelDisplayIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RemoveMedLabelDisplayIDFlag
		{
			get
			{
				return this._RemoveMedLabelDisplayIDFlag;
			}
			set
			{
				if ((this._RemoveMedLabelDisplayIDFlag != value))
				{
					this.OnRemoveMedLabelDisplayIDFlagChanging(value);
					this.SendPropertyChanging();
					this._RemoveMedLabelDisplayIDFlag = value;
					this.SendPropertyChanged("RemoveMedLabelDisplayIDFlag");
					this.OnRemoveMedLabelDisplayIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveMedLabelEncounterIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RemoveMedLabelEncounterIDFlag
		{
			get
			{
				return this._RemoveMedLabelEncounterIDFlag;
			}
			set
			{
				if ((this._RemoveMedLabelEncounterIDFlag != value))
				{
					this.OnRemoveMedLabelEncounterIDFlagChanging(value);
					this.SendPropertyChanging();
					this._RemoveMedLabelEncounterIDFlag = value;
					this.SendPropertyChanged("RemoveMedLabelEncounterIDFlag");
					this.OnRemoveMedLabelEncounterIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveMedLabelAlternateEncounterIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RemoveMedLabelAlternateEncounterIDFlag
		{
			get
			{
				return this._RemoveMedLabelAlternateEncounterIDFlag;
			}
			set
			{
				if ((this._RemoveMedLabelAlternateEncounterIDFlag != value))
				{
					this.OnRemoveMedLabelAlternateEncounterIDFlagChanging(value);
					this.SendPropertyChanging();
					this._RemoveMedLabelAlternateEncounterIDFlag = value;
					this.SendPropertyChanged("RemoveMedLabelAlternateEncounterIDFlag");
					this.OnRemoveMedLabelAlternateEncounterIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveMedLabelAccountIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RemoveMedLabelAccountIDFlag
		{
			get
			{
				return this._RemoveMedLabelAccountIDFlag;
			}
			set
			{
				if ((this._RemoveMedLabelAccountIDFlag != value))
				{
					this.OnRemoveMedLabelAccountIDFlagChanging(value);
					this.SendPropertyChanging();
					this._RemoveMedLabelAccountIDFlag = value;
					this.SendPropertyChanged("RemoveMedLabelAccountIDFlag");
					this.OnRemoveMedLabelAccountIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveMedLabelPatientIDTypeKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RemoveMedLabelPatientIDTypeKey
		{
			get
			{
				return this._RemoveMedLabelPatientIDTypeKey;
			}
			set
			{
				if ((this._RemoveMedLabelPatientIDTypeKey != value))
				{
					this.OnRemoveMedLabelPatientIDTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._RemoveMedLabelPatientIDTypeKey = value;
					this.SendPropertyChanged("RemoveMedLabelPatientIDTypeKey");
					this.OnRemoveMedLabelPatientIDTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveMedLabelProductIDFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RemoveMedLabelProductIDFlag
		{
			get
			{
				return this._RemoveMedLabelProductIDFlag;
			}
			set
			{
				if ((this._RemoveMedLabelProductIDFlag != value))
				{
					this.OnRemoveMedLabelProductIDFlagChanging(value);
					this.SendPropertyChanging();
					this._RemoveMedLabelProductIDFlag = value;
					this.SendPropertyChanged("RemoveMedLabelProductIDFlag");
					this.OnRemoveMedLabelProductIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotReturnableMedMessageText", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string NotReturnableMedMessageText
		{
			get
			{
				return this._NotReturnableMedMessageText;
			}
			set
			{
				if ((this._NotReturnableMedMessageText != value))
				{
					this.OnNotReturnableMedMessageTextChanging(value);
					this.SendPropertyChanging();
					this._NotReturnableMedMessageText = value;
					this.SendPropertyChanged("NotReturnableMedMessageText");
					this.OnNotReturnableMedMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSingleMultiDoseDispenseCancelFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllowSingleMultiDoseDispenseCancelFlag
		{
			get
			{
				return this._AllowSingleMultiDoseDispenseCancelFlag;
			}
			set
			{
				if ((this._AllowSingleMultiDoseDispenseCancelFlag != value))
				{
					this.OnAllowSingleMultiDoseDispenseCancelFlagChanging(value);
					this.SendPropertyChanging();
					this._AllowSingleMultiDoseDispenseCancelFlag = value;
					this.SendPropertyChanged("AllowSingleMultiDoseDispenseCancelFlag");
					this.OnAllowSingleMultiDoseDispenseCancelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveOrderedItemWithoutDoseFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RemoveOrderedItemWithoutDoseFlag
		{
			get
			{
				return this._RemoveOrderedItemWithoutDoseFlag;
			}
			set
			{
				if ((this._RemoveOrderedItemWithoutDoseFlag != value))
				{
					this.OnRemoveOrderedItemWithoutDoseFlagChanging(value);
					this.SendPropertyChanging();
					this._RemoveOrderedItemWithoutDoseFlag = value;
					this.SendPropertyChanged("RemoveOrderedItemWithoutDoseFlag");
					this.OnRemoveOrderedItemWithoutDoseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteDispensingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RemoteDispensingFlag
		{
			get
			{
				return this._RemoteDispensingFlag;
			}
			set
			{
				if ((this._RemoteDispensingFlag != value))
				{
					this.OnRemoteDispensingFlagChanging(value);
					this.SendPropertyChanging();
					this._RemoteDispensingFlag = value;
					this.SendPropertyChanged("RemoteDispensingFlag");
					this.OnRemoteDispensingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryFlag", DbType="Bit NOT NULL")]
		public bool DeliveryFlag
		{
			get
			{
				return this._DeliveryFlag;
			}
			set
			{
				if ((this._DeliveryFlag != value))
				{
					this.OnDeliveryFlagChanging(value);
					this.SendPropertyChanging();
					this._DeliveryFlag = value;
					this.SendPropertyChanged("DeliveryFlag");
					this.OnDeliveryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedQueueDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short MedQueueDurationAmount
		{
			get
			{
				return this._MedQueueDurationAmount;
			}
			set
			{
				if ((this._MedQueueDurationAmount != value))
				{
					this.OnMedQueueDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._MedQueueDurationAmount = value;
					this.SendPropertyChanged("MedQueueDurationAmount");
					this.OnMedQueueDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedQueueBeforeDueDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short MedQueueBeforeDueDurationAmount
		{
			get
			{
				return this._MedQueueBeforeDueDurationAmount;
			}
			set
			{
				if ((this._MedQueueBeforeDueDurationAmount != value))
				{
					this.OnMedQueueBeforeDueDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._MedQueueBeforeDueDurationAmount = value;
					this.SendPropertyChanged("MedQueueBeforeDueDurationAmount");
					this.OnMedQueueBeforeDueDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedQueueBeforeOrderStartDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> MedQueueBeforeOrderStartDurationAmount
		{
			get
			{
				return this._MedQueueBeforeOrderStartDurationAmount;
			}
			set
			{
				if ((this._MedQueueBeforeOrderStartDurationAmount != value))
				{
					this.OnMedQueueBeforeOrderStartDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._MedQueueBeforeOrderStartDurationAmount = value;
					this.SendPropertyChanged("MedQueueBeforeOrderStartDurationAmount");
					this.OnMedQueueBeforeOrderStartDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedQueueAfterOrderExpiredDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> MedQueueAfterOrderExpiredDurationAmount
		{
			get
			{
				return this._MedQueueAfterOrderExpiredDurationAmount;
			}
			set
			{
				if ((this._MedQueueAfterOrderExpiredDurationAmount != value))
				{
					this.OnMedQueueAfterOrderExpiredDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._MedQueueAfterOrderExpiredDurationAmount = value;
					this.SendPropertyChanged("MedQueueAfterOrderExpiredDurationAmount");
					this.OnMedQueueAfterOrderExpiredDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedQueueBeforeDueNowDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short MedQueueBeforeDueNowDurationAmount
		{
			get
			{
				return this._MedQueueBeforeDueNowDurationAmount;
			}
			set
			{
				if ((this._MedQueueBeforeDueNowDurationAmount != value))
				{
					this.OnMedQueueBeforeDueNowDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._MedQueueBeforeDueNowDurationAmount = value;
					this.SendPropertyChanged("MedQueueBeforeDueNowDurationAmount");
					this.OnMedQueueBeforeDueNowDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedQueueAfterDueNowDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short MedQueueAfterDueNowDurationAmount
		{
			get
			{
				return this._MedQueueAfterDueNowDurationAmount;
			}
			set
			{
				if ((this._MedQueueAfterDueNowDurationAmount != value))
				{
					this.OnMedQueueAfterDueNowDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._MedQueueAfterDueNowDurationAmount = value;
					this.SendPropertyChanged("MedQueueAfterDueNowDurationAmount");
					this.OnMedQueueAfterDueNowDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmissionLeadDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short PreadmissionLeadDurationAmount
		{
			get
			{
				return this._PreadmissionLeadDurationAmount;
			}
			set
			{
				if ((this._PreadmissionLeadDurationAmount != value))
				{
					this.OnPreadmissionLeadDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._PreadmissionLeadDurationAmount = value;
					this.SendPropertyChanged("PreadmissionLeadDurationAmount");
					this.OnPreadmissionLeadDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmissionProlongedInactivityDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short PreadmissionProlongedInactivityDurationAmount
		{
			get
			{
				return this._PreadmissionProlongedInactivityDurationAmount;
			}
			set
			{
				if ((this._PreadmissionProlongedInactivityDurationAmount != value))
				{
					this.OnPreadmissionProlongedInactivityDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._PreadmissionProlongedInactivityDurationAmount = value;
					this.SendPropertyChanged("PreadmissionProlongedInactivityDurationAmount");
					this.OnPreadmissionProlongedInactivityDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionProlongedInactivityDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short AdmissionProlongedInactivityDurationAmount
		{
			get
			{
				return this._AdmissionProlongedInactivityDurationAmount;
			}
			set
			{
				if ((this._AdmissionProlongedInactivityDurationAmount != value))
				{
					this.OnAdmissionProlongedInactivityDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._AdmissionProlongedInactivityDurationAmount = value;
					this.SendPropertyChanged("AdmissionProlongedInactivityDurationAmount");
					this.OnAdmissionProlongedInactivityDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDelayDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DischargeDelayDurationAmount
		{
			get
			{
				return this._DischargeDelayDurationAmount;
			}
			set
			{
				if ((this._DischargeDelayDurationAmount != value))
				{
					this.OnDischargeDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._DischargeDelayDurationAmount = value;
					this.SendPropertyChanged("DischargeDelayDurationAmount");
					this.OnDischargeDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDelayDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short TransferDelayDurationAmount
		{
			get
			{
				return this._TransferDelayDurationAmount;
			}
			set
			{
				if ((this._TransferDelayDurationAmount != value))
				{
					this.OnTransferDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._TransferDelayDurationAmount = value;
					this.SendPropertyChanged("TransferDelayDurationAmount");
					this.OnTransferDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceDelayDurationAmount", DbType="SmallInt NOT NULL")]
		public short LeaveOfAbsenceDelayDurationAmount
		{
			get
			{
				return this._LeaveOfAbsenceDelayDurationAmount;
			}
			set
			{
				if ((this._LeaveOfAbsenceDelayDurationAmount != value))
				{
					this.OnLeaveOfAbsenceDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceDelayDurationAmount = value;
					this.SendPropertyChanged("LeaveOfAbsenceDelayDurationAmount");
					this.OnLeaveOfAbsenceDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyItemsNotificationDurationAmount", DbType="SmallInt")]
		public System.Nullable<short> MyItemsNotificationDurationAmount
		{
			get
			{
				return this._MyItemsNotificationDurationAmount;
			}
			set
			{
				if ((this._MyItemsNotificationDurationAmount != value))
				{
					this.OnMyItemsNotificationDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._MyItemsNotificationDurationAmount = value;
					this.SendPropertyChanged("MyItemsNotificationDurationAmount");
					this.OnMyItemsNotificationDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryStatusDisplayDurationAmount", DbType="SmallInt NOT NULL")]
		public short DeliveryStatusDisplayDurationAmount
		{
			get
			{
				return this._DeliveryStatusDisplayDurationAmount;
			}
			set
			{
				if ((this._DeliveryStatusDisplayDurationAmount != value))
				{
					this.OnDeliveryStatusDisplayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStatusDisplayDurationAmount = value;
					this.SendPropertyChanged("DeliveryStatusDisplayDurationAmount");
					this.OnDeliveryStatusDisplayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscontinueOrdersOnReadmitDurationAmount", DbType="SmallInt")]
		public System.Nullable<short> DiscontinueOrdersOnReadmitDurationAmount
		{
			get
			{
				return this._DiscontinueOrdersOnReadmitDurationAmount;
			}
			set
			{
				if ((this._DiscontinueOrdersOnReadmitDurationAmount != value))
				{
					this.OnDiscontinueOrdersOnReadmitDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscontinueOrdersOnReadmitDurationAmount = value;
					this.SendPropertyChanged("DiscontinueOrdersOnReadmitDurationAmount");
					this.OnDiscontinueOrdersOnReadmitDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartialMuiltiComponentOrderRemoveFlag", DbType="Bit NOT NULL")]
		public bool PartialMultiComponentOrderRemoveFlag
		{
			get
			{
				return this._PartialMuiltiComponentOrderRemoveFlag;
			}
			set
			{
				if ((this._PartialMuiltiComponentOrderRemoveFlag != value))
				{
					this.OnPartialMultiComponentOrderRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._PartialMuiltiComponentOrderRemoveFlag = value;
					this.SendPropertyChanged("PartialMultiComponentOrderRemoveFlag");
					this.OnPartialMultiComponentOrderRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxCheckDelayDurationAmount", DbType="SmallInt NOT NULL")]
		public short RxCheckDelayDurationAmount
		{
			get
			{
				return this._RxCheckDelayDurationAmount;
			}
			set
			{
				if ((this._RxCheckDelayDurationAmount != value))
				{
					this.OnRxCheckDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._RxCheckDelayDurationAmount = value;
					this.SendPropertyChanged("RxCheckDelayDurationAmount");
					this.OnRxCheckDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncreaseOrderedDoseFlag", DbType="Bit NOT NULL")]
		public bool IncreaseOrderedDoseFlag
		{
			get
			{
				return this._IncreaseOrderedDoseFlag;
			}
			set
			{
				if ((this._IncreaseOrderedDoseFlag != value))
				{
					this.OnIncreaseOrderedDoseFlagChanging(value);
					this.SendPropertyChanging();
					this._IncreaseOrderedDoseFlag = value;
					this.SendPropertyChanged("IncreaseOrderedDoseFlag");
					this.OnIncreaseOrderedDoseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxCheckExpirationDurationAmount", DbType="SmallInt NOT NULL")]
		public short RxCheckExpirationDurationAmount
		{
			get
			{
				return this._RxCheckExpirationDurationAmount;
			}
			set
			{
				if ((this._RxCheckExpirationDurationAmount != value))
				{
					this.OnRxCheckExpirationDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._RxCheckExpirationDurationAmount = value;
					this.SendPropertyChanged("RxCheckExpirationDurationAmount");
					this.OnRxCheckExpirationDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlag", DbType="Bit NOT NULL")]
		public bool ExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlag
		{
			get
			{
				return this._ExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlag;
			}
			set
			{
				if ((this._ExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlag != value))
				{
					this.OnExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlagChanging(value);
					this.SendPropertyChanging();
					this._ExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlag = value;
					this.SendPropertyChanged("ExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlag");
					this.OnExcludeRxCheckCUBIEOrSingleMultiDoseMiniFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeRxCheckScanOnLoadRefillFlag", DbType="Bit NOT NULL")]
		public bool ExcludeRxCheckScanOnLoadRefillFlag
		{
			get
			{
				return this._ExcludeRxCheckScanOnLoadRefillFlag;
			}
			set
			{
				if ((this._ExcludeRxCheckScanOnLoadRefillFlag != value))
				{
					this.OnExcludeRxCheckScanOnLoadRefillFlagChanging(value);
					this.SendPropertyChanging();
					this._ExcludeRxCheckScanOnLoadRefillFlag = value;
					this.SendPropertyChanged("ExcludeRxCheckScanOnLoadRefillFlag");
					this.OnExcludeRxCheckScanOnLoadRefillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JITMgmtURLID", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string JITMgmtURLID
		{
			get
			{
				return this._JITMgmtURLID;
			}
			set
			{
				if ((this._JITMgmtURLID != value))
				{
					this.OnJITMgmtURLIDChanging(value);
					this.SendPropertyChanging();
					this._JITMgmtURLID = value;
					this.SendPropertyChanged("JITMgmtURLID");
					this.OnJITMgmtURLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmogisticsURLID", DbType="NVarChar(250)")]
		public string PharmogisticsURLID
		{
			get
			{
				return this._PharmogisticsURLID;
			}
			set
			{
				if ((this._PharmogisticsURLID != value))
				{
					this.OnPharmogisticsURLIDChanging(value);
					this.SendPropertyChanging();
					this._PharmogisticsURLID = value;
					this.SendPropertyChanged("PharmogisticsURLID");
					this.OnPharmogisticsURLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddFacilityNonMedItemOnlyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddFacilityNonMedItemOnlyFlag
		{
			get
			{
				return this._AddFacilityNonMedItemOnlyFlag;
			}
			set
			{
				if ((this._AddFacilityNonMedItemOnlyFlag != value))
				{
					this.OnAddFacilityNonMedItemOnlyFlagChanging(value);
					this.SendPropertyChanging();
					this._AddFacilityNonMedItemOnlyFlag = value;
					this.SendPropertyChanged("AddFacilityNonMedItemOnlyFlag");
					this.OnAddFacilityNonMedItemOnlyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisablePendAssignOutdateTrackingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DisablePendAssignOutdateTrackingFlag
		{
			get
			{
				return this._DisablePendAssignOutdateTrackingFlag;
			}
			set
			{
				if ((this._DisablePendAssignOutdateTrackingFlag != value))
				{
					this.OnDisablePendAssignOutdateTrackingFlagChanging(value);
					this.SendPropertyChanging();
					this._DisablePendAssignOutdateTrackingFlag = value;
					this.SendPropertyChanged("DisablePendAssignOutdateTrackingFlag");
					this.OnDisablePendAssignOutdateTrackingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruncatedAllergyCommentText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string TruncatedAllergyCommentText
		{
			get
			{
				return this._TruncatedAllergyCommentText;
			}
			set
			{
				if ((this._TruncatedAllergyCommentText != value))
				{
					this.OnTruncatedAllergyCommentTextChanging(value);
					this.SendPropertyChanging();
					this._TruncatedAllergyCommentText = value;
					this.SendPropertyChanged("TruncatedAllergyCommentText");
					this.OnTruncatedAllergyCommentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruncatedOrderCommentText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string TruncatedOrderCommentText
		{
			get
			{
				return this._TruncatedOrderCommentText;
			}
			set
			{
				if ((this._TruncatedOrderCommentText != value))
				{
					this.OnTruncatedOrderCommentTextChanging(value);
					this.SendPropertyChanging();
					this._TruncatedOrderCommentText = value;
					this.SendPropertyChanged("TruncatedOrderCommentText");
					this.OnTruncatedOrderCommentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceUserScanFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DispensingDeviceUserScanFlag
		{
			get
			{
				return this._DispensingDeviceUserScanFlag;
			}
			set
			{
				if ((this._DispensingDeviceUserScanFlag != value))
				{
					this.OnDispensingDeviceUserScanFlagChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceUserScanFlag = value;
					this.SendPropertyChanged("DispensingDeviceUserScanFlag");
					this.OnDispensingDeviceUserScanFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchByUserScanCodeFlag", DbType="Bit NOT NULL")]
		public bool MatchByUserScanCodeFlag
		{
			get
			{
				return this._MatchByUserScanCodeFlag;
			}
			set
			{
				if ((this._MatchByUserScanCodeFlag != value))
				{
					this.OnMatchByUserScanCodeFlagChanging(value);
					this.SendPropertyChanging();
					this._MatchByUserScanCodeFlag = value;
					this.SendPropertyChanged("MatchByUserScanCodeFlag");
					this.OnMatchByUserScanCodeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIDScanCodePrefixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string UserIDScanCodePrefixText
		{
			get
			{
				return this._UserIDScanCodePrefixText;
			}
			set
			{
				if ((this._UserIDScanCodePrefixText != value))
				{
					this.OnUserIDScanCodePrefixTextChanging(value);
					this.SendPropertyChanging();
					this._UserIDScanCodePrefixText = value;
					this.SendPropertyChanged("UserIDScanCodePrefixText");
					this.OnUserIDScanCodePrefixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIDScanCodeSuffixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string UserIDScanCodeSuffixText
		{
			get
			{
				return this._UserIDScanCodeSuffixText;
			}
			set
			{
				if ((this._UserIDScanCodeSuffixText != value))
				{
					this.OnUserIDScanCodeSuffixTextChanging(value);
					this.SendPropertyChanging();
					this._UserIDScanCodeSuffixText = value;
					this.SendPropertyChanged("UserIDScanCodeSuffixText");
					this.OnUserIDScanCodeSuffixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDScanCodePrefixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string OrderIDScanCodePrefixText
		{
			get
			{
				return this._OrderIDScanCodePrefixText;
			}
			set
			{
				if ((this._OrderIDScanCodePrefixText != value))
				{
					this.OnOrderIDScanCodePrefixTextChanging(value);
					this.SendPropertyChanging();
					this._OrderIDScanCodePrefixText = value;
					this.SendPropertyChanged("OrderIDScanCodePrefixText");
					this.OnOrderIDScanCodePrefixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDScanCodeSuffixLengthQuantity", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> OrderIDScanCodeSuffixLengthQuantity
		{
			get
			{
				return this._OrderIDScanCodeSuffixLengthQuantity;
			}
			set
			{
				if ((this._OrderIDScanCodeSuffixLengthQuantity != value))
				{
					this.OnOrderIDScanCodeSuffixLengthQuantityChanging(value);
					this.SendPropertyChanging();
					this._OrderIDScanCodeSuffixLengthQuantity = value;
					this.SendPropertyChanged("OrderIDScanCodeSuffixLengthQuantity");
					this.OnOrderIDScanCodeSuffixLengthQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDScanCodeSuffixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string OrderIDScanCodeSuffixText
		{
			get
			{
				return this._OrderIDScanCodeSuffixText;
			}
			set
			{
				if ((this._OrderIDScanCodeSuffixText != value))
				{
					this.OnOrderIDScanCodeSuffixTextChanging(value);
					this.SendPropertyChanging();
					this._OrderIDScanCodeSuffixText = value;
					this.SendPropertyChanged("OrderIDScanCodeSuffixText");
					this.OnOrderIDScanCodeSuffixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDScanCodePrefixLengthQuantity", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> OrderIDScanCodePrefixLengthQuantity
		{
			get
			{
				return this._OrderIDScanCodePrefixLengthQuantity;
			}
			set
			{
				if ((this._OrderIDScanCodePrefixLengthQuantity != value))
				{
					this.OnOrderIDScanCodePrefixLengthQuantityChanging(value);
					this.SendPropertyChanging();
					this._OrderIDScanCodePrefixLengthQuantity = value;
					this.SendPropertyChanged("OrderIDScanCodePrefixLengthQuantity");
					this.OnOrderIDScanCodePrefixLengthQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepickWaitDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> RepickWaitDurationAmount
		{
			get
			{
				return this._RepickWaitDurationAmount;
			}
			set
			{
				if ((this._RepickWaitDurationAmount != value))
				{
					this.OnRepickWaitDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._RepickWaitDurationAmount = value;
					this.SendPropertyChanged("RepickWaitDurationAmount");
					this.OnRepickWaitDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUBIEESFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CUBIEESFlag
		{
			get
			{
				return this._CUBIEESFlag;
			}
			set
			{
				if ((this._CUBIEESFlag != value))
				{
					this.OnCUBIEESFlagChanging(value);
					this.SendPropertyChanging();
					this._CUBIEESFlag = value;
					this.SendPropertyChanged("CUBIEESFlag");
					this.OnCUBIEESFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUncheckedCUBIEFlag", DbType="Bit NOT NULL")]
		public bool InsertUncheckedCUBIEFlag
		{
			get
			{
				return this._InsertUncheckedCUBIEFlag;
			}
			set
			{
				if ((this._InsertUncheckedCUBIEFlag != value))
				{
					this.OnInsertUncheckedCUBIEFlagChanging(value);
					this.SendPropertyChanging();
					this._InsertUncheckedCUBIEFlag = value;
					this.SendPropertyChanged("InsertUncheckedCUBIEFlag");
					this.OnInsertUncheckedCUBIEFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUBIEAnotherDestinationFlag", DbType="Bit NOT NULL")]
		public bool CUBIEAnotherDestinationFlag
		{
			get
			{
				return this._CUBIEAnotherDestinationFlag;
			}
			set
			{
				if ((this._CUBIEAnotherDestinationFlag != value))
				{
					this.OnCUBIEAnotherDestinationFlagChanging(value);
					this.SendPropertyChanging();
					this._CUBIEAnotherDestinationFlag = value;
					this.SendPropertyChanged("CUBIEAnotherDestinationFlag");
					this.OnCUBIEAnotherDestinationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardinalASSISTFlag", DbType="Bit NOT NULL")]
		public bool CardinalASSISTFlag
		{
			get
			{
				return this._CardinalASSISTFlag;
			}
			set
			{
				if ((this._CardinalASSISTFlag != value))
				{
					this.OnCardinalASSISTFlagChanging(value);
					this.SendPropertyChanging();
					this._CardinalASSISTFlag = value;
					this.SendPropertyChanged("CardinalASSISTFlag");
					this.OnCardinalASSISTFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongTermCareFlag", DbType="Bit NOT NULL")]
		public bool LongTermCareFlag
		{
			get
			{
				return this._LongTermCareFlag;
			}
			set
			{
				if ((this._LongTermCareFlag != value))
				{
					this.OnLongTermCareFlagChanging(value);
					this.SendPropertyChanging();
					this._LongTermCareFlag = value;
					this.SendPropertyChanged("LongTermCareFlag");
					this.OnLongTermCareFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceAllOrdersFlag", DbType="Bit NOT NULL")]
		public bool DispensingDeviceAllOrdersFlag
		{
			get
			{
				return this._DispensingDeviceAllOrdersFlag;
			}
			set
			{
				if ((this._DispensingDeviceAllOrdersFlag != value))
				{
					this.OnDispensingDeviceAllOrdersFlagChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceAllOrdersFlag = value;
					this.SendPropertyChanged("DispensingDeviceAllOrdersFlag");
					this.OnDispensingDeviceAllOrdersFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MixedDeviceTypeQueuingModeProfileFlag", DbType="Bit NOT NULL")]
		public bool MixedDeviceTypeQueuingModeProfileFlag
		{
			get
			{
				return this._MixedDeviceTypeQueuingModeProfileFlag;
			}
			set
			{
				if ((this._MixedDeviceTypeQueuingModeProfileFlag != value))
				{
					this.OnMixedDeviceTypeQueuingModeProfileFlagChanging(value);
					this.SendPropertyChanging();
					this._MixedDeviceTypeQueuingModeProfileFlag = value;
					this.SendPropertyChanged("MixedDeviceTypeQueuingModeProfileFlag");
					this.OnMixedDeviceTypeQueuingModeProfileFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPharmacyOrderDoseFlag", DbType="Bit NOT NULL")]
		public bool RequestPharmacyOrderDoseFlag
		{
			get
			{
				return this._RequestPharmacyOrderDoseFlag;
			}
			set
			{
				if ((this._RequestPharmacyOrderDoseFlag != value))
				{
					this.OnRequestPharmacyOrderDoseFlagChanging(value);
					this.SendPropertyChanging();
					this._RequestPharmacyOrderDoseFlag = value;
					this.SendPropertyChanged("RequestPharmacyOrderDoseFlag");
					this.OnRequestPharmacyOrderDoseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPharmacyOrderDoseDurationAmount", DbType="SmallInt NOT NULL")]
		public short RequestPharmacyOrderDoseDurationAmount
		{
			get
			{
				return this._RequestPharmacyOrderDoseDurationAmount;
			}
			set
			{
				if ((this._RequestPharmacyOrderDoseDurationAmount != value))
				{
					this.OnRequestPharmacyOrderDoseDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._RequestPharmacyOrderDoseDurationAmount = value;
					this.SendPropertyChanged("RequestPharmacyOrderDoseDurationAmount");
					this.OnRequestPharmacyOrderDoseDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoveMedLabelItemIDBarcodeFlag", DbType="Bit NOT NULL")]
		public bool RemoveMedLabelItemIDBarcodeFlag
		{
			get
			{
				return this._RemoveMedLabelItemIDBarcodeFlag;
			}
			set
			{
				if ((this._RemoveMedLabelItemIDBarcodeFlag != value))
				{
					this.OnRemoveMedLabelItemIDBarcodeFlagChanging(value);
					this.SendPropertyChanging();
					this._RemoveMedLabelItemIDBarcodeFlag = value;
					this.SendPropertyChanged("RemoveMedLabelItemIDBarcodeFlag");
					this.OnRemoveMedLabelItemIDBarcodeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovePatientIDBarcodeFlag", DbType="Bit NOT NULL")]
		public bool RemovePatientIDBarcodeFlag
		{
			get
			{
				return this._RemovePatientIDBarcodeFlag;
			}
			set
			{
				if ((this._RemovePatientIDBarcodeFlag != value))
				{
					this.OnRemovePatientIDBarcodeFlagChanging(value);
					this.SendPropertyChanging();
					this._RemovePatientIDBarcodeFlag = value;
					this.SendPropertyChanged("RemovePatientIDBarcodeFlag");
					this.OnRemovePatientIDBarcodeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequentialDrainModeInternalCode", DbType="VarChar(10)")]
		public string SequentialDrainModeInternalCode
		{
			get
			{
				return this._SequentialDrainModeInternalCode;
			}
			set
			{
				if ((this._SequentialDrainModeInternalCode != value))
				{
					this.OnSequentialDrainModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._SequentialDrainModeInternalCode = value;
					this.SendPropertyChanged("SequentialDrainModeInternalCode");
					this.OnSequentialDrainModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalInventoryCountRequestFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ExternalInventoryCountRequestFlag
		{
			get
			{
				return this._ExternalInventoryCountRequestFlag;
			}
			set
			{
				if ((this._ExternalInventoryCountRequestFlag != value))
				{
					this.OnExternalInventoryCountRequestFlagChanging(value);
					this.SendPropertyChanging();
					this._ExternalInventoryCountRequestFlag = value;
					this.SendPropertyChanged("ExternalInventoryCountRequestFlag");
					this.OnExternalInventoryCountRequestFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalRefillRequestFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ExternalRefillRequestFlag
		{
			get
			{
				return this._ExternalRefillRequestFlag;
			}
			set
			{
				if ((this._ExternalRefillRequestFlag != value))
				{
					this.OnExternalRefillRequestFlagChanging(value);
					this.SendPropertyChanging();
					this._ExternalRefillRequestFlag = value;
					this.SendPropertyChanged("ExternalRefillRequestFlag");
					this.OnExternalRefillRequestFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalRefillRequestExpirationDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short ExternalRefillRequestExpirationDurationAmount
		{
			get
			{
				return this._ExternalRefillRequestExpirationDurationAmount;
			}
			set
			{
				if ((this._ExternalRefillRequestExpirationDurationAmount != value))
				{
					this.OnExternalRefillRequestExpirationDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._ExternalRefillRequestExpirationDurationAmount = value;
					this.SendPropertyChanged("ExternalRefillRequestExpirationDurationAmount");
					this.OnExternalRefillRequestExpirationDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseEquivalenciesFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool UseEquivalenciesFlag
		{
			get
			{
				return this._UseEquivalenciesFlag;
			}
			set
			{
				if ((this._UseEquivalenciesFlag != value))
				{
					this.OnUseEquivalenciesFlagChanging(value);
					this.SendPropertyChanging();
					this._UseEquivalenciesFlag = value;
					this.SendPropertyChanged("UseEquivalenciesFlag");
					this.OnUseEquivalenciesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitySpecificEquivalenciesFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FacilitySpecificEquivalenciesFlag
		{
			get
			{
				return this._FacilitySpecificEquivalenciesFlag;
			}
			set
			{
				if ((this._FacilitySpecificEquivalenciesFlag != value))
				{
					this.OnFacilitySpecificEquivalenciesFlagChanging(value);
					this.SendPropertyChanging();
					this._FacilitySpecificEquivalenciesFlag = value;
					this.SendPropertyChanged("FacilitySpecificEquivalenciesFlag");
					this.OnFacilitySpecificEquivalenciesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoApprovePISItemFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AutoApprovePISItemFlag
		{
			get
			{
				return this._AutoApprovePISItemFlag;
			}
			set
			{
				if ((this._AutoApprovePISItemFlag != value))
				{
					this.OnAutoApprovePISItemFlagChanging(value);
					this.SendPropertyChanging();
					this._AutoApprovePISItemFlag = value;
					this.SendPropertyChanged("AutoApprovePISItemFlag");
					this.OnAutoApprovePISItemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReverseDischargeDurationAmount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short ReverseDischargeDurationAmount
		{
			get
			{
				return this._ReverseDischargeDurationAmount;
			}
			set
			{
				if ((this._ReverseDischargeDurationAmount != value))
				{
					this.OnReverseDischargeDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._ReverseDischargeDurationAmount = value;
					this.SendPropertyChanged("ReverseDischargeDurationAmount");
					this.OnReverseDischargeDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReverseDischargeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ReverseDischargeFlag
		{
			get
			{
				return this._ReverseDischargeFlag;
			}
			set
			{
				if ((this._ReverseDischargeFlag != value))
				{
					this.OnReverseDischargeFlagChanging(value);
					this.SendPropertyChanging();
					this._ReverseDischargeFlag = value;
					this.SendPropertyChanged("ReverseDischargeFlag");
					this.OnReverseDischargeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedSearchStringFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MedSearchStringFlag
		{
			get
			{
				return this._MedSearchStringFlag;
			}
			set
			{
				if ((this._MedSearchStringFlag != value))
				{
					this.OnMedSearchStringFlagChanging(value);
					this.SendPropertyChanging();
					this._MedSearchStringFlag = value;
					this.SendPropertyChanged("MedSearchStringFlag");
					this.OnMedSearchStringFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedSearchStringLengthQuantity", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte MedSearchStringLengthQuantity
		{
			get
			{
				return this._MedSearchStringLengthQuantity;
			}
			set
			{
				if ((this._MedSearchStringLengthQuantity != value))
				{
					this.OnMedSearchStringLengthQuantityChanging(value);
					this.SendPropertyChanging();
					this._MedSearchStringLengthQuantity = value;
					this.SendPropertyChanged("MedSearchStringLengthQuantity");
					this.OnMedSearchStringLengthQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedSelectionOrderFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MedSelectionOrderFlag
		{
			get
			{
				return this._MedSelectionOrderFlag;
			}
			set
			{
				if ((this._MedSelectionOrderFlag != value))
				{
					this.OnMedSelectionOrderFlagChanging(value);
					this.SendPropertyChanging();
					this._MedSelectionOrderFlag = value;
					this.SendPropertyChanged("MedSelectionOrderFlag");
					this.OnMedSelectionOrderFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPatientsToBeSearchedByLocationFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllowPatientsToBeSearchedByLocationFlag
		{
			get
			{
				return this._AllowPatientsToBeSearchedByLocationFlag;
			}
			set
			{
				if ((this._AllowPatientsToBeSearchedByLocationFlag != value))
				{
					this.OnAllowPatientsToBeSearchedByLocationFlagChanging(value);
					this.SendPropertyChanging();
					this._AllowPatientsToBeSearchedByLocationFlag = value;
					this.SendPropertyChanged("AllowPatientsToBeSearchedByLocationFlag");
					this.OnAllowPatientsToBeSearchedByLocationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultSortPatientsByLocationFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DefaultSortPatientsByLocationFlag
		{
			get
			{
				return this._DefaultSortPatientsByLocationFlag;
			}
			set
			{
				if ((this._DefaultSortPatientsByLocationFlag != value))
				{
					this.OnDefaultSortPatientsByLocationFlagChanging(value);
					this.SendPropertyChanging();
					this._DefaultSortPatientsByLocationFlag = value;
					this.SendPropertyChanged("DefaultSortPatientsByLocationFlag");
					this.OnDefaultSortPatientsByLocationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAuthenticationRequestDuration2Amount", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short UserAuthenticationRequestDuration2Amount
		{
			get
			{
				return this._UserAuthenticationRequestDuration2Amount;
			}
			set
			{
				if ((this._UserAuthenticationRequestDuration2Amount != value))
				{
					this.OnUserAuthenticationRequestDuration2AmountChanging(value);
					this.SendPropertyChanging();
					this._UserAuthenticationRequestDuration2Amount = value;
					this.SendPropertyChanged("UserAuthenticationRequestDuration2Amount");
					this.OnUserAuthenticationRequestDuration2AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayPatientPreferredNameOnRemoveLabelFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DisplayPatientPreferredNameOnRemoveLabelFlag
		{
			get
			{
				return this._DisplayPatientPreferredNameOnRemoveLabelFlag;
			}
			set
			{
				if ((this._DisplayPatientPreferredNameOnRemoveLabelFlag != value))
				{
					this.OnDisplayPatientPreferredNameOnRemoveLabelFlagChanging(value);
					this.SendPropertyChanging();
					this._DisplayPatientPreferredNameOnRemoveLabelFlag = value;
					this.SendPropertyChanged("DisplayPatientPreferredNameOnRemoveLabelFlag");
					this.OnDisplayPatientPreferredNameOnRemoveLabelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMReceivePurchaseOrderRequiredFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GCSMReceivePurchaseOrderRequiredFlag
		{
			get
			{
				return this._GCSMReceivePurchaseOrderRequiredFlag;
			}
			set
			{
				if ((this._GCSMReceivePurchaseOrderRequiredFlag != value))
				{
					this.OnGCSMReceivePurchaseOrderRequiredFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMReceivePurchaseOrderRequiredFlag = value;
					this.SendPropertyChanged("GCSMReceivePurchaseOrderRequiredFlag");
					this.OnGCSMReceivePurchaseOrderRequiredFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMLogisticsOrderingInterfaceSupportFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GCSMLogisticsOrderingInterfaceSupportFlag
		{
			get
			{
				return this._GCSMLogisticsOrderingInterfaceSupportFlag;
			}
			set
			{
				if ((this._GCSMLogisticsOrderingInterfaceSupportFlag != value))
				{
					this.OnGCSMLogisticsOrderingInterfaceSupportFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMLogisticsOrderingInterfaceSupportFlag = value;
					this.SendPropertyChanged("GCSMLogisticsOrderingInterfaceSupportFlag");
					this.OnGCSMLogisticsOrderingInterfaceSupportFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMLogisticsReceiveInterfaceSupportFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GCSMLogisticsReceiveInterfaceSupportFlag
		{
			get
			{
				return this._GCSMLogisticsReceiveInterfaceSupportFlag;
			}
			set
			{
				if ((this._GCSMLogisticsReceiveInterfaceSupportFlag != value))
				{
					this.OnGCSMLogisticsReceiveInterfaceSupportFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMLogisticsReceiveInterfaceSupportFlag = value;
					this.SendPropertyChanged("GCSMLogisticsReceiveInterfaceSupportFlag");
					this.OnGCSMLogisticsReceiveInterfaceSupportFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCardinalAssistInterfaceSupportFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GCSMCardinalAssistInterfaceSupportFlag
		{
			get
			{
				return this._GCSMCardinalAssistInterfaceSupportFlag;
			}
			set
			{
				if ((this._GCSMCardinalAssistInterfaceSupportFlag != value))
				{
					this.OnGCSMCardinalAssistInterfaceSupportFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMCardinalAssistInterfaceSupportFlag = value;
					this.SendPropertyChanged("GCSMCardinalAssistInterfaceSupportFlag");
					this.OnGCSMCardinalAssistInterfaceSupportFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDefaultOnReceiveDistributorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> GCSMDefaultOnReceiveDistributorKey
		{
			get
			{
				return this._GCSMDefaultOnReceiveDistributorKey;
			}
			set
			{
				if ((this._GCSMDefaultOnReceiveDistributorKey != value))
				{
					this.OnGCSMDefaultOnReceiveDistributorKeyChanging(value);
					this.SendPropertyChanging();
					this._GCSMDefaultOnReceiveDistributorKey = value;
					this.SendPropertyChanged("GCSMDefaultOnReceiveDistributorKey");
					this.OnGCSMDefaultOnReceiveDistributorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMAllDeviceEventsReviewSignaturesFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GCSMAllDeviceEventsReviewSignaturesFlag
		{
			get
			{
				return this._GCSMAllDeviceEventsReviewSignaturesFlag;
			}
			set
			{
				if ((this._GCSMAllDeviceEventsReviewSignaturesFlag != value))
				{
					this.OnGCSMAllDeviceEventsReviewSignaturesFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMAllDeviceEventsReviewSignaturesFlag = value;
					this.SendPropertyChanged("GCSMAllDeviceEventsReviewSignaturesFlag");
					this.OnGCSMAllDeviceEventsReviewSignaturesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintADMLabelFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GCSMPrintADMLabelFlag
		{
			get
			{
				return this._GCSMPrintADMLabelFlag;
			}
			set
			{
				if ((this._GCSMPrintADMLabelFlag != value))
				{
					this.OnGCSMPrintADMLabelFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintADMLabelFlag = value;
					this.SendPropertyChanged("GCSMPrintADMLabelFlag");
					this.OnGCSMPrintADMLabelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintLabelByDispenseOrderFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GCSMPrintLabelByDispenseOrderFlag
		{
			get
			{
				return this._GCSMPrintLabelByDispenseOrderFlag;
			}
			set
			{
				if ((this._GCSMPrintLabelByDispenseOrderFlag != value))
				{
					this.OnGCSMPrintLabelByDispenseOrderFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintLabelByDispenseOrderFlag = value;
					this.SendPropertyChanged("GCSMPrintLabelByDispenseOrderFlag");
					this.OnGCSMPrintLabelByDispenseOrderFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMShowInvoiceTypeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GCSMShowInvoiceTypeFlag
		{
			get
			{
				return this._GCSMShowInvoiceTypeFlag;
			}
			set
			{
				if ((this._GCSMShowInvoiceTypeFlag != value))
				{
					this.OnGCSMShowInvoiceTypeFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMShowInvoiceTypeFlag = value;
					this.SendPropertyChanged("GCSMShowInvoiceTypeFlag");
					this.OnGCSMShowInvoiceTypeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDispenseMultiMedSheetReconciliationFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool GCSMDispenseMultiMedSheetReconciliationFlag
		{
			get
			{
				return this._GCSMDispenseMultiMedSheetReconciliationFlag;
			}
			set
			{
				if ((this._GCSMDispenseMultiMedSheetReconciliationFlag != value))
				{
					this.OnGCSMDispenseMultiMedSheetReconciliationFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMDispenseMultiMedSheetReconciliationFlag = value;
					this.SendPropertyChanged("GCSMDispenseMultiMedSheetReconciliationFlag");
					this.OnGCSMDispenseMultiMedSheetReconciliationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstSnapshotFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FirstSnapshotFlag
		{
			get
			{
				return this._FirstSnapshotFlag;
			}
			set
			{
				if ((this._FirstSnapshotFlag != value))
				{
					this.OnFirstSnapshotFlagChanging(value);
					this.SendPropertyChanging();
					this._FirstSnapshotFlag = value;
					this.SendPropertyChanged("FirstSnapshotFlag");
					this.OnFirstSnapshotFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMChangeEmptyDestructionBinQuantityFlag", DbType="Bit NOT NULL")]
		public bool GCSMChangeEmptyDestructionBinQuantityFlag
		{
			get
			{
				return this._GCSMChangeEmptyDestructionBinQuantityFlag;
			}
			set
			{
				if ((this._GCSMChangeEmptyDestructionBinQuantityFlag != value))
				{
					this.OnGCSMChangeEmptyDestructionBinQuantityFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMChangeEmptyDestructionBinQuantityFlag = value;
					this.SendPropertyChanged("GCSMChangeEmptyDestructionBinQuantityFlag");
					this.OnGCSMChangeEmptyDestructionBinQuantityFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMAddItemFromCountDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMAddItemFromCountDestructionBinFlag
		{
			get
			{
				return this._GCSMAddItemFromCountDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMAddItemFromCountDestructionBinFlag != value))
				{
					this.OnGCSMAddItemFromCountDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMAddItemFromCountDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMAddItemFromCountDestructionBinFlag");
					this.OnGCSMAddItemFromCountDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMAddItemFromEmptyDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMAddItemFromEmptyDestructionBinFlag
		{
			get
			{
				return this._GCSMAddItemFromEmptyDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMAddItemFromEmptyDestructionBinFlag != value))
				{
					this.OnGCSMAddItemFromEmptyDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMAddItemFromEmptyDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMAddItemFromEmptyDestructionBinFlag");
					this.OnGCSMAddItemFromEmptyDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDestructionBinEmptyWithDiscrepancyModeInternalCode", DbType="VarChar(10)")]
		public string GCSMDestructionBinEmptyWithDiscrepancyModeInternalCode
		{
			get
			{
				return this._GCSMDestructionBinEmptyWithDiscrepancyModeInternalCode;
			}
			set
			{
				if ((this._GCSMDestructionBinEmptyWithDiscrepancyModeInternalCode != value))
				{
					this.OnGCSMDestructionBinEmptyWithDiscrepancyModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._GCSMDestructionBinEmptyWithDiscrepancyModeInternalCode = value;
					this.SendPropertyChanged("GCSMDestructionBinEmptyWithDiscrepancyModeInternalCode");
					this.OnGCSMDestructionBinEmptyWithDiscrepancyModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisablePyxisBarcodeScanOnLoadRefillFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DisablePyxisBarcodeScanOnLoadRefillFlag
		{
			get
			{
				return this._DisablePyxisBarcodeScanOnLoadRefillFlag;
			}
			set
			{
				if ((this._DisablePyxisBarcodeScanOnLoadRefillFlag != value))
				{
					this.OnDisablePyxisBarcodeScanOnLoadRefillFlagChanging(value);
					this.SendPropertyChanging();
					this._DisablePyxisBarcodeScanOnLoadRefillFlag = value;
					this.SendPropertyChanged("DisablePyxisBarcodeScanOnLoadRefillFlag");
					this.OnDisablePyxisBarcodeScanOnLoadRefillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreventCardPINAuthenticationFailoverFlag", DbType="Bit NOT NULL")]
		public bool PreventCardPINAuthenticationFailoverFlag
		{
			get
			{
				return this._PreventCardPINAuthenticationFailoverFlag;
			}
			set
			{
				if ((this._PreventCardPINAuthenticationFailoverFlag != value))
				{
					this.OnPreventCardPINAuthenticationFailoverFlagChanging(value);
					this.SendPropertyChanging();
					this._PreventCardPINAuthenticationFailoverFlag = value;
					this.SendPropertyChanged("PreventCardPINAuthenticationFailoverFlag");
					this.OnPreventCardPINAuthenticationFailoverFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFIDFailoverInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RFIDFailoverInternalCode
		{
			get
			{
				return this._RFIDFailoverInternalCode;
			}
			set
			{
				if ((this._RFIDFailoverInternalCode != value))
				{
					this.OnRFIDFailoverInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._RFIDFailoverInternalCode = value;
					this.SendPropertyChanged("RFIDFailoverInternalCode");
					this.OnRFIDFailoverInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityEntity_UnitEntity", Storage="_UnitEntities", ThisKey="Key", OtherKey="FacilityKey")]
		public EntitySet<UnitEntity> UnitEntities
		{
			get
			{
				return this._UnitEntities;
			}
			set
			{
				this._UnitEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityEntity_AreaEntity", Storage="_AreaEntities", ThisKey="Key", OtherKey="FacilityKey")]
		public EntitySet<AreaEntity> AreaEntities
		{
			get
			{
				return this._AreaEntities;
			}
			set
			{
				this._AreaEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityEntity_FacilityPatientSiloEntity", Storage="_FacilityPatientSiloEntities", ThisKey="Key", OtherKey="FacilityKey")]
		public EntitySet<FacilityPatientSiloEntity> FacilityPatientSiloEntities
		{
			get
			{
				return this._FacilityPatientSiloEntities;
			}
			set
			{
				this._FacilityPatientSiloEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UnitEntities(UnitEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityEntity = this;
		}
		
		private void detach_UnitEntities(UnitEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityEntity = null;
		}
		
		private void attach_AreaEntities(AreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityEntity = this;
		}
		
		private void detach_AreaEntities(AreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityEntity = null;
		}
		
		private void attach_FacilityPatientSiloEntities(FacilityPatientSiloEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityEntity = this;
		}
		
		private void detach_FacilityPatientSiloEntities(FacilityPatientSiloEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Location.vw_UnitCurrent")]
	public partial class UnitEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UnitSnapshotKey;
		
		private System.Guid _FacilityKey;
		
		private string _LocationTypeInternalCode;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private string _UnitName;
		
		private string _DescriptionText;
		
		private string _AutoDischargeModeInternalCode;
		
		private System.Nullable<short> _AutoDischargeDurationAmount;
		
		private System.Nullable<short> _AlternateAutoDischargeDurationAmount;
		
		private bool _ShowPreadmissionFlag;
		
		private bool _ShowRecurringAdmissionFlag;
		
		private System.Nullable<short> _PreadmissionLeadDurationAmount;
		
		private System.Nullable<short> _PreadmissionProlongedInactivityDurationAmount;
		
		private System.Nullable<short> _AdmissionProlongedInactivityDurationAmount;
		
		private System.Nullable<short> _DischargeDelayDurationAmount;
		
		private System.Nullable<short> _TransferDelayDurationAmount;
		
		private string _OMNLNoticePrinterName;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private bool _LongTermCareFlag;
		
		private EntitySet<UnitRoomEntity> _UnitRoomEntities;
		
		private EntitySet<AreaUnitEntity> _AreaUnitEntities;
		
		private EntityRef<FacilityEntity> _FacilityEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUnitSnapshotKeyChanging(System.Guid value);
    partial void OnUnitSnapshotKeyChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnLocationTypeInternalCodeChanging(string value);
    partial void OnLocationTypeInternalCodeChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnAutoDischargeModeInternalCodeChanging(string value);
    partial void OnAutoDischargeModeInternalCodeChanged();
    partial void OnAutoDischargeDurationAmountChanging(System.Nullable<short> value);
    partial void OnAutoDischargeDurationAmountChanged();
    partial void OnAlternateAutoDischargeDurationAmountChanging(System.Nullable<short> value);
    partial void OnAlternateAutoDischargeDurationAmountChanged();
    partial void OnShowPreadmissionFlagChanging(bool value);
    partial void OnShowPreadmissionFlagChanged();
    partial void OnShowRecurringAdmissionFlagChanging(bool value);
    partial void OnShowRecurringAdmissionFlagChanged();
    partial void OnPreadmissionLeadDurationAmountChanging(System.Nullable<short> value);
    partial void OnPreadmissionLeadDurationAmountChanged();
    partial void OnPreadmissionProlongedInactivityDurationAmountChanging(System.Nullable<short> value);
    partial void OnPreadmissionProlongedInactivityDurationAmountChanged();
    partial void OnAdmissionProlongedInactivityDurationAmountChanging(System.Nullable<short> value);
    partial void OnAdmissionProlongedInactivityDurationAmountChanged();
    partial void OnDischargeDelayDurationAmountChanging(System.Nullable<short> value);
    partial void OnDischargeDelayDurationAmountChanged();
    partial void OnTransferDelayDurationAmountChanging(System.Nullable<short> value);
    partial void OnTransferDelayDurationAmountChanged();
    partial void OnOMNLNoticePrinterNameChanging(string value);
    partial void OnOMNLNoticePrinterNameChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnLongTermCareFlagChanging(bool value);
    partial void OnLongTermCareFlagChanged();
    #endregion
		
		public UnitEntity()
		{
			this._UnitRoomEntities = new EntitySet<UnitRoomEntity>(new Action<UnitRoomEntity>(this.attach_UnitRoomEntities), new Action<UnitRoomEntity>(this.detach_UnitRoomEntities));
			this._AreaUnitEntities = new EntitySet<AreaUnitEntity>(new Action<AreaUnitEntity>(this.attach_AreaUnitEntities), new Action<AreaUnitEntity>(this.detach_AreaUnitEntities));
			this._FacilityEntity = default(EntityRef<FacilityEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UnitKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UnitSnapshotKey
		{
			get
			{
				return this._UnitSnapshotKey;
			}
			set
			{
				if ((this._UnitSnapshotKey != value))
				{
					this.OnUnitSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._UnitSnapshotKey = value;
					this.SendPropertyChanged("UnitSnapshotKey");
					this.OnUnitSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					if (this._FacilityEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LocationTypeInternalCode
		{
			get
			{
				return this._LocationTypeInternalCode;
			}
			set
			{
				if ((this._LocationTypeInternalCode != value))
				{
					this.OnLocationTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationTypeInternalCode = value;
					this.SendPropertyChanged("LocationTypeInternalCode");
					this.OnLocationTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoDischargeModeInternalCode", DbType="VarChar(10)")]
		public string AutoDischargeModeInternalCode
		{
			get
			{
				return this._AutoDischargeModeInternalCode;
			}
			set
			{
				if ((this._AutoDischargeModeInternalCode != value))
				{
					this.OnAutoDischargeModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._AutoDischargeModeInternalCode = value;
					this.SendPropertyChanged("AutoDischargeModeInternalCode");
					this.OnAutoDischargeModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoDischargeDurationAmount", DbType="SmallInt")]
		public System.Nullable<short> AutoDischargeDurationAmount
		{
			get
			{
				return this._AutoDischargeDurationAmount;
			}
			set
			{
				if ((this._AutoDischargeDurationAmount != value))
				{
					this.OnAutoDischargeDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._AutoDischargeDurationAmount = value;
					this.SendPropertyChanged("AutoDischargeDurationAmount");
					this.OnAutoDischargeDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateAutoDischargeDurationAmount", DbType="SmallInt")]
		public System.Nullable<short> AlternateAutoDischargeDurationAmount
		{
			get
			{
				return this._AlternateAutoDischargeDurationAmount;
			}
			set
			{
				if ((this._AlternateAutoDischargeDurationAmount != value))
				{
					this.OnAlternateAutoDischargeDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._AlternateAutoDischargeDurationAmount = value;
					this.SendPropertyChanged("AlternateAutoDischargeDurationAmount");
					this.OnAlternateAutoDischargeDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowPreadmissionFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ShowPreadmissionFlag
		{
			get
			{
				return this._ShowPreadmissionFlag;
			}
			set
			{
				if ((this._ShowPreadmissionFlag != value))
				{
					this.OnShowPreadmissionFlagChanging(value);
					this.SendPropertyChanging();
					this._ShowPreadmissionFlag = value;
					this.SendPropertyChanged("ShowPreadmissionFlag");
					this.OnShowPreadmissionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowRecurringAdmissionFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ShowRecurringAdmissionFlag
		{
			get
			{
				return this._ShowRecurringAdmissionFlag;
			}
			set
			{
				if ((this._ShowRecurringAdmissionFlag != value))
				{
					this.OnShowRecurringAdmissionFlagChanging(value);
					this.SendPropertyChanging();
					this._ShowRecurringAdmissionFlag = value;
					this.SendPropertyChanged("ShowRecurringAdmissionFlag");
					this.OnShowRecurringAdmissionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmissionLeadDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> PreadmissionLeadDurationAmount
		{
			get
			{
				return this._PreadmissionLeadDurationAmount;
			}
			set
			{
				if ((this._PreadmissionLeadDurationAmount != value))
				{
					this.OnPreadmissionLeadDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._PreadmissionLeadDurationAmount = value;
					this.SendPropertyChanged("PreadmissionLeadDurationAmount");
					this.OnPreadmissionLeadDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmissionProlongedInactivityDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> PreadmissionProlongedInactivityDurationAmount
		{
			get
			{
				return this._PreadmissionProlongedInactivityDurationAmount;
			}
			set
			{
				if ((this._PreadmissionProlongedInactivityDurationAmount != value))
				{
					this.OnPreadmissionProlongedInactivityDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._PreadmissionProlongedInactivityDurationAmount = value;
					this.SendPropertyChanged("PreadmissionProlongedInactivityDurationAmount");
					this.OnPreadmissionProlongedInactivityDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionProlongedInactivityDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AdmissionProlongedInactivityDurationAmount
		{
			get
			{
				return this._AdmissionProlongedInactivityDurationAmount;
			}
			set
			{
				if ((this._AdmissionProlongedInactivityDurationAmount != value))
				{
					this.OnAdmissionProlongedInactivityDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._AdmissionProlongedInactivityDurationAmount = value;
					this.SendPropertyChanged("AdmissionProlongedInactivityDurationAmount");
					this.OnAdmissionProlongedInactivityDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDelayDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DischargeDelayDurationAmount
		{
			get
			{
				return this._DischargeDelayDurationAmount;
			}
			set
			{
				if ((this._DischargeDelayDurationAmount != value))
				{
					this.OnDischargeDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._DischargeDelayDurationAmount = value;
					this.SendPropertyChanged("DischargeDelayDurationAmount");
					this.OnDischargeDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDelayDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TransferDelayDurationAmount
		{
			get
			{
				return this._TransferDelayDurationAmount;
			}
			set
			{
				if ((this._TransferDelayDurationAmount != value))
				{
					this.OnTransferDelayDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._TransferDelayDurationAmount = value;
					this.SendPropertyChanged("TransferDelayDurationAmount");
					this.OnTransferDelayDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMNLNoticePrinterName", DbType="NVarChar(260)", UpdateCheck=UpdateCheck.Never)]
		public string OMNLNoticePrinterName
		{
			get
			{
				return this._OMNLNoticePrinterName;
			}
			set
			{
				if ((this._OMNLNoticePrinterName != value))
				{
					this.OnOMNLNoticePrinterNameChanging(value);
					this.SendPropertyChanging();
					this._OMNLNoticePrinterName = value;
					this.SendPropertyChanged("OMNLNoticePrinterName");
					this.OnOMNLNoticePrinterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongTermCareFlag", DbType="Bit NOT NULL")]
		public bool LongTermCareFlag
		{
			get
			{
				return this._LongTermCareFlag;
			}
			set
			{
				if ((this._LongTermCareFlag != value))
				{
					this.OnLongTermCareFlagChanging(value);
					this.SendPropertyChanging();
					this._LongTermCareFlag = value;
					this.SendPropertyChanged("LongTermCareFlag");
					this.OnLongTermCareFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitEntity_UnitRoomEntity", Storage="_UnitRoomEntities", ThisKey="Key", OtherKey="UnitKey")]
		public EntitySet<UnitRoomEntity> UnitRoomEntities
		{
			get
			{
				return this._UnitRoomEntities;
			}
			set
			{
				this._UnitRoomEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitEntity_AreaUnitEntity", Storage="_AreaUnitEntities", ThisKey="Key", OtherKey="UnitKey")]
		public EntitySet<AreaUnitEntity> AreaUnitEntities
		{
			get
			{
				return this._AreaUnitEntities;
			}
			set
			{
				this._AreaUnitEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityEntity_UnitEntity", Storage="_FacilityEntity", ThisKey="FacilityKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityEntity FacilityEntity
		{
			get
			{
				return this._FacilityEntity.Entity;
			}
			set
			{
				FacilityEntity previousValue = this._FacilityEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityEntity.Entity = null;
						previousValue.UnitEntities.Remove(this);
					}
					this._FacilityEntity.Entity = value;
					if ((value != null))
					{
						value.UnitEntities.Add(this);
						this._FacilityKey = value.Key;
					}
					else
					{
						this._FacilityKey = default(System.Guid);
					}
					this.SendPropertyChanged("FacilityEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UnitRoomEntities(UnitRoomEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnitEntity = this;
		}
		
		private void detach_UnitRoomEntities(UnitRoomEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnitEntity = null;
		}
		
		private void attach_AreaUnitEntities(AreaUnitEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnitEntity = this;
		}
		
		private void detach_AreaUnitEntities(AreaUnitEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnitEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Location.vw_UnitRoomCurrent")]
	public partial class UnitRoomEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UnitRoomSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _UnitKey;
		
		private string _RoomName;
		
		private string _RoomDescriptionText;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<UnitEntity> _UnitEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUnitRoomSnapshotKeyChanging(System.Guid value);
    partial void OnUnitRoomSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnUnitKeyChanging(System.Guid value);
    partial void OnUnitKeyChanged();
    partial void OnRoomNameChanging(string value);
    partial void OnRoomNameChanged();
    partial void OnRoomDescriptionTextChanging(string value);
    partial void OnRoomDescriptionTextChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UnitRoomEntity()
		{
			this._UnitEntity = default(EntityRef<UnitEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UnitRoomKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitRoomSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UnitRoomSnapshotKey
		{
			get
			{
				return this._UnitRoomSnapshotKey;
			}
			set
			{
				if ((this._UnitRoomSnapshotKey != value))
				{
					this.OnUnitRoomSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._UnitRoomSnapshotKey = value;
					this.SendPropertyChanged("UnitRoomSnapshotKey");
					this.OnUnitRoomSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UnitKey
		{
			get
			{
				return this._UnitKey;
			}
			set
			{
				if ((this._UnitKey != value))
				{
					if (this._UnitEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitKeyChanging(value);
					this.SendPropertyChanging();
					this._UnitKey = value;
					this.SendPropertyChanged("UnitKey");
					this.OnUnitKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RoomName
		{
			get
			{
				return this._RoomName;
			}
			set
			{
				if ((this._RoomName != value))
				{
					this.OnRoomNameChanging(value);
					this.SendPropertyChanging();
					this._RoomName = value;
					this.SendPropertyChanged("RoomName");
					this.OnRoomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomDescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string RoomDescriptionText
		{
			get
			{
				return this._RoomDescriptionText;
			}
			set
			{
				if ((this._RoomDescriptionText != value))
				{
					this.OnRoomDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._RoomDescriptionText = value;
					this.SendPropertyChanged("RoomDescriptionText");
					this.OnRoomDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitEntity_UnitRoomEntity", Storage="_UnitEntity", ThisKey="UnitKey", OtherKey="Key", IsForeignKey=true)]
		public UnitEntity UnitEntity
		{
			get
			{
				return this._UnitEntity.Entity;
			}
			set
			{
				UnitEntity previousValue = this._UnitEntity.Entity;
				if (((previousValue != value) 
							|| (this._UnitEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitEntity.Entity = null;
						previousValue.UnitRoomEntities.Remove(this);
					}
					this._UnitEntity.Entity = value;
					if ((value != null))
					{
						value.UnitRoomEntities.Add(this);
						this._UnitKey = value.Key;
					}
					else
					{
						this._UnitKey = default(System.Guid);
					}
					this.SendPropertyChanged("UnitEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Location.vw_AreaCurrent")]
	public partial class AreaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _AreaSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _FacilityKey;
		
		private string _AreaName;
		
		private string _DescriptionText;
		
		private bool _AllUserRolesFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<AreaDispensingDeviceEntity> _AreaDispensingDeviceEntities;
		
		private EntitySet<AreaUnitEntity> _AreaUnitEntities;
		
		private EntitySet<UserRoleAreaEntity> _UserRoleAreas;
		
		private EntityRef<FacilityEntity> _FacilityEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnAreaSnapshotKeyChanging(System.Guid value);
    partial void OnAreaSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnAreaNameChanging(string value);
    partial void OnAreaNameChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnAllUserRolesFlagChanging(bool value);
    partial void OnAllUserRolesFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public AreaEntity()
		{
			this._AreaDispensingDeviceEntities = new EntitySet<AreaDispensingDeviceEntity>(new Action<AreaDispensingDeviceEntity>(this.attach_AreaDispensingDeviceEntities), new Action<AreaDispensingDeviceEntity>(this.detach_AreaDispensingDeviceEntities));
			this._AreaUnitEntities = new EntitySet<AreaUnitEntity>(new Action<AreaUnitEntity>(this.attach_AreaUnitEntities), new Action<AreaUnitEntity>(this.detach_AreaUnitEntities));
			this._UserRoleAreas = new EntitySet<UserRoleAreaEntity>(new Action<UserRoleAreaEntity>(this.attach_UserRoleAreas), new Action<UserRoleAreaEntity>(this.detach_UserRoleAreas));
			this._FacilityEntity = default(EntityRef<FacilityEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AreaKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AreaSnapshotKey
		{
			get
			{
				return this._AreaSnapshotKey;
			}
			set
			{
				if ((this._AreaSnapshotKey != value))
				{
					this.OnAreaSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._AreaSnapshotKey = value;
					this.SendPropertyChanged("AreaSnapshotKey");
					this.OnAreaSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					if (this._FacilityEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AreaName
		{
			get
			{
				return this._AreaName;
			}
			set
			{
				if ((this._AreaName != value))
				{
					this.OnAreaNameChanging(value);
					this.SendPropertyChanging();
					this._AreaName = value;
					this.SendPropertyChanged("AreaName");
					this.OnAreaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllUserRolesFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllUserRolesFlag
		{
			get
			{
				return this._AllUserRolesFlag;
			}
			set
			{
				if ((this._AllUserRolesFlag != value))
				{
					this.OnAllUserRolesFlagChanging(value);
					this.SendPropertyChanging();
					this._AllUserRolesFlag = value;
					this.SendPropertyChanged("AllUserRolesFlag");
					this.OnAllUserRolesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaEntity_AreaDispensingDeviceEntity", Storage="_AreaDispensingDeviceEntities", ThisKey="Key", OtherKey="AreaKey")]
		public EntitySet<AreaDispensingDeviceEntity> AreaDispensingDeviceEntities
		{
			get
			{
				return this._AreaDispensingDeviceEntities;
			}
			set
			{
				this._AreaDispensingDeviceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaEntity_AreaUnitEntity", Storage="_AreaUnitEntities", ThisKey="Key", OtherKey="AreaKey")]
		public EntitySet<AreaUnitEntity> AreaUnitEntities
		{
			get
			{
				return this._AreaUnitEntities;
			}
			set
			{
				this._AreaUnitEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaEntity_UserRoleAreaEntity", Storage="_UserRoleAreas", ThisKey="Key", OtherKey="AreaKey")]
		public EntitySet<UserRoleAreaEntity> UserRoleAreaEntities
		{
			get
			{
				return this._UserRoleAreas;
			}
			set
			{
				this._UserRoleAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityEntity_AreaEntity", Storage="_FacilityEntity", ThisKey="FacilityKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityEntity FacilityEntity
		{
			get
			{
				return this._FacilityEntity.Entity;
			}
			set
			{
				FacilityEntity previousValue = this._FacilityEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityEntity.Entity = null;
						previousValue.AreaEntities.Remove(this);
					}
					this._FacilityEntity.Entity = value;
					if ((value != null))
					{
						value.AreaEntities.Add(this);
						this._FacilityKey = value.Key;
					}
					else
					{
						this._FacilityKey = default(System.Guid);
					}
					this.SendPropertyChanged("FacilityEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AreaDispensingDeviceEntities(AreaDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.AreaEntity = this;
		}
		
		private void detach_AreaDispensingDeviceEntities(AreaDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.AreaEntity = null;
		}
		
		private void attach_AreaUnitEntities(AreaUnitEntity entity)
		{
			this.SendPropertyChanging();
			entity.AreaEntity = this;
		}
		
		private void detach_AreaUnitEntities(AreaUnitEntity entity)
		{
			this.SendPropertyChanging();
			entity.AreaEntity = null;
		}
		
		private void attach_UserRoleAreas(UserRoleAreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.AreaEntity = this;
		}
		
		private void detach_UserRoleAreas(UserRoleAreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.AreaEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Location.vw_AreaDispensingDeviceCurrent")]
	public partial class AreaDispensingDeviceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _AreaKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<AreaEntity> _AreaEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnAreaKeyChanging(System.Guid value);
    partial void OnAreaKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public AreaDispensingDeviceEntity()
		{
			this._AreaEntity = default(EntityRef<AreaEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AreaDispensingDeviceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					if (this._AreaEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaKeyChanging(value);
					this.SendPropertyChanging();
					this._AreaKey = value;
					this.SendPropertyChanged("AreaKey");
					this.OnAreaKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaEntity_AreaDispensingDeviceEntity", Storage="_AreaEntity", ThisKey="AreaKey", OtherKey="Key", IsForeignKey=true)]
		public AreaEntity AreaEntity
		{
			get
			{
				return this._AreaEntity.Entity;
			}
			set
			{
				AreaEntity previousValue = this._AreaEntity.Entity;
				if (((previousValue != value) 
							|| (this._AreaEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaEntity.Entity = null;
						previousValue.AreaDispensingDeviceEntities.Remove(this);
					}
					this._AreaEntity.Entity = value;
					if ((value != null))
					{
						value.AreaDispensingDeviceEntities.Add(this);
						this._AreaKey = value.Key;
					}
					else
					{
						this._AreaKey = default(System.Guid);
					}
					this.SendPropertyChanged("AreaEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Location.vw_AreaUnitCurrent")]
	public partial class AreaUnitEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _AreaKey;
		
		private System.Guid _UnitKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<AreaEntity> _AreaEntity;
		
		private EntityRef<UnitEntity> _UnitEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnAreaKeyChanging(System.Guid value);
    partial void OnAreaKeyChanged();
    partial void OnUnitKeyChanging(System.Guid value);
    partial void OnUnitKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public AreaUnitEntity()
		{
			this._AreaEntity = default(EntityRef<AreaEntity>);
			this._UnitEntity = default(EntityRef<UnitEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AreaUnitKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					if (this._AreaEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaKeyChanging(value);
					this.SendPropertyChanging();
					this._AreaKey = value;
					this.SendPropertyChanged("AreaKey");
					this.OnAreaKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UnitKey
		{
			get
			{
				return this._UnitKey;
			}
			set
			{
				if ((this._UnitKey != value))
				{
					if (this._UnitEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitKeyChanging(value);
					this.SendPropertyChanging();
					this._UnitKey = value;
					this.SendPropertyChanged("UnitKey");
					this.OnUnitKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaEntity_AreaUnitEntity", Storage="_AreaEntity", ThisKey="AreaKey", OtherKey="Key", IsForeignKey=true)]
		public AreaEntity AreaEntity
		{
			get
			{
				return this._AreaEntity.Entity;
			}
			set
			{
				AreaEntity previousValue = this._AreaEntity.Entity;
				if (((previousValue != value) 
							|| (this._AreaEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaEntity.Entity = null;
						previousValue.AreaUnitEntities.Remove(this);
					}
					this._AreaEntity.Entity = value;
					if ((value != null))
					{
						value.AreaUnitEntities.Add(this);
						this._AreaKey = value.Key;
					}
					else
					{
						this._AreaKey = default(System.Guid);
					}
					this.SendPropertyChanged("AreaEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitEntity_AreaUnitEntity", Storage="_UnitEntity", ThisKey="UnitKey", OtherKey="Key", IsForeignKey=true)]
		public UnitEntity UnitEntity
		{
			get
			{
				return this._UnitEntity.Entity;
			}
			set
			{
				UnitEntity previousValue = this._UnitEntity.Entity;
				if (((previousValue != value) 
							|| (this._UnitEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitEntity.Entity = null;
						previousValue.AreaUnitEntities.Remove(this);
					}
					this._UnitEntity.Entity = value;
					if ((value != null))
					{
						value.AreaUnitEntities.Add(this);
						this._UnitKey = value.Key;
					}
					else
					{
						this._UnitKey = default(System.Guid);
					}
					this.SendPropertyChanged("UnitEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Location.vw_FacilityPatientSiloCurrent")]
	public partial class FacilityPatientSiloEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FacilityKey;
		
		private System.Guid _PatientSiloKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private string _FacilityPatientSiloStatusInternalCode;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<FacilityEntity> _FacilityEntity;
		
		private EntityRef<FacilityPatientSiloStatusEntity> _FacilityPatientSiloStatusEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnPatientSiloKeyChanging(System.Guid value);
    partial void OnPatientSiloKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnFacilityPatientSiloStatusInternalCodeChanging(string value);
    partial void OnFacilityPatientSiloStatusInternalCodeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public FacilityPatientSiloEntity()
		{
			this._FacilityEntity = default(EntityRef<FacilityEntity>);
			this._FacilityPatientSiloStatusEntity = default(EntityRef<FacilityPatientSiloStatusEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FacilityPatientSiloKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					if (this._FacilityEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSiloKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientSiloKey
		{
			get
			{
				return this._PatientSiloKey;
			}
			set
			{
				if ((this._PatientSiloKey != value))
				{
					this.OnPatientSiloKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientSiloKey = value;
					this.SendPropertyChanged("PatientSiloKey");
					this.OnPatientSiloKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityPatientSiloStatusInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string FacilityPatientSiloStatusInternalCode
		{
			get
			{
				return this._FacilityPatientSiloStatusInternalCode;
			}
			set
			{
				if ((this._FacilityPatientSiloStatusInternalCode != value))
				{
					if (this._FacilityPatientSiloStatusEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityPatientSiloStatusInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._FacilityPatientSiloStatusInternalCode = value;
					this.SendPropertyChanged("FacilityPatientSiloStatusInternalCode");
					this.OnFacilityPatientSiloStatusInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityEntity_FacilityPatientSiloEntity", Storage="_FacilityEntity", ThisKey="FacilityKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityEntity FacilityEntity
		{
			get
			{
				return this._FacilityEntity.Entity;
			}
			set
			{
				FacilityEntity previousValue = this._FacilityEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityEntity.Entity = null;
						previousValue.FacilityPatientSiloEntities.Remove(this);
					}
					this._FacilityEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityPatientSiloEntities.Add(this);
						this._FacilityKey = value.Key;
					}
					else
					{
						this._FacilityKey = default(System.Guid);
					}
					this.SendPropertyChanged("FacilityEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityPatientSiloStatusEntity_FacilityPatientSiloEntity", Storage="_FacilityPatientSiloStatusEntity", ThisKey="FacilityPatientSiloStatusInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public FacilityPatientSiloStatusEntity FacilityPatientSiloStatusEntity
		{
			get
			{
				return this._FacilityPatientSiloStatusEntity.Entity;
			}
			set
			{
				FacilityPatientSiloStatusEntity previousValue = this._FacilityPatientSiloStatusEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityPatientSiloStatusEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityPatientSiloStatusEntity.Entity = null;
						previousValue.FacilityPatientSiloEntities.Remove(this);
					}
					this._FacilityPatientSiloStatusEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityPatientSiloEntities.Add(this);
						this._FacilityPatientSiloStatusInternalCode = value.InternalCode;
					}
					else
					{
						this._FacilityPatientSiloStatusInternalCode = default(string);
					}
					this.SendPropertyChanged("FacilityPatientSiloStatusEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Core.vw_UserRoleAreaCurrent")]
	public partial class UserRoleAreaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserRoleAreaKey;
		
		private System.Guid _UserRoleKey;
		
		private System.Guid _AreaKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<AreaEntity> _AreaEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserRoleKeyChanging(System.Guid value);
    partial void OnUserRoleKeyChanged();
    partial void OnAreaKeyChanging(System.Guid value);
    partial void OnAreaKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserRoleAreaEntity()
		{
			this._AreaEntity = default(EntityRef<AreaEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserRoleAreaKey", Storage="_UserRoleAreaKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._UserRoleAreaKey;
			}
			set
			{
				if ((this._UserRoleAreaKey != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._UserRoleAreaKey = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserRoleKey
		{
			get
			{
				return this._UserRoleKey;
			}
			set
			{
				if ((this._UserRoleKey != value))
				{
					this.OnUserRoleKeyChanging(value);
					this.SendPropertyChanging();
					this._UserRoleKey = value;
					this.SendPropertyChanged("UserRoleKey");
					this.OnUserRoleKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					if (this._AreaEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaKeyChanging(value);
					this.SendPropertyChanging();
					this._AreaKey = value;
					this.SendPropertyChanged("AreaKey");
					this.OnAreaKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaEntity_UserRoleAreaEntity", Storage="_AreaEntity", ThisKey="AreaKey", OtherKey="Key", IsForeignKey=true)]
		public AreaEntity AreaEntity
		{
			get
			{
				return this._AreaEntity.Entity;
			}
			set
			{
				AreaEntity previousValue = this._AreaEntity.Entity;
				if (((previousValue != value) 
							|| (this._AreaEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaEntity.Entity = null;
						previousValue.UserRoleAreaEntities.Remove(this);
					}
					this._AreaEntity.Entity = value;
					if ((value != null))
					{
						value.UserRoleAreaEntities.Add(this);
						this._AreaKey = value.Key;
					}
					else
					{
						this._AreaKey = default(System.Guid);
					}
					this.SendPropertyChanged("AreaEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Location.FacilityPatientSiloStatus")]
	public partial class FacilityPatientSiloStatusEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityPatientSiloEntity> _FacilityPatientSiloEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public FacilityPatientSiloStatusEntity()
		{
			this._FacilityPatientSiloEntities = new EntitySet<FacilityPatientSiloEntity>(new Action<FacilityPatientSiloEntity>(this.attach_FacilityPatientSiloEntities), new Action<FacilityPatientSiloEntity>(this.detach_FacilityPatientSiloEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FacilityPatientSiloStatusInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityPatientSiloStatusEntity_FacilityPatientSiloEntity", Storage="_FacilityPatientSiloEntities", ThisKey="InternalCode", OtherKey="FacilityPatientSiloStatusInternalCode")]
		public EntitySet<FacilityPatientSiloEntity> FacilityPatientSiloEntities
		{
			get
			{
				return this._FacilityPatientSiloEntities;
			}
			set
			{
				this._FacilityPatientSiloEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityPatientSiloEntities(FacilityPatientSiloEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityPatientSiloStatusEntity = this;
		}
		
		private void detach_FacilityPatientSiloEntities(FacilityPatientSiloEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityPatientSiloStatusEntity = null;
		}
	}
}
#pragma warning restore 1591
