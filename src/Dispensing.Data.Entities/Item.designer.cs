#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CareFusion.Dispensing.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSServerOLTP")]
	internal partial class ItemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertItemEntity(ItemEntity instance);
    partial void UpdateItemEntity(ItemEntity instance);
    partial void DeleteItemEntity(ItemEntity instance);
    partial void InsertMedItemEntity(MedItemEntity instance);
    partial void UpdateMedItemEntity(MedItemEntity instance);
    partial void DeleteMedItemEntity(MedItemEntity instance);
    partial void InsertMedClassEntity(MedClassEntity instance);
    partial void UpdateMedClassEntity(MedClassEntity instance);
    partial void DeleteMedClassEntity(MedClassEntity instance);
    partial void InsertDosageFormEntity(DosageFormEntity instance);
    partial void UpdateDosageFormEntity(DosageFormEntity instance);
    partial void DeleteDosageFormEntity(DosageFormEntity instance);
    partial void InsertSecurityGroupEntity(SecurityGroupEntity instance);
    partial void UpdateSecurityGroupEntity(SecurityGroupEntity instance);
    partial void DeleteSecurityGroupEntity(SecurityGroupEntity instance);
    partial void InsertTherapeuticClassMemberEntity(TherapeuticClassMemberEntity instance);
    partial void UpdateTherapeuticClassMemberEntity(TherapeuticClassMemberEntity instance);
    partial void DeleteTherapeuticClassMemberEntity(TherapeuticClassMemberEntity instance);
    partial void InsertTherapeuticClassEntity(TherapeuticClassEntity instance);
    partial void UpdateTherapeuticClassEntity(TherapeuticClassEntity instance);
    partial void DeleteTherapeuticClassEntity(TherapeuticClassEntity instance);
    partial void InsertItemScanCodeEntity(ItemScanCodeEntity instance);
    partial void UpdateItemScanCodeEntity(ItemScanCodeEntity instance);
    partial void DeleteItemScanCodeEntity(ItemScanCodeEntity instance);
    partial void InsertVerifyCountModeEntity(VerifyCountModeEntity instance);
    partial void UpdateVerifyCountModeEntity(VerifyCountModeEntity instance);
    partial void DeleteVerifyCountModeEntity(VerifyCountModeEntity instance);
    partial void InsertOverrideGroupEntity(OverrideGroupEntity instance);
    partial void UpdateOverrideGroupEntity(OverrideGroupEntity instance);
    partial void DeleteOverrideGroupEntity(OverrideGroupEntity instance);
    partial void InsertOverrideGroupMemberEntity(OverrideGroupMemberEntity instance);
    partial void UpdateOverrideGroupMemberEntity(OverrideGroupMemberEntity instance);
    partial void DeleteOverrideGroupMemberEntity(OverrideGroupMemberEntity instance);
    partial void InsertPickAreaEntity(PickAreaEntity instance);
    partial void UpdatePickAreaEntity(PickAreaEntity instance);
    partial void DeletePickAreaEntity(PickAreaEntity instance);
    partial void InsertFacilityItemEntity(FacilityItemEntity instance);
    partial void UpdateFacilityItemEntity(FacilityItemEntity instance);
    partial void DeleteFacilityItemEntity(FacilityItemEntity instance);
    partial void InsertFacilityItemPickAreaEntity(FacilityItemPickAreaEntity instance);
    partial void UpdateFacilityItemPickAreaEntity(FacilityItemPickAreaEntity instance);
    partial void DeleteFacilityItemPickAreaEntity(FacilityItemPickAreaEntity instance);
    partial void InsertFacilityItemQueueEntity(FacilityItemQueueEntity instance);
    partial void UpdateFacilityItemQueueEntity(FacilityItemQueueEntity instance);
    partial void DeleteFacilityItemQueueEntity(FacilityItemQueueEntity instance);
    partial void InsertMedReturnModeEntity(MedReturnModeEntity instance);
    partial void UpdateMedReturnModeEntity(MedReturnModeEntity instance);
    partial void DeleteMedReturnModeEntity(MedReturnModeEntity instance);
    partial void InsertFacilityItemPhysicalCapacityEntity(FacilityItemPhysicalCapacityEntity instance);
    partial void UpdateFacilityItemPhysicalCapacityEntity(FacilityItemPhysicalCapacityEntity instance);
    partial void DeleteFacilityItemPhysicalCapacityEntity(FacilityItemPhysicalCapacityEntity instance);
    partial void InsertHazardousWasteClassEntity(HazardousWasteClassEntity instance);
    partial void UpdateHazardousWasteClassEntity(HazardousWasteClassEntity instance);
    partial void DeleteHazardousWasteClassEntity(HazardousWasteClassEntity instance);
    partial void InsertFacilityKitEntity(FacilityKitEntity instance);
    partial void UpdateFacilityKitEntity(FacilityKitEntity instance);
    partial void DeleteFacilityKitEntity(FacilityKitEntity instance);
    partial void InsertFacilityKitMemberEntity(FacilityKitMemberEntity instance);
    partial void UpdateFacilityKitMemberEntity(FacilityKitMemberEntity instance);
    partial void DeleteFacilityKitMemberEntity(FacilityKitMemberEntity instance);
    partial void InsertFacilityKitDispensingDeviceEntity(FacilityKitDispensingDeviceEntity instance);
    partial void UpdateFacilityKitDispensingDeviceEntity(FacilityKitDispensingDeviceEntity instance);
    partial void DeleteFacilityKitDispensingDeviceEntity(FacilityKitDispensingDeviceEntity instance);
    partial void InsertItemEquivalencyEntity(ItemEquivalencyEntity instance);
    partial void UpdateItemEquivalencyEntity(ItemEquivalencyEntity instance);
    partial void DeleteItemEquivalencyEntity(ItemEquivalencyEntity instance);
    partial void InsertItemEquivalencySetEntity(ItemEquivalencySetEntity instance);
    partial void UpdateItemEquivalencySetEntity(ItemEquivalencySetEntity instance);
    partial void DeleteItemEquivalencySetEntity(ItemEquivalencySetEntity instance);
    partial void InsertEquivalencyDosageFormGroupEntity(EquivalencyDosageFormGroupEntity instance);
    partial void UpdateEquivalencyDosageFormGroupEntity(EquivalencyDosageFormGroupEntity instance);
    partial void DeleteEquivalencyDosageFormGroupEntity(EquivalencyDosageFormGroupEntity instance);
    partial void InsertMedItemType(MedItemType instance);
    partial void UpdateMedItemType(MedItemType instance);
    partial void DeleteMedItemType(MedItemType instance);
    partial void InsertVariableDoseGroupMemberEntity(VariableDoseGroupMemberEntity instance);
    partial void UpdateVariableDoseGroupMemberEntity(VariableDoseGroupMemberEntity instance);
    partial void DeleteVariableDoseGroupMemberEntity(VariableDoseGroupMemberEntity instance);
    partial void InsertBlockedFacilityItemDispensingDeviceEntity(BlockedFacilityItemDispensingDeviceEntity instance);
    partial void UpdateBlockedFacilityItemDispensingDeviceEntity(BlockedFacilityItemDispensingDeviceEntity instance);
    partial void DeleteBlockedFacilityItemDispensingDeviceEntity(BlockedFacilityItemDispensingDeviceEntity instance);
    partial void InsertReplenishmentScanModeEntity(ReplenishmentScanModeEntity instance);
    partial void UpdateReplenishmentScanModeEntity(ReplenishmentScanModeEntity instance);
    partial void DeleteReplenishmentScanModeEntity(ReplenishmentScanModeEntity instance);
    partial void InsertProductIDEntity(ProductIDEntity instance);
    partial void UpdateProductIDEntity(ProductIDEntity instance);
    partial void DeleteProductIDEntity(ProductIDEntity instance);
    partial void InsertScanProductDeleteReasonEntity(ScanProductDeleteReasonEntity instance);
    partial void UpdateScanProductDeleteReasonEntity(ScanProductDeleteReasonEntity instance);
    partial void DeleteScanProductDeleteReasonEntity(ScanProductDeleteReasonEntity instance);
    partial void InsertUserKitEntity(UserKitEntity instance);
    partial void UpdateUserKitEntity(UserKitEntity instance);
    partial void DeleteUserKitEntity(UserKitEntity instance);
    partial void InsertUserKitMemberEntity(UserKitMemberEntity instance);
    partial void UpdateUserKitMemberEntity(UserKitMemberEntity instance);
    partial void DeleteUserKitMemberEntity(UserKitMemberEntity instance);
    partial void InsertComboComponentEntity(ComboComponentEntity instance);
    partial void UpdateComboComponentEntity(ComboComponentEntity instance);
    partial void DeleteComboComponentEntity(ComboComponentEntity instance);
    partial void InsertComboComponentAdminRouteEntity(ComboComponentAdminRouteEntity instance);
    partial void UpdateComboComponentAdminRouteEntity(ComboComponentAdminRouteEntity instance);
    partial void DeleteComboComponentAdminRouteEntity(ComboComponentAdminRouteEntity instance);
    partial void InsertMedFailoverReturnModeEntity(MedFailoverReturnModeEntity instance);
    partial void UpdateMedFailoverReturnModeEntity(MedFailoverReturnModeEntity instance);
    partial void DeleteMedFailoverReturnModeEntity(MedFailoverReturnModeEntity instance);
    partial void InsertFormularyTemplateEntity(FormularyTemplateEntity instance);
    partial void UpdateFormularyTemplateEntity(FormularyTemplateEntity instance);
    partial void DeleteFormularyTemplateEntity(FormularyTemplateEntity instance);
    partial void InsertFormularyTemplateOverrideGroupEntity(FormularyTemplateOverrideGroupEntity instance);
    partial void UpdateFormularyTemplateOverrideGroupEntity(FormularyTemplateOverrideGroupEntity instance);
    partial void DeleteFormularyTemplateOverrideGroupEntity(FormularyTemplateOverrideGroupEntity instance);
    partial void InsertFractionalUOMTypeEntity(FractionalUOMTypeEntity instance);
    partial void UpdateFractionalUOMTypeEntity(FractionalUOMTypeEntity instance);
    partial void DeleteFractionalUOMTypeEntity(FractionalUOMTypeEntity instance);
    partial void InsertAutoMedLabelModeEntity(AutoMedLabelModeEntity instance);
    partial void UpdateAutoMedLabelModeEntity(AutoMedLabelModeEntity instance);
    partial void DeleteAutoMedLabelModeEntity(AutoMedLabelModeEntity instance);
    #endregion
		
		public ItemDataContext() : 
				base("Data Source=.;Initial Catalog=DSServerOLTP;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public ItemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ItemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ItemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ItemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ItemEntity> ItemEntities
		{
			get
			{
				return this.GetTable<ItemEntity>();
			}
		}
		
		public System.Data.Linq.Table<MedItemEntity> MedItemEntities
		{
			get
			{
				return this.GetTable<MedItemEntity>();
			}
		}
		
		public System.Data.Linq.Table<MedClassEntity> MedClassEntities
		{
			get
			{
				return this.GetTable<MedClassEntity>();
			}
		}
		
		public System.Data.Linq.Table<DosageFormEntity> DosageFormEntities
		{
			get
			{
				return this.GetTable<DosageFormEntity>();
			}
		}
		
		public System.Data.Linq.Table<SecurityGroupEntity> SecurityGroupEntities
		{
			get
			{
				return this.GetTable<SecurityGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<TherapeuticClassMemberEntity> TherapeuticClassMemberEntities
		{
			get
			{
				return this.GetTable<TherapeuticClassMemberEntity>();
			}
		}
		
		public System.Data.Linq.Table<TherapeuticClassEntity> TherapeuticClassEntities
		{
			get
			{
				return this.GetTable<TherapeuticClassEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemScanCodeEntity> ItemScanCodeEntities
		{
			get
			{
				return this.GetTable<ItemScanCodeEntity>();
			}
		}
		
		public System.Data.Linq.Table<VerifyCountModeEntity> VerifyCountModeEntities
		{
			get
			{
				return this.GetTable<VerifyCountModeEntity>();
			}
		}
		
		public System.Data.Linq.Table<OverrideGroupEntity> OverrideGroupEntities
		{
			get
			{
				return this.GetTable<OverrideGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<OverrideGroupMemberEntity> OverrideGroupMemberEntities
		{
			get
			{
				return this.GetTable<OverrideGroupMemberEntity>();
			}
		}
		
		public System.Data.Linq.Table<PickAreaEntity> PickAreaEntities
		{
			get
			{
				return this.GetTable<PickAreaEntity>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this.GetTable<FacilityItemEntity>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemPickAreaEntity> FacilityItemPickAreaEntities
		{
			get
			{
				return this.GetTable<FacilityItemPickAreaEntity>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemQueueEntity> FacilityItemQueueEntities
		{
			get
			{
				return this.GetTable<FacilityItemQueueEntity>();
			}
		}
		
		public System.Data.Linq.Table<MedReturnModeEntity> MedReturnModeEntities
		{
			get
			{
				return this.GetTable<MedReturnModeEntity>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemPhysicalCapacityEntity> FacilityItemPhysicalCapacityEntities
		{
			get
			{
				return this.GetTable<FacilityItemPhysicalCapacityEntity>();
			}
		}
		
		public System.Data.Linq.Table<HazardousWasteClassEntity> HazardousWasteClassEntities
		{
			get
			{
				return this.GetTable<HazardousWasteClassEntity>();
			}
		}
		
		public System.Data.Linq.Table<FacilityKitEntity> FacilityKitEntities
		{
			get
			{
				return this.GetTable<FacilityKitEntity>();
			}
		}
		
		public System.Data.Linq.Table<FacilityKitMemberEntity> FacilityKitMemberEntities
		{
			get
			{
				return this.GetTable<FacilityKitMemberEntity>();
			}
		}
		
		public System.Data.Linq.Table<FacilityKitDispensingDeviceEntity> FacilityKitDispensingDeviceEntities
		{
			get
			{
				return this.GetTable<FacilityKitDispensingDeviceEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemEquivalencyEntity> ItemEquivalencyEntities
		{
			get
			{
				return this.GetTable<ItemEquivalencyEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemEquivalencySetEntity> ItemEquivalencySetEntities
		{
			get
			{
				return this.GetTable<ItemEquivalencySetEntity>();
			}
		}
		
		public System.Data.Linq.Table<EquivalencyDosageFormGroupEntity> EquivalencyDosageFormGroupEntities
		{
			get
			{
				return this.GetTable<EquivalencyDosageFormGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<MedItemType> MedItemTypes
		{
			get
			{
				return this.GetTable<MedItemType>();
			}
		}
		
		public System.Data.Linq.Table<VariableDoseGroupMemberEntity> VariableDoseGroupMemberEntities
		{
			get
			{
				return this.GetTable<VariableDoseGroupMemberEntity>();
			}
		}
		
		public System.Data.Linq.Table<BlockedFacilityItemDispensingDeviceEntity> BlockedFacilityItemDispensingDeviceEntities
		{
			get
			{
				return this.GetTable<BlockedFacilityItemDispensingDeviceEntity>();
			}
		}
		
		public System.Data.Linq.Table<ReplenishmentScanModeEntity> ReplenishmentScanModeEntities
		{
			get
			{
				return this.GetTable<ReplenishmentScanModeEntity>();
			}
		}
		
		public System.Data.Linq.Table<ProductIDEntity> ProductIDEntities
		{
			get
			{
				return this.GetTable<ProductIDEntity>();
			}
		}
		
		public System.Data.Linq.Table<ScanProductDeleteReasonEntity> ScanProductDeleteReasonEntities
		{
			get
			{
				return this.GetTable<ScanProductDeleteReasonEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserKitEntity> UserKitEntities
		{
			get
			{
				return this.GetTable<UserKitEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserKitMemberEntity> UserKitMemberEntities
		{
			get
			{
				return this.GetTable<UserKitMemberEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemTherapeuticClassResult> ItemTherapeuticClassResults
		{
			get
			{
				return this.GetTable<ItemTherapeuticClassResult>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemOverrideGroupResult> FacilityItemOverrideGroupResults
		{
			get
			{
				return this.GetTable<FacilityItemOverrideGroupResult>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemPickAreaResult> FacilityItemPickAreaResults
		{
			get
			{
				return this.GetTable<FacilityItemPickAreaResult>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemPhysicalCapacityResult> FacilityItemPhysicalCapacityResults
		{
			get
			{
				return this.GetTable<FacilityItemPhysicalCapacityResult>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemClinicalDataSubjectResult> FacilityItemClinicalDataSubjectResults
		{
			get
			{
				return this.GetTable<FacilityItemClinicalDataSubjectResult>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemBlockedDispensingDeviceResult> FacilityItemBlockedDispensingDeviceResults
		{
			get
			{
				return this.GetTable<FacilityItemBlockedDispensingDeviceResult>();
			}
		}
		
		public System.Data.Linq.Table<ItemVariableDoseGroupMemberResult> ItemVariableDoseGroupMemberResults
		{
			get
			{
				return this.GetTable<ItemVariableDoseGroupMemberResult>();
			}
		}
		
		public System.Data.Linq.Table<ItemEquivalencySetResult> ItemEquivalencySetResults
		{
			get
			{
				return this.GetTable<ItemEquivalencySetResult>();
			}
		}
		
		public System.Data.Linq.Table<ItemEquivalencyResult> ItemEquivalencyResults
		{
			get
			{
				return this.GetTable<ItemEquivalencyResult>();
			}
		}
		
		public System.Data.Linq.Table<ComboComponentEntity> ComboComponentEntities
		{
			get
			{
				return this.GetTable<ComboComponentEntity>();
			}
		}
		
		public System.Data.Linq.Table<ComboComponentAdminRouteEntity> ComboComponentAdminRouteEntities
		{
			get
			{
				return this.GetTable<ComboComponentAdminRouteEntity>();
			}
		}
		
		public System.Data.Linq.Table<MedFailoverReturnModeEntity> MedFailoverReturnModeEntities
		{
			get
			{
				return this.GetTable<MedFailoverReturnModeEntity>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemComboComponentResult> FacilityItemComboComponentResults
		{
			get
			{
				return this.GetTable<FacilityItemComboComponentResult>();
			}
		}
		
		public System.Data.Linq.Table<ComboComponentAdminRouteResult> ComboComponentAdminRouteResults
		{
			get
			{
				return this.GetTable<ComboComponentAdminRouteResult>();
			}
		}
		
		public System.Data.Linq.Table<FormularyTemplateEntity> FormularyTemplateEntities
		{
			get
			{
				return this.GetTable<FormularyTemplateEntity>();
			}
		}
		
		public System.Data.Linq.Table<FormularyTemplateOverrideGroupEntity> FormularyTemplateOverrideGroupEntities
		{
			get
			{
				return this.GetTable<FormularyTemplateOverrideGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<FormularyTemplateOverrideGroupResult> FormularyTemplateOverrideGroupResults
		{
			get
			{
				return this.GetTable<FormularyTemplateOverrideGroupResult>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemCommonAttributeResult> FacilityItemCommonAttributeResults
		{
			get
			{
				return this.GetTable<FacilityItemCommonAttributeResult>();
			}
		}
		
		public System.Data.Linq.Table<FacilityItemSummaryResult> FacilityItemSummaryResults
		{
			get
			{
				return this.GetTable<FacilityItemSummaryResult>();
			}
		}
		
		public System.Data.Linq.Table<OverrideGroupCommonAttributeResult> OverrideGroupCommonAttributeResults
		{
			get
			{
				return this.GetTable<OverrideGroupCommonAttributeResult>();
			}
		}
		
		public System.Data.Linq.Table<PickAreaCommonAttributeResult> PickAreaCommonAttributeResults
		{
			get
			{
				return this.GetTable<PickAreaCommonAttributeResult>();
			}
		}
		
		public System.Data.Linq.Table<ClinicalDataSubjectCommonAttributeResult> ClinicalDataSubjectCommonAttributeResults
		{
			get
			{
				return this.GetTable<ClinicalDataSubjectCommonAttributeResult>();
			}
		}
		
		public System.Data.Linq.Table<PharmacyFormularySummaryResult> PharmacyFormularySummaryResults
		{
			get
			{
				return this.GetTable<PharmacyFormularySummaryResult>();
			}
		}
		
		public System.Data.Linq.Table<PharmacyFormularyCommonAtrributeResult> PharmacyFormularyCommonAtrributeResults
		{
			get
			{
				return this.GetTable<PharmacyFormularyCommonAtrributeResult>();
			}
		}
		
		public System.Data.Linq.Table<FractionalUOMTypeEntity> FractionalUOMTypeEntities
		{
			get
			{
				return this.GetTable<FractionalUOMTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<AutoMedLabelModeEntity> AutoMedLabelModeEntities
		{
			get
			{
				return this.GetTable<AutoMedLabelModeEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_PickAreaDelete")]
		public int usp_PickAreaDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PickAreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pickAreaKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, pickAreaKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_PickAreaInsert")]
		public int usp_PickAreaInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PickAreaName", DbType="NVarChar(100)")] string pickAreaName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PickAreaKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> pickAreaKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, pickAreaName, facilityKey, lastModifiedActorKey, pickAreaKey);
			pickAreaKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_PickAreaUpdate")]
		public int usp_PickAreaUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PickAreaName", DbType="NVarChar(100)")] string pickAreaName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PickAreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pickAreaKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, pickAreaName, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, pickAreaKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_OverrideGroupMemberDelete")]
		public int usp_OverrideGroupMemberDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> overrideGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityItemKey, overrideGroupKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityItemQueueDelete")]
		public int usp_FacilityItemQueueDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemQueueKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemQueueKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey, facilityItemQueueKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityItemQueueInsert")]
		public int usp_FacilityItemQueueInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AcceptedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> acceptedUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AcceptedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> acceptedLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RejectedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> rejectedUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RejectedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> rejectedLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemQueueKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> facilityItemQueueKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, itemKey, startUTCDateTime, startLocalDateTime, acceptedUTCDateTime, acceptedLocalDateTime, rejectedUTCDateTime, rejectedLocalDateTime, lastModifiedActorKey, facilityItemQueueKey);
			facilityItemQueueKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityItemQueueUpdate")]
		public int usp_FacilityItemQueueUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AcceptedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> acceptedUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AcceptedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> acceptedLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RejectedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> rejectedUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RejectedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> rejectedLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemQueueKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemQueueKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, acceptedUTCDateTime, acceptedLocalDateTime, rejectedUTCDateTime, rejectedLocalDateTime, lastModifiedActorKey, checkConcurrency, facilityItemQueueKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityItemPickAreaDelete")]
		public int usp_FacilityItemPickAreaDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PickAreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pickAreaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityItemKey, pickAreaKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityItemPickAreaInsert")]
		public int usp_FacilityItemPickAreaInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PickAreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pickAreaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityItemKey, pickAreaKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_OverrideGroupInsert")]
		public int usp_OverrideGroupInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(20)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> overrideGroupKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, descriptionText, sortValue, activeFlag, createdUTCDateTime, createdLocalDateTime, lastModifiedActorKey, overrideGroupKey);
			overrideGroupKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_SecurityGroupInsert")]
		public int usp_SecurityGroupInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusinessDomainInternalCode", DbType="VarChar(10)")] string businessDomainInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(20)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> securityGroupKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), businessDomainInternalCode, displayCode, descriptionText, sortValue, activeFlag, createdUTCDateTime, createdLocalDateTime, lastModifiedActorKey, securityGroupKey);
			securityGroupKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_OverrideGroupMemberInsert")]
		public int usp_OverrideGroupMemberInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> overrideGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityItemKey, overrideGroupKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_HazardousWasteClassInsert")]
		public int usp_HazardousWasteClassInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(20)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisposalInstructionsText", DbType="NVarChar(250)")] string disposalInstructionsText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HazardousWasteClassKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> hazardousWasteClassKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, displayCode, descriptionText, disposalInstructionsText, sortValue, createdUTCDateTime, createdLocalDateTime, lastModifiedActorKey, hazardousWasteClassKey);
			hazardousWasteClassKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_HazardousWasteClassDelete")]
		public int usp_HazardousWasteClassDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HazardousWasteClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> hazardousWasteClassKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), endUTCDateTime, endLocalDateTime, lastModifiedActorKey, hazardousWasteClassKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_HazardousWasteClassUpdate")]
		public int usp_HazardousWasteClassUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(20)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisposalInstructionsText", DbType="NVarChar(250)")] string disposalInstructionsText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HazardousWasteClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> hazardousWasteClassKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, descriptionText, disposalInstructionsText, sortValue, endUTCDateTime, endLocalDateTime, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, hazardousWasteClassKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_OverrideGroupUpdate")]
		public int usp_OverrideGroupUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(20)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> overrideGroupKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, descriptionText, sortValue, activeFlag, endUTCDateTime, endLocalDateTime, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, overrideGroupKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_SecurityGroupUpdate")]
		public int usp_SecurityGroupUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(20)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> securityGroupKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, descriptionText, sortValue, activeFlag, endUTCDateTime, endLocalDateTime, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, securityGroupKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_ListNewFacilityItemQueueSummary")]
		public ISingleResult<bsp_ListNewFacilityItemQueueSummaryResult> bsp_ListNewFacilityItemQueueSummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartIndex", DbType="Int")] System.Nullable<int> startIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxRows", DbType="Int")] System.Nullable<int> maxRows)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, startIndex, maxRows);
			return ((ISingleResult<bsp_ListNewFacilityItemQueueSummaryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_ListOverrideItemKeys")]
		public ISingleResult<bsp_ListOverrideItemKeysResult> bsp_ListOverrideItemKeys([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PermissionInternalCode", DbType="VarChar(50)")] string permissionInternalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, dispensingDeviceKey, userAccountKey, permissionInternalCode);
			return ((ISingleResult<bsp_ListOverrideItemKeysResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_ListPermissibleItemKeys")]
		public ISingleResult<bsp_ListPermissibleItemKeysResult> bsp_ListPermissibleItemKeys([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PermissionInternalCode", DbType="VarChar(50)")] string permissionInternalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, dispensingDeviceKey, userAccountKey, permissionInternalCode);
			return ((ISingleResult<bsp_ListPermissibleItemKeysResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityKitDelete")]
		public int usp_FacilityKitDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKitKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, facilityKitKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityKitMemberDelete")]
		public int usp_FacilityKitMemberDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitMemberKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKitMemberKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, facilityKitMemberKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityKitInsert")]
		public int usp_FacilityKitInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitName", DbType="NVarChar(50)")] string facilityKitName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(100)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> facilityKitKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, facilityKey, facilityKitName, descriptionText, lastModifiedActorKey, facilityKitKey);
			facilityKitKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityKitMemberInsert")]
		public int usp_FacilityKitMemberInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKitKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemMemberQuantity", DbType="SmallInt")] System.Nullable<short> itemMemberQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitMemberKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> facilityKitMemberKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, facilityKitKey, facilityItemKey, itemMemberQuantity, lastModifiedActorKey, facilityKitMemberKey);
			facilityKitMemberKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityKitMemberUpdate")]
		public int usp_FacilityKitMemberUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemMemberQuantity", DbType="SmallInt")] System.Nullable<short> itemMemberQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitMemberKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKitMemberKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, facilityItemKey, itemMemberQuantity, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, facilityKitMemberKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityKitUpdate")]
		public int usp_FacilityKitUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitName", DbType="NVarChar(50)")] string facilityKitName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(100)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKitKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, facilityKitName, descriptionText, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, facilityKitKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectFacilityItemFunctionDelete")]
		public int usp_ClinicalDataSubjectFacilityItemFunctionDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PatientCareFunctionInternalCode", DbType="VarChar(20)")] string patientCareFunctionInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clinicalDataSubjectKey, facilityItemKey, patientCareFunctionInternalCode, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectFacilityItemFunctionInsert")]
		public int usp_ClinicalDataSubjectFacilityItemFunctionInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PatientCareFunctionInternalCode", DbType="VarChar(20)")] string patientCareFunctionInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clinicalDataSubjectKey, facilityItemKey, patientCareFunctionInternalCode, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_ListDeletedFacilityItemQueueSummary")]
		public ISingleResult<bsp_ListDeletedFacilityItemQueueSummaryResult> bsp_ListDeletedFacilityItemQueueSummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartIndex", DbType="Int")] System.Nullable<int> startIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxRows", DbType="Int")] System.Nullable<int> maxRows)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, startIndex, maxRows);
			return ((ISingleResult<bsp_ListDeletedFacilityItemQueueSummaryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityKitDispensingDeviceInsert")]
		public int usp_FacilityKitDispensingDeviceInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKitKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatFlag", DbType="Bit")] System.Nullable<bool> statFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, facilityKitKey, statFlag, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_EquivalencyDosageFormGroupDelete")]
		public int usp_EquivalencyDosageFormGroupDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EquivalencyDosageFormGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> equivalencyDosageFormGroupKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), endUTCDateTime, endLocalDateTime, lastModifiedActorKey, equivalencyDosageFormGroupKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_EquivalencyDosageFormGroupInsert")]
		public int usp_EquivalencyDosageFormGroupInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(10)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EquivalencyDosageFormGroupKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> equivalencyDosageFormGroupKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, descriptionText, sortValue, createdUTCDateTime, createdLocalDateTime, lastModifiedActorKey, equivalencyDosageFormGroupKey);
			equivalencyDosageFormGroupKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_EquivalencyDosageFormGroupUpdate")]
		public int usp_EquivalencyDosageFormGroupUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCode", DbType="NVarChar(10)")] string displayCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(50)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortValue", DbType="Int")] System.Nullable<int> sortValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EquivalencyDosageFormGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> equivalencyDosageFormGroupKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), displayCode, descriptionText, sortValue, endUTCDateTime, endLocalDateTime, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, equivalencyDosageFormGroupKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_VariableDoseGroupMemberDelete")]
		public int usp_VariableDoseGroupMemberDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VariableDoseGroupMemberKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> variableDoseGroupMemberKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, variableDoseGroupMemberKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_VariableDoseGroupMemberInsert")]
		public int usp_VariableDoseGroupMemberInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VariableDoseGroupMemberKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> variableDoseGroupMemberKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VariableDoseGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> variableDoseGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> medItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RankValue", DbType="Int")] System.Nullable<int> rankValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), variableDoseGroupMemberKey, startUTCDateTime, startLocalDateTime, variableDoseGroupKey, medItemKey, rankValue, lastModifiedActorKey);
			variableDoseGroupMemberKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_VariableDoseGroupMemberUpdate")]
		public int usp_VariableDoseGroupMemberUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RankValue", DbType="Int")] System.Nullable<int> rankValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VariableDoseGroupMemberKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> variableDoseGroupMemberKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, rankValue, lastModifiedActorKey, lastModifiedBinaryValue, variableDoseGroupMemberKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ItemDisplayedMessageInsert")]
		public int usp_ItemDisplayedMessageInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> displayUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> displayLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayedMessageInternalCode", DbType="VarChar(50)")] string displayedMessageInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MessageText", DbType="VarChar(1000)")] string messageText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemDisplayedMessageKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> itemDisplayedMessageKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemKey, displayUTCDateTime, displayLocalDateTime, displayedMessageInternalCode, messageText, userAccountKey, itemDisplayedMessageKey);
			itemDisplayedMessageKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_BlockedFacilityItemDispensingDeviceDelete")]
		public int usp_BlockedFacilityItemDispensingDeviceDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityItemKey, dispensingDeviceKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_BlockedFacilityItemDispensingDeviceInsert")]
		public int usp_BlockedFacilityItemDispensingDeviceInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityItemKey, dispensingDeviceKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ItemScanCodeDelete")]
		public int usp_ItemScanCodeDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanProductDeleteReasonInternalCode", DbType="VarChar(10)")] string scanProductDeleteReasonInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OtherItemID", DbType="NVarChar(100)")] string otherItemID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeletedByExternalSystemName", DbType="NVarChar(50)")] string deletedByExternalSystemName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemScanCodeKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemScanCodeKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, scanProductDeleteReasonInternalCode, otherItemID, deletedByExternalSystemName, lastModifiedActorKey, itemScanCodeKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ItemScanCodeUpdate")]
		public int usp_ItemScanCodeUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanCodeValue", DbType="NVarChar(250)")] string scanCodeValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedByUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> linkedByUserAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> linkedUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> linkedLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedByUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> verifiedByUserAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> verifiedUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedLocalDateTime", DbType="DateTime")] System.Nullable<System.DateTime> verifiedLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromExternalSystemFlag", DbType="Bit")] System.Nullable<bool> fromExternalSystemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanProductDeleteReasonInternalCode", DbType="VarChar(10)")] string scanProductDeleteReasonInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OtherItemID", DbType="NVarChar(100)")] string otherItemID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedByExternalSystemName", DbType="NVarChar(50)")] string createdByExternalSystemName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemScanCodeKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemScanCodeKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, itemKey, scanCodeValue, linkedByUserAccountKey, linkedUTCDateTime, linkedLocalDateTime, verifiedByUserAccountKey, verifiedUTCDateTime, verifiedLocalDateTime, fromExternalSystemFlag, scanProductDeleteReasonInternalCode, otherItemID, createdByExternalSystemName, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, itemScanCodeKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ProductIDDelete")]
		public int usp_ProductIDDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanProductDeleteReasonInternalCode", DbType="VarChar(10)")] string scanProductDeleteReasonInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OtherItemID", DbType="NVarChar(100)")] string otherItemID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeletedByExternalSystemName", DbType="NVarChar(50)")] string deletedByExternalSystemName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductIDKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> productIDKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, scanProductDeleteReasonInternalCode, otherItemID, deletedByExternalSystemName, lastModifiedActorKey, productIDKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ProductIDUpdate")]
		public int usp_ProductIDUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="NVarChar(100)")] string productID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedByUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> linkedByUserAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> linkedUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> linkedLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedByUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> verifiedByUserAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> verifiedUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> verifiedLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromExternalSystemFlag", DbType="Bit")] System.Nullable<bool> fromExternalSystemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanProductDeleteReasonInternalCode", DbType="VarChar(10)")] string scanProductDeleteReasonInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OtherItemID", DbType="NVarChar(100)")] string otherItemID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedByExternalSystemName", DbType="NVarChar(50)")] string createdByExternalSystemName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductIDKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> productIDKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, itemKey, productID, linkedByUserAccountKey, linkedUTCDateTime, linkedLocalDateTime, verifiedByUserAccountKey, verifiedUTCDateTime, verifiedLocalDateTime, fromExternalSystemFlag, scanProductDeleteReasonInternalCode, otherItemID, createdByExternalSystemName, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, productIDKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ProductIDInsert")]
		public int usp_ProductIDInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="NVarChar(100)")] string productID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedByUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> linkedByUserAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> linkedUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> linkedLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedByUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> verifiedByUserAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> verifiedUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedLocalDateTime", DbType="DateTime")] System.Nullable<System.DateTime> verifiedLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromExternalSystemFlag", DbType="Bit")] System.Nullable<bool> fromExternalSystemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanProductDeleteReasonInternalCode", DbType="VarChar(10)")] string scanProductDeleteReasonInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OtherItemID", DbType="NVarChar(100)")] string otherItemID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedByExternalSystemName", DbType="NVarChar(50)")] string createdByExternalSystemName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeleteFlag", DbType="Bit")] System.Nullable<bool> deleteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductIDKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> productIDKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, itemKey, productID, linkedByUserAccountKey, linkedUTCDateTime, linkedLocalDateTime, verifiedByUserAccountKey, verifiedUTCDateTime, verifiedLocalDateTime, fromExternalSystemFlag, scanProductDeleteReasonInternalCode, otherItemID, createdByExternalSystemName, deleteFlag, lastModifiedActorKey, productIDKey);
			productIDKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(16)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ItemScanCodeInsert")]
		public int usp_ItemScanCodeInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanCodeValue", DbType="NVarChar(250)")] string scanCodeValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedByUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> linkedByUserAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> linkedUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> linkedLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedByUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> verifiedByUserAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> verifiedUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedLocalDateTime", DbType="DateTime")] System.Nullable<System.DateTime> verifiedLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromExternalSystemFlag", DbType="Bit")] System.Nullable<bool> fromExternalSystemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanProductDeleteReasonInternalCode", DbType="VarChar(10)")] string scanProductDeleteReasonInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OtherItemID", DbType="NVarChar(100)")] string otherItemID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedByExternalSystemName", DbType="NVarChar(50)")] string createdByExternalSystemName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeleteFlag", DbType="Bit")] System.Nullable<bool> deleteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemScanCodeKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> itemScanCodeKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, itemKey, scanCodeValue, linkedByUserAccountKey, linkedUTCDateTime, linkedLocalDateTime, verifiedByUserAccountKey, verifiedUTCDateTime, verifiedLocalDateTime, fromExternalSystemFlag, scanProductDeleteReasonInternalCode, otherItemID, createdByExternalSystemName, deleteFlag, lastModifiedActorKey, itemScanCodeKey);
			itemScanCodeKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(16)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_UserKitUpdate")]
		public int usp_UserKitUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKitName", DbType="NVarChar(50)")] string userKitName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(100)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKitKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userKitKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, userKitName, descriptionText, lastModifiedDispensingDeviceKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, userKitKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_UserKitInsert")]
		public int usp_UserKitInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKitName", DbType="NVarChar(50)")] string userKitName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKitKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userKitKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, userAccountKey, userKitName, lastModifiedDispensingDeviceKey, lastModifiedActorKey, userKitKey);
			userKitKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_UserKitMemberInsert")]
		public int usp_UserKitMemberInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKitKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userKitKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemMemberQuantity", DbType="SmallInt")] System.Nullable<short> itemMemberQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKitMemberKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userKitMemberKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, userKitKey, itemKey, itemMemberQuantity, lastModifiedDispensingDeviceKey, lastModifiedActorKey, userKitMemberKey);
			userKitMemberKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_UserKitMemberUpdate")]
		public int usp_UserKitMemberUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemMemberQuantity", DbType="SmallInt")] System.Nullable<short> itemMemberQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKitMemberKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userKitMemberKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, itemKey, itemMemberQuantity, lastModifiedDispensingDeviceKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, userKitMemberKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_UserKitDelete")]
		public int usp_UserKitDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKitKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userKitKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedDispensingDeviceKey, lastModifiedActorKey, userKitKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_UserKitMemberDelete")]
		public int usp_UserKitMemberDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKitMemberKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userKitMemberKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedDispensingDeviceKey, lastModifiedActorKey, userKitMemberKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityKitDispensingDeviceDelete")]
		public int usp_FacilityKitDispensingDeviceDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKitKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatFlag", DbType="Bit")] System.Nullable<bool> statFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, facilityKitKey, statFlag, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ComboComponentAdminRouteDelete")]
		public int usp_ComboComponentAdminRouteDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboComponentKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> comboComponentKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminRouteKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> adminRouteKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), comboComponentKey, adminRouteKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ComboComponentAdminRouteInsert")]
		public int usp_ComboComponentAdminRouteInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboComponentKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> comboComponentKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminRouteKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> adminRouteKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboComponentAdminRouteKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> comboComponentAdminRouteKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), comboComponentKey, adminRouteKey, startUTCDateTime, startLocalDateTime, lastModifiedActorKey, comboComponentAdminRouteKey);
			comboComponentAdminRouteKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ComboComponentDelete")]
		public int usp_ComboComponentDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboComponentKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> comboComponentKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, comboComponentKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ComboComponentInsert")]
		public int usp_ComboComponentInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboFacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> comboFacilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComponentFacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> componentFacilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComponentQuantity", DbType="SmallInt")] System.Nullable<short> componentQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeComponentFlag", DbType="Bit")] System.Nullable<bool> chargeComponentFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MultiplierFlag", DbType="Bit")] System.Nullable<bool> multiplierFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboComponentKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> comboComponentKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, comboFacilityItemKey, componentFacilityItemKey, componentQuantity, chargeComponentFlag, multiplierFlag, lastModifiedActorKey, comboComponentKey);
			comboComponentKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FormularyTemplateOverrideGroupDelete")]
		public int usp_FormularyTemplateOverrideGroupDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormularyTemplateKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> formularyTemplateKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> overrideGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), formularyTemplateKey, overrideGroupKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FormularyTemplateOverrideGroupInsert")]
		public int usp_FormularyTemplateOverrideGroupInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormularyTemplateKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> formularyTemplateKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> overrideGroupKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormularyTemplateOverrideGroupKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> formularyTemplateOverrideGroupKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), formularyTemplateKey, overrideGroupKey, startUTCDateTime, startLocalDateTime, lastModifiedActorKey, formularyTemplateOverrideGroupKey);
			formularyTemplateOverrideGroupKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_ComboComponentUpdate")]
		public int usp_ComboComponentUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComponentQuantity", DbType="SmallInt")] System.Nullable<short> componentQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeComponentFlag", DbType="Bit")] System.Nullable<bool> chargeComponentFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MultiplierFlag", DbType="Bit")] System.Nullable<bool> multiplierFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboComponentKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> comboComponentKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, componentQuantity, chargeComponentFlag, multiplierFlag, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, comboComponentKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_ListDispensingDeviceItemInventory")]
		public ISingleResult<bsp_ListDispensingDeviceItemInventoryResult> bsp_ListDispensingDeviceItemInventory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKeyString", DbType="VarChar(MAX)")] string itemKeyString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> currentDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludeProfileAndNonProfile", DbType="Bit")] System.Nullable<bool> includeProfileAndNonProfile)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userKey, itemKeyString, currentDispensingDeviceKey, includeProfileAndNonProfile);
			return ((ISingleResult<bsp_ListDispensingDeviceItemInventoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityItemPhysicalCapacityInsert")]
		public int usp_FacilityItemPhysicalCapacityInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceSizeInternalCode", DbType="VarChar(10)")] string storageSpaceSizeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaximumQuantity", DbType="Int")] System.Nullable<int> maximumQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhysicalMaximumQuantity", DbType="Int")] System.Nullable<int> physicalMaximumQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParQuantity", DbType="Int")] System.Nullable<int> parQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefillPointQuantity", DbType="Int")] System.Nullable<int> refillPointQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemPhysicalCapacityKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> facilityItemPhysicalCapacityKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityItemKey, storageSpaceSizeInternalCode, startUTCDateTime, startLocalDateTime, maximumQuantity, physicalMaximumQuantity, parQuantity, refillPointQuantity, lastModifiedActorKey, facilityItemPhysicalCapacityKey);
			facilityItemPhysicalCapacityKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityItemPhysicalCapacityUpdate")]
		public int usp_FacilityItemPhysicalCapacityUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaximumQuantity", DbType="Int")] System.Nullable<int> maximumQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhysicalMaximumQuantity", DbType="Int")] System.Nullable<int> physicalMaximumQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParQuantity", DbType="Int")] System.Nullable<int> parQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefillPointQuantity", DbType="Int")] System.Nullable<int> refillPointQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemPhysicalCapacityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemPhysicalCapacityKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, maximumQuantity, physicalMaximumQuantity, parQuantity, refillPointQuantity, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, facilityItemPhysicalCapacityKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_ListHistoricalMedications")]
		public ISingleResult<bsp_ListHistoricalMedicationsResult> bsp_ListHistoricalMedications([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceFacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceFacilityKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, dispensingDeviceFacilityKey);
			return ((ISingleResult<bsp_ListHistoricalMedicationsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_ListRejectedDeletedItemProductIDs")]
		public ISingleResult<bsp_ListRejectedDeletedItemProductIDsResult> bsp_ListRejectedDeletedItemProductIDs([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="NVarChar(250)")] string productID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, productID);
			return ((ISingleResult<bsp_ListRejectedDeletedItemProductIDsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_ListRejectedDeletedItemScanCodes")]
		public ISingleResult<bsp_ListRejectedDeletedItemScanCodesResult> bsp_ListRejectedDeletedItemScanCodes([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanCodeValue", DbType="NVarChar(250)")] string scanCodeValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, scanCodeValue);
			return ((ISingleResult<bsp_ListRejectedDeletedItemScanCodesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FormularyStandardUpdate")]
		public int usp_FormularyStandardUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormularyStandardName", DbType="NVarChar(50)")] string formularyStandardName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> outdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountModeInternalCode", DbType="VarChar(10)")] string verifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountAnesthesiaDispensingFlag", DbType="Bit")] System.Nullable<bool> verifyCountAnesthesiaDispensingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDispenseFlag", DbType="Bit")] System.Nullable<bool> witnessOnDispenseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> witnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDisposeFlag", DbType="Bit")] System.Nullable<bool> witnessOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> witnessOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> witnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOverrideFlag", DbType="Bit")] System.Nullable<bool> witnessOnOverrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> witnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnInventoryFlag", DbType="Bit")] System.Nullable<bool> witnessOnInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnEmptyReturnBinFlag", DbType="Bit")] System.Nullable<bool> witnessOnEmptyReturnBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDestockFlag", DbType="Bit")] System.Nullable<bool> witnessOnDestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnRxCheckFlag", DbType="Bit")] System.Nullable<bool> witnessOnRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> scanOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnRemoveFlag", DbType="Bit")] System.Nullable<bool> scanOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> scanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnCheckFlag", DbType="Bit")] System.Nullable<bool> scanOnCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoOnceOnRemoveFlag", DbType="Bit")] System.Nullable<bool> doOnceOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireInventoryReferenceIDFlag", DbType="Bit")] System.Nullable<bool> requireInventoryReferenceIDFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReverificationFlag", DbType="Bit")] System.Nullable<bool> reverificationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseRemoveDurationAmount", DbType="SmallInt")] System.Nullable<short> tooCloseRemoveDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> securityGroupKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemActiveFlag", DbType="Bit")] System.Nullable<bool> facilityItemActiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoResolveDiscrepancyFlag", DbType="Bit")] System.Nullable<bool> autoResolveDiscrepancyFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeableFlag", DbType="Bit")] System.Nullable<bool> chargeableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighCostFlag", DbType="Bit")] System.Nullable<bool> highCostFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllowSplittingFlag", DbType="Bit")] System.Nullable<bool> allowSplittingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighRiskFlag", DbType="Bit")] System.Nullable<bool> highRiskFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TrackInventoryQuantityFlag", DbType="Bit")] System.Nullable<bool> trackInventoryQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MultiDoseFlag", DbType="Bit")] System.Nullable<bool> multiDoseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BackorderedFlag", DbType="Bit")] System.Nullable<bool> backorderedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedReturnModeInternalCode", DbType="VarChar(10)")] string medReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedFailoverReturnModeInternalCode", DbType="VarChar(10)")] string medFailoverReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentScanModeInternalCode", DbType="VarChar(10)")] string replenishmentScanModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FractionalUOMTypeInternalCode", DbType="VarChar(10)")] string fractionalUOMTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoMedLabelModeInternalCode", DbType="VarChar(10)")] string autoMedLabelModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> criticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> stockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OMNLNoticeFlag", DbType="Bit")] System.Nullable<bool> oMNLNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaMyItemsFlag", DbType="Bit")] System.Nullable<bool> anesthesiaMyItemsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolveUndocumentedWasteFlag", DbType="Bit")] System.Nullable<bool> resolveUndocumentedWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxCheckFlag", DbType="Bit")] System.Nullable<bool> rxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnRemoveFlag", DbType="Bit")] System.Nullable<bool> printOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnReturnFlag", DbType="Bit")] System.Nullable<bool> printOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnDisposeFlag", DbType="Bit")] System.Nullable<bool> printOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> printOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowConversionOnRemoveFlag", DbType="Bit")] System.Nullable<bool> showConversionOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanAllOnPickFlag", DbType="Bit")] System.Nullable<bool> scanAllOnPickFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string countCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormularyStandardKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> formularyStandardKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, formularyStandardName, outdateTrackingFlag, verifyCountModeInternalCode, verifyCountAnesthesiaDispensingFlag, witnessOnDispenseFlag, witnessOnReturnFlag, witnessOnDisposeFlag, witnessOnLoadRefillFlag, witnessOnUnloadFlag, witnessOnOverrideFlag, witnessOnOutdateFlag, witnessOnInventoryFlag, witnessOnEmptyReturnBinFlag, witnessOnDestockFlag, witnessOnRxCheckFlag, scanOnLoadRefillFlag, scanOnRemoveFlag, scanOnReturnFlag, scanOnCheckFlag, doOnceOnRemoveFlag, requireLotIDOnRemoveFlag, requireLotIDOnReturnFlag, requireSerialIDOnRemoveFlag, requireSerialIDOnReturnFlag, requireExpirationDateOnRemoveFlag, requireExpirationDateOnReturnFlag, requireInventoryReferenceIDFlag, reverificationFlag, tooCloseRemoveDurationAmount, securityGroupKey, facilityItemActiveFlag, autoResolveDiscrepancyFlag, chargeableFlag, highCostFlag, allowSplittingFlag, highRiskFlag, trackInventoryQuantityFlag, multiDoseFlag, backorderedFlag, medReturnModeInternalCode, medFailoverReturnModeInternalCode, replenishmentScanModeInternalCode, fractionalUOMTypeInternalCode, autoMedLabelModeInternalCode, criticalLowPercentage, stockOutNoticeFlag, oMNLNoticeFlag, anesthesiaMyItemsFlag, resolveUndocumentedWasteFlag, rxCheckFlag, printOnRemoveFlag, printOnReturnFlag, printOnDisposeFlag, printOnLoadRefillFlag, showConversionOnRemoveFlag, scanAllOnPickFlag, countCUBIEEjectModeInternalCode, activeFlag, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, formularyStandardKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_AcceptQueuedItems")]
		public ISingleResult<bsp_AcceptQueuedItemsResult> bsp_AcceptQueuedItems([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemQueueXML", DbType="Xml")] System.Xml.Linq.XElement facilityItemQueueXML)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, itemKey, startUTCDateTime, startLocalDateTime, lastModifiedActorKey, facilityItemQueueXML);
			return ((ISingleResult<bsp_AcceptQueuedItemsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.ssp_FacilityItemInsert")]
		public int ssp_FacilityItemInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> facilityItemKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, itemKey, associationUTCDateTime, associationLocalDateTime, associationActorKey, facilityItemKey);
			facilityItemKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityItemDelete")]
		public int usp_FacilityItemDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemKey, facilityKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FormularyTemplateDelete")]
		public int usp_FormularyTemplateDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormularyTemplateKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> formularyTemplateKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, formularyTemplateKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_MultiFacilityItemUpdate")]
		public int bsp_MultiFacilityItemUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> medClassKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedClassKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> medClassKeySpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> outdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountModeInternalCode", DbType="VarChar(10)")] string verifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountModeInternalCodeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> verifyCountModeInternalCodeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountAnesthesiaDispensingFlag", DbType="Bit")] System.Nullable<bool> verifyCountAnesthesiaDispensingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDispenseFlag", DbType="Bit")] System.Nullable<bool> witnessOnDispenseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> witnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDisposeFlag", DbType="Bit")] System.Nullable<bool> witnessOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> witnessOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> witnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOverrideFlag", DbType="Bit")] System.Nullable<bool> witnessOnOverrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> witnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnInventoryFlag", DbType="Bit")] System.Nullable<bool> witnessOnInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnEmptyReturnBinFlag", DbType="Bit")] System.Nullable<bool> witnessOnEmptyReturnBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDestockFlag", DbType="Bit")] System.Nullable<bool> witnessOnDestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnRxCheckFlag", DbType="Bit")] System.Nullable<bool> witnessOnRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> scanOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnRemoveFlag", DbType="Bit")] System.Nullable<bool> scanOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> scanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnCheckFlag", DbType="Bit")] System.Nullable<bool> scanOnCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoOnceOnRemoveFlag", DbType="Bit")] System.Nullable<bool> doOnceOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireInventoryReferenceIDFlag", DbType="Bit")] System.Nullable<bool> requireInventoryReferenceIDFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReverificationFlag", DbType="Bit")] System.Nullable<bool> reverificationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseRemoveDurationAmount", DbType="SmallInt")] System.Nullable<short> tooCloseRemoveDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseRemoveDurationAmountSpecifiedFlag", DbType="Bit")] System.Nullable<bool> tooCloseRemoveDurationAmountSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> securityGroupKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> securityGroupKeySpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoResolveDiscrepancyFlag", DbType="Bit")] System.Nullable<bool> autoResolveDiscrepancyFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeableFlag", DbType="Bit")] System.Nullable<bool> chargeableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighCostFlag", DbType="Bit")] System.Nullable<bool> highCostFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllowSplittingFlag", DbType="Bit")] System.Nullable<bool> allowSplittingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighRiskFlag", DbType="Bit")] System.Nullable<bool> highRiskFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HazardousWasteClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> hazardousWasteClassKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HazardousWasteClassKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> hazardousWasteClassKeySpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MultiDoseFlag", DbType="Bit")] System.Nullable<bool> multiDoseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BackorderedFlag", DbType="Bit")] System.Nullable<bool> backorderedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StandardStockFlag", DbType="Bit")] System.Nullable<bool> standardStockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedReturnModeInternalCode", DbType="VarChar(10)")] string medReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedReturnModeInternalCodeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> medReturnModeInternalCodeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedFailoverReturnModeInternalCode", DbType="VarChar(10)")] string medFailoverReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedFailoverReturnModeInternalCodeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> medFailoverReturnModeInternalCodeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentScanModeInternalCode", DbType="VarChar(10)")] string replenishmentScanModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentScanModeInternalCodeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> replenishmentScanModeInternalCodeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FractionalUOMTypeInternalCode", DbType="VarChar(10)")] string fractionalUOMTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FractionalUOMTypeInternalCodeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> fractionalUOMTypeInternalCodeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoMedLabelModeInternalCode", DbType="VarChar(10)")] string autoMedLabelModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoMedLabelModeInternalCodeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> autoMedLabelModeInternalCodeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyNotesText", DbType="NVarChar(250)")] string pharmacyNotesText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyNotesTextSpecifiedFlag", DbType="Bit")] System.Nullable<bool> pharmacyNotesTextSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NursingNotesText", DbType="NVarChar(250)")] string nursingNotesText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NursingNotesTextSpecifiedFlag", DbType="Bit")] System.Nullable<bool> nursingNotesTextSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> criticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowPercentageSpecifiedFlag", DbType="Bit")] System.Nullable<bool> criticalLowPercentageSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> stockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OMNLNoticeFlag", DbType="Bit")] System.Nullable<bool> oMNLNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaMyItemsFlag", DbType="Bit")] System.Nullable<bool> anesthesiaMyItemsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolveUndocumentedWasteFlag", DbType="Bit")] System.Nullable<bool> resolveUndocumentedWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentPickAreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> replenishmentPickAreaKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentPickAreaKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> replenishmentPickAreaKeySpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> distributorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> distributorKeySpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxCheckFlag", DbType="Bit")] System.Nullable<bool> rxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnRemoveFlag", DbType="Bit")] System.Nullable<bool> printOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnReturnFlag", DbType="Bit")] System.Nullable<bool> printOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnDisposeFlag", DbType="Bit")] System.Nullable<bool> printOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> printOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowConversionOnRemoveFlag", DbType="Bit")] System.Nullable<bool> showConversionOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanAllOnPickFlag", DbType="Bit")] System.Nullable<bool> scanAllOnPickFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string countCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountCUBIEEjectModeInternalCodeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> countCUBIEEjectModeInternalCodeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderDispenseQuantityFlag", DbType="Bit")] System.Nullable<bool> pharmacyOrderDispenseQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InjectableFlag", DbType="Bit")] System.Nullable<bool> injectableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMMedReturnModeInternalCode", DbType="VarChar(10)")] string gCSMMedReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMMedReturnModeInternalCodeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> gCSMMedReturnModeInternalCodeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMVerifyCountModeInternalCode", DbType="VarChar(10)")] string gCSMVerifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMVerifyCountModeInternalCodeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> gCSMVerifyCountModeInternalCodeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string gCSMCountCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCountCUBIEEjectModeInternalCodeSpecifiedFlag", DbType="Bit")] System.Nullable<bool> gCSMCountCUBIEEjectModeInternalCodeSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMOutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> gCSMOutdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireLotNumberWhenRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireLotNumberWhenRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireInventoryReferenceNumberFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireInventoryReferenceNumberFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAccessToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAddToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnDiscrepancyResolutionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnDiscrepancyResolutionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnInventoryCountFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnInventoryCountFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReverseCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReverseCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> gCSMCriticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCriticalLowPercentageSpecifiedFlag", DbType="Bit")] System.Nullable<bool> gCSMCriticalLowPercentageSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintSingleMedSheetFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintSingleMedSheetFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintDripSheetFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintDripSheetFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintMaximumRowsFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintMaximumRowsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMAdditionalLabelsPrintedQuantity", DbType="SmallInt")] System.Nullable<short> gCSMAdditionalLabelsPrintedQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMAdditionalLabelsPrintedQuantitySpecifiedFlag", DbType="Bit")] System.Nullable<bool> gCSMAdditionalLabelsPrintedQuantitySpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMStockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> gCSMStockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMADMDispenseQuantitySpecifiedFlag", DbType="Bit")] System.Nullable<bool> gCSMADMDispenseQuantitySpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMADMDispenseQuantity", DbType="Int")] System.Nullable<int> gCSMADMDispenseQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalDeviceParDurationAmountSpecifiedFlag", DbType="Bit")] System.Nullable<bool> gCSMTotalDeviceParDurationAmountSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalDeviceParDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMTotalDeviceParDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalParDurationAmountSpecifiedFlag", DbType="Bit")] System.Nullable<bool> gCSMTotalParDurationAmountSpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalParDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMTotalParDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorPackageSizeQuantitySpecifiedFlag", DbType="Bit")] System.Nullable<bool> gCSMDistributorPackageSizeQuantitySpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorPackageSizeQuantity", DbType="Int")] System.Nullable<int> gCSMDistributorPackageSizeQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMDistributorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> gCSMDistributorKeySpecifiedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireOriginDestinationFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireOriginDestinationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemXML", DbType="Xml")] System.Xml.Linq.XElement facilityItemXML, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PickAreasXML", DbType="Xml")] System.Xml.Linq.XElement pickAreasXML, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideGroupsXML", DbType="Xml")] System.Xml.Linq.XElement overrideGroupsXML, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectsXML", DbType="Xml")] System.Xml.Linq.XElement clinicalDataSubjectsXML, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BlockedFacilityItemDispensingDeviceXML", DbType="Xml")] System.Xml.Linq.XElement blockedFacilityItemDispensingDeviceXML)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, medClassKey, medClassKeySpecifiedFlag, outdateTrackingFlag, verifyCountModeInternalCode, verifyCountModeInternalCodeSpecifiedFlag, verifyCountAnesthesiaDispensingFlag, witnessOnDispenseFlag, witnessOnReturnFlag, witnessOnDisposeFlag, witnessOnLoadRefillFlag, witnessOnUnloadFlag, witnessOnOverrideFlag, witnessOnOutdateFlag, witnessOnInventoryFlag, witnessOnEmptyReturnBinFlag, witnessOnDestockFlag, witnessOnRxCheckFlag, scanOnLoadRefillFlag, scanOnRemoveFlag, scanOnReturnFlag, scanOnCheckFlag, doOnceOnRemoveFlag, requireLotIDOnRemoveFlag, requireLotIDOnReturnFlag, requireSerialIDOnRemoveFlag, requireSerialIDOnReturnFlag, requireExpirationDateOnRemoveFlag, requireExpirationDateOnReturnFlag, requireInventoryReferenceIDFlag, reverificationFlag, tooCloseRemoveDurationAmount, tooCloseRemoveDurationAmountSpecifiedFlag, securityGroupKey, securityGroupKeySpecifiedFlag, activeFlag, autoResolveDiscrepancyFlag, chargeableFlag, highCostFlag, allowSplittingFlag, highRiskFlag, hazardousWasteClassKey, hazardousWasteClassKeySpecifiedFlag, multiDoseFlag, backorderedFlag, standardStockFlag, medReturnModeInternalCode, medReturnModeInternalCodeSpecifiedFlag, medFailoverReturnModeInternalCode, medFailoverReturnModeInternalCodeSpecifiedFlag, replenishmentScanModeInternalCode, replenishmentScanModeInternalCodeSpecifiedFlag, fractionalUOMTypeInternalCode, fractionalUOMTypeInternalCodeSpecifiedFlag, autoMedLabelModeInternalCode, autoMedLabelModeInternalCodeSpecifiedFlag, pharmacyNotesText, pharmacyNotesTextSpecifiedFlag, nursingNotesText, nursingNotesTextSpecifiedFlag, criticalLowPercentage, criticalLowPercentageSpecifiedFlag, stockOutNoticeFlag, oMNLNoticeFlag, anesthesiaMyItemsFlag, resolveUndocumentedWasteFlag, replenishmentPickAreaKey, replenishmentPickAreaKeySpecifiedFlag, distributorKey, distributorKeySpecifiedFlag, rxCheckFlag, printOnRemoveFlag, printOnReturnFlag, printOnDisposeFlag, printOnLoadRefillFlag, showConversionOnRemoveFlag, scanAllOnPickFlag, countCUBIEEjectModeInternalCode, countCUBIEEjectModeInternalCodeSpecifiedFlag, pharmacyOrderDispenseQuantityFlag, injectableFlag, gCSMMedReturnModeInternalCode, gCSMMedReturnModeInternalCodeSpecifiedFlag, gCSMVerifyCountModeInternalCode, gCSMVerifyCountModeInternalCodeSpecifiedFlag, gCSMCountCUBIEEjectModeInternalCode, gCSMCountCUBIEEjectModeInternalCodeSpecifiedFlag, gCSMOutdateTrackingFlag, gCSMRequireLotNumberWhenRecallFlag, gCSMRequireInventoryReferenceNumberFlag, gCSMWitnessOnAccessToDestructionBinFlag, gCSMWitnessOnAddToDestructionBinFlag, gCSMWitnessOnOutdateFlag, gCSMWitnessOnReturnFlag, gCSMWitnessOnAutorestockFlag, gCSMWitnessOnCompoundingFlag, gCSMWitnessOnDestructionBinFlag, gCSMWitnessOnDiscrepancyResolutionFlag, gCSMWitnessOnInventoryCountFlag, gCSMWitnessOnIssueFlag, gCSMWitnessOnPrescriptionFlag, gCSMWitnessOnRecallFlag, gCSMWitnessOnReceiveFlag, gCSMWitnessOnReverseCompoundingFlag, gCSMWitnessOnSellFlag, gCSMWitnessOnStockTransferFlag, gCSMWitnessOnUnloadFlag, gCSMWitnessOnWasteFlag, gCSMScanOnCompoundingFlag, gCSMScanOnReturnFlag, gCSMScanOnAutorestockFlag, gCSMScanOnIssueFlag, gCSMScanOnPrescriptionFlag, gCSMScanOnReceiveFlag, gCSMScanOnSellFlag, gCSMScanOnStockTransferFlag, gCSMCriticalLowPercentage, gCSMCriticalLowPercentageSpecifiedFlag, gCSMPrintOnReceiveFlag, gCSMPrintSingleMedSheetFlag, gCSMPrintDripSheetFlag, gCSMPrintMaximumRowsFlag, gCSMAdditionalLabelsPrintedQuantity, gCSMAdditionalLabelsPrintedQuantitySpecifiedFlag, gCSMStockOutNoticeFlag, gCSMADMDispenseQuantitySpecifiedFlag, gCSMADMDispenseQuantity, gCSMTotalDeviceParDurationAmountSpecifiedFlag, gCSMTotalDeviceParDurationAmount, gCSMTotalParDurationAmountSpecifiedFlag, gCSMTotalParDurationAmount, gCSMDistributorPackageSizeQuantitySpecifiedFlag, gCSMDistributorPackageSizeQuantity, gCSMDistributorKey, gCSMDistributorKeySpecifiedFlag, gCSMRequireOriginDestinationFlag, lastModifiedActorKey, facilityItemXML, pickAreasXML, overrideGroupsXML, clinicalDataSubjectsXML, blockedFacilityItemDispensingDeviceXML);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.bsp_MultiMedItemUpdate")]
		public int bsp_MultiMedItemUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DosageFormKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dosageFormKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DosageFormKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> dosageFormKeySpecifiedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> medClassKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedClassKeySpecifiedFlag", DbType="Bit")] System.Nullable<bool> medClassKeySpecifiedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PureGenericName", DbType="NVarChar(150)")] string pureGenericName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PureGenericNameSpecifiedFlag", DbType="Bit")] System.Nullable<bool> pureGenericNameSpecifiedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedItemXML", DbType="Xml")] System.Xml.Linq.XElement medItemXML, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TherapeuticClassesXML", DbType="Xml")] System.Xml.Linq.XElement therapeuticClassesXML, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, dosageFormKey, dosageFormKeySpecifiedFlag, medClassKey, medClassKeySpecifiedFlag, pureGenericName, pureGenericNameSpecifiedFlag, medItemXML, therapeuticClassesXML, lastModifiedActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityItemInsert")]
		public int usp_FacilityItemInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemDisplayName", DbType="NVarChar(500)")] string itemDisplayName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlternateItemID", DbType="NVarChar(100)")] string alternateItemID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> medClassKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> outdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountModeInternalCode", DbType="VarChar(10)")] string verifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountAnesthesiaDispensingFlag", DbType="Bit")] System.Nullable<bool> verifyCountAnesthesiaDispensingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDispenseFlag", DbType="Bit")] System.Nullable<bool> witnessOnDispenseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> witnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDisposeFlag", DbType="Bit")] System.Nullable<bool> witnessOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> witnessOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> witnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOverrideFlag", DbType="Bit")] System.Nullable<bool> witnessOnOverrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> witnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnInventoryFlag", DbType="Bit")] System.Nullable<bool> witnessOnInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnEmptyReturnBinFlag", DbType="Bit")] System.Nullable<bool> witnessOnEmptyReturnBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDestockFlag", DbType="Bit")] System.Nullable<bool> witnessOnDestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnRxCheckFlag", DbType="Bit")] System.Nullable<bool> witnessOnRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> scanOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnRemoveFlag", DbType="Bit")] System.Nullable<bool> scanOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> scanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnCheckFlag", DbType="Bit")] System.Nullable<bool> scanOnCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoOnceOnRemoveFlag", DbType="Bit")] System.Nullable<bool> doOnceOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireInventoryReferenceIDFlag", DbType="Bit")] System.Nullable<bool> requireInventoryReferenceIDFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReverificationFlag", DbType="Bit")] System.Nullable<bool> reverificationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseRemoveDurationAmount", DbType="SmallInt")] System.Nullable<short> tooCloseRemoveDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> securityGroupKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoResolveDiscrepancyFlag", DbType="Bit")] System.Nullable<bool> autoResolveDiscrepancyFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeableFlag", DbType="Bit")] System.Nullable<bool> chargeableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighCostFlag", DbType="Bit")] System.Nullable<bool> highCostFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllowSplittingFlag", DbType="Bit")] System.Nullable<bool> allowSplittingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighRiskFlag", DbType="Bit")] System.Nullable<bool> highRiskFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HazardousWasteClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> hazardousWasteClassKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TrackInventoryQuantityFlag", DbType="Bit")] System.Nullable<bool> trackInventoryQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MultiDoseFlag", DbType="Bit")] System.Nullable<bool> multiDoseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BackorderedFlag", DbType="Bit")] System.Nullable<bool> backorderedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefillUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> refillUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IssueUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> issueUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UOIPerUORAmount", DbType="Decimal(14,4)")] System.Nullable<decimal> uOIPerUORAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StandardStockFlag", DbType="Bit")] System.Nullable<bool> standardStockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedReturnModeInternalCode", DbType="VarChar(10)")] string medReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedFailoverReturnModeInternalCode", DbType="VarChar(10)")] string medFailoverReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentScanModeInternalCode", DbType="VarChar(10)")] string replenishmentScanModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FractionalUOMTypeInternalCode", DbType="VarChar(10)")] string fractionalUOMTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoMedLabelModeInternalCode", DbType="VarChar(10)")] string autoMedLabelModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyNotesText", DbType="NVarChar(250)")] string pharmacyNotesText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NursingNotesText", DbType="NVarChar(250)")] string nursingNotesText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> criticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> stockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OMNLNoticeFlag", DbType="Bit")] System.Nullable<bool> oMNLNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaMyItemsFlag", DbType="Bit")] System.Nullable<bool> anesthesiaMyItemsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolveUndocumentedWasteFlag", DbType="Bit")] System.Nullable<bool> resolveUndocumentedWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboFlag", DbType="Bit")] System.Nullable<bool> comboFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispenseComponentsOnlyFlag", DbType="Bit")] System.Nullable<bool> dispenseComponentsOnlyFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeComboFlag", DbType="Bit")] System.Nullable<bool> chargeComboFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCalculationOnDispenseFlag", DbType="Bit")] System.Nullable<bool> displayCalculationOnDispenseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentPickAreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> replenishmentPickAreaKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> distributorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxCheckFlag", DbType="Bit")] System.Nullable<bool> rxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnRemoveFlag", DbType="Bit")] System.Nullable<bool> printOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnReturnFlag", DbType="Bit")] System.Nullable<bool> printOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnDisposeFlag", DbType="Bit")] System.Nullable<bool> printOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> printOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowConversionOnRemoveFlag", DbType="Bit")] System.Nullable<bool> showConversionOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanAllOnPickFlag", DbType="Bit")] System.Nullable<bool> scanAllOnPickFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string countCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderDispenseQuantityFlag", DbType="Bit")] System.Nullable<bool> pharmacyOrderDispenseQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InjectableFlag", DbType="Bit")] System.Nullable<bool> injectableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMMedReturnModeInternalCode", DbType="VarChar(10)")] string gCSMMedReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMVerifyCountModeInternalCode", DbType="VarChar(10)")] string gCSMVerifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string gCSMCountCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMOutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> gCSMOutdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireLotNumberWhenRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireLotNumberWhenRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireInventoryReferenceNumberFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireInventoryReferenceNumberFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAccessToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAddToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnDiscrepancyResolutionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnDiscrepancyResolutionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnInventoryCountFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnInventoryCountFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReverseCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReverseCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> gCSMCriticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintSingleMedSheetFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintSingleMedSheetFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintDripSheetFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintDripSheetFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintMaximumRowsFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintMaximumRowsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMAdditionalLabelsPrintedQuantity", DbType="SmallInt")] System.Nullable<short> gCSMAdditionalLabelsPrintedQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMStockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> gCSMStockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMADMDispenseQuantity", DbType="Int")] System.Nullable<int> gCSMADMDispenseQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalDeviceParDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMTotalDeviceParDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalParDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMTotalParDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorPackageSizeQuantity", DbType="Int")] System.Nullable<int> gCSMDistributorPackageSizeQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMDistributorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPreferredProductIDKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMPreferredProductIDKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMVendorItemCode", DbType="NVarChar(100)")] string gCSMVendorItemCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireOriginDestinationFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireOriginDestinationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> facilityItemKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityKey, itemKey, startUTCDateTime, startLocalDateTime, itemDisplayName, alternateItemID, medClassKey, outdateTrackingFlag, verifyCountModeInternalCode, verifyCountAnesthesiaDispensingFlag, witnessOnDispenseFlag, witnessOnReturnFlag, witnessOnDisposeFlag, witnessOnLoadRefillFlag, witnessOnUnloadFlag, witnessOnOverrideFlag, witnessOnOutdateFlag, witnessOnInventoryFlag, witnessOnEmptyReturnBinFlag, witnessOnDestockFlag, witnessOnRxCheckFlag, scanOnLoadRefillFlag, scanOnRemoveFlag, scanOnReturnFlag, scanOnCheckFlag, doOnceOnRemoveFlag, requireLotIDOnRemoveFlag, requireLotIDOnReturnFlag, requireSerialIDOnRemoveFlag, requireSerialIDOnReturnFlag, requireExpirationDateOnRemoveFlag, requireExpirationDateOnReturnFlag, requireInventoryReferenceIDFlag, reverificationFlag, tooCloseRemoveDurationAmount, securityGroupKey, activeFlag, autoResolveDiscrepancyFlag, chargeableFlag, highCostFlag, allowSplittingFlag, highRiskFlag, hazardousWasteClassKey, trackInventoryQuantityFlag, multiDoseFlag, backorderedFlag, refillUOMKey, issueUOMKey, uOIPerUORAmount, standardStockFlag, medReturnModeInternalCode, medFailoverReturnModeInternalCode, replenishmentScanModeInternalCode, fractionalUOMTypeInternalCode, autoMedLabelModeInternalCode, pharmacyNotesText, nursingNotesText, criticalLowPercentage, stockOutNoticeFlag, oMNLNoticeFlag, anesthesiaMyItemsFlag, resolveUndocumentedWasteFlag, comboFlag, dispenseComponentsOnlyFlag, chargeComboFlag, displayCalculationOnDispenseFlag, replenishmentPickAreaKey, distributorKey, rxCheckFlag, printOnRemoveFlag, printOnReturnFlag, printOnDisposeFlag, printOnLoadRefillFlag, showConversionOnRemoveFlag, scanAllOnPickFlag, countCUBIEEjectModeInternalCode, pharmacyOrderDispenseQuantityFlag, injectableFlag, gCSMMedReturnModeInternalCode, gCSMVerifyCountModeInternalCode, gCSMCountCUBIEEjectModeInternalCode, gCSMOutdateTrackingFlag, gCSMRequireLotNumberWhenRecallFlag, gCSMRequireInventoryReferenceNumberFlag, gCSMWitnessOnAccessToDestructionBinFlag, gCSMWitnessOnAddToDestructionBinFlag, gCSMWitnessOnOutdateFlag, gCSMWitnessOnReturnFlag, gCSMWitnessOnAutorestockFlag, gCSMWitnessOnCompoundingFlag, gCSMWitnessOnDestructionBinFlag, gCSMWitnessOnDiscrepancyResolutionFlag, gCSMWitnessOnInventoryCountFlag, gCSMWitnessOnIssueFlag, gCSMWitnessOnPrescriptionFlag, gCSMWitnessOnRecallFlag, gCSMWitnessOnReceiveFlag, gCSMWitnessOnReverseCompoundingFlag, gCSMWitnessOnSellFlag, gCSMWitnessOnStockTransferFlag, gCSMWitnessOnUnloadFlag, gCSMWitnessOnWasteFlag, gCSMScanOnCompoundingFlag, gCSMScanOnReturnFlag, gCSMScanOnAutorestockFlag, gCSMScanOnIssueFlag, gCSMScanOnPrescriptionFlag, gCSMScanOnReceiveFlag, gCSMScanOnSellFlag, gCSMScanOnStockTransferFlag, gCSMCriticalLowPercentage, gCSMPrintOnReceiveFlag, gCSMPrintSingleMedSheetFlag, gCSMPrintDripSheetFlag, gCSMPrintMaximumRowsFlag, gCSMAdditionalLabelsPrintedQuantity, gCSMStockOutNoticeFlag, gCSMADMDispenseQuantity, gCSMTotalDeviceParDurationAmount, gCSMTotalParDurationAmount, gCSMDistributorPackageSizeQuantity, gCSMDistributorKey, gCSMPreferredProductIDKey, gCSMVendorItemCode, gCSMRequireOriginDestinationFlag, lastModifiedActorKey, facilityItemKey);
			facilityItemKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(126)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FacilityItemUpdate")]
		public int usp_FacilityItemUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemDisplayName", DbType="NVarChar(500)")] string itemDisplayName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlternateItemID", DbType="NVarChar(100)")] string alternateItemID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> medClassKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> outdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountModeInternalCode", DbType="VarChar(10)")] string verifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountAnesthesiaDispensingFlag", DbType="Bit")] System.Nullable<bool> verifyCountAnesthesiaDispensingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDispenseFlag", DbType="Bit")] System.Nullable<bool> witnessOnDispenseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> witnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDisposeFlag", DbType="Bit")] System.Nullable<bool> witnessOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> witnessOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> witnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOverrideFlag", DbType="Bit")] System.Nullable<bool> witnessOnOverrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> witnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnInventoryFlag", DbType="Bit")] System.Nullable<bool> witnessOnInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnEmptyReturnBinFlag", DbType="Bit")] System.Nullable<bool> witnessOnEmptyReturnBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDestockFlag", DbType="Bit")] System.Nullable<bool> witnessOnDestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnRxCheckFlag", DbType="Bit")] System.Nullable<bool> witnessOnRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> scanOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnRemoveFlag", DbType="Bit")] System.Nullable<bool> scanOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> scanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnCheckFlag", DbType="Bit")] System.Nullable<bool> scanOnCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoOnceOnRemoveFlag", DbType="Bit")] System.Nullable<bool> doOnceOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireInventoryReferenceIDFlag", DbType="Bit")] System.Nullable<bool> requireInventoryReferenceIDFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReverificationFlag", DbType="Bit")] System.Nullable<bool> reverificationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseRemoveDurationAmount", DbType="SmallInt")] System.Nullable<short> tooCloseRemoveDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> securityGroupKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoResolveDiscrepancyFlag", DbType="Bit")] System.Nullable<bool> autoResolveDiscrepancyFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeableFlag", DbType="Bit")] System.Nullable<bool> chargeableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighCostFlag", DbType="Bit")] System.Nullable<bool> highCostFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllowSplittingFlag", DbType="Bit")] System.Nullable<bool> allowSplittingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighRiskFlag", DbType="Bit")] System.Nullable<bool> highRiskFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HazardousWasteClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> hazardousWasteClassKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TrackInventoryQuantityFlag", DbType="Bit")] System.Nullable<bool> trackInventoryQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MultiDoseFlag", DbType="Bit")] System.Nullable<bool> multiDoseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BackorderedFlag", DbType="Bit")] System.Nullable<bool> backorderedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefillUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> refillUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IssueUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> issueUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UOIPerUORAmount", DbType="Decimal(14,4)")] System.Nullable<decimal> uOIPerUORAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StandardStockFlag", DbType="Bit")] System.Nullable<bool> standardStockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedReturnModeInternalCode", DbType="VarChar(10)")] string medReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedFailoverReturnModeInternalCode", DbType="VarChar(10)")] string medFailoverReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentScanModeInternalCode", DbType="VarChar(10)")] string replenishmentScanModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FractionalUOMTypeInternalCode", DbType="VarChar(10)")] string fractionalUOMTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoMedLabelModeInternalCode", DbType="VarChar(10)")] string autoMedLabelModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyNotesText", DbType="NVarChar(250)")] string pharmacyNotesText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NursingNotesText", DbType="NVarChar(250)")] string nursingNotesText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> criticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> stockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OMNLNoticeFlag", DbType="Bit")] System.Nullable<bool> oMNLNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaMyItemsFlag", DbType="Bit")] System.Nullable<bool> anesthesiaMyItemsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolveUndocumentedWasteFlag", DbType="Bit")] System.Nullable<bool> resolveUndocumentedWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboFlag", DbType="Bit")] System.Nullable<bool> comboFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispenseComponentsOnlyFlag", DbType="Bit")] System.Nullable<bool> dispenseComponentsOnlyFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeComboFlag", DbType="Bit")] System.Nullable<bool> chargeComboFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayCalculationOnDispenseFlag", DbType="Bit")] System.Nullable<bool> displayCalculationOnDispenseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentPickAreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> replenishmentPickAreaKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> distributorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxCheckFlag", DbType="Bit")] System.Nullable<bool> rxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnRemoveFlag", DbType="Bit")] System.Nullable<bool> printOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnReturnFlag", DbType="Bit")] System.Nullable<bool> printOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnDisposeFlag", DbType="Bit")] System.Nullable<bool> printOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> printOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowConversionOnRemoveFlag", DbType="Bit")] System.Nullable<bool> showConversionOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanAllOnPickFlag", DbType="Bit")] System.Nullable<bool> scanAllOnPickFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string countCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderDispenseQuantityFlag", DbType="Bit")] System.Nullable<bool> pharmacyOrderDispenseQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InjectableFlag", DbType="Bit")] System.Nullable<bool> injectableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMMedReturnModeInternalCode", DbType="VarChar(10)")] string gCSMMedReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMVerifyCountModeInternalCode", DbType="VarChar(10)")] string gCSMVerifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string gCSMCountCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMOutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> gCSMOutdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireLotNumberWhenRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireLotNumberWhenRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireInventoryReferenceNumberFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireInventoryReferenceNumberFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAccessToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAddToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnDiscrepancyResolutionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnDiscrepancyResolutionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnInventoryCountFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnInventoryCountFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReverseCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReverseCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> gCSMCriticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintSingleMedSheetFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintSingleMedSheetFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintDripSheetFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintDripSheetFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintMaximumRowsFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintMaximumRowsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMAdditionalLabelsPrintedQuantity", DbType="SmallInt")] System.Nullable<short> gCSMAdditionalLabelsPrintedQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMStockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> gCSMStockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMADMDispenseQuantity", DbType="Int")] System.Nullable<int> gCSMADMDispenseQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalDeviceParDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMTotalDeviceParDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalParDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMTotalParDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorPackageSizeQuantity", DbType="Int")] System.Nullable<int> gCSMDistributorPackageSizeQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMDistributorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPreferredProductIDKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMPreferredProductIDKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMVendorItemCode", DbType="NVarChar(100)")] string gCSMVendorItemCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireOriginDestinationFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireOriginDestinationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, itemDisplayName, alternateItemID, medClassKey, outdateTrackingFlag, verifyCountModeInternalCode, verifyCountAnesthesiaDispensingFlag, witnessOnDispenseFlag, witnessOnReturnFlag, witnessOnDisposeFlag, witnessOnLoadRefillFlag, witnessOnUnloadFlag, witnessOnOverrideFlag, witnessOnOutdateFlag, witnessOnInventoryFlag, witnessOnEmptyReturnBinFlag, witnessOnDestockFlag, witnessOnRxCheckFlag, scanOnLoadRefillFlag, scanOnRemoveFlag, scanOnReturnFlag, scanOnCheckFlag, doOnceOnRemoveFlag, requireLotIDOnRemoveFlag, requireLotIDOnReturnFlag, requireSerialIDOnRemoveFlag, requireSerialIDOnReturnFlag, requireExpirationDateOnRemoveFlag, requireExpirationDateOnReturnFlag, requireInventoryReferenceIDFlag, reverificationFlag, tooCloseRemoveDurationAmount, securityGroupKey, activeFlag, autoResolveDiscrepancyFlag, chargeableFlag, highCostFlag, allowSplittingFlag, highRiskFlag, hazardousWasteClassKey, trackInventoryQuantityFlag, multiDoseFlag, backorderedFlag, refillUOMKey, issueUOMKey, uOIPerUORAmount, standardStockFlag, medReturnModeInternalCode, medFailoverReturnModeInternalCode, replenishmentScanModeInternalCode, fractionalUOMTypeInternalCode, autoMedLabelModeInternalCode, pharmacyNotesText, nursingNotesText, criticalLowPercentage, stockOutNoticeFlag, oMNLNoticeFlag, anesthesiaMyItemsFlag, resolveUndocumentedWasteFlag, comboFlag, dispenseComponentsOnlyFlag, chargeComboFlag, displayCalculationOnDispenseFlag, replenishmentPickAreaKey, distributorKey, rxCheckFlag, printOnRemoveFlag, printOnReturnFlag, printOnDisposeFlag, printOnLoadRefillFlag, showConversionOnRemoveFlag, scanAllOnPickFlag, countCUBIEEjectModeInternalCode, pharmacyOrderDispenseQuantityFlag, injectableFlag, gCSMMedReturnModeInternalCode, gCSMVerifyCountModeInternalCode, gCSMCountCUBIEEjectModeInternalCode, gCSMOutdateTrackingFlag, gCSMRequireLotNumberWhenRecallFlag, gCSMRequireInventoryReferenceNumberFlag, gCSMWitnessOnAccessToDestructionBinFlag, gCSMWitnessOnAddToDestructionBinFlag, gCSMWitnessOnOutdateFlag, gCSMWitnessOnReturnFlag, gCSMWitnessOnAutorestockFlag, gCSMWitnessOnCompoundingFlag, gCSMWitnessOnDestructionBinFlag, gCSMWitnessOnDiscrepancyResolutionFlag, gCSMWitnessOnInventoryCountFlag, gCSMWitnessOnIssueFlag, gCSMWitnessOnPrescriptionFlag, gCSMWitnessOnRecallFlag, gCSMWitnessOnReceiveFlag, gCSMWitnessOnReverseCompoundingFlag, gCSMWitnessOnSellFlag, gCSMWitnessOnStockTransferFlag, gCSMWitnessOnUnloadFlag, gCSMWitnessOnWasteFlag, gCSMScanOnCompoundingFlag, gCSMScanOnReturnFlag, gCSMScanOnAutorestockFlag, gCSMScanOnIssueFlag, gCSMScanOnPrescriptionFlag, gCSMScanOnReceiveFlag, gCSMScanOnSellFlag, gCSMScanOnStockTransferFlag, gCSMCriticalLowPercentage, gCSMPrintOnReceiveFlag, gCSMPrintSingleMedSheetFlag, gCSMPrintDripSheetFlag, gCSMPrintMaximumRowsFlag, gCSMAdditionalLabelsPrintedQuantity, gCSMStockOutNoticeFlag, gCSMADMDispenseQuantity, gCSMTotalDeviceParDurationAmount, gCSMTotalParDurationAmount, gCSMDistributorPackageSizeQuantity, gCSMDistributorKey, gCSMPreferredProductIDKey, gCSMVendorItemCode, gCSMRequireOriginDestinationFlag, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, facilityItemKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FormularyTemplateInsert")]
		public int usp_FormularyTemplateInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSystemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> externalSystemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormularyTemplateName", DbType="NVarChar(50)")] string formularyTemplateName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(250)")] string descriptionText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> outdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountModeInternalCode", DbType="VarChar(10)")] string verifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountAnesthesiaDispensingFlag", DbType="Bit")] System.Nullable<bool> verifyCountAnesthesiaDispensingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDispenseFlag", DbType="Bit")] System.Nullable<bool> witnessOnDispenseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> witnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDisposeFlag", DbType="Bit")] System.Nullable<bool> witnessOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> witnessOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> witnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOverrideFlag", DbType="Bit")] System.Nullable<bool> witnessOnOverrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> witnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnInventoryFlag", DbType="Bit")] System.Nullable<bool> witnessOnInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnEmptyReturnBinFlag", DbType="Bit")] System.Nullable<bool> witnessOnEmptyReturnBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDestockFlag", DbType="Bit")] System.Nullable<bool> witnessOnDestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnRxCheckFlag", DbType="Bit")] System.Nullable<bool> witnessOnRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> scanOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnRemoveFlag", DbType="Bit")] System.Nullable<bool> scanOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> scanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnCheckFlag", DbType="Bit")] System.Nullable<bool> scanOnCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoOnceOnRemoveFlag", DbType="Bit")] System.Nullable<bool> doOnceOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireInventoryReferenceIDFlag", DbType="Bit")] System.Nullable<bool> requireInventoryReferenceIDFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReverificationFlag", DbType="Bit")] System.Nullable<bool> reverificationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseRemoveDurationAmount", DbType="SmallInt")] System.Nullable<short> tooCloseRemoveDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> securityGroupKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoResolveDiscrepancyFlag", DbType="Bit")] System.Nullable<bool> autoResolveDiscrepancyFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeableFlag", DbType="Bit")] System.Nullable<bool> chargeableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighCostFlag", DbType="Bit")] System.Nullable<bool> highCostFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllowSplittingFlag", DbType="Bit")] System.Nullable<bool> allowSplittingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighRiskFlag", DbType="Bit")] System.Nullable<bool> highRiskFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TrackInventoryQuantityFlag", DbType="Bit")] System.Nullable<bool> trackInventoryQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MultiDoseFlag", DbType="Bit")] System.Nullable<bool> multiDoseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BackorderedFlag", DbType="Bit")] System.Nullable<bool> backorderedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedReturnModeInternalCode", DbType="VarChar(10)")] string medReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedFailoverReturnModeInternalCode", DbType="VarChar(10)")] string medFailoverReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentScanModeInternalCode", DbType="VarChar(10)")] string replenishmentScanModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FractionalUOMTypeInternalCode", DbType="VarChar(10)")] string fractionalUOMTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoMedLabelModeInternalCode", DbType="VarChar(10)")] string autoMedLabelModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyNotesText", DbType="NVarChar(250)")] string pharmacyNotesText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NursingNotesText", DbType="NVarChar(250)")] string nursingNotesText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> criticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> stockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OMNLNoticeFlag", DbType="Bit")] System.Nullable<bool> oMNLNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaMyItemsFlag", DbType="Bit")] System.Nullable<bool> anesthesiaMyItemsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolveUndocumentedWasteFlag", DbType="Bit")] System.Nullable<bool> resolveUndocumentedWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> distributorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxCheckFlag", DbType="Bit")] System.Nullable<bool> rxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnRemoveFlag", DbType="Bit")] System.Nullable<bool> printOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnReturnFlag", DbType="Bit")] System.Nullable<bool> printOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnDisposeFlag", DbType="Bit")] System.Nullable<bool> printOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> printOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowConversionOnRemoveFlag", DbType="Bit")] System.Nullable<bool> showConversionOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanAllOnPickFlag", DbType="Bit")] System.Nullable<bool> scanAllOnPickFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string countCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderDispenseQuantityFlag", DbType="Bit")] System.Nullable<bool> pharmacyOrderDispenseQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InjectableFlag", DbType="Bit")] System.Nullable<bool> injectableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMMedReturnModeInternalCode", DbType="VarChar(10)")] string gCSMMedReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMVerifyCountModeInternalCode", DbType="VarChar(10)")] string gCSMVerifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string gCSMCountCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMOutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> gCSMOutdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireLotNumberWhenRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireLotNumberWhenRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireInventoryReferenceNumberFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireInventoryReferenceNumberFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAccessToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAddToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnDiscrepancyResolutionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnDiscrepancyResolutionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnInventoryCountFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnInventoryCountFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReverseCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReverseCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> gCSMCriticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintSingleMedSheetFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintSingleMedSheetFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintDripSheetFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintDripSheetFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintMaximumRowsFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintMaximumRowsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMAdditionalLabelsPrintedQuantity", DbType="SmallInt")] System.Nullable<short> gCSMAdditionalLabelsPrintedQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMStockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> gCSMStockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMADMDispenseQuantity", DbType="Int")] System.Nullable<int> gCSMADMDispenseQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalDeviceParDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMTotalDeviceParDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalParDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMTotalParDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorPackageSizeQuantity", DbType="Int")] System.Nullable<int> gCSMDistributorPackageSizeQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMDistributorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireOriginDestinationFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireOriginDestinationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> medClassKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormularyTemplateKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> formularyTemplateKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, externalSystemKey, formularyTemplateName, descriptionText, outdateTrackingFlag, verifyCountModeInternalCode, verifyCountAnesthesiaDispensingFlag, witnessOnDispenseFlag, witnessOnReturnFlag, witnessOnDisposeFlag, witnessOnLoadRefillFlag, witnessOnUnloadFlag, witnessOnOverrideFlag, witnessOnOutdateFlag, witnessOnInventoryFlag, witnessOnEmptyReturnBinFlag, witnessOnDestockFlag, witnessOnRxCheckFlag, scanOnLoadRefillFlag, scanOnRemoveFlag, scanOnReturnFlag, scanOnCheckFlag, doOnceOnRemoveFlag, requireLotIDOnRemoveFlag, requireLotIDOnReturnFlag, requireSerialIDOnRemoveFlag, requireSerialIDOnReturnFlag, requireExpirationDateOnRemoveFlag, requireExpirationDateOnReturnFlag, requireInventoryReferenceIDFlag, reverificationFlag, tooCloseRemoveDurationAmount, securityGroupKey, activeFlag, autoResolveDiscrepancyFlag, chargeableFlag, highCostFlag, allowSplittingFlag, highRiskFlag, trackInventoryQuantityFlag, multiDoseFlag, backorderedFlag, medReturnModeInternalCode, medFailoverReturnModeInternalCode, replenishmentScanModeInternalCode, fractionalUOMTypeInternalCode, autoMedLabelModeInternalCode, pharmacyNotesText, nursingNotesText, criticalLowPercentage, stockOutNoticeFlag, oMNLNoticeFlag, anesthesiaMyItemsFlag, resolveUndocumentedWasteFlag, distributorKey, rxCheckFlag, printOnRemoveFlag, printOnReturnFlag, printOnDisposeFlag, printOnLoadRefillFlag, showConversionOnRemoveFlag, scanAllOnPickFlag, countCUBIEEjectModeInternalCode, pharmacyOrderDispenseQuantityFlag, injectableFlag, gCSMMedReturnModeInternalCode, gCSMVerifyCountModeInternalCode, gCSMCountCUBIEEjectModeInternalCode, gCSMOutdateTrackingFlag, gCSMRequireLotNumberWhenRecallFlag, gCSMRequireInventoryReferenceNumberFlag, gCSMWitnessOnAccessToDestructionBinFlag, gCSMWitnessOnAddToDestructionBinFlag, gCSMWitnessOnOutdateFlag, gCSMWitnessOnReturnFlag, gCSMWitnessOnAutorestockFlag, gCSMWitnessOnCompoundingFlag, gCSMWitnessOnDestructionBinFlag, gCSMWitnessOnDiscrepancyResolutionFlag, gCSMWitnessOnInventoryCountFlag, gCSMWitnessOnIssueFlag, gCSMWitnessOnPrescriptionFlag, gCSMWitnessOnRecallFlag, gCSMWitnessOnReceiveFlag, gCSMWitnessOnReverseCompoundingFlag, gCSMWitnessOnSellFlag, gCSMWitnessOnStockTransferFlag, gCSMWitnessOnUnloadFlag, gCSMWitnessOnWasteFlag, gCSMScanOnCompoundingFlag, gCSMScanOnReturnFlag, gCSMScanOnAutorestockFlag, gCSMScanOnIssueFlag, gCSMScanOnPrescriptionFlag, gCSMScanOnReceiveFlag, gCSMScanOnSellFlag, gCSMScanOnStockTransferFlag, gCSMCriticalLowPercentage, gCSMPrintOnReceiveFlag, gCSMPrintSingleMedSheetFlag, gCSMPrintDripSheetFlag, gCSMPrintMaximumRowsFlag, gCSMAdditionalLabelsPrintedQuantity, gCSMStockOutNoticeFlag, gCSMADMDispenseQuantity, gCSMTotalDeviceParDurationAmount, gCSMTotalParDurationAmount, gCSMDistributorPackageSizeQuantity, gCSMDistributorKey, gCSMRequireOriginDestinationFlag, medClassKey, lastModifiedActorKey, formularyTemplateKey);
			formularyTemplateKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(113)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Item.usp_FormularyTemplateUpdate")]
		public int usp_FormularyTemplateUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSystemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> externalSystemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormularyTemplateName", DbType="NVarChar(50)")] string formularyTemplateName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(250)")] string descriptionText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> outdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountModeInternalCode", DbType="VarChar(10)")] string verifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifyCountAnesthesiaDispensingFlag", DbType="Bit")] System.Nullable<bool> verifyCountAnesthesiaDispensingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDispenseFlag", DbType="Bit")] System.Nullable<bool> witnessOnDispenseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> witnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDisposeFlag", DbType="Bit")] System.Nullable<bool> witnessOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> witnessOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> witnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOverrideFlag", DbType="Bit")] System.Nullable<bool> witnessOnOverrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> witnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnInventoryFlag", DbType="Bit")] System.Nullable<bool> witnessOnInventoryFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnEmptyReturnBinFlag", DbType="Bit")] System.Nullable<bool> witnessOnEmptyReturnBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnDestockFlag", DbType="Bit")] System.Nullable<bool> witnessOnDestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessOnRxCheckFlag", DbType="Bit")] System.Nullable<bool> witnessOnRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> scanOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnRemoveFlag", DbType="Bit")] System.Nullable<bool> scanOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> scanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanOnCheckFlag", DbType="Bit")] System.Nullable<bool> scanOnCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoOnceOnRemoveFlag", DbType="Bit")] System.Nullable<bool> doOnceOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireLotIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireLotIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireSerialIDOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireSerialIDOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnRemoveFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireExpirationDateOnReturnFlag", DbType="Bit")] System.Nullable<bool> requireExpirationDateOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequireInventoryReferenceIDFlag", DbType="Bit")] System.Nullable<bool> requireInventoryReferenceIDFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReverificationFlag", DbType="Bit")] System.Nullable<bool> reverificationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseRemoveDurationAmount", DbType="SmallInt")] System.Nullable<short> tooCloseRemoveDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityGroupKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> securityGroupKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoResolveDiscrepancyFlag", DbType="Bit")] System.Nullable<bool> autoResolveDiscrepancyFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeableFlag", DbType="Bit")] System.Nullable<bool> chargeableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighCostFlag", DbType="Bit")] System.Nullable<bool> highCostFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllowSplittingFlag", DbType="Bit")] System.Nullable<bool> allowSplittingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="HighRiskFlag", DbType="Bit")] System.Nullable<bool> highRiskFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TrackInventoryQuantityFlag", DbType="Bit")] System.Nullable<bool> trackInventoryQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MultiDoseFlag", DbType="Bit")] System.Nullable<bool> multiDoseFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BackorderedFlag", DbType="Bit")] System.Nullable<bool> backorderedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedReturnModeInternalCode", DbType="VarChar(10)")] string medReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedFailoverReturnModeInternalCode", DbType="VarChar(10)")] string medFailoverReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentScanModeInternalCode", DbType="VarChar(10)")] string replenishmentScanModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FractionalUOMTypeInternalCode", DbType="VarChar(10)")] string fractionalUOMTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoMedLabelModeInternalCode", DbType="VarChar(10)")] string autoMedLabelModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyNotesText", DbType="NVarChar(250)")] string pharmacyNotesText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NursingNotesText", DbType="NVarChar(250)")] string nursingNotesText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> criticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> stockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OMNLNoticeFlag", DbType="Bit")] System.Nullable<bool> oMNLNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnesthesiaMyItemsFlag", DbType="Bit")] System.Nullable<bool> anesthesiaMyItemsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolveUndocumentedWasteFlag", DbType="Bit")] System.Nullable<bool> resolveUndocumentedWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> distributorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxCheckFlag", DbType="Bit")] System.Nullable<bool> rxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnRemoveFlag", DbType="Bit")] System.Nullable<bool> printOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnReturnFlag", DbType="Bit")] System.Nullable<bool> printOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnDisposeFlag", DbType="Bit")] System.Nullable<bool> printOnDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrintOnLoadRefillFlag", DbType="Bit")] System.Nullable<bool> printOnLoadRefillFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowConversionOnRemoveFlag", DbType="Bit")] System.Nullable<bool> showConversionOnRemoveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScanAllOnPickFlag", DbType="Bit")] System.Nullable<bool> scanAllOnPickFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string countCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderDispenseQuantityFlag", DbType="Bit")] System.Nullable<bool> pharmacyOrderDispenseQuantityFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InjectableFlag", DbType="Bit")] System.Nullable<bool> injectableFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedClassKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> medClassKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMMedReturnModeInternalCode", DbType="VarChar(10)")] string gCSMMedReturnModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMVerifyCountModeInternalCode", DbType="VarChar(10)")] string gCSMVerifyCountModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCountCUBIEEjectModeInternalCode", DbType="VarChar(10)")] string gCSMCountCUBIEEjectModeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMOutdateTrackingFlag", DbType="Bit")] System.Nullable<bool> gCSMOutdateTrackingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireLotNumberWhenRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireLotNumberWhenRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireInventoryReferenceNumberFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireInventoryReferenceNumberFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAccessToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAddToDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnOutdateFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnOutdateFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnDestructionBinFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnDestructionBinFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnDiscrepancyResolutionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnDiscrepancyResolutionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnInventoryCountFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnInventoryCountFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnRecallFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnRecallFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnReverseCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnReverseCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnUnloadFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnUnloadFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMWitnessOnWasteFlag", DbType="Bit")] System.Nullable<bool> gCSMWitnessOnWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnCompoundingFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnCompoundingFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReturnFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReturnFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnAutorestockFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnAutorestockFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnIssueFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnIssueFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnPrescriptionFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnPrescriptionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnSellFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnSellFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMScanOnStockTransferFlag", DbType="Bit")] System.Nullable<bool> gCSMScanOnStockTransferFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCriticalLowPercentage", DbType="TinyInt")] System.Nullable<byte> gCSMCriticalLowPercentage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintOnReceiveFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintOnReceiveFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintSingleMedSheetFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintSingleMedSheetFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintDripSheetFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintDripSheetFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMPrintMaximumRowsFlag", DbType="Bit")] System.Nullable<bool> gCSMPrintMaximumRowsFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMAdditionalLabelsPrintedQuantity", DbType="SmallInt")] System.Nullable<short> gCSMAdditionalLabelsPrintedQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMStockOutNoticeFlag", DbType="Bit")] System.Nullable<bool> gCSMStockOutNoticeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMADMDispenseQuantity", DbType="Int")] System.Nullable<int> gCSMADMDispenseQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalDeviceParDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMTotalDeviceParDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMTotalParDurationAmount", DbType="SmallInt")] System.Nullable<short> gCSMTotalParDurationAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorPackageSizeQuantity", DbType="Int")] System.Nullable<int> gCSMDistributorPackageSizeQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMDistributorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> gCSMDistributorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMRequireOriginDestinationFlag", DbType="Bit")] System.Nullable<bool> gCSMRequireOriginDestinationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormularyTemplateKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> formularyTemplateKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, externalSystemKey, formularyTemplateName, descriptionText, outdateTrackingFlag, verifyCountModeInternalCode, verifyCountAnesthesiaDispensingFlag, witnessOnDispenseFlag, witnessOnReturnFlag, witnessOnDisposeFlag, witnessOnLoadRefillFlag, witnessOnUnloadFlag, witnessOnOverrideFlag, witnessOnOutdateFlag, witnessOnInventoryFlag, witnessOnEmptyReturnBinFlag, witnessOnDestockFlag, witnessOnRxCheckFlag, scanOnLoadRefillFlag, scanOnRemoveFlag, scanOnReturnFlag, scanOnCheckFlag, doOnceOnRemoveFlag, requireLotIDOnRemoveFlag, requireLotIDOnReturnFlag, requireSerialIDOnRemoveFlag, requireSerialIDOnReturnFlag, requireExpirationDateOnRemoveFlag, requireExpirationDateOnReturnFlag, requireInventoryReferenceIDFlag, reverificationFlag, tooCloseRemoveDurationAmount, securityGroupKey, activeFlag, autoResolveDiscrepancyFlag, chargeableFlag, highCostFlag, allowSplittingFlag, highRiskFlag, trackInventoryQuantityFlag, multiDoseFlag, backorderedFlag, medReturnModeInternalCode, medFailoverReturnModeInternalCode, replenishmentScanModeInternalCode, fractionalUOMTypeInternalCode, autoMedLabelModeInternalCode, pharmacyNotesText, nursingNotesText, criticalLowPercentage, stockOutNoticeFlag, oMNLNoticeFlag, anesthesiaMyItemsFlag, resolveUndocumentedWasteFlag, distributorKey, rxCheckFlag, printOnRemoveFlag, printOnReturnFlag, printOnDisposeFlag, printOnLoadRefillFlag, showConversionOnRemoveFlag, scanAllOnPickFlag, countCUBIEEjectModeInternalCode, pharmacyOrderDispenseQuantityFlag, injectableFlag, medClassKey, gCSMMedReturnModeInternalCode, gCSMVerifyCountModeInternalCode, gCSMCountCUBIEEjectModeInternalCode, gCSMOutdateTrackingFlag, gCSMRequireLotNumberWhenRecallFlag, gCSMRequireInventoryReferenceNumberFlag, gCSMWitnessOnAccessToDestructionBinFlag, gCSMWitnessOnAddToDestructionBinFlag, gCSMWitnessOnOutdateFlag, gCSMWitnessOnReturnFlag, gCSMWitnessOnAutorestockFlag, gCSMWitnessOnCompoundingFlag, gCSMWitnessOnDestructionBinFlag, gCSMWitnessOnDiscrepancyResolutionFlag, gCSMWitnessOnInventoryCountFlag, gCSMWitnessOnIssueFlag, gCSMWitnessOnPrescriptionFlag, gCSMWitnessOnRecallFlag, gCSMWitnessOnReceiveFlag, gCSMWitnessOnReverseCompoundingFlag, gCSMWitnessOnSellFlag, gCSMWitnessOnStockTransferFlag, gCSMWitnessOnUnloadFlag, gCSMWitnessOnWasteFlag, gCSMScanOnCompoundingFlag, gCSMScanOnReturnFlag, gCSMScanOnAutorestockFlag, gCSMScanOnIssueFlag, gCSMScanOnPrescriptionFlag, gCSMScanOnReceiveFlag, gCSMScanOnSellFlag, gCSMScanOnStockTransferFlag, gCSMCriticalLowPercentage, gCSMPrintOnReceiveFlag, gCSMPrintSingleMedSheetFlag, gCSMPrintDripSheetFlag, gCSMPrintMaximumRowsFlag, gCSMAdditionalLabelsPrintedQuantity, gCSMStockOutNoticeFlag, gCSMADMDispenseQuantity, gCSMTotalDeviceParDurationAmount, gCSMTotalParDurationAmount, gCSMDistributorPackageSizeQuantity, gCSMDistributorKey, gCSMRequireOriginDestinationFlag, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, formularyTemplateKey);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_ItemCurrent")]
	public partial class ItemEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private string _BusinessDomainInternalCode;
		
		private System.Nullable<System.Guid> _ExternalSystemKey;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private string _ItemID;
		
		private string _AlternateItemID;
		
		private string _EnterpriseItemID;
		
		private string _ItemName;
		
		private string _DescriptionText;
		
		private string _ItemTypeInternalCode;
		
		private string _ItemSubTypeInternalCode;
		
		private bool _MedItemFlag;
		
		private System.Nullable<System.DateTime> _ExternalSystemDeleteUTCDateTime;
		
		private System.Nullable<System.DateTime> _ExternalSystemDeleteLocalDateTime;
		
		private string _CustomField1Text;
		
		private string _CustomField2Text;
		
		private string _CustomField3Text;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<MedItemEntity> _MedItemEntity;
		
		private EntitySet<ItemScanCodeEntity> _ItemScanCodeEntities;
		
		private EntitySet<FacilityItemEntity> _FacilityItemEntities;
		
		private EntitySet<FacilityItemQueueEntity> _FacilityItemQueueEntities;
		
		private EntitySet<ItemEquivalencySetEntity> _ItemEquivalencySetEntities;
		
		private EntitySet<ProductIDEntity> _ProductIDEntities;
		
		private EntitySet<UserKitMemberEntity> _UserKitMemberEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemSnapshotKeyChanging(System.Guid value);
    partial void OnItemSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnBusinessDomainInternalCodeChanging(string value);
    partial void OnBusinessDomainInternalCodeChanged();
    partial void OnExternalSystemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnExternalSystemKeyChanged();
    partial void OnFacilityKeyChanging(System.Nullable<System.Guid> value);
    partial void OnFacilityKeyChanged();
    partial void OnItemIDChanging(string value);
    partial void OnItemIDChanged();
    partial void OnAlternateItemIDChanging(string value);
    partial void OnAlternateItemIDChanged();
    partial void OnEnterpriseItemIDChanging(string value);
    partial void OnEnterpriseItemIDChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnItemTypeInternalCodeChanging(string value);
    partial void OnItemTypeInternalCodeChanged();
    partial void OnItemSubTypeInternalCodeChanging(string value);
    partial void OnItemSubTypeInternalCodeChanged();
    partial void OnMedItemFlagChanging(bool value);
    partial void OnMedItemFlagChanged();
    partial void OnExternalSystemDeleteUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExternalSystemDeleteUTCDateTimeChanged();
    partial void OnExternalSystemDeleteLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExternalSystemDeleteLocalDateTimeChanged();
    partial void OnCustomField1TextChanging(string value);
    partial void OnCustomField1TextChanged();
    partial void OnCustomField2TextChanging(string value);
    partial void OnCustomField2TextChanged();
    partial void OnCustomField3TextChanging(string value);
    partial void OnCustomField3TextChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ItemEntity()
		{
			this._MedItemEntity = default(EntityRef<MedItemEntity>);
			this._ItemScanCodeEntities = new EntitySet<ItemScanCodeEntity>(new Action<ItemScanCodeEntity>(this.attach_ItemScanCodeEntities), new Action<ItemScanCodeEntity>(this.detach_ItemScanCodeEntities));
			this._FacilityItemEntities = new EntitySet<FacilityItemEntity>(new Action<FacilityItemEntity>(this.attach_FacilityItemEntities), new Action<FacilityItemEntity>(this.detach_FacilityItemEntities));
			this._FacilityItemQueueEntities = new EntitySet<FacilityItemQueueEntity>(new Action<FacilityItemQueueEntity>(this.attach_FacilityItemQueueEntities), new Action<FacilityItemQueueEntity>(this.detach_FacilityItemQueueEntities));
			this._ItemEquivalencySetEntities = new EntitySet<ItemEquivalencySetEntity>(new Action<ItemEquivalencySetEntity>(this.attach_ItemEquivalencySetEntities), new Action<ItemEquivalencySetEntity>(this.detach_ItemEquivalencySetEntities));
			this._ProductIDEntities = new EntitySet<ProductIDEntity>(new Action<ProductIDEntity>(this.attach_ProductIDEntities), new Action<ProductIDEntity>(this.detach_ProductIDEntities));
			this._UserKitMemberEntities = new EntitySet<UserKitMemberEntity>(new Action<UserKitMemberEntity>(this.attach_UserKitMemberEntities), new Action<UserKitMemberEntity>(this.detach_UserKitMemberEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ItemKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemSnapshotKey
		{
			get
			{
				return this._ItemSnapshotKey;
			}
			set
			{
				if ((this._ItemSnapshotKey != value))
				{
					this.OnItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemSnapshotKey = value;
					this.SendPropertyChanged("ItemSnapshotKey");
					this.OnItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessDomainInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BusinessDomainInternalCode
		{
			get
			{
				return this._BusinessDomainInternalCode;
			}
			set
			{
				if ((this._BusinessDomainInternalCode != value))
				{
					this.OnBusinessDomainInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._BusinessDomainInternalCode = value;
					this.SendPropertyChanged("BusinessDomainInternalCode");
					this.OnBusinessDomainInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateItemID", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string AlternateItemID
		{
			get
			{
				return this._AlternateItemID;
			}
			set
			{
				if ((this._AlternateItemID != value))
				{
					this.OnAlternateItemIDChanging(value);
					this.SendPropertyChanging();
					this._AlternateItemID = value;
					this.SendPropertyChanged("AlternateItemID");
					this.OnAlternateItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseItemID", DbType="NVarChar(50)")]
		public string EnterpriseItemID
		{
			get
			{
				return this._EnterpriseItemID;
			}
			set
			{
				if ((this._EnterpriseItemID != value))
				{
					this.OnEnterpriseItemIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseItemID = value;
					this.SendPropertyChanged("EnterpriseItemID");
					this.OnEnterpriseItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(100)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(150)")]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTypeInternalCode", DbType="VarChar(10)")]
		public string ItemTypeInternalCode
		{
			get
			{
				return this._ItemTypeInternalCode;
			}
			set
			{
				if ((this._ItemTypeInternalCode != value))
				{
					this.OnItemTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemTypeInternalCode = value;
					this.SendPropertyChanged("ItemTypeInternalCode");
					this.OnItemTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSubTypeInternalCode", DbType="VarChar(10)")]
		public string ItemSubTypeInternalCode
		{
			get
			{
				return this._ItemSubTypeInternalCode;
			}
			set
			{
				if ((this._ItemSubTypeInternalCode != value))
				{
					this.OnItemSubTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemSubTypeInternalCode = value;
					this.SendPropertyChanged("ItemSubTypeInternalCode");
					this.OnItemSubTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MedItemFlag
		{
			get
			{
				return this._MedItemFlag;
			}
			set
			{
				if ((this._MedItemFlag != value))
				{
					this.OnMedItemFlagChanging(value);
					this.SendPropertyChanging();
					this._MedItemFlag = value;
					this.SendPropertyChanged("MedItemFlag");
					this.OnMedItemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemDeleteUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExternalSystemDeleteUTCDateTime
		{
			get
			{
				return this._ExternalSystemDeleteUTCDateTime;
			}
			set
			{
				if ((this._ExternalSystemDeleteUTCDateTime != value))
				{
					this.OnExternalSystemDeleteUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemDeleteUTCDateTime = value;
					this.SendPropertyChanged("ExternalSystemDeleteUTCDateTime");
					this.OnExternalSystemDeleteUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemDeleteLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExternalSystemDeleteLocalDateTime
		{
			get
			{
				return this._ExternalSystemDeleteLocalDateTime;
			}
			set
			{
				if ((this._ExternalSystemDeleteLocalDateTime != value))
				{
					this.OnExternalSystemDeleteLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemDeleteLocalDateTime = value;
					this.SendPropertyChanged("ExternalSystemDeleteLocalDateTime");
					this.OnExternalSystemDeleteLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField1Text", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string CustomField1Text
		{
			get
			{
				return this._CustomField1Text;
			}
			set
			{
				if ((this._CustomField1Text != value))
				{
					this.OnCustomField1TextChanging(value);
					this.SendPropertyChanging();
					this._CustomField1Text = value;
					this.SendPropertyChanged("CustomField1Text");
					this.OnCustomField1TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField2Text", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string CustomField2Text
		{
			get
			{
				return this._CustomField2Text;
			}
			set
			{
				if ((this._CustomField2Text != value))
				{
					this.OnCustomField2TextChanging(value);
					this.SendPropertyChanging();
					this._CustomField2Text = value;
					this.SendPropertyChanged("CustomField2Text");
					this.OnCustomField2TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField3Text", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string CustomField3Text
		{
			get
			{
				return this._CustomField3Text;
			}
			set
			{
				if ((this._CustomField3Text != value))
				{
					this.OnCustomField3TextChanging(value);
					this.SendPropertyChanging();
					this._CustomField3Text = value;
					this.SendPropertyChanged("CustomField3Text");
					this.OnCustomField3TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_MedItemEntity", Storage="_MedItemEntity", ThisKey="Key", OtherKey="Key", IsUnique=true, IsForeignKey=false)]
		public MedItemEntity MedItemEntity
		{
			get
			{
				return this._MedItemEntity.Entity;
			}
			set
			{
				MedItemEntity previousValue = this._MedItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._MedItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedItemEntity.Entity = null;
						previousValue.ItemEntity = null;
					}
					this._MedItemEntity.Entity = value;
					if ((value != null))
					{
						value.ItemEntity = this;
					}
					this.SendPropertyChanged("MedItemEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_ItemScanCodeEntity", Storage="_ItemScanCodeEntities", ThisKey="Key", OtherKey="ItemKey")]
		public EntitySet<ItemScanCodeEntity> ItemScanCodeEntities
		{
			get
			{
				return this._ItemScanCodeEntities;
			}
			set
			{
				this._ItemScanCodeEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_FacilityItemEntity", Storage="_FacilityItemEntities", ThisKey="Key", OtherKey="ItemKey")]
		public EntitySet<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this._FacilityItemEntities;
			}
			set
			{
				this._FacilityItemEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_FacilityItemQueueEntity", Storage="_FacilityItemQueueEntities", ThisKey="Key", OtherKey="ItemKey")]
		public EntitySet<FacilityItemQueueEntity> FacilityItemQueueEntities
		{
			get
			{
				return this._FacilityItemQueueEntities;
			}
			set
			{
				this._FacilityItemQueueEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_ItemEquivalencySetEntity", Storage="_ItemEquivalencySetEntities", ThisKey="Key", OtherKey="ItemKey")]
		public EntitySet<ItemEquivalencySetEntity> ItemEquivalencySetEntities
		{
			get
			{
				return this._ItemEquivalencySetEntities;
			}
			set
			{
				this._ItemEquivalencySetEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_ProductIDEntity", Storage="_ProductIDEntities", ThisKey="Key", OtherKey="ItemKey")]
		public EntitySet<ProductIDEntity> ProductIDEntities
		{
			get
			{
				return this._ProductIDEntities;
			}
			set
			{
				this._ProductIDEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_UserKitMemberEntity", Storage="_UserKitMemberEntities", ThisKey="Key", OtherKey="ItemKey")]
		public EntitySet<UserKitMemberEntity> UserKitMemberEntities
		{
			get
			{
				return this._UserKitMemberEntities;
			}
			set
			{
				this._UserKitMemberEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemScanCodeEntities(ItemScanCodeEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = this;
		}
		
		private void detach_ItemScanCodeEntities(ItemScanCodeEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = null;
		}
		
		private void attach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = this;
		}
		
		private void detach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = null;
		}
		
		private void attach_FacilityItemQueueEntities(FacilityItemQueueEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = this;
		}
		
		private void detach_FacilityItemQueueEntities(FacilityItemQueueEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = null;
		}
		
		private void attach_ItemEquivalencySetEntities(ItemEquivalencySetEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = this;
		}
		
		private void detach_ItemEquivalencySetEntities(ItemEquivalencySetEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = null;
		}
		
		private void attach_ProductIDEntities(ProductIDEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = this;
		}
		
		private void detach_ProductIDEntities(ProductIDEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = null;
		}
		
		private void attach_UserKitMemberEntities(UserKitMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = this;
		}
		
		private void detach_UserKitMemberEntities(UserKitMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_MedItemCurrent")]
	public partial class MedItemEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _MedItemSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.Guid> _ItemExternalSystemKey;
		
		private System.Nullable<System.Guid> _ItemFacilityKey;
		
		private string _ItemID;
		
		private string _GenericName;
		
		private string _PureGenericName;
		
		private string _BrandName;
		
		private string _StrengthText;
		
		private System.Nullable<decimal> _StrengthAmount;
		
		private System.Nullable<System.Guid> _StrengthUOMKey;
		
		private string _StrengthDisplayCode;
		
		private System.Nullable<System.Guid> _StrengthExternalUOMKey;
		
		private System.Nullable<decimal> _ConcentrationVolumeAmount;
		
		private System.Nullable<System.Guid> _ConcentrationVolumeUOMKey;
		
		private string _ConcentrationVolumeDisplayCode;
		
		private System.Nullable<System.Guid> _ConcentrationVolumeExternalUOMKey;
		
		private System.Nullable<decimal> _TotalVolumeAmount;
		
		private System.Nullable<System.Guid> _TotalVolumeUOMKey;
		
		private string _VolumeDisplayCode;
		
		private System.Nullable<System.Guid> _TotalVolumeExternalUOMKey;
		
		private System.Nullable<System.Guid> _DosageFormKey;
		
		private string _DosageFormCode;
		
		private System.Nullable<System.Guid> _MedClassKey;
		
		private string _MedItemTypeInternalCode;
		
		private System.Nullable<decimal> _MinimumDoseAmount;
		
		private System.Nullable<decimal> _MaximumDoseAmount;
		
		private string _DoseDisplayCode;
		
		private System.Nullable<System.Guid> _DoseUOMKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private string _SearchGenericName;
		
		private string _SearchBrandName;
		
		private EntitySet<TherapeuticClassMemberEntity> _TherapeuticClassMemberEntities;
		
		private EntitySet<FacilityItemEntity> _FacilityItemEntities;
		
		private EntitySet<VariableDoseGroupMemberEntity> _VariableDoseGroupMemberEntities;
		
		private EntitySet<VariableDoseGroupMemberEntity> _VariableDoseGroupMemberEntities1;
		
		private EntityRef<ItemEntity> _ItemEntity;
		
		private EntityRef<MedClassEntity> _MedClassEntity;
		
		private EntityRef<DosageFormEntity> _DosageFormEntity;
		
		private EntityRef<MedItemType> _MedItemType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnMedItemSnapshotKeyChanging(System.Guid value);
    partial void OnMedItemSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnItemExternalSystemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnItemExternalSystemKeyChanged();
    partial void OnItemFacilityKeyChanging(System.Nullable<System.Guid> value);
    partial void OnItemFacilityKeyChanged();
    partial void OnItemIDChanging(string value);
    partial void OnItemIDChanged();
    partial void OnGenericNameChanging(string value);
    partial void OnGenericNameChanged();
    partial void OnPureGenericNameChanging(string value);
    partial void OnPureGenericNameChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnStrengthTextChanging(string value);
    partial void OnStrengthTextChanged();
    partial void OnStrengthAmountChanging(System.Nullable<decimal> value);
    partial void OnStrengthAmountChanged();
    partial void OnStrengthUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnStrengthUOMKeyChanged();
    partial void OnStrengthDisplayCodeChanging(string value);
    partial void OnStrengthDisplayCodeChanged();
    partial void OnStrengthExternalUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnStrengthExternalUOMKeyChanged();
    partial void OnConcentrationVolumeAmountChanging(System.Nullable<decimal> value);
    partial void OnConcentrationVolumeAmountChanged();
    partial void OnConcentrationVolumeUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnConcentrationVolumeUOMKeyChanged();
    partial void OnConcentrationVolumeDisplayCodeChanging(string value);
    partial void OnConcentrationVolumeDisplayCodeChanged();
    partial void OnConcentrationVolumeExternalUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnConcentrationVolumeExternalUOMKeyChanged();
    partial void OnTotalVolumeAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalVolumeAmountChanged();
    partial void OnTotalVolumeUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTotalVolumeUOMKeyChanged();
    partial void OnVolumeDisplayCodeChanging(string value);
    partial void OnVolumeDisplayCodeChanged();
    partial void OnTotalVolumeExternalUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTotalVolumeExternalUOMKeyChanged();
    partial void OnDosageFormKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDosageFormKeyChanged();
    partial void OnDosageFormCodeChanging(string value);
    partial void OnDosageFormCodeChanged();
    partial void OnMedClassKeyChanging(System.Nullable<System.Guid> value);
    partial void OnMedClassKeyChanged();
    partial void OnMedItemTypeInternalCodeChanging(string value);
    partial void OnMedItemTypeInternalCodeChanged();
    partial void OnMinimumDoseAmountChanging(System.Nullable<decimal> value);
    partial void OnMinimumDoseAmountChanged();
    partial void OnMaximumDoseAmountChanging(System.Nullable<decimal> value);
    partial void OnMaximumDoseAmountChanged();
    partial void OnDoseDisplayCodeChanging(string value);
    partial void OnDoseDisplayCodeChanged();
    partial void OnDoseUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDoseUOMKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnSearchGenericNameChanging(string value);
    partial void OnSearchGenericNameChanged();
    partial void OnSearchBrandNameChanging(string value);
    partial void OnSearchBrandNameChanged();
    #endregion
		
		public MedItemEntity()
		{
			this._TherapeuticClassMemberEntities = new EntitySet<TherapeuticClassMemberEntity>(new Action<TherapeuticClassMemberEntity>(this.attach_TherapeuticClassMemberEntities), new Action<TherapeuticClassMemberEntity>(this.detach_TherapeuticClassMemberEntities));
			this._FacilityItemEntities = new EntitySet<FacilityItemEntity>(new Action<FacilityItemEntity>(this.attach_FacilityItemEntities), new Action<FacilityItemEntity>(this.detach_FacilityItemEntities));
			this._VariableDoseGroupMemberEntities = new EntitySet<VariableDoseGroupMemberEntity>(new Action<VariableDoseGroupMemberEntity>(this.attach_VariableDoseGroupMemberEntities), new Action<VariableDoseGroupMemberEntity>(this.detach_VariableDoseGroupMemberEntities));
			this._VariableDoseGroupMemberEntities1 = new EntitySet<VariableDoseGroupMemberEntity>(new Action<VariableDoseGroupMemberEntity>(this.attach_VariableDoseGroupMemberEntities1), new Action<VariableDoseGroupMemberEntity>(this.detach_VariableDoseGroupMemberEntities1));
			this._ItemEntity = default(EntityRef<ItemEntity>);
			this._MedClassEntity = default(EntityRef<MedClassEntity>);
			this._DosageFormEntity = default(EntityRef<DosageFormEntity>);
			this._MedItemType = default(EntityRef<MedItemType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MedItemKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid MedItemSnapshotKey
		{
			get
			{
				return this._MedItemSnapshotKey;
			}
			set
			{
				if ((this._MedItemSnapshotKey != value))
				{
					this.OnMedItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._MedItemSnapshotKey = value;
					this.SendPropertyChanged("MedItemSnapshotKey");
					this.OnMedItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemExternalSystemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ItemExternalSystemKey
		{
			get
			{
				return this._ItemExternalSystemKey;
			}
			set
			{
				if ((this._ItemExternalSystemKey != value))
				{
					this.OnItemExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemExternalSystemKey = value;
					this.SendPropertyChanged("ItemExternalSystemKey");
					this.OnItemExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemFacilityKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ItemFacilityKey
		{
			get
			{
				return this._ItemFacilityKey;
			}
			set
			{
				if ((this._ItemFacilityKey != value))
				{
					this.OnItemFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemFacilityKey = value;
					this.SendPropertyChanged("ItemFacilityKey");
					this.OnItemFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="NVarChar(100)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericName", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GenericName
		{
			get
			{
				return this._GenericName;
			}
			set
			{
				if ((this._GenericName != value))
				{
					this.OnGenericNameChanging(value);
					this.SendPropertyChanging();
					this._GenericName = value;
					this.SendPropertyChanged("GenericName");
					this.OnGenericNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PureGenericName", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string PureGenericName
		{
			get
			{
				return this._PureGenericName;
			}
			set
			{
				if ((this._PureGenericName != value))
				{
					this.OnPureGenericNameChanging(value);
					this.SendPropertyChanging();
					this._PureGenericName = value;
					this.SendPropertyChanged("PureGenericName");
					this.OnPureGenericNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string StrengthText
		{
			get
			{
				return this._StrengthText;
			}
			set
			{
				if ((this._StrengthText != value))
				{
					this.OnStrengthTextChanging(value);
					this.SendPropertyChanging();
					this._StrengthText = value;
					this.SendPropertyChanged("StrengthText");
					this.OnStrengthTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthAmount", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> StrengthAmount
		{
			get
			{
				return this._StrengthAmount;
			}
			set
			{
				if ((this._StrengthAmount != value))
				{
					this.OnStrengthAmountChanging(value);
					this.SendPropertyChanging();
					this._StrengthAmount = value;
					this.SendPropertyChanged("StrengthAmount");
					this.OnStrengthAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> StrengthUOMKey
		{
			get
			{
				return this._StrengthUOMKey;
			}
			set
			{
				if ((this._StrengthUOMKey != value))
				{
					this.OnStrengthUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._StrengthUOMKey = value;
					this.SendPropertyChanged("StrengthUOMKey");
					this.OnStrengthUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthDisplayCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string StrengthDisplayCode
		{
			get
			{
				return this._StrengthDisplayCode;
			}
			set
			{
				if ((this._StrengthDisplayCode != value))
				{
					this.OnStrengthDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._StrengthDisplayCode = value;
					this.SendPropertyChanged("StrengthDisplayCode");
					this.OnStrengthDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthExternalUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> StrengthExternalUOMKey
		{
			get
			{
				return this._StrengthExternalUOMKey;
			}
			set
			{
				if ((this._StrengthExternalUOMKey != value))
				{
					this.OnStrengthExternalUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._StrengthExternalUOMKey = value;
					this.SendPropertyChanged("StrengthExternalUOMKey");
					this.OnStrengthExternalUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeAmount", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ConcentrationVolumeAmount
		{
			get
			{
				return this._ConcentrationVolumeAmount;
			}
			set
			{
				if ((this._ConcentrationVolumeAmount != value))
				{
					this.OnConcentrationVolumeAmountChanging(value);
					this.SendPropertyChanging();
					this._ConcentrationVolumeAmount = value;
					this.SendPropertyChanged("ConcentrationVolumeAmount");
					this.OnConcentrationVolumeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ConcentrationVolumeUOMKey
		{
			get
			{
				return this._ConcentrationVolumeUOMKey;
			}
			set
			{
				if ((this._ConcentrationVolumeUOMKey != value))
				{
					this.OnConcentrationVolumeUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._ConcentrationVolumeUOMKey = value;
					this.SendPropertyChanged("ConcentrationVolumeUOMKey");
					this.OnConcentrationVolumeUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeDisplayCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ConcentrationVolumeDisplayCode
		{
			get
			{
				return this._ConcentrationVolumeDisplayCode;
			}
			set
			{
				if ((this._ConcentrationVolumeDisplayCode != value))
				{
					this.OnConcentrationVolumeDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._ConcentrationVolumeDisplayCode = value;
					this.SendPropertyChanged("ConcentrationVolumeDisplayCode");
					this.OnConcentrationVolumeDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeExternalUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ConcentrationVolumeExternalUOMKey
		{
			get
			{
				return this._ConcentrationVolumeExternalUOMKey;
			}
			set
			{
				if ((this._ConcentrationVolumeExternalUOMKey != value))
				{
					this.OnConcentrationVolumeExternalUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._ConcentrationVolumeExternalUOMKey = value;
					this.SendPropertyChanged("ConcentrationVolumeExternalUOMKey");
					this.OnConcentrationVolumeExternalUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeAmount", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TotalVolumeAmount
		{
			get
			{
				return this._TotalVolumeAmount;
			}
			set
			{
				if ((this._TotalVolumeAmount != value))
				{
					this.OnTotalVolumeAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalVolumeAmount = value;
					this.SendPropertyChanged("TotalVolumeAmount");
					this.OnTotalVolumeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TotalVolumeUOMKey
		{
			get
			{
				return this._TotalVolumeUOMKey;
			}
			set
			{
				if ((this._TotalVolumeUOMKey != value))
				{
					this.OnTotalVolumeUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._TotalVolumeUOMKey = value;
					this.SendPropertyChanged("TotalVolumeUOMKey");
					this.OnTotalVolumeUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeDisplayCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string VolumeDisplayCode
		{
			get
			{
				return this._VolumeDisplayCode;
			}
			set
			{
				if ((this._VolumeDisplayCode != value))
				{
					this.OnVolumeDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._VolumeDisplayCode = value;
					this.SendPropertyChanged("VolumeDisplayCode");
					this.OnVolumeDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeExternalUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TotalVolumeExternalUOMKey
		{
			get
			{
				return this._TotalVolumeExternalUOMKey;
			}
			set
			{
				if ((this._TotalVolumeExternalUOMKey != value))
				{
					this.OnTotalVolumeExternalUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._TotalVolumeExternalUOMKey = value;
					this.SendPropertyChanged("TotalVolumeExternalUOMKey");
					this.OnTotalVolumeExternalUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DosageFormKey
		{
			get
			{
				return this._DosageFormKey;
			}
			set
			{
				if ((this._DosageFormKey != value))
				{
					if (this._DosageFormEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDosageFormKeyChanging(value);
					this.SendPropertyChanging();
					this._DosageFormKey = value;
					this.SendPropertyChanged("DosageFormKey");
					this.OnDosageFormKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormCode", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string DosageFormCode
		{
			get
			{
				return this._DosageFormCode;
			}
			set
			{
				if ((this._DosageFormCode != value))
				{
					this.OnDosageFormCodeChanging(value);
					this.SendPropertyChanging();
					this._DosageFormCode = value;
					this.SendPropertyChanged("DosageFormCode");
					this.OnDosageFormCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> MedClassKey
		{
			get
			{
				return this._MedClassKey;
			}
			set
			{
				if ((this._MedClassKey != value))
				{
					if (this._MedClassEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedClassKeyChanging(value);
					this.SendPropertyChanging();
					this._MedClassKey = value;
					this.SendPropertyChanged("MedClassKey");
					this.OnMedClassKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemTypeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string MedItemTypeInternalCode
		{
			get
			{
				return this._MedItemTypeInternalCode;
			}
			set
			{
				if ((this._MedItemTypeInternalCode != value))
				{
					if (this._MedItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedItemTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._MedItemTypeInternalCode = value;
					this.SendPropertyChanged("MedItemTypeInternalCode");
					this.OnMedItemTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumDoseAmount", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> MinimumDoseAmount
		{
			get
			{
				return this._MinimumDoseAmount;
			}
			set
			{
				if ((this._MinimumDoseAmount != value))
				{
					this.OnMinimumDoseAmountChanging(value);
					this.SendPropertyChanging();
					this._MinimumDoseAmount = value;
					this.SendPropertyChanged("MinimumDoseAmount");
					this.OnMinimumDoseAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumDoseAmount", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> MaximumDoseAmount
		{
			get
			{
				return this._MaximumDoseAmount;
			}
			set
			{
				if ((this._MaximumDoseAmount != value))
				{
					this.OnMaximumDoseAmountChanging(value);
					this.SendPropertyChanging();
					this._MaximumDoseAmount = value;
					this.SendPropertyChanged("MaximumDoseAmount");
					this.OnMaximumDoseAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoseDisplayCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DoseDisplayCode
		{
			get
			{
				return this._DoseDisplayCode;
			}
			set
			{
				if ((this._DoseDisplayCode != value))
				{
					this.OnDoseDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DoseDisplayCode = value;
					this.SendPropertyChanged("DoseDisplayCode");
					this.OnDoseDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoseUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DoseUOMKey
		{
			get
			{
				return this._DoseUOMKey;
			}
			set
			{
				if ((this._DoseUOMKey != value))
				{
					this.OnDoseUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._DoseUOMKey = value;
					this.SendPropertyChanged("DoseUOMKey");
					this.OnDoseUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchGenericName", DbType="NVarChar(150)")]
		public string SearchGenericName
		{
			get
			{
				return this._SearchGenericName;
			}
			set
			{
				if ((this._SearchGenericName != value))
				{
					this.OnSearchGenericNameChanging(value);
					this.SendPropertyChanging();
					this._SearchGenericName = value;
					this.SendPropertyChanged("SearchGenericName");
					this.OnSearchGenericNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchBrandName", DbType="NVarChar(100)")]
		public string SearchBrandName
		{
			get
			{
				return this._SearchBrandName;
			}
			set
			{
				if ((this._SearchBrandName != value))
				{
					this.OnSearchBrandNameChanging(value);
					this.SendPropertyChanging();
					this._SearchBrandName = value;
					this.SendPropertyChanged("SearchBrandName");
					this.OnSearchBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedItemEntity_TherapeuticClassMemberEntity", Storage="_TherapeuticClassMemberEntities", ThisKey="Key", OtherKey="MedItemKey")]
		public EntitySet<TherapeuticClassMemberEntity> TherapeuticClassMemberEntities
		{
			get
			{
				return this._TherapeuticClassMemberEntities;
			}
			set
			{
				this._TherapeuticClassMemberEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedItemEntity_FacilityItemEntity", Storage="_FacilityItemEntities", ThisKey="Key", OtherKey="ItemKey")]
		public EntitySet<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this._FacilityItemEntities;
			}
			set
			{
				this._FacilityItemEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedItemEntity_VariableDoseGroupMemberEntity", Storage="_VariableDoseGroupMemberEntities", ThisKey="Key", OtherKey="VariableDoseGroupKey")]
		public EntitySet<VariableDoseGroupMemberEntity> VariableDoseGroupMemberEntities
		{
			get
			{
				return this._VariableDoseGroupMemberEntities;
			}
			set
			{
				this._VariableDoseGroupMemberEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedItemEntity_VariableDoseGroupMemberEntity1", Storage="_VariableDoseGroupMemberEntities1", ThisKey="Key", OtherKey="MedItemKey")]
		public EntitySet<VariableDoseGroupMemberEntity> VariableDoseGroupMemberEntities1
		{
			get
			{
				return this._VariableDoseGroupMemberEntities1;
			}
			set
			{
				this._VariableDoseGroupMemberEntities1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_MedItemEntity", Storage="_ItemEntity", ThisKey="Key", OtherKey="Key", IsForeignKey=true)]
		public ItemEntity ItemEntity
		{
			get
			{
				return this._ItemEntity.Entity;
			}
			set
			{
				ItemEntity previousValue = this._ItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemEntity.Entity = null;
						previousValue.MedItemEntity = null;
					}
					this._ItemEntity.Entity = value;
					if ((value != null))
					{
						value.MedItemEntity = this;
						this._Key = value.Key;
					}
					else
					{
						this._Key = default(System.Guid);
					}
					this.SendPropertyChanged("ItemEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedClassEntity_MedItemEntity", Storage="_MedClassEntity", ThisKey="MedClassKey", OtherKey="Key", IsForeignKey=true)]
		public MedClassEntity MedClassEntity
		{
			get
			{
				return this._MedClassEntity.Entity;
			}
			set
			{
				MedClassEntity previousValue = this._MedClassEntity.Entity;
				if (((previousValue != value) 
							|| (this._MedClassEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedClassEntity.Entity = null;
						previousValue.MedItemEntities.Remove(this);
					}
					this._MedClassEntity.Entity = value;
					if ((value != null))
					{
						value.MedItemEntities.Add(this);
						this._MedClassKey = value.Key;
					}
					else
					{
						this._MedClassKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("MedClassEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DosageFormEntity_MedItemEntity", Storage="_DosageFormEntity", ThisKey="DosageFormKey", OtherKey="Key", IsForeignKey=true)]
		public DosageFormEntity DosageFormEntity
		{
			get
			{
				return this._DosageFormEntity.Entity;
			}
			set
			{
				DosageFormEntity previousValue = this._DosageFormEntity.Entity;
				if (((previousValue != value) 
							|| (this._DosageFormEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DosageFormEntity.Entity = null;
						previousValue.MedItemEntities.Remove(this);
					}
					this._DosageFormEntity.Entity = value;
					if ((value != null))
					{
						value.MedItemEntities.Add(this);
						this._DosageFormKey = value.Key;
					}
					else
					{
						this._DosageFormKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("DosageFormEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedItemType_MedItemEntity", Storage="_MedItemType", ThisKey="MedItemTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public MedItemType MedItemType
		{
			get
			{
				return this._MedItemType.Entity;
			}
			set
			{
				MedItemType previousValue = this._MedItemType.Entity;
				if (((previousValue != value) 
							|| (this._MedItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedItemType.Entity = null;
						previousValue.MedItemEntities.Remove(this);
					}
					this._MedItemType.Entity = value;
					if ((value != null))
					{
						value.MedItemEntities.Add(this);
						this._MedItemTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._MedItemTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("MedItemType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TherapeuticClassMemberEntities(TherapeuticClassMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedItemEntity = this;
		}
		
		private void detach_TherapeuticClassMemberEntities(TherapeuticClassMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedItemEntity = null;
		}
		
		private void attach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedItemEntity = this;
		}
		
		private void detach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedItemEntity = null;
		}
		
		private void attach_VariableDoseGroupMemberEntities(VariableDoseGroupMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.VariableDoseGroupEntity = this;
		}
		
		private void detach_VariableDoseGroupMemberEntities(VariableDoseGroupMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.VariableDoseGroupEntity = null;
		}
		
		private void attach_VariableDoseGroupMemberEntities1(VariableDoseGroupMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedItemEntity = this;
		}
		
		private void detach_VariableDoseGroupMemberEntities1(VariableDoseGroupMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedItemEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_MedClassCurrent")]
	public partial class MedClassEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ExternalSystemKey;
		
		private string _MedClassCode;
		
		private string _DescriptionText;
		
		private bool _ControlledFlag;
		
		private System.Nullable<System.Guid> _FormularyTemplateKey;
		
		private System.Nullable<int> _SortValue;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<MedItemEntity> _MedItemEntities;
		
		private EntityRef<FormularyTemplateEntity> _FormularyTemplateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnExternalSystemKeyChanging(System.Guid value);
    partial void OnExternalSystemKeyChanged();
    partial void OnMedClassCodeChanging(string value);
    partial void OnMedClassCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnControlledFlagChanging(bool value);
    partial void OnControlledFlagChanged();
    partial void OnFormularyTemplateKeyChanging(System.Nullable<System.Guid> value);
    partial void OnFormularyTemplateKeyChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public MedClassEntity()
		{
			this._MedItemEntities = new EntitySet<MedItemEntity>(new Action<MedItemEntity>(this.attach_MedItemEntities), new Action<MedItemEntity>(this.detach_MedItemEntities));
			this._FormularyTemplateEntity = default(EntityRef<FormularyTemplateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MedClassKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MedClassCode
		{
			get
			{
				return this._MedClassCode;
			}
			set
			{
				if ((this._MedClassCode != value))
				{
					this.OnMedClassCodeChanging(value);
					this.SendPropertyChanging();
					this._MedClassCode = value;
					this.SendPropertyChanged("MedClassCode");
					this.OnMedClassCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlledFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ControlledFlag
		{
			get
			{
				return this._ControlledFlag;
			}
			set
			{
				if ((this._ControlledFlag != value))
				{
					this.OnControlledFlagChanging(value);
					this.SendPropertyChanging();
					this._ControlledFlag = value;
					this.SendPropertyChanged("ControlledFlag");
					this.OnControlledFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormularyTemplateKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> FormularyTemplateKey
		{
			get
			{
				return this._FormularyTemplateKey;
			}
			set
			{
				if ((this._FormularyTemplateKey != value))
				{
					if (this._FormularyTemplateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormularyTemplateKeyChanging(value);
					this.SendPropertyChanging();
					this._FormularyTemplateKey = value;
					this.SendPropertyChanged("FormularyTemplateKey");
					this.OnFormularyTemplateKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedClassEntity_MedItemEntity", Storage="_MedItemEntities", ThisKey="Key", OtherKey="MedClassKey")]
		public EntitySet<MedItemEntity> MedItemEntities
		{
			get
			{
				return this._MedItemEntities;
			}
			set
			{
				this._MedItemEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormularyTemplateEntity_MedClassEntity", Storage="_FormularyTemplateEntity", ThisKey="FormularyTemplateKey", OtherKey="Key", IsForeignKey=true)]
		public FormularyTemplateEntity FormularyTemplateEntity
		{
			get
			{
				return this._FormularyTemplateEntity.Entity;
			}
			set
			{
				FormularyTemplateEntity previousValue = this._FormularyTemplateEntity.Entity;
				if (((previousValue != value) 
							|| (this._FormularyTemplateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormularyTemplateEntity.Entity = null;
						previousValue.MedClassEntities.Remove(this);
					}
					this._FormularyTemplateEntity.Entity = value;
					if ((value != null))
					{
						value.MedClassEntities.Add(this);
						this._FormularyTemplateKey = value.Key;
					}
					else
					{
						this._FormularyTemplateKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FormularyTemplateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MedItemEntities(MedItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedClassEntity = this;
		}
		
		private void detach_MedItemEntities(MedItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedClassEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_DosageFormCurrent")]
	public partial class DosageFormEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ExternalSystemKey;
		
		private string _DosageFormCode;
		
		private string _DescriptionText;
		
		private System.Nullable<System.Guid> _EquivalencyDosageFormGroupKey;
		
		private System.Nullable<int> _SortValue;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<MedItemEntity> _MedItemEntities;
		
		private EntityRef<EquivalencyDosageFormGroupEntity> _EquivalencyDosageFormGroupEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnExternalSystemKeyChanging(System.Guid value);
    partial void OnExternalSystemKeyChanged();
    partial void OnDosageFormCodeChanging(string value);
    partial void OnDosageFormCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnEquivalencyDosageFormGroupKeyChanging(System.Nullable<System.Guid> value);
    partial void OnEquivalencyDosageFormGroupKeyChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public DosageFormEntity()
		{
			this._MedItemEntities = new EntitySet<MedItemEntity>(new Action<MedItemEntity>(this.attach_MedItemEntities), new Action<MedItemEntity>(this.detach_MedItemEntities));
			this._EquivalencyDosageFormGroupEntity = default(EntityRef<EquivalencyDosageFormGroupEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DosageFormKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DosageFormCode
		{
			get
			{
				return this._DosageFormCode;
			}
			set
			{
				if ((this._DosageFormCode != value))
				{
					this.OnDosageFormCodeChanging(value);
					this.SendPropertyChanging();
					this._DosageFormCode = value;
					this.SendPropertyChanged("DosageFormCode");
					this.OnDosageFormCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalencyDosageFormGroupKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EquivalencyDosageFormGroupKey
		{
			get
			{
				return this._EquivalencyDosageFormGroupKey;
			}
			set
			{
				if ((this._EquivalencyDosageFormGroupKey != value))
				{
					if (this._EquivalencyDosageFormGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEquivalencyDosageFormGroupKeyChanging(value);
					this.SendPropertyChanging();
					this._EquivalencyDosageFormGroupKey = value;
					this.SendPropertyChanged("EquivalencyDosageFormGroupKey");
					this.OnEquivalencyDosageFormGroupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DosageFormEntity_MedItemEntity", Storage="_MedItemEntities", ThisKey="Key", OtherKey="DosageFormKey")]
		public EntitySet<MedItemEntity> MedItemEntities
		{
			get
			{
				return this._MedItemEntities;
			}
			set
			{
				this._MedItemEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EquivalencyDosageFormGroupEntity_DosageFormEntity", Storage="_EquivalencyDosageFormGroupEntity", ThisKey="EquivalencyDosageFormGroupKey", OtherKey="Key", IsForeignKey=true)]
		public EquivalencyDosageFormGroupEntity EquivalencyDosageFormGroupEntity
		{
			get
			{
				return this._EquivalencyDosageFormGroupEntity.Entity;
			}
			set
			{
				EquivalencyDosageFormGroupEntity previousValue = this._EquivalencyDosageFormGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._EquivalencyDosageFormGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EquivalencyDosageFormGroupEntity.Entity = null;
						previousValue.DosageFormEntities.Remove(this);
					}
					this._EquivalencyDosageFormGroupEntity.Entity = value;
					if ((value != null))
					{
						value.DosageFormEntities.Add(this);
						this._EquivalencyDosageFormGroupKey = value.Key;
					}
					else
					{
						this._EquivalencyDosageFormGroupKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("EquivalencyDosageFormGroupEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MedItemEntities(MedItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.DosageFormEntity = this;
		}
		
		private void detach_MedItemEntities(MedItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.DosageFormEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.SecurityGroup")]
	public partial class SecurityGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private string _BusinessDomainInternalCode;
		
		private string _DisplayCode;
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private bool _ActiveFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityItemEntity> _FacilityItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnBusinessDomainInternalCodeChanging(string value);
    partial void OnBusinessDomainInternalCodeChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public SecurityGroupEntity()
		{
			this._FacilityItemEntities = new EntitySet<FacilityItemEntity>(new Action<FacilityItemEntity>(this.attach_FacilityItemEntities), new Action<FacilityItemEntity>(this.detach_FacilityItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SecurityGroupKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessDomainInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BusinessDomainInternalCode
		{
			get
			{
				return this._BusinessDomainInternalCode;
			}
			set
			{
				if ((this._BusinessDomainInternalCode != value))
				{
					this.OnBusinessDomainInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._BusinessDomainInternalCode = value;
					this.SendPropertyChanged("BusinessDomainInternalCode");
					this.OnBusinessDomainInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalCode", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityGroupEntity_FacilityItemEntity", Storage="_FacilityItemEntities", ThisKey="Key", OtherKey="SecurityGroupKey")]
		public EntitySet<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this._FacilityItemEntities;
			}
			set
			{
				this._FacilityItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.SecurityGroupEntity = this;
		}
		
		private void detach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.SecurityGroupEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_TherapeuticClassMemberCurrent")]
	public partial class TherapeuticClassMemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _MedItemKey;
		
		private System.Guid _TherapeuticClassKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<TherapeuticClassEntity> _TherapeuticClassEntity;
		
		private EntityRef<MedItemEntity> _MedItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnMedItemKeyChanging(System.Guid value);
    partial void OnMedItemKeyChanged();
    partial void OnTherapeuticClassKeyChanging(System.Guid value);
    partial void OnTherapeuticClassKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public TherapeuticClassMemberEntity()
		{
			this._TherapeuticClassEntity = default(EntityRef<TherapeuticClassEntity>);
			this._MedItemEntity = default(EntityRef<MedItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TherapeuticClassMemberKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid MedItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					if (this._MedItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedItemKeyChanging(value);
					this.SendPropertyChanging();
					this._MedItemKey = value;
					this.SendPropertyChanged("MedItemKey");
					this.OnMedItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapeuticClassKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid TherapeuticClassKey
		{
			get
			{
				return this._TherapeuticClassKey;
			}
			set
			{
				if ((this._TherapeuticClassKey != value))
				{
					if (this._TherapeuticClassEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTherapeuticClassKeyChanging(value);
					this.SendPropertyChanging();
					this._TherapeuticClassKey = value;
					this.SendPropertyChanged("TherapeuticClassKey");
					this.OnTherapeuticClassKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TherapeuticClassEntity_TherapeuticClassMemberEntity", Storage="_TherapeuticClassEntity", ThisKey="TherapeuticClassKey", OtherKey="Key", IsForeignKey=true)]
		public TherapeuticClassEntity TherapeuticClassEntity
		{
			get
			{
				return this._TherapeuticClassEntity.Entity;
			}
			set
			{
				TherapeuticClassEntity previousValue = this._TherapeuticClassEntity.Entity;
				if (((previousValue != value) 
							|| (this._TherapeuticClassEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TherapeuticClassEntity.Entity = null;
						previousValue.TherapeuticClassMemberEntities.Remove(this);
					}
					this._TherapeuticClassEntity.Entity = value;
					if ((value != null))
					{
						value.TherapeuticClassMemberEntities.Add(this);
						this._TherapeuticClassKey = value.Key;
					}
					else
					{
						this._TherapeuticClassKey = default(System.Guid);
					}
					this.SendPropertyChanged("TherapeuticClassEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedItemEntity_TherapeuticClassMemberEntity", Storage="_MedItemEntity", ThisKey="MedItemKey", OtherKey="Key", IsForeignKey=true)]
		public MedItemEntity MedItemEntity
		{
			get
			{
				return this._MedItemEntity.Entity;
			}
			set
			{
				MedItemEntity previousValue = this._MedItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._MedItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedItemEntity.Entity = null;
						previousValue.TherapeuticClassMemberEntities.Remove(this);
					}
					this._MedItemEntity.Entity = value;
					if ((value != null))
					{
						value.TherapeuticClassMemberEntities.Add(this);
						this._MedItemKey = value.Key;
					}
					else
					{
						this._MedItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("MedItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_TherapeuticClassCurrent")]
	public partial class TherapeuticClassEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ExternalSystemKey;
		
		private string _TherapeuticClassCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<TherapeuticClassMemberEntity> _TherapeuticClassMemberEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnExternalSystemKeyChanging(System.Guid value);
    partial void OnExternalSystemKeyChanged();
    partial void OnTherapeuticClassCodeChanging(string value);
    partial void OnTherapeuticClassCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public TherapeuticClassEntity()
		{
			this._TherapeuticClassMemberEntities = new EntitySet<TherapeuticClassMemberEntity>(new Action<TherapeuticClassMemberEntity>(this.attach_TherapeuticClassMemberEntities), new Action<TherapeuticClassMemberEntity>(this.detach_TherapeuticClassMemberEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TherapeuticClassKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapeuticClassCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TherapeuticClassCode
		{
			get
			{
				return this._TherapeuticClassCode;
			}
			set
			{
				if ((this._TherapeuticClassCode != value))
				{
					this.OnTherapeuticClassCodeChanging(value);
					this.SendPropertyChanging();
					this._TherapeuticClassCode = value;
					this.SendPropertyChanged("TherapeuticClassCode");
					this.OnTherapeuticClassCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TherapeuticClassEntity_TherapeuticClassMemberEntity", Storage="_TherapeuticClassMemberEntities", ThisKey="Key", OtherKey="TherapeuticClassKey")]
		public EntitySet<TherapeuticClassMemberEntity> TherapeuticClassMemberEntities
		{
			get
			{
				return this._TherapeuticClassMemberEntities;
			}
			set
			{
				this._TherapeuticClassMemberEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TherapeuticClassMemberEntities(TherapeuticClassMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.TherapeuticClassEntity = this;
		}
		
		private void detach_TherapeuticClassMemberEntities(TherapeuticClassMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.TherapeuticClassEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_ItemScanCodeCurrent")]
	public partial class ItemScanCodeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemScanCodeSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _ItemKey;
		
		private string _ScanCodeValue;
		
		private System.Nullable<System.Guid> _LinkedByUserAccountKey;
		
		private System.DateTime _LinkedUTCDateTime;
		
		private System.DateTime _LinkedLocalDateTime;
		
		private System.Nullable<System.Guid> _VerifiedByUserAccountKey;
		
		private System.Nullable<System.DateTime> _VerifiedUTCDateTime;
		
		private System.Nullable<System.DateTime> _VerifiedLocalDateTime;
		
		private bool _FromExternalSystemFlag;
		
		private string _ScanProductDeleteReasonInternalCode;
		
		private string _OtherItemID;
		
		private string _CreatedByExternalSystemName;
		
		private string _DeletedByExternalSystemName;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ItemEntity> _ItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemScanCodeSnapshotKeyChanging(System.Guid value);
    partial void OnItemScanCodeSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnItemKeyChanging(System.Guid value);
    partial void OnItemKeyChanged();
    partial void OnScanCodeValueChanging(string value);
    partial void OnScanCodeValueChanged();
    partial void OnLinkedByUserAccountKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLinkedByUserAccountKeyChanged();
    partial void OnLinkedUTCDateTimeChanging(System.DateTime value);
    partial void OnLinkedUTCDateTimeChanged();
    partial void OnLinkedLocalDateTimeChanging(System.DateTime value);
    partial void OnLinkedLocalDateTimeChanged();
    partial void OnVerifiedByUserAccountKeyChanging(System.Nullable<System.Guid> value);
    partial void OnVerifiedByUserAccountKeyChanged();
    partial void OnVerifiedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnVerifiedUTCDateTimeChanged();
    partial void OnVerifiedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnVerifiedLocalDateTimeChanged();
    partial void OnFromExternalSystemFlagChanging(bool value);
    partial void OnFromExternalSystemFlagChanged();
    partial void OnScanProductDeleteReasonInternalCodeChanging(string value);
    partial void OnScanProductDeleteReasonInternalCodeChanged();
    partial void OnOtherItemIDChanging(string value);
    partial void OnOtherItemIDChanged();
    partial void OnCreatedByExternalSystemNameChanging(string value);
    partial void OnCreatedByExternalSystemNameChanged();
    partial void OnDeletedByExternalSystemNameChanging(string value);
    partial void OnDeletedByExternalSystemNameChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ItemScanCodeEntity()
		{
			this._ItemEntity = default(EntityRef<ItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ItemScanCodeKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemScanCodeSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemScanCodeSnapshotKey
		{
			get
			{
				return this._ItemScanCodeSnapshotKey;
			}
			set
			{
				if ((this._ItemScanCodeSnapshotKey != value))
				{
					this.OnItemScanCodeSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemScanCodeSnapshotKey = value;
					this.SendPropertyChanged("ItemScanCodeSnapshotKey");
					this.OnItemScanCodeSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					if (this._ItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanCodeValue", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ScanCodeValue
		{
			get
			{
				return this._ScanCodeValue;
			}
			set
			{
				if ((this._ScanCodeValue != value))
				{
					this.OnScanCodeValueChanging(value);
					this.SendPropertyChanging();
					this._ScanCodeValue = value;
					this.SendPropertyChanged("ScanCodeValue");
					this.OnScanCodeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedByUserAccountKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LinkedByUserAccountKey
		{
			get
			{
				return this._LinkedByUserAccountKey;
			}
			set
			{
				if ((this._LinkedByUserAccountKey != value))
				{
					this.OnLinkedByUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._LinkedByUserAccountKey = value;
					this.SendPropertyChanged("LinkedByUserAccountKey");
					this.OnLinkedByUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LinkedUTCDateTime
		{
			get
			{
				return this._LinkedUTCDateTime;
			}
			set
			{
				if ((this._LinkedUTCDateTime != value))
				{
					this.OnLinkedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LinkedUTCDateTime = value;
					this.SendPropertyChanged("LinkedUTCDateTime");
					this.OnLinkedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LinkedLocalDateTime
		{
			get
			{
				return this._LinkedLocalDateTime;
			}
			set
			{
				if ((this._LinkedLocalDateTime != value))
				{
					this.OnLinkedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LinkedLocalDateTime = value;
					this.SendPropertyChanged("LinkedLocalDateTime");
					this.OnLinkedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedByUserAccountKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> VerifiedByUserAccountKey
		{
			get
			{
				return this._VerifiedByUserAccountKey;
			}
			set
			{
				if ((this._VerifiedByUserAccountKey != value))
				{
					this.OnVerifiedByUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._VerifiedByUserAccountKey = value;
					this.SendPropertyChanged("VerifiedByUserAccountKey");
					this.OnVerifiedByUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> VerifiedUTCDateTime
		{
			get
			{
				return this._VerifiedUTCDateTime;
			}
			set
			{
				if ((this._VerifiedUTCDateTime != value))
				{
					this.OnVerifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._VerifiedUTCDateTime = value;
					this.SendPropertyChanged("VerifiedUTCDateTime");
					this.OnVerifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedLocalDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> VerifiedLocalDateTime
		{
			get
			{
				return this._VerifiedLocalDateTime;
			}
			set
			{
				if ((this._VerifiedLocalDateTime != value))
				{
					this.OnVerifiedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._VerifiedLocalDateTime = value;
					this.SendPropertyChanged("VerifiedLocalDateTime");
					this.OnVerifiedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromExternalSystemFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FromExternalSystemFlag
		{
			get
			{
				return this._FromExternalSystemFlag;
			}
			set
			{
				if ((this._FromExternalSystemFlag != value))
				{
					this.OnFromExternalSystemFlagChanging(value);
					this.SendPropertyChanging();
					this._FromExternalSystemFlag = value;
					this.SendPropertyChanged("FromExternalSystemFlag");
					this.OnFromExternalSystemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanProductDeleteReasonInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ScanProductDeleteReasonInternalCode
		{
			get
			{
				return this._ScanProductDeleteReasonInternalCode;
			}
			set
			{
				if ((this._ScanProductDeleteReasonInternalCode != value))
				{
					this.OnScanProductDeleteReasonInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ScanProductDeleteReasonInternalCode = value;
					this.SendPropertyChanged("ScanProductDeleteReasonInternalCode");
					this.OnScanProductDeleteReasonInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherItemID", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string OtherItemID
		{
			get
			{
				return this._OtherItemID;
			}
			set
			{
				if ((this._OtherItemID != value))
				{
					this.OnOtherItemIDChanging(value);
					this.SendPropertyChanging();
					this._OtherItemID = value;
					this.SendPropertyChanged("OtherItemID");
					this.OnOtherItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByExternalSystemName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedByExternalSystemName
		{
			get
			{
				return this._CreatedByExternalSystemName;
			}
			set
			{
				if ((this._CreatedByExternalSystemName != value))
				{
					this.OnCreatedByExternalSystemNameChanging(value);
					this.SendPropertyChanging();
					this._CreatedByExternalSystemName = value;
					this.SendPropertyChanged("CreatedByExternalSystemName");
					this.OnCreatedByExternalSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedByExternalSystemName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DeletedByExternalSystemName
		{
			get
			{
				return this._DeletedByExternalSystemName;
			}
			set
			{
				if ((this._DeletedByExternalSystemName != value))
				{
					this.OnDeletedByExternalSystemNameChanging(value);
					this.SendPropertyChanging();
					this._DeletedByExternalSystemName = value;
					this.SendPropertyChanged("DeletedByExternalSystemName");
					this.OnDeletedByExternalSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_ItemScanCodeEntity", Storage="_ItemEntity", ThisKey="ItemKey", OtherKey="Key", IsForeignKey=true)]
		public ItemEntity ItemEntity
		{
			get
			{
				return this._ItemEntity.Entity;
			}
			set
			{
				ItemEntity previousValue = this._ItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemEntity.Entity = null;
						previousValue.ItemScanCodeEntities.Remove(this);
					}
					this._ItemEntity.Entity = value;
					if ((value != null))
					{
						value.ItemScanCodeEntities.Add(this);
						this._ItemKey = value.Key;
					}
					else
					{
						this._ItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.VerifyCountMode")]
	public partial class VerifyCountModeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityItemEntity> _FacilityItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public VerifyCountModeEntity()
		{
			this._FacilityItemEntities = new EntitySet<FacilityItemEntity>(new Action<FacilityItemEntity>(this.attach_FacilityItemEntities), new Action<FacilityItemEntity>(this.detach_FacilityItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="VerifyCountModeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VerifyCountModeEntity_FacilityItemEntity", Storage="_FacilityItemEntities", ThisKey="InternalCode", OtherKey="VerifyCountModeInternalCode")]
		public EntitySet<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this._FacilityItemEntities;
			}
			set
			{
				this._FacilityItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.VerifyCountModeEntity = this;
		}
		
		private void detach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.VerifyCountModeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.OverrideGroup")]
	public partial class OverrideGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private string _DisplayCode;
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private bool _ActiveFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<OverrideGroupMemberEntity> _OverrideGroupMemberEntities;
		
		private EntitySet<FormularyTemplateOverrideGroupEntity> _FormularyTemplateOverrideGroupEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public OverrideGroupEntity()
		{
			this._OverrideGroupMemberEntities = new EntitySet<OverrideGroupMemberEntity>(new Action<OverrideGroupMemberEntity>(this.attach_OverrideGroupMemberEntities), new Action<OverrideGroupMemberEntity>(this.detach_OverrideGroupMemberEntities));
			this._FormularyTemplateOverrideGroupEntities = new EntitySet<FormularyTemplateOverrideGroupEntity>(new Action<FormularyTemplateOverrideGroupEntity>(this.attach_FormularyTemplateOverrideGroupEntities), new Action<FormularyTemplateOverrideGroupEntity>(this.detach_FormularyTemplateOverrideGroupEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="OverrideGroupKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalCode", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OverrideGroupEntity_OverrideGroupMemberEntity", Storage="_OverrideGroupMemberEntities", ThisKey="Key", OtherKey="OverrideGroupKey")]
		public EntitySet<OverrideGroupMemberEntity> OverrideGroupMemberEntities
		{
			get
			{
				return this._OverrideGroupMemberEntities;
			}
			set
			{
				this._OverrideGroupMemberEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OverrideGroupEntity_FormularyTemplateOverrideGroupEntity", Storage="_FormularyTemplateOverrideGroupEntities", ThisKey="Key", OtherKey="OverrideGroupKey")]
		public EntitySet<FormularyTemplateOverrideGroupEntity> FormularyTemplateOverrideGroupEntities
		{
			get
			{
				return this._FormularyTemplateOverrideGroupEntities;
			}
			set
			{
				this._FormularyTemplateOverrideGroupEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OverrideGroupMemberEntities(OverrideGroupMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.OverrideGroupEntity = this;
		}
		
		private void detach_OverrideGroupMemberEntities(OverrideGroupMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.OverrideGroupEntity = null;
		}
		
		private void attach_FormularyTemplateOverrideGroupEntities(FormularyTemplateOverrideGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.OverrideGroupEntity = this;
		}
		
		private void detach_FormularyTemplateOverrideGroupEntities(FormularyTemplateOverrideGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.OverrideGroupEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_OverrideGroupMemberCurrent")]
	public partial class OverrideGroupMemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _MedItemKey;
		
		private System.Guid _OverrideGroupKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<OverrideGroupEntity> _OverrideGroupEntity;
		
		private EntityRef<FacilityItemEntity> _FacilityItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFacilityItemKeyChanging(System.Guid value);
    partial void OnFacilityItemKeyChanged();
    partial void OnOverrideGroupKeyChanging(System.Guid value);
    partial void OnOverrideGroupKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public OverrideGroupMemberEntity()
		{
			this._OverrideGroupEntity = default(EntityRef<OverrideGroupEntity>);
			this._FacilityItemEntity = default(EntityRef<FacilityItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="OverrideGroupMemberKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					if (this._FacilityItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityItemKeyChanging(value);
					this.SendPropertyChanging();
					this._MedItemKey = value;
					this.SendPropertyChanged("FacilityItemKey");
					this.OnFacilityItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideGroupKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid OverrideGroupKey
		{
			get
			{
				return this._OverrideGroupKey;
			}
			set
			{
				if ((this._OverrideGroupKey != value))
				{
					if (this._OverrideGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOverrideGroupKeyChanging(value);
					this.SendPropertyChanging();
					this._OverrideGroupKey = value;
					this.SendPropertyChanged("OverrideGroupKey");
					this.OnOverrideGroupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OverrideGroupEntity_OverrideGroupMemberEntity", Storage="_OverrideGroupEntity", ThisKey="OverrideGroupKey", OtherKey="Key", IsForeignKey=true)]
		public OverrideGroupEntity OverrideGroupEntity
		{
			get
			{
				return this._OverrideGroupEntity.Entity;
			}
			set
			{
				OverrideGroupEntity previousValue = this._OverrideGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._OverrideGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OverrideGroupEntity.Entity = null;
						previousValue.OverrideGroupMemberEntities.Remove(this);
					}
					this._OverrideGroupEntity.Entity = value;
					if ((value != null))
					{
						value.OverrideGroupMemberEntities.Add(this);
						this._OverrideGroupKey = value.Key;
					}
					else
					{
						this._OverrideGroupKey = default(System.Guid);
					}
					this.SendPropertyChanged("OverrideGroupEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_OverrideGroupMemberEntity", Storage="_FacilityItemEntity", ThisKey="FacilityItemKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityItemEntity FacilityItemEntity
		{
			get
			{
				return this._FacilityItemEntity.Entity;
			}
			set
			{
				FacilityItemEntity previousValue = this._FacilityItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityItemEntity.Entity = null;
						previousValue.OverrideGroupMemberEntities.Remove(this);
					}
					this._FacilityItemEntity.Entity = value;
					if ((value != null))
					{
						value.OverrideGroupMemberEntities.Add(this);
						this._MedItemKey = value.Key;
					}
					else
					{
						this._MedItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("FacilityItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_PickAreaCurrent")]
	public partial class PickAreaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _PickAreaSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _FacilityKey;
		
		private string _PickAreaName;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityItemPickAreaEntity> _FacilityItemPickAreaEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnPickAreaSnapshotKeyChanging(System.Guid value);
    partial void OnPickAreaSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnPickAreaNameChanging(string value);
    partial void OnPickAreaNameChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PickAreaEntity()
		{
			this._FacilityItemPickAreaEntities = new EntitySet<FacilityItemPickAreaEntity>(new Action<FacilityItemPickAreaEntity>(this.attach_FacilityItemPickAreaEntities), new Action<FacilityItemPickAreaEntity>(this.detach_FacilityItemPickAreaEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PickAreaKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickAreaSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PickAreaSnapshotKey
		{
			get
			{
				return this._PickAreaSnapshotKey;
			}
			set
			{
				if ((this._PickAreaSnapshotKey != value))
				{
					this.OnPickAreaSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._PickAreaSnapshotKey = value;
					this.SendPropertyChanged("PickAreaSnapshotKey");
					this.OnPickAreaSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickAreaName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PickAreaName
		{
			get
			{
				return this._PickAreaName;
			}
			set
			{
				if ((this._PickAreaName != value))
				{
					this.OnPickAreaNameChanging(value);
					this.SendPropertyChanging();
					this._PickAreaName = value;
					this.SendPropertyChanged("PickAreaName");
					this.OnPickAreaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PickAreaEntity_FacilityItemPickAreaEntity", Storage="_FacilityItemPickAreaEntities", ThisKey="Key", OtherKey="PickAreaKey")]
		public EntitySet<FacilityItemPickAreaEntity> FacilityItemPickAreaEntities
		{
			get
			{
				return this._FacilityItemPickAreaEntities;
			}
			set
			{
				this._FacilityItemPickAreaEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityItemPickAreaEntities(FacilityItemPickAreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.PickAreaEntity = this;
		}
		
		private void detach_FacilityItemPickAreaEntities(FacilityItemPickAreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.PickAreaEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_FacilityItemCurrent")]
	public partial class FacilityItemEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FacilityKey;
		
		private System.Guid _ItemKey;
		
		private System.Guid _MedItemKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Guid _FacilityItemSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private string _ItemDisplayName;
		
		private string _AlternateItemID;
		
		private System.Nullable<System.Guid> _MedClassKey;
		
		private bool _OutdateTrackingFlag;
		
		private string _VerifyCountModeInternalCode;
		
		private bool _VerifyCountAnesthesiaDispensingFlag;
		
		private bool _WitnessOnDispenseFlag;
		
		private bool _WitnessOnReturnFlag;
		
		private bool _WitnessOnDisposeFlag;
		
		private bool _WitnessOnLoadRefillFlag;
		
		private bool _WitnessOnUnloadFlag;
		
		private bool _WitnessOnOverrideFlag;
		
		private bool _WitnessOnOutdateFlag;
		
		private bool _WitnessOnInventoryFlag;
		
		private bool _WitnessOnEmptyReturnBinFlag;
		
		private bool _WitnessOnDestockFlag;
		
		private bool _WitnessOnRxCheckFlag;
		
		private bool _ScanOnLoadRefillFlag;
		
		private bool _ScanOnRemoveFlag;
		
		private bool _ScanOnReturnFlag;
		
		private bool _RequireLotIDOnRemoveFlag;
		
		private bool _RequireLotIDOnReturnFlag;
		
		private bool _RequireSerialIDOnRemoveFlag;
		
		private bool _RequireSerialIDOnReturnFlag;
		
		private bool _RequireExpirationDateOnRemoveFlag;
		
		private bool _RequireExpirationDateOnReturnFlag;
		
		private bool _RequireInventoryReferenceIDFlag;
		
		private bool _ReverificationFlag;
		
		private System.Nullable<short> _TooCloseRemoveDurationAmount;
		
		private System.Nullable<System.Guid> _SecurityGroupKey;
		
		private bool _ActiveFlag;
		
		private bool _AutoResolveDiscrepancyFlag;
		
		private bool _ChargeableFlag;
		
		private bool _HighCostFlag;
		
		private bool _AllowSplittingFlag;
		
		private bool _HighRiskFlag;
		
		private System.Nullable<System.Guid> _HazardousWasteClassKey;
		
		private bool _TrackInventoryQuantityFlag;
		
		private bool _MultiDoseFlag;
		
		private bool _BackorderedFlag;
		
		private System.Nullable<System.Guid> _RefillUOMKey;
		
		private string _RefillDisplayCode;
		
		private System.Nullable<System.Guid> _IssueUOMKey;
		
		private string _IssueDisplayCode;
		
		private System.Nullable<decimal> _UOIPerUORAmount;
		
		private bool _StandardStockFlag;
		
		private string _MedReturnModeInternalCode;
		
		private string _MedFailoverReturnModeInternalCode;
		
		private string _ReplenishmentScanModeInternalCode;
		
		private string _FractionalUOMTypeInternalCode;
		
		private string _AutoMedLabelModeInternalCode;
		
		private string _PharmacyNotesText;
		
		private string _NursingNotesText;
		
		private System.Nullable<byte> _CriticalLowPercentage;
		
		private bool _StockOutNoticeFlag;
		
		private bool _OMNLNoticeFlag;
		
		private bool _AnesthesiaMyItemsFlag;
		
		private bool _ResolveUndocumentedWasteFlag;
		
		private bool _ComboFlag;
		
		private bool _DispenseComponentsOnlyFlag;
		
		private bool _ChargeComboFlag;
		
		private bool _DisplayCalculationOnDispenseFlag;
		
		private System.Nullable<System.Guid> _ReplenishmentPickAreaKey;
		
		private System.Nullable<System.Guid> _DistributorKey;
		
		private bool _RxCheckFlag;
		
		private bool _PrintOnRemoveFlag;
		
		private bool _PrintOnLoadRefillFlag;
		
		private bool _ShowConversionOnRemoveFlag;
		
		private bool _ScanAllOnPickFlag;
		
		private bool _ScanOnCheckFlag;
		
		private bool _DoOnceOnRemoveFlag;
		
		private string _CountCUBIEEjectModeInternalCode;
		
		private bool _PharmacyOrderDispenseQuantityFlag;
		
		private bool _InjectableFlag;
		
		private string _GCSMMedReturnModeInternalCode;
		
		private string _GCSMVerifyCountModeInternalCode;
		
		private string _GCSMCountCUBIEEjectModeInternalCode;
		
		private bool _GCSMOutdateTrackingFlag;
		
		private bool _GCSMRequireLotNumberWhenRecallFlag;
		
		private bool _GCSMRequireInventoryReferenceNumberFlag;
		
		private bool _GCSMWitnessOnOutdateFlag;
		
		private bool _GCSMWitnessOnReturnFlag;
		
		private bool _GCSMWitnessOnAutorestockFlag;
		
		private bool _GCSMWitnessOnCompoundingFlag;
		
		private bool _GCSMWitnessOnDestructionBinFlag;
		
		private bool _GCSMWitnessOnDiscrepancyResolutionFlag;
		
		private bool _GCSMWitnessOnInventoryCountFlag;
		
		private bool _GCSMWitnessOnIssueFlag;
		
		private bool _GCSMWitnessOnPrescriptionFlag;
		
		private bool _GCSMWitnessOnRecallFlag;
		
		private bool _GCSMWitnessOnReceiveFlag;
		
		private bool _GCSMWitnessOnReverseCompoundingFlag;
		
		private bool _GCSMWitnessOnSellFlag;
		
		private bool _GCSMWitnessOnStockTransferFlag;
		
		private bool _GCSMWitnessOnUnloadFlag;
		
		private bool _GCSMWitnessOnWasteFlag;
		
		private bool _GCSMScanOnCompoundingFlag;
		
		private bool _GCSMScanOnReturnFlag;
		
		private bool _GCSMScanOnAutorestockFlag;
		
		private bool _GCSMScanOnIssueFlag;
		
		private bool _GCSMScanOnPrescriptionFlag;
		
		private bool _GCSMScanOnReceiveFlag;
		
		private bool _GCSMScanOnSellFlag;
		
		private bool _GCSMScanOnStockTransferFlag;
		
		private System.Nullable<byte> _GCSMCriticalLowPercentage;
		
		private bool _GCSMPrintOnReceiveFlag;
		
		private bool _GCSMPrintSingleMedSheetFlag;
		
		private bool _GCSMPrintDripSheetFlag;
		
		private bool _GCSMPrintMaximumRowsFlag;
		
		private short _GCSMAdditionalLabelsPrintedQuantity;
		
		private bool _GCSMStockOutNoticeFlag;
		
		private System.Nullable<System.Guid> _GCSMDistributorKey;
		
		private bool _FirstSnapshotFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<short> _GCSMTotalParDurationAmount;
		
		private System.Nullable<short> _GCSMTotalDeviceParDurationAmount;
		
		private bool _GCSMWitnessOnAddToDestructionBinFlag;
		
		private bool _GCSMWitnessOnAccessToDestructionBinFlag;
		
		private bool _GCSMRequireOriginDestinationFlag;
		
		private EntitySet<OverrideGroupMemberEntity> _OverrideGroupMemberEntities;
		
		private EntitySet<FacilityItemPickAreaEntity> _FacilityItemPickAreaEntities;
		
		private EntitySet<FacilityItemPhysicalCapacityEntity> _FacilityItemPhysicalCapacityEntities;
		
		private EntitySet<FacilityKitMemberEntity> _FacilityKitMemberEntities;
		
		private EntitySet<BlockedFacilityItemDispensingDeviceEntity> _BlockedFacilityItemDispensingDeviceEntities;
		
		private EntitySet<ComboComponentEntity> _ComboComponentEntities;
		
		private EntityRef<ItemEntity> _ItemEntity;
		
		private EntityRef<VerifyCountModeEntity> _VerifyCountModeEntity;
		
		private EntityRef<SecurityGroupEntity> _SecurityGroupEntity;
		
		private EntityRef<MedReturnModeEntity> _MedReturnModeEntity;
		
		private EntityRef<HazardousWasteClassEntity> _HazardousWasteClassEntity;
		
		private EntityRef<MedItemEntity> _MedItemEntity;
		
		private EntityRef<ReplenishmentScanModeEntity> _ReplenishmentScanModeEntity;
		
		private EntityRef<MedFailoverReturnModeEntity> _MedFailoverReturnModeEntity;
		
		private EntityRef<FractionalUOMTypeEntity> _FractionalUOMTypeEntity;
		
		private EntityRef<AutoMedLabelModeEntity> _AutoMedLabelModeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnItemKeyChanging(System.Guid value);
    partial void OnItemKeyChanged();
    partial void OnMedItemKeyChanging(System.Guid value);
    partial void OnMedItemKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnFacilityItemSnapshotKeyChanging(System.Guid value);
    partial void OnFacilityItemSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnItemDisplayNameChanging(string value);
    partial void OnItemDisplayNameChanged();
    partial void OnAlternateItemIDChanging(string value);
    partial void OnAlternateItemIDChanged();
    partial void OnMedClassKeyChanging(System.Nullable<System.Guid> value);
    partial void OnMedClassKeyChanged();
    partial void OnOutdateTrackingFlagChanging(bool value);
    partial void OnOutdateTrackingFlagChanged();
    partial void OnVerifyCountModeInternalCodeChanging(string value);
    partial void OnVerifyCountModeInternalCodeChanged();
    partial void OnVerifyCountAnesthesiaDispensingFlagChanging(bool value);
    partial void OnVerifyCountAnesthesiaDispensingFlagChanged();
    partial void OnWitnessOnDispenseFlagChanging(bool value);
    partial void OnWitnessOnDispenseFlagChanged();
    partial void OnWitnessOnReturnFlagChanging(bool value);
    partial void OnWitnessOnReturnFlagChanged();
    partial void OnWitnessOnDisposeFlagChanging(bool value);
    partial void OnWitnessOnDisposeFlagChanged();
    partial void OnWitnessOnLoadRefillFlagChanging(bool value);
    partial void OnWitnessOnLoadRefillFlagChanged();
    partial void OnWitnessOnUnloadFlagChanging(bool value);
    partial void OnWitnessOnUnloadFlagChanged();
    partial void OnWitnessOnOverrideFlagChanging(bool value);
    partial void OnWitnessOnOverrideFlagChanged();
    partial void OnWitnessOnOutdateFlagChanging(bool value);
    partial void OnWitnessOnOutdateFlagChanged();
    partial void OnWitnessOnInventoryFlagChanging(bool value);
    partial void OnWitnessOnInventoryFlagChanged();
    partial void OnWitnessOnEmptyReturnBinFlagChanging(bool value);
    partial void OnWitnessOnEmptyReturnBinFlagChanged();
    partial void OnWitnessOnDestockFlagChanging(bool value);
    partial void OnWitnessOnDestockFlagChanged();
    partial void OnWitnessOnRxCheckFlagChanging(bool value);
    partial void OnWitnessOnRxCheckFlagChanged();
    partial void OnScanOnLoadRefillFlagChanging(bool value);
    partial void OnScanOnLoadRefillFlagChanged();
    partial void OnScanOnRemoveFlagChanging(bool value);
    partial void OnScanOnRemoveFlagChanged();
    partial void OnScanOnReturnFlagChanging(bool value);
    partial void OnScanOnReturnFlagChanged();
    partial void OnRequireLotIDOnRemoveFlagChanging(bool value);
    partial void OnRequireLotIDOnRemoveFlagChanged();
    partial void OnRequireLotIDOnReturnFlagChanging(bool value);
    partial void OnRequireLotIDOnReturnFlagChanged();
    partial void OnRequireSerialIDOnRemoveFlagChanging(bool value);
    partial void OnRequireSerialIDOnRemoveFlagChanged();
    partial void OnRequireSerialIDOnReturnFlagChanging(bool value);
    partial void OnRequireSerialIDOnReturnFlagChanged();
    partial void OnRequireExpirationDateOnRemoveFlagChanging(bool value);
    partial void OnRequireExpirationDateOnRemoveFlagChanged();
    partial void OnRequireExpirationDateOnReturnFlagChanging(bool value);
    partial void OnRequireExpirationDateOnReturnFlagChanged();
    partial void OnRequireInventoryReferenceIDFlagChanging(bool value);
    partial void OnRequireInventoryReferenceIDFlagChanged();
    partial void OnReverificationFlagChanging(bool value);
    partial void OnReverificationFlagChanged();
    partial void OnTooCloseRemoveDurationAmountChanging(System.Nullable<short> value);
    partial void OnTooCloseRemoveDurationAmountChanged();
    partial void OnSecurityGroupKeyChanging(System.Nullable<System.Guid> value);
    partial void OnSecurityGroupKeyChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnAutoResolveDiscrepancyFlagChanging(bool value);
    partial void OnAutoResolveDiscrepancyFlagChanged();
    partial void OnChargeableFlagChanging(bool value);
    partial void OnChargeableFlagChanged();
    partial void OnHighCostFlagChanging(bool value);
    partial void OnHighCostFlagChanged();
    partial void OnAllowSplittingFlagChanging(bool value);
    partial void OnAllowSplittingFlagChanged();
    partial void OnHighRiskFlagChanging(bool value);
    partial void OnHighRiskFlagChanged();
    partial void OnHazardousWasteClassKeyChanging(System.Nullable<System.Guid> value);
    partial void OnHazardousWasteClassKeyChanged();
    partial void OnTrackInventoryQuantityFlagChanging(bool value);
    partial void OnTrackInventoryQuantityFlagChanged();
    partial void OnMultiDoseFlagChanging(bool value);
    partial void OnMultiDoseFlagChanged();
    partial void OnBackorderedFlagChanging(bool value);
    partial void OnBackorderedFlagChanged();
    partial void OnRefillUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnRefillUOMKeyChanged();
    partial void OnRefillDisplayCodeChanging(string value);
    partial void OnRefillDisplayCodeChanged();
    partial void OnIssueUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnIssueUOMKeyChanged();
    partial void OnIssueDisplayCodeChanging(string value);
    partial void OnIssueDisplayCodeChanged();
    partial void OnUOIPerUORAmountChanging(System.Nullable<decimal> value);
    partial void OnUOIPerUORAmountChanged();
    partial void OnStandardStockFlagChanging(bool value);
    partial void OnStandardStockFlagChanged();
    partial void OnMedReturnModeInternalCodeChanging(string value);
    partial void OnMedReturnModeInternalCodeChanged();
    partial void OnMedFailoverReturnModeInternalCodeChanging(string value);
    partial void OnMedFailoverReturnModeInternalCodeChanged();
    partial void OnReplenishmentScanModeInternalCodeChanging(string value);
    partial void OnReplenishmentScanModeInternalCodeChanged();
    partial void OnFractionalUOMTypeInternalCodeChanging(string value);
    partial void OnFractionalUOMTypeInternalCodeChanged();
    partial void OnAutoMedLabelModeInternalCodeChanging(string value);
    partial void OnAutoMedLabelModeInternalCodeChanged();
    partial void OnPharmacyNotesTextChanging(string value);
    partial void OnPharmacyNotesTextChanged();
    partial void OnNursingNotesTextChanging(string value);
    partial void OnNursingNotesTextChanged();
    partial void OnCriticalLowPercentageChanging(System.Nullable<byte> value);
    partial void OnCriticalLowPercentageChanged();
    partial void OnStockOutNoticeFlagChanging(bool value);
    partial void OnStockOutNoticeFlagChanged();
    partial void OnOMNLNoticeFlagChanging(bool value);
    partial void OnOMNLNoticeFlagChanged();
    partial void OnAnesthesiaMyItemsFlagChanging(bool value);
    partial void OnAnesthesiaMyItemsFlagChanged();
    partial void OnResolveUndocumentedWasteFlagChanging(bool value);
    partial void OnResolveUndocumentedWasteFlagChanged();
    partial void OnComboFlagChanging(bool value);
    partial void OnComboFlagChanged();
    partial void OnDispenseComponentsOnlyFlagChanging(bool value);
    partial void OnDispenseComponentsOnlyFlagChanged();
    partial void OnChargeComboFlagChanging(bool value);
    partial void OnChargeComboFlagChanged();
    partial void OnDisplayCalculationOnDispenseFlagChanging(bool value);
    partial void OnDisplayCalculationOnDispenseFlagChanged();
    partial void OnReplenishmentPickAreaKeyChanging(System.Nullable<System.Guid> value);
    partial void OnReplenishmentPickAreaKeyChanged();
    partial void OnDistributorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDistributorKeyChanged();
    partial void OnRxCheckFlagChanging(bool value);
    partial void OnRxCheckFlagChanged();
    partial void OnPrintOnRemoveFlagChanging(bool value);
    partial void OnPrintOnRemoveFlagChanged();
    partial void OnPrintOnLoadRefillFlagChanging(bool value);
    partial void OnPrintOnLoadRefillFlagChanged();
    partial void OnShowConversionOnRemoveFlagChanging(bool value);
    partial void OnShowConversionOnRemoveFlagChanged();
    partial void OnScanAllOnPickFlagChanging(bool value);
    partial void OnScanAllOnPickFlagChanged();
    partial void OnScanOnCheckFlagChanging(bool value);
    partial void OnScanOnCheckFlagChanged();
    partial void OnDoOnceOnRemoveFlagChanging(bool value);
    partial void OnDoOnceOnRemoveFlagChanged();
    partial void OnCountCUBIEEjectModeInternalCodeChanging(string value);
    partial void OnCountCUBIEEjectModeInternalCodeChanged();
    partial void OnPharmacyOrderDispenseQuantityFlagChanging(bool value);
    partial void OnPharmacyOrderDispenseQuantityFlagChanged();
    partial void OnInjectableFlagChanging(bool value);
    partial void OnInjectableFlagChanged();
    partial void OnGCSMMedReturnModeInternalCodeChanging(string value);
    partial void OnGCSMMedReturnModeInternalCodeChanged();
    partial void OnGCSMVerifyCountModeInternalCodeChanging(string value);
    partial void OnGCSMVerifyCountModeInternalCodeChanged();
    partial void OnGCSMCountCUBIEEjectModeInternalCodeChanging(string value);
    partial void OnGCSMCountCUBIEEjectModeInternalCodeChanged();
    partial void OnGCSMOutdateTrackingFlagChanging(bool value);
    partial void OnGCSMOutdateTrackingFlagChanged();
    partial void OnGCSMRequireLotNumberWhenRecallFlagChanging(bool value);
    partial void OnGCSMRequireLotNumberWhenRecallFlagChanged();
    partial void OnGCSMRequireInventoryReferenceNumberFlagChanging(bool value);
    partial void OnGCSMRequireInventoryReferenceNumberFlagChanged();
    partial void OnGCSMWitnessOnOutdateFlagChanging(bool value);
    partial void OnGCSMWitnessOnOutdateFlagChanged();
    partial void OnGCSMWitnessOnReturnFlagChanging(bool value);
    partial void OnGCSMWitnessOnReturnFlagChanged();
    partial void OnGCSMWitnessOnAutorestockFlagChanging(bool value);
    partial void OnGCSMWitnessOnAutorestockFlagChanged();
    partial void OnGCSMWitnessOnCompoundingFlagChanging(bool value);
    partial void OnGCSMWitnessOnCompoundingFlagChanged();
    partial void OnGCSMWitnessOnDestructionBinFlagChanging(bool value);
    partial void OnGCSMWitnessOnDestructionBinFlagChanged();
    partial void OnGCSMWitnessOnDiscrepancyResolutionFlagChanging(bool value);
    partial void OnGCSMWitnessOnDiscrepancyResolutionFlagChanged();
    partial void OnGCSMWitnessOnInventoryCountFlagChanging(bool value);
    partial void OnGCSMWitnessOnInventoryCountFlagChanged();
    partial void OnGCSMWitnessOnIssueFlagChanging(bool value);
    partial void OnGCSMWitnessOnIssueFlagChanged();
    partial void OnGCSMWitnessOnPrescriptionFlagChanging(bool value);
    partial void OnGCSMWitnessOnPrescriptionFlagChanged();
    partial void OnGCSMWitnessOnRecallFlagChanging(bool value);
    partial void OnGCSMWitnessOnRecallFlagChanged();
    partial void OnGCSMWitnessOnReceiveFlagChanging(bool value);
    partial void OnGCSMWitnessOnReceiveFlagChanged();
    partial void OnGCSMWitnessOnReverseCompoundingFlagChanging(bool value);
    partial void OnGCSMWitnessOnReverseCompoundingFlagChanged();
    partial void OnGCSMWitnessOnSellFlagChanging(bool value);
    partial void OnGCSMWitnessOnSellFlagChanged();
    partial void OnGCSMWitnessOnStockTransferFlagChanging(bool value);
    partial void OnGCSMWitnessOnStockTransferFlagChanged();
    partial void OnGCSMWitnessOnUnloadFlagChanging(bool value);
    partial void OnGCSMWitnessOnUnloadFlagChanged();
    partial void OnGCSMWitnessOnWasteFlagChanging(bool value);
    partial void OnGCSMWitnessOnWasteFlagChanged();
    partial void OnGCSMScanOnCompoundingFlagChanging(bool value);
    partial void OnGCSMScanOnCompoundingFlagChanged();
    partial void OnGCSMScanOnReturnFlagChanging(bool value);
    partial void OnGCSMScanOnReturnFlagChanged();
    partial void OnGCSMScanOnAutorestockFlagChanging(bool value);
    partial void OnGCSMScanOnAutorestockFlagChanged();
    partial void OnGCSMScanOnIssueFlagChanging(bool value);
    partial void OnGCSMScanOnIssueFlagChanged();
    partial void OnGCSMScanOnPrescriptionFlagChanging(bool value);
    partial void OnGCSMScanOnPrescriptionFlagChanged();
    partial void OnGCSMScanOnReceiveFlagChanging(bool value);
    partial void OnGCSMScanOnReceiveFlagChanged();
    partial void OnGCSMScanOnSellFlagChanging(bool value);
    partial void OnGCSMScanOnSellFlagChanged();
    partial void OnGCSMScanOnStockTransferFlagChanging(bool value);
    partial void OnGCSMScanOnStockTransferFlagChanged();
    partial void OnGCSMCriticalLowPercentageChanging(System.Nullable<byte> value);
    partial void OnGCSMCriticalLowPercentageChanged();
    partial void OnGCSMPrintOnReceiveFlagChanging(bool value);
    partial void OnGCSMPrintOnReceiveFlagChanged();
    partial void OnGCSMPrintSingleMedSheetFlagChanging(bool value);
    partial void OnGCSMPrintSingleMedSheetFlagChanged();
    partial void OnGCSMPrintDripSheetFlagChanging(bool value);
    partial void OnGCSMPrintDripSheetFlagChanged();
    partial void OnGCSMPrintMaximumRowsFlagChanging(bool value);
    partial void OnGCSMPrintMaximumRowsFlagChanged();
    partial void OnGCSMAdditionalLabelsPrintedQuantityChanging(short value);
    partial void OnGCSMAdditionalLabelsPrintedQuantityChanged();
    partial void OnGCSMStockOutNoticeFlagChanging(bool value);
    partial void OnGCSMStockOutNoticeFlagChanged();
    partial void OnGCSMDistributorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnGCSMDistributorKeyChanged();
    partial void OnFirstSnapshotFlagChanging(bool value);
    partial void OnFirstSnapshotFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnGCSMTotalParDurationAmountChanging(System.Nullable<short> value);
    partial void OnGCSMTotalParDurationAmountChanged();
    partial void OnGCSMTotalDeviceParDurationAmountChanging(System.Nullable<short> value);
    partial void OnGCSMTotalDeviceParDurationAmountChanged();
    partial void OnGCSMWitnessOnAddToDestructionBinFlagChanging(bool value);
    partial void OnGCSMWitnessOnAddToDestructionBinFlagChanged();
    partial void OnGCSMWitnessOnAccessToDestructionBinFlagChanging(bool value);
    partial void OnGCSMWitnessOnAccessToDestructionBinFlagChanged();
    partial void OnGCSMRequireOriginDestinationFlagChanging(bool value);
    partial void OnGCSMRequireOriginDestinationFlagChanged();
    #endregion
		
		public FacilityItemEntity()
		{
			this._OverrideGroupMemberEntities = new EntitySet<OverrideGroupMemberEntity>(new Action<OverrideGroupMemberEntity>(this.attach_OverrideGroupMemberEntities), new Action<OverrideGroupMemberEntity>(this.detach_OverrideGroupMemberEntities));
			this._FacilityItemPickAreaEntities = new EntitySet<FacilityItemPickAreaEntity>(new Action<FacilityItemPickAreaEntity>(this.attach_FacilityItemPickAreaEntities), new Action<FacilityItemPickAreaEntity>(this.detach_FacilityItemPickAreaEntities));
			this._FacilityItemPhysicalCapacityEntities = new EntitySet<FacilityItemPhysicalCapacityEntity>(new Action<FacilityItemPhysicalCapacityEntity>(this.attach_FacilityItemPhysicalCapacityEntities), new Action<FacilityItemPhysicalCapacityEntity>(this.detach_FacilityItemPhysicalCapacityEntities));
			this._FacilityKitMemberEntities = new EntitySet<FacilityKitMemberEntity>(new Action<FacilityKitMemberEntity>(this.attach_FacilityKitMemberEntities), new Action<FacilityKitMemberEntity>(this.detach_FacilityKitMemberEntities));
			this._BlockedFacilityItemDispensingDeviceEntities = new EntitySet<BlockedFacilityItemDispensingDeviceEntity>(new Action<BlockedFacilityItemDispensingDeviceEntity>(this.attach_BlockedFacilityItemDispensingDeviceEntities), new Action<BlockedFacilityItemDispensingDeviceEntity>(this.detach_BlockedFacilityItemDispensingDeviceEntities));
			this._ComboComponentEntities = new EntitySet<ComboComponentEntity>(new Action<ComboComponentEntity>(this.attach_ComboComponentEntities), new Action<ComboComponentEntity>(this.detach_ComboComponentEntities));
			this._ItemEntity = default(EntityRef<ItemEntity>);
			this._VerifyCountModeEntity = default(EntityRef<VerifyCountModeEntity>);
			this._SecurityGroupEntity = default(EntityRef<SecurityGroupEntity>);
			this._MedReturnModeEntity = default(EntityRef<MedReturnModeEntity>);
			this._HazardousWasteClassEntity = default(EntityRef<HazardousWasteClassEntity>);
			this._MedItemEntity = default(EntityRef<MedItemEntity>);
			this._ReplenishmentScanModeEntity = default(EntityRef<ReplenishmentScanModeEntity>);
			this._MedFailoverReturnModeEntity = default(EntityRef<MedFailoverReturnModeEntity>);
			this._FractionalUOMTypeEntity = default(EntityRef<FractionalUOMTypeEntity>);
			this._AutoMedLabelModeEntity = default(EntityRef<AutoMedLabelModeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FacilityItemKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					if ((this._ItemEntity.HasLoadedOrAssignedValue || this._MedItemEntity.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MedItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					this.OnMedItemKeyChanging(value);
					this.SendPropertyChanging();
					this._MedItemKey = value;
					this.SendPropertyChanged("MedItemKey");
					this.OnMedItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemSnapshotKey
		{
			get
			{
				return this._FacilityItemSnapshotKey;
			}
			set
			{
				if ((this._FacilityItemSnapshotKey != value))
				{
					this.OnFacilityItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityItemSnapshotKey = value;
					this.SendPropertyChanged("FacilityItemSnapshotKey");
					this.OnFacilityItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDisplayName", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string ItemDisplayName
		{
			get
			{
				return this._ItemDisplayName;
			}
			set
			{
				if ((this._ItemDisplayName != value))
				{
					this.OnItemDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._ItemDisplayName = value;
					this.SendPropertyChanged("ItemDisplayName");
					this.OnItemDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateItemID", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string AlternateItemID
		{
			get
			{
				return this._AlternateItemID;
			}
			set
			{
				if ((this._AlternateItemID != value))
				{
					this.OnAlternateItemIDChanging(value);
					this.SendPropertyChanging();
					this._AlternateItemID = value;
					this.SendPropertyChanged("AlternateItemID");
					this.OnAlternateItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MedClassKey
		{
			get
			{
				return this._MedClassKey;
			}
			set
			{
				if ((this._MedClassKey != value))
				{
					this.OnMedClassKeyChanging(value);
					this.SendPropertyChanging();
					this._MedClassKey = value;
					this.SendPropertyChanged("MedClassKey");
					this.OnMedClassKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdateTrackingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OutdateTrackingFlag
		{
			get
			{
				return this._OutdateTrackingFlag;
			}
			set
			{
				if ((this._OutdateTrackingFlag != value))
				{
					this.OnOutdateTrackingFlagChanging(value);
					this.SendPropertyChanging();
					this._OutdateTrackingFlag = value;
					this.SendPropertyChanged("OutdateTrackingFlag");
					this.OnOutdateTrackingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCountModeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string VerifyCountModeInternalCode
		{
			get
			{
				return this._VerifyCountModeInternalCode;
			}
			set
			{
				if ((this._VerifyCountModeInternalCode != value))
				{
					if (this._VerifyCountModeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVerifyCountModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._VerifyCountModeInternalCode = value;
					this.SendPropertyChanged("VerifyCountModeInternalCode");
					this.OnVerifyCountModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCountAnesthesiaDispensingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool VerifyCountAnesthesiaDispensingFlag
		{
			get
			{
				return this._VerifyCountAnesthesiaDispensingFlag;
			}
			set
			{
				if ((this._VerifyCountAnesthesiaDispensingFlag != value))
				{
					this.OnVerifyCountAnesthesiaDispensingFlagChanging(value);
					this.SendPropertyChanging();
					this._VerifyCountAnesthesiaDispensingFlag = value;
					this.SendPropertyChanged("VerifyCountAnesthesiaDispensingFlag");
					this.OnVerifyCountAnesthesiaDispensingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDispenseFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnDispenseFlag
		{
			get
			{
				return this._WitnessOnDispenseFlag;
			}
			set
			{
				if ((this._WitnessOnDispenseFlag != value))
				{
					this.OnWitnessOnDispenseFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnDispenseFlag = value;
					this.SendPropertyChanged("WitnessOnDispenseFlag");
					this.OnWitnessOnDispenseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnReturnFlag
		{
			get
			{
				return this._WitnessOnReturnFlag;
			}
			set
			{
				if ((this._WitnessOnReturnFlag != value))
				{
					this.OnWitnessOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnReturnFlag = value;
					this.SendPropertyChanged("WitnessOnReturnFlag");
					this.OnWitnessOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDisposeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnDisposeFlag
		{
			get
			{
				return this._WitnessOnDisposeFlag;
			}
			set
			{
				if ((this._WitnessOnDisposeFlag != value))
				{
					this.OnWitnessOnDisposeFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnDisposeFlag = value;
					this.SendPropertyChanged("WitnessOnDisposeFlag");
					this.OnWitnessOnDisposeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnLoadRefillFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnLoadRefillFlag
		{
			get
			{
				return this._WitnessOnLoadRefillFlag;
			}
			set
			{
				if ((this._WitnessOnLoadRefillFlag != value))
				{
					this.OnWitnessOnLoadRefillFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnLoadRefillFlag = value;
					this.SendPropertyChanged("WitnessOnLoadRefillFlag");
					this.OnWitnessOnLoadRefillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnUnloadFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnUnloadFlag
		{
			get
			{
				return this._WitnessOnUnloadFlag;
			}
			set
			{
				if ((this._WitnessOnUnloadFlag != value))
				{
					this.OnWitnessOnUnloadFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnUnloadFlag = value;
					this.SendPropertyChanged("WitnessOnUnloadFlag");
					this.OnWitnessOnUnloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnOverrideFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnOverrideFlag
		{
			get
			{
				return this._WitnessOnOverrideFlag;
			}
			set
			{
				if ((this._WitnessOnOverrideFlag != value))
				{
					this.OnWitnessOnOverrideFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnOverrideFlag = value;
					this.SendPropertyChanged("WitnessOnOverrideFlag");
					this.OnWitnessOnOverrideFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnOutdateFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnOutdateFlag
		{
			get
			{
				return this._WitnessOnOutdateFlag;
			}
			set
			{
				if ((this._WitnessOnOutdateFlag != value))
				{
					this.OnWitnessOnOutdateFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnOutdateFlag = value;
					this.SendPropertyChanged("WitnessOnOutdateFlag");
					this.OnWitnessOnOutdateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnInventoryFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnInventoryFlag
		{
			get
			{
				return this._WitnessOnInventoryFlag;
			}
			set
			{
				if ((this._WitnessOnInventoryFlag != value))
				{
					this.OnWitnessOnInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnInventoryFlag = value;
					this.SendPropertyChanged("WitnessOnInventoryFlag");
					this.OnWitnessOnInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnEmptyReturnBinFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnEmptyReturnBinFlag
		{
			get
			{
				return this._WitnessOnEmptyReturnBinFlag;
			}
			set
			{
				if ((this._WitnessOnEmptyReturnBinFlag != value))
				{
					this.OnWitnessOnEmptyReturnBinFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnEmptyReturnBinFlag = value;
					this.SendPropertyChanged("WitnessOnEmptyReturnBinFlag");
					this.OnWitnessOnEmptyReturnBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDestockFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnDestockFlag
		{
			get
			{
				return this._WitnessOnDestockFlag;
			}
			set
			{
				if ((this._WitnessOnDestockFlag != value))
				{
					this.OnWitnessOnDestockFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnDestockFlag = value;
					this.SendPropertyChanged("WitnessOnDestockFlag");
					this.OnWitnessOnDestockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnRxCheckFlag", DbType="Bit NOT NULL")]
		public bool WitnessOnRxCheckFlag
		{
			get
			{
				return this._WitnessOnRxCheckFlag;
			}
			set
			{
				if ((this._WitnessOnRxCheckFlag != value))
				{
					this.OnWitnessOnRxCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnRxCheckFlag = value;
					this.SendPropertyChanged("WitnessOnRxCheckFlag");
					this.OnWitnessOnRxCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnLoadRefillFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ScanOnLoadRefillFlag
		{
			get
			{
				return this._ScanOnLoadRefillFlag;
			}
			set
			{
				if ((this._ScanOnLoadRefillFlag != value))
				{
					this.OnScanOnLoadRefillFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnLoadRefillFlag = value;
					this.SendPropertyChanged("ScanOnLoadRefillFlag");
					this.OnScanOnLoadRefillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ScanOnRemoveFlag
		{
			get
			{
				return this._ScanOnRemoveFlag;
			}
			set
			{
				if ((this._ScanOnRemoveFlag != value))
				{
					this.OnScanOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnRemoveFlag = value;
					this.SendPropertyChanged("ScanOnRemoveFlag");
					this.OnScanOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ScanOnReturnFlag
		{
			get
			{
				return this._ScanOnReturnFlag;
			}
			set
			{
				if ((this._ScanOnReturnFlag != value))
				{
					this.OnScanOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnReturnFlag = value;
					this.SendPropertyChanged("ScanOnReturnFlag");
					this.OnScanOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLotIDOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireLotIDOnRemoveFlag
		{
			get
			{
				return this._RequireLotIDOnRemoveFlag;
			}
			set
			{
				if ((this._RequireLotIDOnRemoveFlag != value))
				{
					this.OnRequireLotIDOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireLotIDOnRemoveFlag = value;
					this.SendPropertyChanged("RequireLotIDOnRemoveFlag");
					this.OnRequireLotIDOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLotIDOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireLotIDOnReturnFlag
		{
			get
			{
				return this._RequireLotIDOnReturnFlag;
			}
			set
			{
				if ((this._RequireLotIDOnReturnFlag != value))
				{
					this.OnRequireLotIDOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireLotIDOnReturnFlag = value;
					this.SendPropertyChanged("RequireLotIDOnReturnFlag");
					this.OnRequireLotIDOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSerialIDOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireSerialIDOnRemoveFlag
		{
			get
			{
				return this._RequireSerialIDOnRemoveFlag;
			}
			set
			{
				if ((this._RequireSerialIDOnRemoveFlag != value))
				{
					this.OnRequireSerialIDOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireSerialIDOnRemoveFlag = value;
					this.SendPropertyChanged("RequireSerialIDOnRemoveFlag");
					this.OnRequireSerialIDOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSerialIDOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireSerialIDOnReturnFlag
		{
			get
			{
				return this._RequireSerialIDOnReturnFlag;
			}
			set
			{
				if ((this._RequireSerialIDOnReturnFlag != value))
				{
					this.OnRequireSerialIDOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireSerialIDOnReturnFlag = value;
					this.SendPropertyChanged("RequireSerialIDOnReturnFlag");
					this.OnRequireSerialIDOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireExpirationDateOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireExpirationDateOnRemoveFlag
		{
			get
			{
				return this._RequireExpirationDateOnRemoveFlag;
			}
			set
			{
				if ((this._RequireExpirationDateOnRemoveFlag != value))
				{
					this.OnRequireExpirationDateOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireExpirationDateOnRemoveFlag = value;
					this.SendPropertyChanged("RequireExpirationDateOnRemoveFlag");
					this.OnRequireExpirationDateOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireExpirationDateOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireExpirationDateOnReturnFlag
		{
			get
			{
				return this._RequireExpirationDateOnReturnFlag;
			}
			set
			{
				if ((this._RequireExpirationDateOnReturnFlag != value))
				{
					this.OnRequireExpirationDateOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireExpirationDateOnReturnFlag = value;
					this.SendPropertyChanged("RequireExpirationDateOnReturnFlag");
					this.OnRequireExpirationDateOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireInventoryReferenceIDFlag", DbType="Bit NOT NULL")]
		public bool RequireInventoryReferenceIDFlag
		{
			get
			{
				return this._RequireInventoryReferenceIDFlag;
			}
			set
			{
				if ((this._RequireInventoryReferenceIDFlag != value))
				{
					this.OnRequireInventoryReferenceIDFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireInventoryReferenceIDFlag = value;
					this.SendPropertyChanged("RequireInventoryReferenceIDFlag");
					this.OnRequireInventoryReferenceIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReverificationFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ReverificationFlag
		{
			get
			{
				return this._ReverificationFlag;
			}
			set
			{
				if ((this._ReverificationFlag != value))
				{
					this.OnReverificationFlagChanging(value);
					this.SendPropertyChanging();
					this._ReverificationFlag = value;
					this.SendPropertyChanged("ReverificationFlag");
					this.OnReverificationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseRemoveDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TooCloseRemoveDurationAmount
		{
			get
			{
				return this._TooCloseRemoveDurationAmount;
			}
			set
			{
				if ((this._TooCloseRemoveDurationAmount != value))
				{
					this.OnTooCloseRemoveDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._TooCloseRemoveDurationAmount = value;
					this.SendPropertyChanged("TooCloseRemoveDurationAmount");
					this.OnTooCloseRemoveDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> SecurityGroupKey
		{
			get
			{
				return this._SecurityGroupKey;
			}
			set
			{
				if ((this._SecurityGroupKey != value))
				{
					if (this._SecurityGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityGroupKeyChanging(value);
					this.SendPropertyChanging();
					this._SecurityGroupKey = value;
					this.SendPropertyChanged("SecurityGroupKey");
					this.OnSecurityGroupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoResolveDiscrepancyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AutoResolveDiscrepancyFlag
		{
			get
			{
				return this._AutoResolveDiscrepancyFlag;
			}
			set
			{
				if ((this._AutoResolveDiscrepancyFlag != value))
				{
					this.OnAutoResolveDiscrepancyFlagChanging(value);
					this.SendPropertyChanging();
					this._AutoResolveDiscrepancyFlag = value;
					this.SendPropertyChanged("AutoResolveDiscrepancyFlag");
					this.OnAutoResolveDiscrepancyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeableFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ChargeableFlag
		{
			get
			{
				return this._ChargeableFlag;
			}
			set
			{
				if ((this._ChargeableFlag != value))
				{
					this.OnChargeableFlagChanging(value);
					this.SendPropertyChanging();
					this._ChargeableFlag = value;
					this.SendPropertyChanged("ChargeableFlag");
					this.OnChargeableFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighCostFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool HighCostFlag
		{
			get
			{
				return this._HighCostFlag;
			}
			set
			{
				if ((this._HighCostFlag != value))
				{
					this.OnHighCostFlagChanging(value);
					this.SendPropertyChanging();
					this._HighCostFlag = value;
					this.SendPropertyChanged("HighCostFlag");
					this.OnHighCostFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSplittingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllowSplittingFlag
		{
			get
			{
				return this._AllowSplittingFlag;
			}
			set
			{
				if ((this._AllowSplittingFlag != value))
				{
					this.OnAllowSplittingFlagChanging(value);
					this.SendPropertyChanging();
					this._AllowSplittingFlag = value;
					this.SendPropertyChanged("AllowSplittingFlag");
					this.OnAllowSplittingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighRiskFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool HighRiskFlag
		{
			get
			{
				return this._HighRiskFlag;
			}
			set
			{
				if ((this._HighRiskFlag != value))
				{
					this.OnHighRiskFlagChanging(value);
					this.SendPropertyChanging();
					this._HighRiskFlag = value;
					this.SendPropertyChanged("HighRiskFlag");
					this.OnHighRiskFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardousWasteClassKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> HazardousWasteClassKey
		{
			get
			{
				return this._HazardousWasteClassKey;
			}
			set
			{
				if ((this._HazardousWasteClassKey != value))
				{
					if (this._HazardousWasteClassEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHazardousWasteClassKeyChanging(value);
					this.SendPropertyChanging();
					this._HazardousWasteClassKey = value;
					this.SendPropertyChanged("HazardousWasteClassKey");
					this.OnHazardousWasteClassKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackInventoryQuantityFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TrackInventoryQuantityFlag
		{
			get
			{
				return this._TrackInventoryQuantityFlag;
			}
			set
			{
				if ((this._TrackInventoryQuantityFlag != value))
				{
					this.OnTrackInventoryQuantityFlagChanging(value);
					this.SendPropertyChanging();
					this._TrackInventoryQuantityFlag = value;
					this.SendPropertyChanged("TrackInventoryQuantityFlag");
					this.OnTrackInventoryQuantityFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiDoseFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MultiDoseFlag
		{
			get
			{
				return this._MultiDoseFlag;
			}
			set
			{
				if ((this._MultiDoseFlag != value))
				{
					this.OnMultiDoseFlagChanging(value);
					this.SendPropertyChanging();
					this._MultiDoseFlag = value;
					this.SendPropertyChanged("MultiDoseFlag");
					this.OnMultiDoseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackorderedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool BackorderedFlag
		{
			get
			{
				return this._BackorderedFlag;
			}
			set
			{
				if ((this._BackorderedFlag != value))
				{
					this.OnBackorderedFlagChanging(value);
					this.SendPropertyChanging();
					this._BackorderedFlag = value;
					this.SendPropertyChanged("BackorderedFlag");
					this.OnBackorderedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RefillUOMKey
		{
			get
			{
				return this._RefillUOMKey;
			}
			set
			{
				if ((this._RefillUOMKey != value))
				{
					this.OnRefillUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._RefillUOMKey = value;
					this.SendPropertyChanged("RefillUOMKey");
					this.OnRefillUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillDisplayCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string RefillDisplayCode
		{
			get
			{
				return this._RefillDisplayCode;
			}
			set
			{
				if ((this._RefillDisplayCode != value))
				{
					this.OnRefillDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._RefillDisplayCode = value;
					this.SendPropertyChanged("RefillDisplayCode");
					this.OnRefillDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> IssueUOMKey
		{
			get
			{
				return this._IssueUOMKey;
			}
			set
			{
				if ((this._IssueUOMKey != value))
				{
					this.OnIssueUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._IssueUOMKey = value;
					this.SendPropertyChanged("IssueUOMKey");
					this.OnIssueUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDisplayCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string IssueDisplayCode
		{
			get
			{
				return this._IssueDisplayCode;
			}
			set
			{
				if ((this._IssueDisplayCode != value))
				{
					this.OnIssueDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._IssueDisplayCode = value;
					this.SendPropertyChanged("IssueDisplayCode");
					this.OnIssueDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOIPerUORAmount", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> UOIPerUORAmount
		{
			get
			{
				return this._UOIPerUORAmount;
			}
			set
			{
				if ((this._UOIPerUORAmount != value))
				{
					this.OnUOIPerUORAmountChanging(value);
					this.SendPropertyChanging();
					this._UOIPerUORAmount = value;
					this.SendPropertyChanged("UOIPerUORAmount");
					this.OnUOIPerUORAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardStockFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool StandardStockFlag
		{
			get
			{
				return this._StandardStockFlag;
			}
			set
			{
				if ((this._StandardStockFlag != value))
				{
					this.OnStandardStockFlagChanging(value);
					this.SendPropertyChanging();
					this._StandardStockFlag = value;
					this.SendPropertyChanged("StandardStockFlag");
					this.OnStandardStockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedReturnModeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MedReturnModeInternalCode
		{
			get
			{
				return this._MedReturnModeInternalCode;
			}
			set
			{
				if ((this._MedReturnModeInternalCode != value))
				{
					if (this._MedReturnModeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedReturnModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._MedReturnModeInternalCode = value;
					this.SendPropertyChanged("MedReturnModeInternalCode");
					this.OnMedReturnModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedFailoverReturnModeInternalCode", DbType="VarChar(10)")]
		public string MedFailoverReturnModeInternalCode
		{
			get
			{
				return this._MedFailoverReturnModeInternalCode;
			}
			set
			{
				if ((this._MedFailoverReturnModeInternalCode != value))
				{
					if (this._MedFailoverReturnModeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedFailoverReturnModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._MedFailoverReturnModeInternalCode = value;
					this.SendPropertyChanged("MedFailoverReturnModeInternalCode");
					this.OnMedFailoverReturnModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentScanModeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ReplenishmentScanModeInternalCode
		{
			get
			{
				return this._ReplenishmentScanModeInternalCode;
			}
			set
			{
				if ((this._ReplenishmentScanModeInternalCode != value))
				{
					if (this._ReplenishmentScanModeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReplenishmentScanModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ReplenishmentScanModeInternalCode = value;
					this.SendPropertyChanged("ReplenishmentScanModeInternalCode");
					this.OnReplenishmentScanModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FractionalUOMTypeInternalCode", DbType="VarChar(10)")]
		public string FractionalUOMTypeInternalCode
		{
			get
			{
				return this._FractionalUOMTypeInternalCode;
			}
			set
			{
				if ((this._FractionalUOMTypeInternalCode != value))
				{
					if (this._FractionalUOMTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFractionalUOMTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._FractionalUOMTypeInternalCode = value;
					this.SendPropertyChanged("FractionalUOMTypeInternalCode");
					this.OnFractionalUOMTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoMedLabelModeInternalCode", DbType="VarChar(10)")]
		public string AutoMedLabelModeInternalCode
		{
			get
			{
				return this._AutoMedLabelModeInternalCode;
			}
			set
			{
				if ((this._AutoMedLabelModeInternalCode != value))
				{
					if (this._AutoMedLabelModeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAutoMedLabelModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._AutoMedLabelModeInternalCode = value;
					this.SendPropertyChanged("AutoMedLabelModeInternalCode");
					this.OnAutoMedLabelModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyNotesText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string PharmacyNotesText
		{
			get
			{
				return this._PharmacyNotesText;
			}
			set
			{
				if ((this._PharmacyNotesText != value))
				{
					this.OnPharmacyNotesTextChanging(value);
					this.SendPropertyChanging();
					this._PharmacyNotesText = value;
					this.SendPropertyChanged("PharmacyNotesText");
					this.OnPharmacyNotesTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NursingNotesText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string NursingNotesText
		{
			get
			{
				return this._NursingNotesText;
			}
			set
			{
				if ((this._NursingNotesText != value))
				{
					this.OnNursingNotesTextChanging(value);
					this.SendPropertyChanging();
					this._NursingNotesText = value;
					this.SendPropertyChanged("NursingNotesText");
					this.OnNursingNotesTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalLowPercentage", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> CriticalLowPercentage
		{
			get
			{
				return this._CriticalLowPercentage;
			}
			set
			{
				if ((this._CriticalLowPercentage != value))
				{
					this.OnCriticalLowPercentageChanging(value);
					this.SendPropertyChanging();
					this._CriticalLowPercentage = value;
					this.SendPropertyChanged("CriticalLowPercentage");
					this.OnCriticalLowPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockOutNoticeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool StockOutNoticeFlag
		{
			get
			{
				return this._StockOutNoticeFlag;
			}
			set
			{
				if ((this._StockOutNoticeFlag != value))
				{
					this.OnStockOutNoticeFlagChanging(value);
					this.SendPropertyChanging();
					this._StockOutNoticeFlag = value;
					this.SendPropertyChanged("StockOutNoticeFlag");
					this.OnStockOutNoticeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMNLNoticeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OMNLNoticeFlag
		{
			get
			{
				return this._OMNLNoticeFlag;
			}
			set
			{
				if ((this._OMNLNoticeFlag != value))
				{
					this.OnOMNLNoticeFlagChanging(value);
					this.SendPropertyChanging();
					this._OMNLNoticeFlag = value;
					this.SendPropertyChanged("OMNLNoticeFlag");
					this.OnOMNLNoticeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaMyItemsFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AnesthesiaMyItemsFlag
		{
			get
			{
				return this._AnesthesiaMyItemsFlag;
			}
			set
			{
				if ((this._AnesthesiaMyItemsFlag != value))
				{
					this.OnAnesthesiaMyItemsFlagChanging(value);
					this.SendPropertyChanging();
					this._AnesthesiaMyItemsFlag = value;
					this.SendPropertyChanged("AnesthesiaMyItemsFlag");
					this.OnAnesthesiaMyItemsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolveUndocumentedWasteFlag", DbType="Bit NOT NULL")]
		public bool ResolveUndocumentedWasteFlag
		{
			get
			{
				return this._ResolveUndocumentedWasteFlag;
			}
			set
			{
				if ((this._ResolveUndocumentedWasteFlag != value))
				{
					this.OnResolveUndocumentedWasteFlagChanging(value);
					this.SendPropertyChanging();
					this._ResolveUndocumentedWasteFlag = value;
					this.SendPropertyChanged("ResolveUndocumentedWasteFlag");
					this.OnResolveUndocumentedWasteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ComboFlag
		{
			get
			{
				return this._ComboFlag;
			}
			set
			{
				if ((this._ComboFlag != value))
				{
					this.OnComboFlagChanging(value);
					this.SendPropertyChanging();
					this._ComboFlag = value;
					this.SendPropertyChanged("ComboFlag");
					this.OnComboFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispenseComponentsOnlyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DispenseComponentsOnlyFlag
		{
			get
			{
				return this._DispenseComponentsOnlyFlag;
			}
			set
			{
				if ((this._DispenseComponentsOnlyFlag != value))
				{
					this.OnDispenseComponentsOnlyFlagChanging(value);
					this.SendPropertyChanging();
					this._DispenseComponentsOnlyFlag = value;
					this.SendPropertyChanged("DispenseComponentsOnlyFlag");
					this.OnDispenseComponentsOnlyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeComboFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ChargeComboFlag
		{
			get
			{
				return this._ChargeComboFlag;
			}
			set
			{
				if ((this._ChargeComboFlag != value))
				{
					this.OnChargeComboFlagChanging(value);
					this.SendPropertyChanging();
					this._ChargeComboFlag = value;
					this.SendPropertyChanged("ChargeComboFlag");
					this.OnChargeComboFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCalculationOnDispenseFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DisplayCalculationOnDispenseFlag
		{
			get
			{
				return this._DisplayCalculationOnDispenseFlag;
			}
			set
			{
				if ((this._DisplayCalculationOnDispenseFlag != value))
				{
					this.OnDisplayCalculationOnDispenseFlagChanging(value);
					this.SendPropertyChanging();
					this._DisplayCalculationOnDispenseFlag = value;
					this.SendPropertyChanged("DisplayCalculationOnDispenseFlag");
					this.OnDisplayCalculationOnDispenseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentPickAreaKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ReplenishmentPickAreaKey
		{
			get
			{
				return this._ReplenishmentPickAreaKey;
			}
			set
			{
				if ((this._ReplenishmentPickAreaKey != value))
				{
					this.OnReplenishmentPickAreaKeyChanging(value);
					this.SendPropertyChanging();
					this._ReplenishmentPickAreaKey = value;
					this.SendPropertyChanged("ReplenishmentPickAreaKey");
					this.OnReplenishmentPickAreaKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DistributorKey
		{
			get
			{
				return this._DistributorKey;
			}
			set
			{
				if ((this._DistributorKey != value))
				{
					this.OnDistributorKeyChanging(value);
					this.SendPropertyChanging();
					this._DistributorKey = value;
					this.SendPropertyChanged("DistributorKey");
					this.OnDistributorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxCheckFlag", DbType="Bit NOT NULL")]
		public bool RxCheckFlag
		{
			get
			{
				return this._RxCheckFlag;
			}
			set
			{
				if ((this._RxCheckFlag != value))
				{
					this.OnRxCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._RxCheckFlag = value;
					this.SendPropertyChanged("RxCheckFlag");
					this.OnRxCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintOnRemoveFlag", DbType="Bit NOT NULL")]
		public bool PrintOnRemoveFlag
		{
			get
			{
				return this._PrintOnRemoveFlag;
			}
			set
			{
				if ((this._PrintOnRemoveFlag != value))
				{
					this.OnPrintOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintOnRemoveFlag = value;
					this.SendPropertyChanged("PrintOnRemoveFlag");
					this.OnPrintOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintOnLoadRefillFlag", DbType="Bit NOT NULL")]
		public bool PrintOnLoadRefillFlag
		{
			get
			{
				return this._PrintOnLoadRefillFlag;
			}
			set
			{
				if ((this._PrintOnLoadRefillFlag != value))
				{
					this.OnPrintOnLoadRefillFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintOnLoadRefillFlag = value;
					this.SendPropertyChanged("PrintOnLoadRefillFlag");
					this.OnPrintOnLoadRefillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowConversionOnRemoveFlag", DbType="Bit NOT NULL")]
		public bool ShowConversionOnRemoveFlag
		{
			get
			{
				return this._ShowConversionOnRemoveFlag;
			}
			set
			{
				if ((this._ShowConversionOnRemoveFlag != value))
				{
					this.OnShowConversionOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._ShowConversionOnRemoveFlag = value;
					this.SendPropertyChanged("ShowConversionOnRemoveFlag");
					this.OnShowConversionOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanAllOnPickFlag", DbType="Bit NOT NULL")]
		public bool ScanAllOnPickFlag
		{
			get
			{
				return this._ScanAllOnPickFlag;
			}
			set
			{
				if ((this._ScanAllOnPickFlag != value))
				{
					this.OnScanAllOnPickFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanAllOnPickFlag = value;
					this.SendPropertyChanged("ScanAllOnPickFlag");
					this.OnScanAllOnPickFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnCheckFlag", DbType="Bit NOT NULL")]
		public bool ScanOnCheckFlag
		{
			get
			{
				return this._ScanOnCheckFlag;
			}
			set
			{
				if ((this._ScanOnCheckFlag != value))
				{
					this.OnScanOnCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnCheckFlag = value;
					this.SendPropertyChanged("ScanOnCheckFlag");
					this.OnScanOnCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoOnceOnRemoveFlag", DbType="Bit NOT NULL")]
		public bool DoOnceOnRemoveFlag
		{
			get
			{
				return this._DoOnceOnRemoveFlag;
			}
			set
			{
				if ((this._DoOnceOnRemoveFlag != value))
				{
					this.OnDoOnceOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._DoOnceOnRemoveFlag = value;
					this.SendPropertyChanged("DoOnceOnRemoveFlag");
					this.OnDoOnceOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountCUBIEEjectModeInternalCode", DbType="VarChar(10)")]
		public string CountCUBIEEjectModeInternalCode
		{
			get
			{
				return this._CountCUBIEEjectModeInternalCode;
			}
			set
			{
				if ((this._CountCUBIEEjectModeInternalCode != value))
				{
					this.OnCountCUBIEEjectModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._CountCUBIEEjectModeInternalCode = value;
					this.SendPropertyChanged("CountCUBIEEjectModeInternalCode");
					this.OnCountCUBIEEjectModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderDispenseQuantityFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PharmacyOrderDispenseQuantityFlag
		{
			get
			{
				return this._PharmacyOrderDispenseQuantityFlag;
			}
			set
			{
				if ((this._PharmacyOrderDispenseQuantityFlag != value))
				{
					this.OnPharmacyOrderDispenseQuantityFlagChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderDispenseQuantityFlag = value;
					this.SendPropertyChanged("PharmacyOrderDispenseQuantityFlag");
					this.OnPharmacyOrderDispenseQuantityFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InjectableFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool InjectableFlag
		{
			get
			{
				return this._InjectableFlag;
			}
			set
			{
				if ((this._InjectableFlag != value))
				{
					this.OnInjectableFlagChanging(value);
					this.SendPropertyChanging();
					this._InjectableFlag = value;
					this.SendPropertyChanged("InjectableFlag");
					this.OnInjectableFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMMedReturnModeInternalCode", DbType="VarChar(10)")]
		public string GCSMMedReturnModeInternalCode
		{
			get
			{
				return this._GCSMMedReturnModeInternalCode;
			}
			set
			{
				if ((this._GCSMMedReturnModeInternalCode != value))
				{
					this.OnGCSMMedReturnModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._GCSMMedReturnModeInternalCode = value;
					this.SendPropertyChanged("GCSMMedReturnModeInternalCode");
					this.OnGCSMMedReturnModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMVerifyCountModeInternalCode", DbType="VarChar(10)")]
		public string GCSMVerifyCountModeInternalCode
		{
			get
			{
				return this._GCSMVerifyCountModeInternalCode;
			}
			set
			{
				if ((this._GCSMVerifyCountModeInternalCode != value))
				{
					this.OnGCSMVerifyCountModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._GCSMVerifyCountModeInternalCode = value;
					this.SendPropertyChanged("GCSMVerifyCountModeInternalCode");
					this.OnGCSMVerifyCountModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCountCUBIEEjectModeInternalCode", DbType="VarChar(10)")]
		public string GCSMCountCUBIEEjectModeInternalCode
		{
			get
			{
				return this._GCSMCountCUBIEEjectModeInternalCode;
			}
			set
			{
				if ((this._GCSMCountCUBIEEjectModeInternalCode != value))
				{
					this.OnGCSMCountCUBIEEjectModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._GCSMCountCUBIEEjectModeInternalCode = value;
					this.SendPropertyChanged("GCSMCountCUBIEEjectModeInternalCode");
					this.OnGCSMCountCUBIEEjectModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMOutdateTrackingFlag", DbType="Bit NOT NULL")]
		public bool GCSMOutdateTrackingFlag
		{
			get
			{
				return this._GCSMOutdateTrackingFlag;
			}
			set
			{
				if ((this._GCSMOutdateTrackingFlag != value))
				{
					this.OnGCSMOutdateTrackingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMOutdateTrackingFlag = value;
					this.SendPropertyChanged("GCSMOutdateTrackingFlag");
					this.OnGCSMOutdateTrackingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMRequireLotNumberWhenRecallFlag", DbType="Bit NOT NULL")]
		public bool GCSMRequireLotNumberWhenRecallFlag
		{
			get
			{
				return this._GCSMRequireLotNumberWhenRecallFlag;
			}
			set
			{
				if ((this._GCSMRequireLotNumberWhenRecallFlag != value))
				{
					this.OnGCSMRequireLotNumberWhenRecallFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMRequireLotNumberWhenRecallFlag = value;
					this.SendPropertyChanged("GCSMRequireLotNumberWhenRecallFlag");
					this.OnGCSMRequireLotNumberWhenRecallFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMRequireInventoryReferenceNumberFlag", DbType="Bit NOT NULL")]
		public bool GCSMRequireInventoryReferenceNumberFlag
		{
			get
			{
				return this._GCSMRequireInventoryReferenceNumberFlag;
			}
			set
			{
				if ((this._GCSMRequireInventoryReferenceNumberFlag != value))
				{
					this.OnGCSMRequireInventoryReferenceNumberFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMRequireInventoryReferenceNumberFlag = value;
					this.SendPropertyChanged("GCSMRequireInventoryReferenceNumberFlag");
					this.OnGCSMRequireInventoryReferenceNumberFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnOutdateFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnOutdateFlag
		{
			get
			{
				return this._GCSMWitnessOnOutdateFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnOutdateFlag != value))
				{
					this.OnGCSMWitnessOnOutdateFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnOutdateFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnOutdateFlag");
					this.OnGCSMWitnessOnOutdateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReturnFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnReturnFlag
		{
			get
			{
				return this._GCSMWitnessOnReturnFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReturnFlag != value))
				{
					this.OnGCSMWitnessOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnReturnFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnReturnFlag");
					this.OnGCSMWitnessOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAutorestockFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnAutorestockFlag
		{
			get
			{
				return this._GCSMWitnessOnAutorestockFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAutorestockFlag != value))
				{
					this.OnGCSMWitnessOnAutorestockFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnAutorestockFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnAutorestockFlag");
					this.OnGCSMWitnessOnAutorestockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnCompoundingFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnCompoundingFlag
		{
			get
			{
				return this._GCSMWitnessOnCompoundingFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnCompoundingFlag != value))
				{
					this.OnGCSMWitnessOnCompoundingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnCompoundingFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnCompoundingFlag");
					this.OnGCSMWitnessOnCompoundingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnDestructionBinFlag != value))
				{
					this.OnGCSMWitnessOnDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnDestructionBinFlag");
					this.OnGCSMWitnessOnDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnDiscrepancyResolutionFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnDiscrepancyResolutionFlag
		{
			get
			{
				return this._GCSMWitnessOnDiscrepancyResolutionFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnDiscrepancyResolutionFlag != value))
				{
					this.OnGCSMWitnessOnDiscrepancyResolutionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnDiscrepancyResolutionFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnDiscrepancyResolutionFlag");
					this.OnGCSMWitnessOnDiscrepancyResolutionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnInventoryCountFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnInventoryCountFlag
		{
			get
			{
				return this._GCSMWitnessOnInventoryCountFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnInventoryCountFlag != value))
				{
					this.OnGCSMWitnessOnInventoryCountFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnInventoryCountFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnInventoryCountFlag");
					this.OnGCSMWitnessOnInventoryCountFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnIssueFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnIssueFlag
		{
			get
			{
				return this._GCSMWitnessOnIssueFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnIssueFlag != value))
				{
					this.OnGCSMWitnessOnIssueFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnIssueFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnIssueFlag");
					this.OnGCSMWitnessOnIssueFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnPrescriptionFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnPrescriptionFlag
		{
			get
			{
				return this._GCSMWitnessOnPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnPrescriptionFlag != value))
				{
					this.OnGCSMWitnessOnPrescriptionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnPrescriptionFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnPrescriptionFlag");
					this.OnGCSMWitnessOnPrescriptionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnRecallFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnRecallFlag
		{
			get
			{
				return this._GCSMWitnessOnRecallFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnRecallFlag != value))
				{
					this.OnGCSMWitnessOnRecallFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnRecallFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnRecallFlag");
					this.OnGCSMWitnessOnRecallFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReceiveFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnReceiveFlag
		{
			get
			{
				return this._GCSMWitnessOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReceiveFlag != value))
				{
					this.OnGCSMWitnessOnReceiveFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnReceiveFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnReceiveFlag");
					this.OnGCSMWitnessOnReceiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReverseCompoundingFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnReverseCompoundingFlag
		{
			get
			{
				return this._GCSMWitnessOnReverseCompoundingFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReverseCompoundingFlag != value))
				{
					this.OnGCSMWitnessOnReverseCompoundingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnReverseCompoundingFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnReverseCompoundingFlag");
					this.OnGCSMWitnessOnReverseCompoundingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnSellFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnSellFlag
		{
			get
			{
				return this._GCSMWitnessOnSellFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnSellFlag != value))
				{
					this.OnGCSMWitnessOnSellFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnSellFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnSellFlag");
					this.OnGCSMWitnessOnSellFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnStockTransferFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnStockTransferFlag
		{
			get
			{
				return this._GCSMWitnessOnStockTransferFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnStockTransferFlag != value))
				{
					this.OnGCSMWitnessOnStockTransferFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnStockTransferFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnStockTransferFlag");
					this.OnGCSMWitnessOnStockTransferFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnUnloadFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnUnloadFlag
		{
			get
			{
				return this._GCSMWitnessOnUnloadFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnUnloadFlag != value))
				{
					this.OnGCSMWitnessOnUnloadFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnUnloadFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnUnloadFlag");
					this.OnGCSMWitnessOnUnloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnWasteFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnWasteFlag
		{
			get
			{
				return this._GCSMWitnessOnWasteFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnWasteFlag != value))
				{
					this.OnGCSMWitnessOnWasteFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnWasteFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnWasteFlag");
					this.OnGCSMWitnessOnWasteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnCompoundingFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnCompoundingFlag
		{
			get
			{
				return this._GCSMScanOnCompoundingFlag;
			}
			set
			{
				if ((this._GCSMScanOnCompoundingFlag != value))
				{
					this.OnGCSMScanOnCompoundingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnCompoundingFlag = value;
					this.SendPropertyChanged("GCSMScanOnCompoundingFlag");
					this.OnGCSMScanOnCompoundingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnReturnFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnReturnFlag
		{
			get
			{
				return this._GCSMScanOnReturnFlag;
			}
			set
			{
				if ((this._GCSMScanOnReturnFlag != value))
				{
					this.OnGCSMScanOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnReturnFlag = value;
					this.SendPropertyChanged("GCSMScanOnReturnFlag");
					this.OnGCSMScanOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnAutorestockFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnAutorestockFlag
		{
			get
			{
				return this._GCSMScanOnAutorestockFlag;
			}
			set
			{
				if ((this._GCSMScanOnAutorestockFlag != value))
				{
					this.OnGCSMScanOnAutorestockFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnAutorestockFlag = value;
					this.SendPropertyChanged("GCSMScanOnAutorestockFlag");
					this.OnGCSMScanOnAutorestockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnIssueFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnIssueFlag
		{
			get
			{
				return this._GCSMScanOnIssueFlag;
			}
			set
			{
				if ((this._GCSMScanOnIssueFlag != value))
				{
					this.OnGCSMScanOnIssueFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnIssueFlag = value;
					this.SendPropertyChanged("GCSMScanOnIssueFlag");
					this.OnGCSMScanOnIssueFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnPrescriptionFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnPrescriptionFlag
		{
			get
			{
				return this._GCSMScanOnPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMScanOnPrescriptionFlag != value))
				{
					this.OnGCSMScanOnPrescriptionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnPrescriptionFlag = value;
					this.SendPropertyChanged("GCSMScanOnPrescriptionFlag");
					this.OnGCSMScanOnPrescriptionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnReceiveFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnReceiveFlag
		{
			get
			{
				return this._GCSMScanOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMScanOnReceiveFlag != value))
				{
					this.OnGCSMScanOnReceiveFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnReceiveFlag = value;
					this.SendPropertyChanged("GCSMScanOnReceiveFlag");
					this.OnGCSMScanOnReceiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnSellFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnSellFlag
		{
			get
			{
				return this._GCSMScanOnSellFlag;
			}
			set
			{
				if ((this._GCSMScanOnSellFlag != value))
				{
					this.OnGCSMScanOnSellFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnSellFlag = value;
					this.SendPropertyChanged("GCSMScanOnSellFlag");
					this.OnGCSMScanOnSellFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnStockTransferFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnStockTransferFlag
		{
			get
			{
				return this._GCSMScanOnStockTransferFlag;
			}
			set
			{
				if ((this._GCSMScanOnStockTransferFlag != value))
				{
					this.OnGCSMScanOnStockTransferFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnStockTransferFlag = value;
					this.SendPropertyChanged("GCSMScanOnStockTransferFlag");
					this.OnGCSMScanOnStockTransferFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCriticalLowPercentage", DbType="TinyInt")]
		public System.Nullable<byte> GCSMCriticalLowPercentage
		{
			get
			{
				return this._GCSMCriticalLowPercentage;
			}
			set
			{
				if ((this._GCSMCriticalLowPercentage != value))
				{
					this.OnGCSMCriticalLowPercentageChanging(value);
					this.SendPropertyChanging();
					this._GCSMCriticalLowPercentage = value;
					this.SendPropertyChanged("GCSMCriticalLowPercentage");
					this.OnGCSMCriticalLowPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintOnReceiveFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintOnReceiveFlag
		{
			get
			{
				return this._GCSMPrintOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMPrintOnReceiveFlag != value))
				{
					this.OnGCSMPrintOnReceiveFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintOnReceiveFlag = value;
					this.SendPropertyChanged("GCSMPrintOnReceiveFlag");
					this.OnGCSMPrintOnReceiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintSingleMedSheetFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintSingleMedSheetFlag
		{
			get
			{
				return this._GCSMPrintSingleMedSheetFlag;
			}
			set
			{
				if ((this._GCSMPrintSingleMedSheetFlag != value))
				{
					this.OnGCSMPrintSingleMedSheetFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintSingleMedSheetFlag = value;
					this.SendPropertyChanged("GCSMPrintSingleMedSheetFlag");
					this.OnGCSMPrintSingleMedSheetFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintDripSheetFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintDripSheetFlag
		{
			get
			{
				return this._GCSMPrintDripSheetFlag;
			}
			set
			{
				if ((this._GCSMPrintDripSheetFlag != value))
				{
					this.OnGCSMPrintDripSheetFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintDripSheetFlag = value;
					this.SendPropertyChanged("GCSMPrintDripSheetFlag");
					this.OnGCSMPrintDripSheetFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintMaximumRowsFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintMaximumRowsFlag
		{
			get
			{
				return this._GCSMPrintMaximumRowsFlag;
			}
			set
			{
				if ((this._GCSMPrintMaximumRowsFlag != value))
				{
					this.OnGCSMPrintMaximumRowsFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintMaximumRowsFlag = value;
					this.SendPropertyChanged("GCSMPrintMaximumRowsFlag");
					this.OnGCSMPrintMaximumRowsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMAdditionalLabelsPrintedQuantity", DbType="SmallInt NOT NULL")]
		public short GCSMAdditionalLabelsPrintedQuantity
		{
			get
			{
				return this._GCSMAdditionalLabelsPrintedQuantity;
			}
			set
			{
				if ((this._GCSMAdditionalLabelsPrintedQuantity != value))
				{
					this.OnGCSMAdditionalLabelsPrintedQuantityChanging(value);
					this.SendPropertyChanging();
					this._GCSMAdditionalLabelsPrintedQuantity = value;
					this.SendPropertyChanged("GCSMAdditionalLabelsPrintedQuantity");
					this.OnGCSMAdditionalLabelsPrintedQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMStockOutNoticeFlag", DbType="Bit NOT NULL")]
		public bool GCSMStockOutNoticeFlag
		{
			get
			{
				return this._GCSMStockOutNoticeFlag;
			}
			set
			{
				if ((this._GCSMStockOutNoticeFlag != value))
				{
					this.OnGCSMStockOutNoticeFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMStockOutNoticeFlag = value;
					this.SendPropertyChanged("GCSMStockOutNoticeFlag");
					this.OnGCSMStockOutNoticeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDistributorKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GCSMDistributorKey
		{
			get
			{
				return this._GCSMDistributorKey;
			}
			set
			{
				if ((this._GCSMDistributorKey != value))
				{
					this.OnGCSMDistributorKeyChanging(value);
					this.SendPropertyChanging();
					this._GCSMDistributorKey = value;
					this.SendPropertyChanged("GCSMDistributorKey");
					this.OnGCSMDistributorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstSnapshotFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FirstSnapshotFlag
		{
			get
			{
				return this._FirstSnapshotFlag;
			}
			set
			{
				if ((this._FirstSnapshotFlag != value))
				{
					this.OnFirstSnapshotFlagChanging(value);
					this.SendPropertyChanging();
					this._FirstSnapshotFlag = value;
					this.SendPropertyChanged("FirstSnapshotFlag");
					this.OnFirstSnapshotFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMTotalParDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> GCSMTotalParDurationAmount
		{
			get
			{
				return this._GCSMTotalParDurationAmount;
			}
			set
			{
				if ((this._GCSMTotalParDurationAmount != value))
				{
					this.OnGCSMTotalParDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._GCSMTotalParDurationAmount = value;
					this.SendPropertyChanged("GCSMTotalParDurationAmount");
					this.OnGCSMTotalParDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMTotalDeviceParDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> GCSMTotalDeviceParDurationAmount
		{
			get
			{
				return this._GCSMTotalDeviceParDurationAmount;
			}
			set
			{
				if ((this._GCSMTotalDeviceParDurationAmount != value))
				{
					this.OnGCSMTotalDeviceParDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._GCSMTotalDeviceParDurationAmount = value;
					this.SendPropertyChanged("GCSMTotalDeviceParDurationAmount");
					this.OnGCSMTotalDeviceParDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnAddToDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnAddToDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAddToDestructionBinFlag != value))
				{
					this.OnGCSMWitnessOnAddToDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnAddToDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnAddToDestructionBinFlag");
					this.OnGCSMWitnessOnAddToDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnAccessToDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnAccessToDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAccessToDestructionBinFlag != value))
				{
					this.OnGCSMWitnessOnAccessToDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnAccessToDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnAccessToDestructionBinFlag");
					this.OnGCSMWitnessOnAccessToDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMRequireOriginDestinationFlag", DbType="Bit NOT NULL")]
		public bool GCSMRequireOriginDestinationFlag
		{
			get
			{
				return this._GCSMRequireOriginDestinationFlag;
			}
			set
			{
				if ((this._GCSMRequireOriginDestinationFlag != value))
				{
					this.OnGCSMRequireOriginDestinationFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMRequireOriginDestinationFlag = value;
					this.SendPropertyChanged("GCSMRequireOriginDestinationFlag");
					this.OnGCSMRequireOriginDestinationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_OverrideGroupMemberEntity", Storage="_OverrideGroupMemberEntities", ThisKey="Key", OtherKey="FacilityItemKey")]
		public EntitySet<OverrideGroupMemberEntity> OverrideGroupMemberEntities
		{
			get
			{
				return this._OverrideGroupMemberEntities;
			}
			set
			{
				this._OverrideGroupMemberEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_FacilityItemPickAreaEntity", Storage="_FacilityItemPickAreaEntities", ThisKey="Key", OtherKey="FacilityItemKey")]
		public EntitySet<FacilityItemPickAreaEntity> FacilityItemPickAreaEntities
		{
			get
			{
				return this._FacilityItemPickAreaEntities;
			}
			set
			{
				this._FacilityItemPickAreaEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_FacilityItemPhysicalCapacityEntity", Storage="_FacilityItemPhysicalCapacityEntities", ThisKey="Key", OtherKey="FacilityItemKey")]
		public EntitySet<FacilityItemPhysicalCapacityEntity> FacilityItemPhysicalCapacityEntities
		{
			get
			{
				return this._FacilityItemPhysicalCapacityEntities;
			}
			set
			{
				this._FacilityItemPhysicalCapacityEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_FacilityKitMemberEntity", Storage="_FacilityKitMemberEntities", ThisKey="Key", OtherKey="FacilityItemKey")]
		public EntitySet<FacilityKitMemberEntity> FacilityKitMemberEntities
		{
			get
			{
				return this._FacilityKitMemberEntities;
			}
			set
			{
				this._FacilityKitMemberEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_BlockedFacilityItemDispensingDeviceEntity", Storage="_BlockedFacilityItemDispensingDeviceEntities", ThisKey="Key", OtherKey="FacilityItemKey")]
		public EntitySet<BlockedFacilityItemDispensingDeviceEntity> BlockedFacilityItemDispensingDeviceEntities
		{
			get
			{
				return this._BlockedFacilityItemDispensingDeviceEntities;
			}
			set
			{
				this._BlockedFacilityItemDispensingDeviceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_ComboComponentEntity", Storage="_ComboComponentEntities", ThisKey="Key", OtherKey="ComboFacilityItemKey")]
		public EntitySet<ComboComponentEntity> ComboComponentEntities
		{
			get
			{
				return this._ComboComponentEntities;
			}
			set
			{
				this._ComboComponentEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_FacilityItemEntity", Storage="_ItemEntity", ThisKey="ItemKey", OtherKey="Key", IsForeignKey=true)]
		public ItemEntity ItemEntity
		{
			get
			{
				return this._ItemEntity.Entity;
			}
			set
			{
				ItemEntity previousValue = this._ItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemEntity.Entity = null;
						previousValue.FacilityItemEntities.Remove(this);
					}
					this._ItemEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemEntities.Add(this);
						this._ItemKey = value.Key;
					}
					else
					{
						this._ItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VerifyCountModeEntity_FacilityItemEntity", Storage="_VerifyCountModeEntity", ThisKey="VerifyCountModeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public VerifyCountModeEntity VerifyCountModeEntity
		{
			get
			{
				return this._VerifyCountModeEntity.Entity;
			}
			set
			{
				VerifyCountModeEntity previousValue = this._VerifyCountModeEntity.Entity;
				if (((previousValue != value) 
							|| (this._VerifyCountModeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VerifyCountModeEntity.Entity = null;
						previousValue.FacilityItemEntities.Remove(this);
					}
					this._VerifyCountModeEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemEntities.Add(this);
						this._VerifyCountModeInternalCode = value.InternalCode;
					}
					else
					{
						this._VerifyCountModeInternalCode = default(string);
					}
					this.SendPropertyChanged("VerifyCountModeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityGroupEntity_FacilityItemEntity", Storage="_SecurityGroupEntity", ThisKey="SecurityGroupKey", OtherKey="Key", IsForeignKey=true)]
		public SecurityGroupEntity SecurityGroupEntity
		{
			get
			{
				return this._SecurityGroupEntity.Entity;
			}
			set
			{
				SecurityGroupEntity previousValue = this._SecurityGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._SecurityGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityGroupEntity.Entity = null;
						previousValue.FacilityItemEntities.Remove(this);
					}
					this._SecurityGroupEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemEntities.Add(this);
						this._SecurityGroupKey = value.Key;
					}
					else
					{
						this._SecurityGroupKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("SecurityGroupEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedReturnModeEntity_FacilityItemEntity", Storage="_MedReturnModeEntity", ThisKey="MedReturnModeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public MedReturnModeEntity MedReturnModeEntity
		{
			get
			{
				return this._MedReturnModeEntity.Entity;
			}
			set
			{
				MedReturnModeEntity previousValue = this._MedReturnModeEntity.Entity;
				if (((previousValue != value) 
							|| (this._MedReturnModeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedReturnModeEntity.Entity = null;
						previousValue.FacilityItemEntities.Remove(this);
					}
					this._MedReturnModeEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemEntities.Add(this);
						this._MedReturnModeInternalCode = value.InternalCode;
					}
					else
					{
						this._MedReturnModeInternalCode = default(string);
					}
					this.SendPropertyChanged("MedReturnModeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HazardousWasteClassEntity_FacilityItemEntity", Storage="_HazardousWasteClassEntity", ThisKey="HazardousWasteClassKey", OtherKey="Key", IsForeignKey=true)]
		public HazardousWasteClassEntity HazardousWasteClassEntity
		{
			get
			{
				return this._HazardousWasteClassEntity.Entity;
			}
			set
			{
				HazardousWasteClassEntity previousValue = this._HazardousWasteClassEntity.Entity;
				if (((previousValue != value) 
							|| (this._HazardousWasteClassEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HazardousWasteClassEntity.Entity = null;
						previousValue.FacilityItemEntities.Remove(this);
					}
					this._HazardousWasteClassEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemEntities.Add(this);
						this._HazardousWasteClassKey = value.Key;
					}
					else
					{
						this._HazardousWasteClassKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("HazardousWasteClassEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedItemEntity_FacilityItemEntity", Storage="_MedItemEntity", ThisKey="ItemKey", OtherKey="Key", IsForeignKey=true)]
		public MedItemEntity MedItemEntity
		{
			get
			{
				return this._MedItemEntity.Entity;
			}
			set
			{
				MedItemEntity previousValue = this._MedItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._MedItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedItemEntity.Entity = null;
						previousValue.FacilityItemEntities.Remove(this);
					}
					this._MedItemEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemEntities.Add(this);
						this._ItemKey = value.Key;
					}
					else
					{
						this._ItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("MedItemEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReplenishmentScanModeEntity_FacilityItemEntity", Storage="_ReplenishmentScanModeEntity", ThisKey="ReplenishmentScanModeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public ReplenishmentScanModeEntity ReplenishmentScanModeEntity
		{
			get
			{
				return this._ReplenishmentScanModeEntity.Entity;
			}
			set
			{
				ReplenishmentScanModeEntity previousValue = this._ReplenishmentScanModeEntity.Entity;
				if (((previousValue != value) 
							|| (this._ReplenishmentScanModeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReplenishmentScanModeEntity.Entity = null;
						previousValue.FacilityItemEntities.Remove(this);
					}
					this._ReplenishmentScanModeEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemEntities.Add(this);
						this._ReplenishmentScanModeInternalCode = value.InternalCode;
					}
					else
					{
						this._ReplenishmentScanModeInternalCode = default(string);
					}
					this.SendPropertyChanged("ReplenishmentScanModeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedFailoverReturnModeEntity_FacilityItemEntity", Storage="_MedFailoverReturnModeEntity", ThisKey="MedFailoverReturnModeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public MedFailoverReturnModeEntity MedFailoverReturnModeEntity
		{
			get
			{
				return this._MedFailoverReturnModeEntity.Entity;
			}
			set
			{
				MedFailoverReturnModeEntity previousValue = this._MedFailoverReturnModeEntity.Entity;
				if (((previousValue != value) 
							|| (this._MedFailoverReturnModeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedFailoverReturnModeEntity.Entity = null;
						previousValue.FacilityItemEntities.Remove(this);
					}
					this._MedFailoverReturnModeEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemEntities.Add(this);
						this._MedFailoverReturnModeInternalCode = value.InternalCode;
					}
					else
					{
						this._MedFailoverReturnModeInternalCode = default(string);
					}
					this.SendPropertyChanged("MedFailoverReturnModeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FractionalUOMTypeEntity_FacilityItemEntity", Storage="_FractionalUOMTypeEntity", ThisKey="FractionalUOMTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public FractionalUOMTypeEntity FractionalUOMTypeEntity
		{
			get
			{
				return this._FractionalUOMTypeEntity.Entity;
			}
			set
			{
				FractionalUOMTypeEntity previousValue = this._FractionalUOMTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._FractionalUOMTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FractionalUOMTypeEntity.Entity = null;
						previousValue.FacilityItemEntities.Remove(this);
					}
					this._FractionalUOMTypeEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemEntities.Add(this);
						this._FractionalUOMTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._FractionalUOMTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("FractionalUOMTypeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AutoMedLabelModeEntity_FacilityItemEntity", Storage="_AutoMedLabelModeEntity", ThisKey="AutoMedLabelModeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public AutoMedLabelModeEntity AutoMedLabelModeEntity
		{
			get
			{
				return this._AutoMedLabelModeEntity.Entity;
			}
			set
			{
				AutoMedLabelModeEntity previousValue = this._AutoMedLabelModeEntity.Entity;
				if (((previousValue != value) 
							|| (this._AutoMedLabelModeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AutoMedLabelModeEntity.Entity = null;
						previousValue.FacilityItemEntities.Remove(this);
					}
					this._AutoMedLabelModeEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemEntities.Add(this);
						this._AutoMedLabelModeInternalCode = value.InternalCode;
					}
					else
					{
						this._AutoMedLabelModeInternalCode = default(string);
					}
					this.SendPropertyChanged("AutoMedLabelModeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OverrideGroupMemberEntities(OverrideGroupMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityItemEntity = this;
		}
		
		private void detach_OverrideGroupMemberEntities(OverrideGroupMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityItemEntity = null;
		}
		
		private void attach_FacilityItemPickAreaEntities(FacilityItemPickAreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityItemEntity = this;
		}
		
		private void detach_FacilityItemPickAreaEntities(FacilityItemPickAreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityItemEntity = null;
		}
		
		private void attach_FacilityItemPhysicalCapacityEntities(FacilityItemPhysicalCapacityEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityItemEntity = this;
		}
		
		private void detach_FacilityItemPhysicalCapacityEntities(FacilityItemPhysicalCapacityEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityItemEntity = null;
		}
		
		private void attach_FacilityKitMemberEntities(FacilityKitMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityItemEntity = this;
		}
		
		private void detach_FacilityKitMemberEntities(FacilityKitMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityItemEntity = null;
		}
		
		private void attach_BlockedFacilityItemDispensingDeviceEntities(BlockedFacilityItemDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityItemEntity = this;
		}
		
		private void detach_BlockedFacilityItemDispensingDeviceEntities(BlockedFacilityItemDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityItemEntity = null;
		}
		
		private void attach_ComboComponentEntities(ComboComponentEntity entity)
		{
			this.SendPropertyChanging();
			entity.ComboFacilityItemEntity = this;
		}
		
		private void detach_ComboComponentEntities(ComboComponentEntity entity)
		{
			this.SendPropertyChanging();
			entity.ComboFacilityItemEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_FacilityItemPickAreaCurrent")]
	public partial class FacilityItemPickAreaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FacilityItemKey;
		
		private System.Guid _PickAreaKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<PickAreaEntity> _PickAreaEntity;
		
		private EntityRef<FacilityItemEntity> _FacilityItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFacilityItemKeyChanging(System.Guid value);
    partial void OnFacilityItemKeyChanged();
    partial void OnPickAreaKeyChanging(System.Guid value);
    partial void OnPickAreaKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public FacilityItemPickAreaEntity()
		{
			this._PickAreaEntity = default(EntityRef<PickAreaEntity>);
			this._FacilityItemEntity = default(EntityRef<FacilityItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FacilityItemPickAreaKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					if (this._FacilityItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityItemKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityItemKey = value;
					this.SendPropertyChanged("FacilityItemKey");
					this.OnFacilityItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickAreaKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PickAreaKey
		{
			get
			{
				return this._PickAreaKey;
			}
			set
			{
				if ((this._PickAreaKey != value))
				{
					if (this._PickAreaEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPickAreaKeyChanging(value);
					this.SendPropertyChanging();
					this._PickAreaKey = value;
					this.SendPropertyChanged("PickAreaKey");
					this.OnPickAreaKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PickAreaEntity_FacilityItemPickAreaEntity", Storage="_PickAreaEntity", ThisKey="PickAreaKey", OtherKey="Key", IsForeignKey=true)]
		public PickAreaEntity PickAreaEntity
		{
			get
			{
				return this._PickAreaEntity.Entity;
			}
			set
			{
				PickAreaEntity previousValue = this._PickAreaEntity.Entity;
				if (((previousValue != value) 
							|| (this._PickAreaEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PickAreaEntity.Entity = null;
						previousValue.FacilityItemPickAreaEntities.Remove(this);
					}
					this._PickAreaEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemPickAreaEntities.Add(this);
						this._PickAreaKey = value.Key;
					}
					else
					{
						this._PickAreaKey = default(System.Guid);
					}
					this.SendPropertyChanged("PickAreaEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_FacilityItemPickAreaEntity", Storage="_FacilityItemEntity", ThisKey="FacilityItemKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityItemEntity FacilityItemEntity
		{
			get
			{
				return this._FacilityItemEntity.Entity;
			}
			set
			{
				FacilityItemEntity previousValue = this._FacilityItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityItemEntity.Entity = null;
						previousValue.FacilityItemPickAreaEntities.Remove(this);
					}
					this._FacilityItemEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemPickAreaEntities.Add(this);
						this._FacilityItemKey = value.Key;
					}
					else
					{
						this._FacilityItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("FacilityItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_FacilityItemQueueCurrent")]
	public partial class FacilityItemQueueEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FacilityKey;
		
		private System.Guid _ItemKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Guid _FacilityItemQueueSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.DateTime> _AcceptedUTCDateTime;
		
		private System.Nullable<System.DateTime> _AcceptedLocalDateTime;
		
		private System.Nullable<System.DateTime> _RejectedUTCDateTime;
		
		private System.Nullable<System.DateTime> _RejectedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ItemEntity> _ItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnItemKeyChanging(System.Guid value);
    partial void OnItemKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnFacilityItemQueueSnapshotKeyChanging(System.Guid value);
    partial void OnFacilityItemQueueSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnAcceptedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptedUTCDateTimeChanged();
    partial void OnAcceptedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptedLocalDateTimeChanged();
    partial void OnRejectedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRejectedUTCDateTimeChanged();
    partial void OnRejectedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRejectedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public FacilityItemQueueEntity()
		{
			this._ItemEntity = default(EntityRef<ItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FacilityItemQueueKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					if (this._ItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemQueueSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemQueueSnapshotKey
		{
			get
			{
				return this._FacilityItemQueueSnapshotKey;
			}
			set
			{
				if ((this._FacilityItemQueueSnapshotKey != value))
				{
					this.OnFacilityItemQueueSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityItemQueueSnapshotKey = value;
					this.SendPropertyChanged("FacilityItemQueueSnapshotKey");
					this.OnFacilityItemQueueSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AcceptedUTCDateTime
		{
			get
			{
				return this._AcceptedUTCDateTime;
			}
			set
			{
				if ((this._AcceptedUTCDateTime != value))
				{
					this.OnAcceptedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptedUTCDateTime = value;
					this.SendPropertyChanged("AcceptedUTCDateTime");
					this.OnAcceptedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AcceptedLocalDateTime
		{
			get
			{
				return this._AcceptedLocalDateTime;
			}
			set
			{
				if ((this._AcceptedLocalDateTime != value))
				{
					this.OnAcceptedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AcceptedLocalDateTime = value;
					this.SendPropertyChanged("AcceptedLocalDateTime");
					this.OnAcceptedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RejectedUTCDateTime
		{
			get
			{
				return this._RejectedUTCDateTime;
			}
			set
			{
				if ((this._RejectedUTCDateTime != value))
				{
					this.OnRejectedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._RejectedUTCDateTime = value;
					this.SendPropertyChanged("RejectedUTCDateTime");
					this.OnRejectedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RejectedLocalDateTime
		{
			get
			{
				return this._RejectedLocalDateTime;
			}
			set
			{
				if ((this._RejectedLocalDateTime != value))
				{
					this.OnRejectedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._RejectedLocalDateTime = value;
					this.SendPropertyChanged("RejectedLocalDateTime");
					this.OnRejectedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_FacilityItemQueueEntity", Storage="_ItemEntity", ThisKey="ItemKey", OtherKey="Key", IsForeignKey=true)]
		public ItemEntity ItemEntity
		{
			get
			{
				return this._ItemEntity.Entity;
			}
			set
			{
				ItemEntity previousValue = this._ItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemEntity.Entity = null;
						previousValue.FacilityItemQueueEntities.Remove(this);
					}
					this._ItemEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemQueueEntities.Add(this);
						this._ItemKey = value.Key;
					}
					else
					{
						this._ItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.MedReturnMode")]
	public partial class MedReturnModeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MedReturnModeInternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityItemEntity> _FacilityItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public MedReturnModeEntity()
		{
			this._FacilityItemEntities = new EntitySet<FacilityItemEntity>(new Action<FacilityItemEntity>(this.attach_FacilityItemEntities), new Action<FacilityItemEntity>(this.detach_FacilityItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MedReturnModeInternalCode", Storage="_MedReturnModeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._MedReturnModeInternalCode;
			}
			set
			{
				if ((this._MedReturnModeInternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._MedReturnModeInternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedReturnModeEntity_FacilityItemEntity", Storage="_FacilityItemEntities", ThisKey="InternalCode", OtherKey="MedReturnModeInternalCode")]
		public EntitySet<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this._FacilityItemEntities;
			}
			set
			{
				this._FacilityItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedReturnModeEntity = this;
		}
		
		private void detach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedReturnModeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_FacilityItemPhysicalCapacityCurrent")]
	public partial class FacilityItemPhysicalCapacityEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FacilityItemPhysicalCapacitySnapshotKey;
		
		private System.Guid _FacilityItemKey;
		
		private string _StorageSpaceSizeInternalCode;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<int> _MaximumQuantity;
		
		private System.Nullable<int> _PhysicalMaximumQuantity;
		
		private System.Nullable<int> _ParQuantity;
		
		private System.Nullable<int> _RefillPointQuantity;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<FacilityItemEntity> _FacilityItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFacilityItemPhysicalCapacitySnapshotKeyChanging(System.Guid value);
    partial void OnFacilityItemPhysicalCapacitySnapshotKeyChanged();
    partial void OnFacilityItemKeyChanging(System.Guid value);
    partial void OnFacilityItemKeyChanged();
    partial void OnStorageSpaceSizeInternalCodeChanging(string value);
    partial void OnStorageSpaceSizeInternalCodeChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnMaximumQuantityChanging(System.Nullable<int> value);
    partial void OnMaximumQuantityChanged();
    partial void OnPhysicalMaximumQuantityChanging(System.Nullable<int> value);
    partial void OnPhysicalMaximumQuantityChanged();
    partial void OnParQuantityChanging(System.Nullable<int> value);
    partial void OnParQuantityChanged();
    partial void OnRefillPointQuantityChanging(System.Nullable<int> value);
    partial void OnRefillPointQuantityChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public FacilityItemPhysicalCapacityEntity()
		{
			this._FacilityItemEntity = default(EntityRef<FacilityItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FacilityItemPhysicalCapacityKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemPhysicalCapacitySnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemPhysicalCapacitySnapshotKey
		{
			get
			{
				return this._FacilityItemPhysicalCapacitySnapshotKey;
			}
			set
			{
				if ((this._FacilityItemPhysicalCapacitySnapshotKey != value))
				{
					this.OnFacilityItemPhysicalCapacitySnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityItemPhysicalCapacitySnapshotKey = value;
					this.SendPropertyChanged("FacilityItemPhysicalCapacitySnapshotKey");
					this.OnFacilityItemPhysicalCapacitySnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					if (this._FacilityItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityItemKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityItemKey = value;
					this.SendPropertyChanged("FacilityItemKey");
					this.OnFacilityItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceSizeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string StorageSpaceSizeInternalCode
		{
			get
			{
				return this._StorageSpaceSizeInternalCode;
			}
			set
			{
				if ((this._StorageSpaceSizeInternalCode != value))
				{
					this.OnStorageSpaceSizeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceSizeInternalCode = value;
					this.SendPropertyChanged("StorageSpaceSizeInternalCode");
					this.OnStorageSpaceSizeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumQuantity", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MaximumQuantity
		{
			get
			{
				return this._MaximumQuantity;
			}
			set
			{
				if ((this._MaximumQuantity != value))
				{
					this.OnMaximumQuantityChanging(value);
					this.SendPropertyChanging();
					this._MaximumQuantity = value;
					this.SendPropertyChanged("MaximumQuantity");
					this.OnMaximumQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalMaximumQuantity", DbType="Int")]
		public System.Nullable<int> PhysicalMaximumQuantity
		{
			get
			{
				return this._PhysicalMaximumQuantity;
			}
			set
			{
				if ((this._PhysicalMaximumQuantity != value))
				{
					this.OnPhysicalMaximumQuantityChanging(value);
					this.SendPropertyChanging();
					this._PhysicalMaximumQuantity = value;
					this.SendPropertyChanged("PhysicalMaximumQuantity");
					this.OnPhysicalMaximumQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParQuantity", DbType="Int")]
		public System.Nullable<int> ParQuantity
		{
			get
			{
				return this._ParQuantity;
			}
			set
			{
				if ((this._ParQuantity != value))
				{
					this.OnParQuantityChanging(value);
					this.SendPropertyChanging();
					this._ParQuantity = value;
					this.SendPropertyChanged("ParQuantity");
					this.OnParQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillPointQuantity", DbType="Int")]
		public System.Nullable<int> RefillPointQuantity
		{
			get
			{
				return this._RefillPointQuantity;
			}
			set
			{
				if ((this._RefillPointQuantity != value))
				{
					this.OnRefillPointQuantityChanging(value);
					this.SendPropertyChanging();
					this._RefillPointQuantity = value;
					this.SendPropertyChanged("RefillPointQuantity");
					this.OnRefillPointQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_FacilityItemPhysicalCapacityEntity", Storage="_FacilityItemEntity", ThisKey="FacilityItemKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityItemEntity FacilityItemEntity
		{
			get
			{
				return this._FacilityItemEntity.Entity;
			}
			set
			{
				FacilityItemEntity previousValue = this._FacilityItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityItemEntity.Entity = null;
						previousValue.FacilityItemPhysicalCapacityEntities.Remove(this);
					}
					this._FacilityItemEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityItemPhysicalCapacityEntities.Add(this);
						this._FacilityItemKey = value.Key;
					}
					else
					{
						this._FacilityItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("FacilityItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_HazardousWasteClassCurrent")]
	public partial class HazardousWasteClassEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FacilityKey;
		
		private string _DisplayCode;
		
		private string _DescriptionText;
		
		private string _DisposalInstructionsText;
		
		private System.Nullable<int> _SortValue;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityItemEntity> _FacilityItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnDisposalInstructionsTextChanging(string value);
    partial void OnDisposalInstructionsTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public HazardousWasteClassEntity()
		{
			this._FacilityItemEntities = new EntitySet<FacilityItemEntity>(new Action<FacilityItemEntity>(this.attach_FacilityItemEntities), new Action<FacilityItemEntity>(this.detach_FacilityItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="HazardousWasteClassKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisposalInstructionsText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string DisposalInstructionsText
		{
			get
			{
				return this._DisposalInstructionsText;
			}
			set
			{
				if ((this._DisposalInstructionsText != value))
				{
					this.OnDisposalInstructionsTextChanging(value);
					this.SendPropertyChanging();
					this._DisposalInstructionsText = value;
					this.SendPropertyChanged("DisposalInstructionsText");
					this.OnDisposalInstructionsTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HazardousWasteClassEntity_FacilityItemEntity", Storage="_FacilityItemEntities", ThisKey="Key", OtherKey="HazardousWasteClassKey")]
		public EntitySet<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this._FacilityItemEntities;
			}
			set
			{
				this._FacilityItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.HazardousWasteClassEntity = this;
		}
		
		private void detach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.HazardousWasteClassEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_FacilityKitCurrent")]
	public partial class FacilityKitEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _FacilityKey;
		
		private System.Nullable<System.Guid> _ExternalSystemKey;
		
		private string _FacilityKitName;
		
		private string _DescriptionText;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityKitMemberEntity> _FacilityKitMemberEntities;
		
		private EntitySet<FacilityKitDispensingDeviceEntity> _FacilityKitDispensingDeviceEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnExternalSystemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnExternalSystemKeyChanged();
    partial void OnFacilityKitNameChanging(string value);
    partial void OnFacilityKitNameChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public FacilityKitEntity()
		{
			this._FacilityKitMemberEntities = new EntitySet<FacilityKitMemberEntity>(new Action<FacilityKitMemberEntity>(this.attach_FacilityKitMemberEntities), new Action<FacilityKitMemberEntity>(this.detach_FacilityKitMemberEntities));
			this._FacilityKitDispensingDeviceEntities = new EntitySet<FacilityKitDispensingDeviceEntity>(new Action<FacilityKitDispensingDeviceEntity>(this.attach_FacilityKitDispensingDeviceEntities), new Action<FacilityKitDispensingDeviceEntity>(this.detach_FacilityKitDispensingDeviceEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FacilityKitKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FacilityKitName
		{
			get
			{
				return this._FacilityKitName;
			}
			set
			{
				if ((this._FacilityKitName != value))
				{
					this.OnFacilityKitNameChanging(value);
					this.SendPropertyChanging();
					this._FacilityKitName = value;
					this.SendPropertyChanged("FacilityKitName");
					this.OnFacilityKitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityKitEntity_FacilityKitMemberEntity", Storage="_FacilityKitMemberEntities", ThisKey="Key", OtherKey="FacilityKitKey")]
		public EntitySet<FacilityKitMemberEntity> FacilityKitMemberEntities
		{
			get
			{
				return this._FacilityKitMemberEntities;
			}
			set
			{
				this._FacilityKitMemberEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityKitEntity_FacilityKitDispensingDeviceEntity", Storage="_FacilityKitDispensingDeviceEntities", ThisKey="Key", OtherKey="FacilityKitKey")]
		public EntitySet<FacilityKitDispensingDeviceEntity> FacilityKitDispensingDeviceEntities
		{
			get
			{
				return this._FacilityKitDispensingDeviceEntities;
			}
			set
			{
				this._FacilityKitDispensingDeviceEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityKitMemberEntities(FacilityKitMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityKitEntity = this;
		}
		
		private void detach_FacilityKitMemberEntities(FacilityKitMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityKitEntity = null;
		}
		
		private void attach_FacilityKitDispensingDeviceEntities(FacilityKitDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityKitEntity = this;
		}
		
		private void detach_FacilityKitDispensingDeviceEntities(FacilityKitDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.FacilityKitEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_FacilityKitMemberCurrent")]
	public partial class FacilityKitMemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _FacilityKitKey;
		
		private System.Guid _FacilityItemKey;
		
		private short _ItemMemberQuantity;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<FacilityItemEntity> _FacilityItemEntity;
		
		private EntityRef<FacilityKitEntity> _FacilityKitEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnFacilityKitKeyChanging(System.Guid value);
    partial void OnFacilityKitKeyChanged();
    partial void OnFacilityItemKeyChanging(System.Guid value);
    partial void OnFacilityItemKeyChanged();
    partial void OnItemMemberQuantityChanging(short value);
    partial void OnItemMemberQuantityChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public FacilityKitMemberEntity()
		{
			this._FacilityItemEntity = default(EntityRef<FacilityItemEntity>);
			this._FacilityKitEntity = default(EntityRef<FacilityKitEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FacilityKitMemberKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKitKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKitKey
		{
			get
			{
				return this._FacilityKitKey;
			}
			set
			{
				if ((this._FacilityKitKey != value))
				{
					if (this._FacilityKitEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityKitKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKitKey = value;
					this.SendPropertyChanged("FacilityKitKey");
					this.OnFacilityKitKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					if (this._FacilityItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityItemKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityItemKey = value;
					this.SendPropertyChanged("FacilityItemKey");
					this.OnFacilityItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemMemberQuantity", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short ItemMemberQuantity
		{
			get
			{
				return this._ItemMemberQuantity;
			}
			set
			{
				if ((this._ItemMemberQuantity != value))
				{
					this.OnItemMemberQuantityChanging(value);
					this.SendPropertyChanging();
					this._ItemMemberQuantity = value;
					this.SendPropertyChanged("ItemMemberQuantity");
					this.OnItemMemberQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_FacilityKitMemberEntity", Storage="_FacilityItemEntity", ThisKey="FacilityItemKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityItemEntity FacilityItemEntity
		{
			get
			{
				return this._FacilityItemEntity.Entity;
			}
			set
			{
				FacilityItemEntity previousValue = this._FacilityItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityItemEntity.Entity = null;
						previousValue.FacilityKitMemberEntities.Remove(this);
					}
					this._FacilityItemEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityKitMemberEntities.Add(this);
						this._FacilityItemKey = value.Key;
					}
					else
					{
						this._FacilityItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("FacilityItemEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityKitEntity_FacilityKitMemberEntity", Storage="_FacilityKitEntity", ThisKey="FacilityKitKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityKitEntity FacilityKitEntity
		{
			get
			{
				return this._FacilityKitEntity.Entity;
			}
			set
			{
				FacilityKitEntity previousValue = this._FacilityKitEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityKitEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityKitEntity.Entity = null;
						previousValue.FacilityKitMemberEntities.Remove(this);
					}
					this._FacilityKitEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityKitMemberEntities.Add(this);
						this._FacilityKitKey = value.Key;
					}
					else
					{
						this._FacilityKitKey = default(System.Guid);
					}
					this.SendPropertyChanged("FacilityKitEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_FacilityKitDispensingDeviceCurrent")]
	public partial class FacilityKitDispensingDeviceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FacilityKitKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private bool _StatFlag;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<FacilityKitEntity> _FacilityKitEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFacilityKitKeyChanging(System.Guid value);
    partial void OnFacilityKitKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnStatFlagChanging(bool value);
    partial void OnStatFlagChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public FacilityKitDispensingDeviceEntity()
		{
			this._FacilityKitEntity = default(EntityRef<FacilityKitEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FacilityKitDispensingDeviceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKitKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKitKey
		{
			get
			{
				return this._FacilityKitKey;
			}
			set
			{
				if ((this._FacilityKitKey != value))
				{
					if (this._FacilityKitEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityKitKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKitKey = value;
					this.SendPropertyChanged("FacilityKitKey");
					this.OnFacilityKitKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool StatFlag
		{
			get
			{
				return this._StatFlag;
			}
			set
			{
				if ((this._StatFlag != value))
				{
					this.OnStatFlagChanging(value);
					this.SendPropertyChanging();
					this._StatFlag = value;
					this.SendPropertyChanged("StatFlag");
					this.OnStatFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityKitEntity_FacilityKitDispensingDeviceEntity", Storage="_FacilityKitEntity", ThisKey="FacilityKitKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityKitEntity FacilityKitEntity
		{
			get
			{
				return this._FacilityKitEntity.Entity;
			}
			set
			{
				FacilityKitEntity previousValue = this._FacilityKitEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityKitEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityKitEntity.Entity = null;
						previousValue.FacilityKitDispensingDeviceEntities.Remove(this);
					}
					this._FacilityKitEntity.Entity = value;
					if ((value != null))
					{
						value.FacilityKitDispensingDeviceEntities.Add(this);
						this._FacilityKitKey = value.Key;
					}
					else
					{
						this._FacilityKitKey = default(System.Guid);
					}
					this.SendPropertyChanged("FacilityKitEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.ItemEquivalency")]
	public partial class ItemEquivalencyEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemEquivalencySetKey;
		
		private System.Guid _EquivalentItemKey;
		
		private short _EquivalentItemQuantity;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ItemEquivalencySetEntity> _ItemEquivalencySetEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemEquivalencySetKeyChanging(System.Guid value);
    partial void OnItemEquivalencySetKeyChanged();
    partial void OnEquivalentItemKeyChanging(System.Guid value);
    partial void OnEquivalentItemKeyChanged();
    partial void OnEquivalentItemQuantityChanging(short value);
    partial void OnEquivalentItemQuantityChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ItemEquivalencyEntity()
		{
			this._ItemEquivalencySetEntity = default(EntityRef<ItemEquivalencySetEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ItemEquivalencyKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemEquivalencySetKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemEquivalencySetKey
		{
			get
			{
				return this._ItemEquivalencySetKey;
			}
			set
			{
				if ((this._ItemEquivalencySetKey != value))
				{
					if (this._ItemEquivalencySetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemEquivalencySetKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemEquivalencySetKey = value;
					this.SendPropertyChanged("ItemEquivalencySetKey");
					this.OnItemEquivalencySetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalentItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EquivalentItemKey
		{
			get
			{
				return this._EquivalentItemKey;
			}
			set
			{
				if ((this._EquivalentItemKey != value))
				{
					this.OnEquivalentItemKeyChanging(value);
					this.SendPropertyChanging();
					this._EquivalentItemKey = value;
					this.SendPropertyChanged("EquivalentItemKey");
					this.OnEquivalentItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalentItemQuantity", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short EquivalentItemQuantity
		{
			get
			{
				return this._EquivalentItemQuantity;
			}
			set
			{
				if ((this._EquivalentItemQuantity != value))
				{
					this.OnEquivalentItemQuantityChanging(value);
					this.SendPropertyChanging();
					this._EquivalentItemQuantity = value;
					this.SendPropertyChanged("EquivalentItemQuantity");
					this.OnEquivalentItemQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEquivalencySetEntity_ItemEquivalencyEntity", Storage="_ItemEquivalencySetEntity", ThisKey="ItemEquivalencySetKey", OtherKey="Key", IsForeignKey=true)]
		public ItemEquivalencySetEntity ItemEquivalencySetEntity
		{
			get
			{
				return this._ItemEquivalencySetEntity.Entity;
			}
			set
			{
				ItemEquivalencySetEntity previousValue = this._ItemEquivalencySetEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemEquivalencySetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemEquivalencySetEntity.Entity = null;
						previousValue.ItemEquivalencyEntities.Remove(this);
					}
					this._ItemEquivalencySetEntity.Entity = value;
					if ((value != null))
					{
						value.ItemEquivalencyEntities.Add(this);
						this._ItemEquivalencySetKey = value.Key;
					}
					else
					{
						this._ItemEquivalencySetKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemEquivalencySetEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_ItemEquivalencySetCurrent")]
	public partial class ItemEquivalencySetEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private bool _ApprovedFlag;
		
		private System.Nullable<System.Guid> _CreatedActorKey;
		
		private System.Nullable<System.Guid> _EndedActorKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<ItemEquivalencyEntity> _ItemEquivalencyEntities;
		
		private EntityRef<ItemEntity> _ItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemKeyChanging(System.Guid value);
    partial void OnItemKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnApprovedFlagChanging(bool value);
    partial void OnApprovedFlagChanged();
    partial void OnCreatedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedActorKeyChanged();
    partial void OnEndedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnEndedActorKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ItemEquivalencySetEntity()
		{
			this._ItemEquivalencyEntities = new EntitySet<ItemEquivalencyEntity>(new Action<ItemEquivalencyEntity>(this.attach_ItemEquivalencyEntities), new Action<ItemEquivalencyEntity>(this.detach_ItemEquivalencyEntities));
			this._ItemEntity = default(EntityRef<ItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ItemEquivalencySetKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					if (this._ItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ApprovedFlag
		{
			get
			{
				return this._ApprovedFlag;
			}
			set
			{
				if ((this._ApprovedFlag != value))
				{
					this.OnApprovedFlagChanging(value);
					this.SendPropertyChanging();
					this._ApprovedFlag = value;
					this.SendPropertyChanged("ApprovedFlag");
					this.OnApprovedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CreatedActorKey
		{
			get
			{
				return this._CreatedActorKey;
			}
			set
			{
				if ((this._CreatedActorKey != value))
				{
					this.OnCreatedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedActorKey = value;
					this.SendPropertyChanged("CreatedActorKey");
					this.OnCreatedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EndedActorKey
		{
			get
			{
				return this._EndedActorKey;
			}
			set
			{
				if ((this._EndedActorKey != value))
				{
					this.OnEndedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._EndedActorKey = value;
					this.SendPropertyChanged("EndedActorKey");
					this.OnEndedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEquivalencySetEntity_ItemEquivalencyEntity", Storage="_ItemEquivalencyEntities", ThisKey="Key", OtherKey="ItemEquivalencySetKey")]
		public EntitySet<ItemEquivalencyEntity> ItemEquivalencyEntities
		{
			get
			{
				return this._ItemEquivalencyEntities;
			}
			set
			{
				this._ItemEquivalencyEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_ItemEquivalencySetEntity", Storage="_ItemEntity", ThisKey="ItemKey", OtherKey="Key", IsForeignKey=true)]
		public ItemEntity ItemEntity
		{
			get
			{
				return this._ItemEntity.Entity;
			}
			set
			{
				ItemEntity previousValue = this._ItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemEntity.Entity = null;
						previousValue.ItemEquivalencySetEntities.Remove(this);
					}
					this._ItemEntity.Entity = value;
					if ((value != null))
					{
						value.ItemEquivalencySetEntities.Add(this);
						this._ItemKey = value.Key;
					}
					else
					{
						this._ItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemEquivalencyEntities(ItemEquivalencyEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEquivalencySetEntity = this;
		}
		
		private void detach_ItemEquivalencyEntities(ItemEquivalencyEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemEquivalencySetEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_EquivalencyDosageFormGroupCurrent")]
	public partial class EquivalencyDosageFormGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private string _DisplayCode;
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<DosageFormEntity> _DosageFormEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EquivalencyDosageFormGroupEntity()
		{
			this._DosageFormEntities = new EntitySet<DosageFormEntity>(new Action<DosageFormEntity>(this.attach_DosageFormEntities), new Action<DosageFormEntity>(this.detach_DosageFormEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EquivalencyDosageFormGroupKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalCode", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EquivalencyDosageFormGroupEntity_DosageFormEntity", Storage="_DosageFormEntities", ThisKey="Key", OtherKey="EquivalencyDosageFormGroupKey")]
		public EntitySet<DosageFormEntity> DosageFormEntities
		{
			get
			{
				return this._DosageFormEntities;
			}
			set
			{
				this._DosageFormEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DosageFormEntities(DosageFormEntity entity)
		{
			this.SendPropertyChanging();
			entity.EquivalencyDosageFormGroupEntity = this;
		}
		
		private void detach_DosageFormEntities(DosageFormEntity entity)
		{
			this.SendPropertyChanging();
			entity.EquivalencyDosageFormGroupEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.MedItemType")]
	public partial class MedItemType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<MedItemEntity> _MedItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public MedItemType()
		{
			this._MedItemEntities = new EntitySet<MedItemEntity>(new Action<MedItemEntity>(this.attach_MedItemEntities), new Action<MedItemEntity>(this.detach_MedItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MedItemTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedItemType_MedItemEntity", Storage="_MedItemEntities", ThisKey="InternalCode", OtherKey="MedItemTypeInternalCode")]
		public EntitySet<MedItemEntity> MedItemEntities
		{
			get
			{
				return this._MedItemEntities;
			}
			set
			{
				this._MedItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MedItemEntities(MedItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedItemType = this;
		}
		
		private void detach_MedItemEntities(MedItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedItemType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_VariableDoseGroupMemberCurrent")]
	public partial class VariableDoseGroupMemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _VariableDoseGroupMemberSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _VariableDoseGroupKey;
		
		private System.Guid _MedItemKey;
		
		private int _RankValue;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<MedItemEntity> _VariableDoseGroupEntity;
		
		private EntityRef<MedItemEntity> _MedItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnVariableDoseGroupMemberSnapshotKeyChanging(System.Guid value);
    partial void OnVariableDoseGroupMemberSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnVariableDoseGroupKeyChanging(System.Guid value);
    partial void OnVariableDoseGroupKeyChanged();
    partial void OnMedItemKeyChanging(System.Guid value);
    partial void OnMedItemKeyChanged();
    partial void OnRankValueChanging(int value);
    partial void OnRankValueChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public VariableDoseGroupMemberEntity()
		{
			this._VariableDoseGroupEntity = default(EntityRef<MedItemEntity>);
			this._MedItemEntity = default(EntityRef<MedItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="VariableDoseGroupMemberKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableDoseGroupMemberSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid VariableDoseGroupMemberSnapshotKey
		{
			get
			{
				return this._VariableDoseGroupMemberSnapshotKey;
			}
			set
			{
				if ((this._VariableDoseGroupMemberSnapshotKey != value))
				{
					this.OnVariableDoseGroupMemberSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._VariableDoseGroupMemberSnapshotKey = value;
					this.SendPropertyChanged("VariableDoseGroupMemberSnapshotKey");
					this.OnVariableDoseGroupMemberSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableDoseGroupKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid VariableDoseGroupKey
		{
			get
			{
				return this._VariableDoseGroupKey;
			}
			set
			{
				if ((this._VariableDoseGroupKey != value))
				{
					if (this._VariableDoseGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVariableDoseGroupKeyChanging(value);
					this.SendPropertyChanging();
					this._VariableDoseGroupKey = value;
					this.SendPropertyChanged("VariableDoseGroupKey");
					this.OnVariableDoseGroupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid MedItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					if (this._MedItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedItemKeyChanging(value);
					this.SendPropertyChanging();
					this._MedItemKey = value;
					this.SendPropertyChanged("MedItemKey");
					this.OnMedItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int RankValue
		{
			get
			{
				return this._RankValue;
			}
			set
			{
				if ((this._RankValue != value))
				{
					this.OnRankValueChanging(value);
					this.SendPropertyChanging();
					this._RankValue = value;
					this.SendPropertyChanged("RankValue");
					this.OnRankValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedItemEntity_VariableDoseGroupMemberEntity", Storage="_VariableDoseGroupEntity", ThisKey="VariableDoseGroupKey", OtherKey="Key", IsForeignKey=true)]
		public MedItemEntity VariableDoseGroupEntity
		{
			get
			{
				return this._VariableDoseGroupEntity.Entity;
			}
			set
			{
				MedItemEntity previousValue = this._VariableDoseGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._VariableDoseGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VariableDoseGroupEntity.Entity = null;
						previousValue.VariableDoseGroupMemberEntities.Remove(this);
					}
					this._VariableDoseGroupEntity.Entity = value;
					if ((value != null))
					{
						value.VariableDoseGroupMemberEntities.Add(this);
						this._VariableDoseGroupKey = value.Key;
					}
					else
					{
						this._VariableDoseGroupKey = default(System.Guid);
					}
					this.SendPropertyChanged("VariableDoseGroupEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedItemEntity_VariableDoseGroupMemberEntity1", Storage="_MedItemEntity", ThisKey="MedItemKey", OtherKey="Key", IsForeignKey=true)]
		public MedItemEntity MedItemEntity
		{
			get
			{
				return this._MedItemEntity.Entity;
			}
			set
			{
				MedItemEntity previousValue = this._MedItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._MedItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedItemEntity.Entity = null;
						previousValue.VariableDoseGroupMemberEntities1.Remove(this);
					}
					this._MedItemEntity.Entity = value;
					if ((value != null))
					{
						value.VariableDoseGroupMemberEntities1.Add(this);
						this._MedItemKey = value.Key;
					}
					else
					{
						this._MedItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("MedItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_BlockedFacilityItemDispensingDeviceCurrent")]
	public partial class BlockedFacilityItemDispensingDeviceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FacilityItemKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<FacilityItemEntity> _FacilityItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFacilityItemKeyChanging(System.Guid value);
    partial void OnFacilityItemKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public BlockedFacilityItemDispensingDeviceEntity()
		{
			this._FacilityItemEntity = default(EntityRef<FacilityItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BlockedFacilityItemDispensingDeviceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					if (this._FacilityItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilityItemKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityItemKey = value;
					this.SendPropertyChanged("FacilityItemKey");
					this.OnFacilityItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_BlockedFacilityItemDispensingDeviceEntity", Storage="_FacilityItemEntity", ThisKey="FacilityItemKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityItemEntity FacilityItemEntity
		{
			get
			{
				return this._FacilityItemEntity.Entity;
			}
			set
			{
				FacilityItemEntity previousValue = this._FacilityItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._FacilityItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacilityItemEntity.Entity = null;
						previousValue.BlockedFacilityItemDispensingDeviceEntities.Remove(this);
					}
					this._FacilityItemEntity.Entity = value;
					if ((value != null))
					{
						value.BlockedFacilityItemDispensingDeviceEntities.Add(this);
						this._FacilityItemKey = value.Key;
					}
					else
					{
						this._FacilityItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("FacilityItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.ReplenishmentScanMode")]
	public partial class ReplenishmentScanModeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityItemEntity> _FacilityItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ReplenishmentScanModeEntity()
		{
			this._FacilityItemEntities = new EntitySet<FacilityItemEntity>(new Action<FacilityItemEntity>(this.attach_FacilityItemEntities), new Action<FacilityItemEntity>(this.detach_FacilityItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ReplenishmentScanModeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReplenishmentScanModeEntity_FacilityItemEntity", Storage="_FacilityItemEntities", ThisKey="InternalCode", OtherKey="ReplenishmentScanModeInternalCode")]
		public EntitySet<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this._FacilityItemEntities;
			}
			set
			{
				this._FacilityItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ReplenishmentScanModeEntity = this;
		}
		
		private void detach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ReplenishmentScanModeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_ProductIDCurrent")]
	public partial class ProductIDEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _ItemKey;
		
		private string _ProductID;
		
		private System.Nullable<System.Guid> _LinkedByUserAccountKey;
		
		private System.DateTime _LinkedUTCDateTime;
		
		private System.DateTime _LinkedLocalDateTime;
		
		private System.Nullable<System.Guid> _VerifiedByUserAccountKey;
		
		private System.Nullable<System.DateTime> _VerifiedUTCDateTime;
		
		private System.Nullable<System.DateTime> _VerifiedLocalDateTime;
		
		private bool _FromExternalSystemFlag;
		
		private string _ScanProductDeleteReasonInternalCode;
		
		private string _OtherItemID;
		
		private string _CreatedByExternalSystemName;
		
		private string _DeletedByExternalSystemName;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ItemEntity> _ItemEntity;
		
		private EntityRef<ScanProductDeleteReasonEntity> _ScanProductDeleteReasonEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnItemKeyChanging(System.Guid value);
    partial void OnItemKeyChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnLinkedByUserAccountKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLinkedByUserAccountKeyChanged();
    partial void OnLinkedUTCDateTimeChanging(System.DateTime value);
    partial void OnLinkedUTCDateTimeChanged();
    partial void OnLinkedLocalDateTimeChanging(System.DateTime value);
    partial void OnLinkedLocalDateTimeChanged();
    partial void OnVerifiedByUserAccountKeyChanging(System.Nullable<System.Guid> value);
    partial void OnVerifiedByUserAccountKeyChanged();
    partial void OnVerifiedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnVerifiedUTCDateTimeChanged();
    partial void OnVerifiedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnVerifiedLocalDateTimeChanged();
    partial void OnFromExternalSystemFlagChanging(bool value);
    partial void OnFromExternalSystemFlagChanged();
    partial void OnScanProductDeleteReasonInternalCodeChanging(string value);
    partial void OnScanProductDeleteReasonInternalCodeChanged();
    partial void OnOtherItemIDChanging(string value);
    partial void OnOtherItemIDChanged();
    partial void OnCreatedByExternalSystemNameChanging(string value);
    partial void OnCreatedByExternalSystemNameChanged();
    partial void OnDeletedByExternalSystemNameChanging(string value);
    partial void OnDeletedByExternalSystemNameChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ProductIDEntity()
		{
			this._ItemEntity = default(EntityRef<ItemEntity>);
			this._ScanProductDeleteReasonEntity = default(EntityRef<ScanProductDeleteReasonEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ProductIDKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					if (this._ItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedByUserAccountKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LinkedByUserAccountKey
		{
			get
			{
				return this._LinkedByUserAccountKey;
			}
			set
			{
				if ((this._LinkedByUserAccountKey != value))
				{
					this.OnLinkedByUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._LinkedByUserAccountKey = value;
					this.SendPropertyChanged("LinkedByUserAccountKey");
					this.OnLinkedByUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LinkedUTCDateTime
		{
			get
			{
				return this._LinkedUTCDateTime;
			}
			set
			{
				if ((this._LinkedUTCDateTime != value))
				{
					this.OnLinkedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LinkedUTCDateTime = value;
					this.SendPropertyChanged("LinkedUTCDateTime");
					this.OnLinkedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LinkedLocalDateTime
		{
			get
			{
				return this._LinkedLocalDateTime;
			}
			set
			{
				if ((this._LinkedLocalDateTime != value))
				{
					this.OnLinkedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LinkedLocalDateTime = value;
					this.SendPropertyChanged("LinkedLocalDateTime");
					this.OnLinkedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedByUserAccountKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> VerifiedByUserAccountKey
		{
			get
			{
				return this._VerifiedByUserAccountKey;
			}
			set
			{
				if ((this._VerifiedByUserAccountKey != value))
				{
					this.OnVerifiedByUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._VerifiedByUserAccountKey = value;
					this.SendPropertyChanged("VerifiedByUserAccountKey");
					this.OnVerifiedByUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> VerifiedUTCDateTime
		{
			get
			{
				return this._VerifiedUTCDateTime;
			}
			set
			{
				if ((this._VerifiedUTCDateTime != value))
				{
					this.OnVerifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._VerifiedUTCDateTime = value;
					this.SendPropertyChanged("VerifiedUTCDateTime");
					this.OnVerifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> VerifiedLocalDateTime
		{
			get
			{
				return this._VerifiedLocalDateTime;
			}
			set
			{
				if ((this._VerifiedLocalDateTime != value))
				{
					this.OnVerifiedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._VerifiedLocalDateTime = value;
					this.SendPropertyChanged("VerifiedLocalDateTime");
					this.OnVerifiedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromExternalSystemFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FromExternalSystemFlag
		{
			get
			{
				return this._FromExternalSystemFlag;
			}
			set
			{
				if ((this._FromExternalSystemFlag != value))
				{
					this.OnFromExternalSystemFlagChanging(value);
					this.SendPropertyChanging();
					this._FromExternalSystemFlag = value;
					this.SendPropertyChanged("FromExternalSystemFlag");
					this.OnFromExternalSystemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanProductDeleteReasonInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ScanProductDeleteReasonInternalCode
		{
			get
			{
				return this._ScanProductDeleteReasonInternalCode;
			}
			set
			{
				if ((this._ScanProductDeleteReasonInternalCode != value))
				{
					if (this._ScanProductDeleteReasonEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScanProductDeleteReasonInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ScanProductDeleteReasonInternalCode = value;
					this.SendPropertyChanged("ScanProductDeleteReasonInternalCode");
					this.OnScanProductDeleteReasonInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherItemID", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string OtherItemID
		{
			get
			{
				return this._OtherItemID;
			}
			set
			{
				if ((this._OtherItemID != value))
				{
					this.OnOtherItemIDChanging(value);
					this.SendPropertyChanging();
					this._OtherItemID = value;
					this.SendPropertyChanged("OtherItemID");
					this.OnOtherItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByExternalSystemName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedByExternalSystemName
		{
			get
			{
				return this._CreatedByExternalSystemName;
			}
			set
			{
				if ((this._CreatedByExternalSystemName != value))
				{
					this.OnCreatedByExternalSystemNameChanging(value);
					this.SendPropertyChanging();
					this._CreatedByExternalSystemName = value;
					this.SendPropertyChanged("CreatedByExternalSystemName");
					this.OnCreatedByExternalSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedByExternalSystemName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DeletedByExternalSystemName
		{
			get
			{
				return this._DeletedByExternalSystemName;
			}
			set
			{
				if ((this._DeletedByExternalSystemName != value))
				{
					this.OnDeletedByExternalSystemNameChanging(value);
					this.SendPropertyChanging();
					this._DeletedByExternalSystemName = value;
					this.SendPropertyChanged("DeletedByExternalSystemName");
					this.OnDeletedByExternalSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_ProductIDEntity", Storage="_ItemEntity", ThisKey="ItemKey", OtherKey="Key", IsForeignKey=true)]
		public ItemEntity ItemEntity
		{
			get
			{
				return this._ItemEntity.Entity;
			}
			set
			{
				ItemEntity previousValue = this._ItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemEntity.Entity = null;
						previousValue.ProductIDEntities.Remove(this);
					}
					this._ItemEntity.Entity = value;
					if ((value != null))
					{
						value.ProductIDEntities.Add(this);
						this._ItemKey = value.Key;
					}
					else
					{
						this._ItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScanProductDeleteReasonEntity_ProductIDEntity", Storage="_ScanProductDeleteReasonEntity", ThisKey="ScanProductDeleteReasonInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public ScanProductDeleteReasonEntity ScanProductDeleteReasonEntity
		{
			get
			{
				return this._ScanProductDeleteReasonEntity.Entity;
			}
			set
			{
				ScanProductDeleteReasonEntity previousValue = this._ScanProductDeleteReasonEntity.Entity;
				if (((previousValue != value) 
							|| (this._ScanProductDeleteReasonEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScanProductDeleteReasonEntity.Entity = null;
						previousValue.ProductIDEntities.Remove(this);
					}
					this._ScanProductDeleteReasonEntity.Entity = value;
					if ((value != null))
					{
						value.ProductIDEntities.Add(this);
						this._ScanProductDeleteReasonInternalCode = value.InternalCode;
					}
					else
					{
						this._ScanProductDeleteReasonInternalCode = default(string);
					}
					this.SendPropertyChanged("ScanProductDeleteReasonEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.ScanProductDeleteReason")]
	public partial class ScanProductDeleteReasonEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<ProductIDEntity> _ProductIDEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ScanProductDeleteReasonEntity()
		{
			this._ProductIDEntities = new EntitySet<ProductIDEntity>(new Action<ProductIDEntity>(this.attach_ProductIDEntities), new Action<ProductIDEntity>(this.detach_ProductIDEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ScanProductDeleteReasonInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScanProductDeleteReasonEntity_ProductIDEntity", Storage="_ProductIDEntities", ThisKey="InternalCode", OtherKey="ScanProductDeleteReasonInternalCode")]
		public EntitySet<ProductIDEntity> ProductIDEntities
		{
			get
			{
				return this._ProductIDEntities;
			}
			set
			{
				this._ProductIDEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductIDEntities(ProductIDEntity entity)
		{
			this.SendPropertyChanging();
			entity.ScanProductDeleteReasonEntity = this;
		}
		
		private void detach_ProductIDEntities(ProductIDEntity entity)
		{
			this.SendPropertyChanging();
			entity.ScanProductDeleteReasonEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_UserKitCurrent")]
	public partial class UserKitEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _UserAccountKey;
		
		private string _UserKitName;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<UserKitMemberEntity> _UserKitMemberEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnUserAccountKeyChanging(System.Guid value);
    partial void OnUserAccountKeyChanged();
    partial void OnUserKitNameChanging(string value);
    partial void OnUserKitNameChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserKitEntity()
		{
			this._UserKitMemberEntities = new EntitySet<UserKitMemberEntity>(new Action<UserKitMemberEntity>(this.attach_UserKitMemberEntities), new Action<UserKitMemberEntity>(this.detach_UserKitMemberEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserKitKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserKitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UserKitName
		{
			get
			{
				return this._UserKitName;
			}
			set
			{
				if ((this._UserKitName != value))
				{
					this.OnUserKitNameChanging(value);
					this.SendPropertyChanging();
					this._UserKitName = value;
					this.SendPropertyChanged("UserKitName");
					this.OnUserKitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserKitEntity_UserKitMemberEntity", Storage="_UserKitMemberEntities", ThisKey="Key", OtherKey="UserKitKey")]
		public EntitySet<UserKitMemberEntity> UserKitMemberEntities
		{
			get
			{
				return this._UserKitMemberEntities;
			}
			set
			{
				this._UserKitMemberEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserKitMemberEntities(UserKitMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserKitEntity = this;
		}
		
		private void detach_UserKitMemberEntities(UserKitMemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserKitEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_UserKitMemberCurrent")]
	public partial class UserKitMemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _UserKitKey;
		
		private System.Guid _ItemKey;
		
		private short _ItemMemberQuantity;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<UserKitEntity> _UserKitEntity;
		
		private EntityRef<ItemEntity> _ItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnUserKitKeyChanging(System.Guid value);
    partial void OnUserKitKeyChanged();
    partial void OnItemKeyChanging(System.Guid value);
    partial void OnItemKeyChanged();
    partial void OnItemMemberQuantityChanging(short value);
    partial void OnItemMemberQuantityChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserKitMemberEntity()
		{
			this._UserKitEntity = default(EntityRef<UserKitEntity>);
			this._ItemEntity = default(EntityRef<ItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserKitMemberKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserKitKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserKitKey
		{
			get
			{
				return this._UserKitKey;
			}
			set
			{
				if ((this._UserKitKey != value))
				{
					if (this._UserKitEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserKitKeyChanging(value);
					this.SendPropertyChanging();
					this._UserKitKey = value;
					this.SendPropertyChanged("UserKitKey");
					this.OnUserKitKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					if (this._ItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemMemberQuantity", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short ItemMemberQuantity
		{
			get
			{
				return this._ItemMemberQuantity;
			}
			set
			{
				if ((this._ItemMemberQuantity != value))
				{
					this.OnItemMemberQuantityChanging(value);
					this.SendPropertyChanging();
					this._ItemMemberQuantity = value;
					this.SendPropertyChanged("ItemMemberQuantity");
					this.OnItemMemberQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserKitEntity_UserKitMemberEntity", Storage="_UserKitEntity", ThisKey="UserKitKey", OtherKey="Key", IsForeignKey=true)]
		public UserKitEntity UserKitEntity
		{
			get
			{
				return this._UserKitEntity.Entity;
			}
			set
			{
				UserKitEntity previousValue = this._UserKitEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserKitEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserKitEntity.Entity = null;
						previousValue.UserKitMemberEntities.Remove(this);
					}
					this._UserKitEntity.Entity = value;
					if ((value != null))
					{
						value.UserKitMemberEntities.Add(this);
						this._UserKitKey = value.Key;
					}
					else
					{
						this._UserKitKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserKitEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemEntity_UserKitMemberEntity", Storage="_ItemEntity", ThisKey="ItemKey", OtherKey="Key", IsForeignKey=true)]
		public ItemEntity ItemEntity
		{
			get
			{
				return this._ItemEntity.Entity;
			}
			set
			{
				ItemEntity previousValue = this._ItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemEntity.Entity = null;
						previousValue.UserKitMemberEntities.Remove(this);
					}
					this._ItemEntity.Entity = value;
					if ((value != null))
					{
						value.UserKitMemberEntities.Add(this);
						this._ItemKey = value.Key;
					}
					else
					{
						this._ItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ItemTherapeuticClassResult
	{
		
		private System.Guid _TherapeuticClassMemberKey;
		
		private System.Guid _MedItemKey;
		
		private System.Guid _TherapeuticClassKey;
		
		private string _TherapeuticClassCode;
		
		private string _TherapeuticClassDescriptionText;
		
		public ItemTherapeuticClassResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapeuticClassMemberKey")]
		public System.Guid TherapeuticClassMemberKey
		{
			get
			{
				return this._TherapeuticClassMemberKey;
			}
			set
			{
				if ((this._TherapeuticClassMemberKey != value))
				{
					this._TherapeuticClassMemberKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey")]
		public System.Guid MedItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					this._MedItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapeuticClassKey")]
		public System.Guid TherapeuticClassKey
		{
			get
			{
				return this._TherapeuticClassKey;
			}
			set
			{
				if ((this._TherapeuticClassKey != value))
				{
					this._TherapeuticClassKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapeuticClassCode", CanBeNull=false)]
		public string TherapeuticClassCode
		{
			get
			{
				return this._TherapeuticClassCode;
			}
			set
			{
				if ((this._TherapeuticClassCode != value))
				{
					this._TherapeuticClassCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TherapeuticClassDescriptionText", CanBeNull=false)]
		public string TherapeuticClassDescriptionText
		{
			get
			{
				return this._TherapeuticClassDescriptionText;
			}
			set
			{
				if ((this._TherapeuticClassDescriptionText != value))
				{
					this._TherapeuticClassDescriptionText = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FacilityItemOverrideGroupResult
	{
		
		private System.Guid _OverrideGroupMemberKey;
		
		private System.Guid _FacilityItemKey;
		
		private System.Guid _OverrideGroupKey;
		
		private string _DisplayCode;
		
		private string _DescriptionText;
		
		private bool _ActiveFlag;
		
		public FacilityItemOverrideGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideGroupMemberKey")]
		public System.Guid OverrideGroupMemberKey
		{
			get
			{
				return this._OverrideGroupMemberKey;
			}
			set
			{
				if ((this._OverrideGroupMemberKey != value))
				{
					this._OverrideGroupMemberKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey")]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideGroupKey")]
		public System.Guid OverrideGroupKey
		{
			get
			{
				return this._OverrideGroupKey;
			}
			set
			{
				if ((this._OverrideGroupKey != value))
				{
					this._OverrideGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", CanBeNull=false)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this._DisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", CanBeNull=false)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this._DescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FacilityItemPickAreaResult
	{
		
		private System.Guid _FacilityItemPickAreaKey;
		
		private System.Guid _FacilityItemKey;
		
		private System.Guid _PickAreaKey;
		
		private string _PickAreaName;
		
		public FacilityItemPickAreaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemPickAreaKey")]
		public System.Guid FacilityItemPickAreaKey
		{
			get
			{
				return this._FacilityItemPickAreaKey;
			}
			set
			{
				if ((this._FacilityItemPickAreaKey != value))
				{
					this._FacilityItemPickAreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey")]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickAreaKey")]
		public System.Guid PickAreaKey
		{
			get
			{
				return this._PickAreaKey;
			}
			set
			{
				if ((this._PickAreaKey != value))
				{
					this._PickAreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickAreaName", CanBeNull=false)]
		public string PickAreaName
		{
			get
			{
				return this._PickAreaName;
			}
			set
			{
				if ((this._PickAreaName != value))
				{
					this._PickAreaName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FacilityItemPhysicalCapacityResult
	{
		
		private System.Guid _FacilityItemPhysicalCapacityKey;
		
		private System.Guid _FacilityItemKey;
		
		private string _StorageSpaceSizeInternalCode;
		
		private string _StorageSpaceSizeDisplayCode;
		
		private string _StorageSpaceSizeDescriptionText;
		
		private System.Nullable<int> _MaximumQuantity;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<int> _PhysicalMaximumQuantity;
		
		private System.Nullable<int> _ParQuantity;
		
		private System.Nullable<int> _RefillPointQuantity;
		
		public FacilityItemPhysicalCapacityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemPhysicalCapacityKey")]
		public System.Guid FacilityItemPhysicalCapacityKey
		{
			get
			{
				return this._FacilityItemPhysicalCapacityKey;
			}
			set
			{
				if ((this._FacilityItemPhysicalCapacityKey != value))
				{
					this._FacilityItemPhysicalCapacityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey")]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceSizeInternalCode", CanBeNull=false)]
		public string StorageSpaceSizeInternalCode
		{
			get
			{
				return this._StorageSpaceSizeInternalCode;
			}
			set
			{
				if ((this._StorageSpaceSizeInternalCode != value))
				{
					this._StorageSpaceSizeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_StorageSpaceSizeDisplayCode", CanBeNull=false)]
		public string StorageSpaceSizeDisplayCode
		{
			get
			{
				return this._StorageSpaceSizeDisplayCode;
			}
			set
			{
				if ((this._StorageSpaceSizeDisplayCode != value))
				{
					this._StorageSpaceSizeDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceSizeDescriptionText", CanBeNull=false)]
		public string StorageSpaceSizeDescriptionText
		{
			get
			{
				return this._StorageSpaceSizeDescriptionText;
			}
			set
			{
				if ((this._StorageSpaceSizeDescriptionText != value))
				{
					this._StorageSpaceSizeDescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumQuantity")]
		public System.Nullable<int> MaximumQuantity
		{
			get
			{
				return this._MaximumQuantity;
			}
			set
			{
				if ((this._MaximumQuantity != value))
				{
					this._MaximumQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalMaximumQuantity", DbType="Int")]
		public System.Nullable<int> PhysicalMaximumQuantity
		{
			get
			{
				return this._PhysicalMaximumQuantity;
			}
			set
			{
				if ((this._PhysicalMaximumQuantity != value))
				{
					this._PhysicalMaximumQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParQuantity", DbType="Int")]
		public System.Nullable<int> ParQuantity
		{
			get
			{
				return this._ParQuantity;
			}
			set
			{
				if ((this._ParQuantity != value))
				{
					this._ParQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillPointQuantity", DbType="Int")]
		public System.Nullable<int> RefillPointQuantity
		{
			get
			{
				return this._RefillPointQuantity;
			}
			set
			{
				if ((this._RefillPointQuantity != value))
				{
					this._RefillPointQuantity = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FacilityItemClinicalDataSubjectResult
	{
		
		private System.Guid _ClinicalDataSubjectFacilityItemFunctionKey;
		
		private System.Guid _FacilityItemKey;
		
		private string _PatientCareFunctionInternalCode;
		
		private System.Guid _ClinicalDataSubjectKey;
		
		public FacilityItemClinicalDataSubjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectFacilityItemFunctionKey")]
		public System.Guid ClinicalDataSubjectFacilityItemFunctionKey
		{
			get
			{
				return this._ClinicalDataSubjectFacilityItemFunctionKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectFacilityItemFunctionKey != value))
				{
					this._ClinicalDataSubjectFacilityItemFunctionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey")]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientCareFunctionInternalCode", CanBeNull=false)]
		public string PatientCareFunctionInternalCode
		{
			get
			{
				return this._PatientCareFunctionInternalCode;
			}
			set
			{
				if ((this._PatientCareFunctionInternalCode != value))
				{
					this._PatientCareFunctionInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectKey")]
		public System.Guid ClinicalDataSubjectKey
		{
			get
			{
				return this._ClinicalDataSubjectKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectKey != value))
				{
					this._ClinicalDataSubjectKey = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FacilityItemBlockedDispensingDeviceResult
	{
		
		private System.Guid _FacilityItemPickAreaKey;
		
		private System.Guid _FacilityItemKey;
		
		private System.Guid _DispensingDeviceKey;
		
		public FacilityItemBlockedDispensingDeviceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemPickAreaKey")]
		public System.Guid BlockedFacilityItemDispensingDeviceKey
		{
			get
			{
				return this._FacilityItemPickAreaKey;
			}
			set
			{
				if ((this._FacilityItemPickAreaKey != value))
				{
					this._FacilityItemPickAreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey")]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey")]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ItemVariableDoseGroupMemberResult
	{
		
		private System.Guid _VariableDoseGroupMemberKey;
		
		private System.Guid _VariableDoseGroupKey;
		
		private System.Guid _MedItemKey;
		
		private string _ItemID;
		
		private string _GenericName;
		
		private string _PureGeneridName;
		
		private string _BrandName;
		
		private System.Nullable<System.Guid> _DosageFormKey;
		
		private string _DosageFormCode;
		
		private System.Nullable<System.Guid> _DosageFormDescriptionText;
		
		private string _EquivalencyDosageFormGroupDisplayCode;
		
		private int _RankValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public ItemVariableDoseGroupMemberResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableDoseGroupMemberKey")]
		public System.Guid VariableDoseGroupMemberKey
		{
			get
			{
				return this._VariableDoseGroupMemberKey;
			}
			set
			{
				if ((this._VariableDoseGroupMemberKey != value))
				{
					this._VariableDoseGroupMemberKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableDoseGroupKey")]
		public System.Guid VariableDoseGroupKey
		{
			get
			{
				return this._VariableDoseGroupKey;
			}
			set
			{
				if ((this._VariableDoseGroupKey != value))
				{
					this._VariableDoseGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey")]
		public System.Guid MedItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					this._MedItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", CanBeNull=false)]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericName", CanBeNull=false)]
		public string MedDisplayName
		{
			get
			{
				return this._GenericName;
			}
			set
			{
				if ((this._GenericName != value))
				{
					this._GenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PureGeneridName", CanBeNull=false)]
		public string PureGenericName
		{
			get
			{
				return this._PureGeneridName;
			}
			set
			{
				if ((this._PureGeneridName != value))
				{
					this._PureGeneridName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormKey")]
		public System.Nullable<System.Guid> DosageFormKey
		{
			get
			{
				return this._DosageFormKey;
			}
			set
			{
				if ((this._DosageFormKey != value))
				{
					this._DosageFormKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormCode", CanBeNull=false)]
		public string DosageFormCode
		{
			get
			{
				return this._DosageFormCode;
			}
			set
			{
				if ((this._DosageFormCode != value))
				{
					this._DosageFormCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormDescriptionText")]
		public System.Nullable<System.Guid> EquivalencyDosageFormGroupKey
		{
			get
			{
				return this._DosageFormDescriptionText;
			}
			set
			{
				if ((this._DosageFormDescriptionText != value))
				{
					this._DosageFormDescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalencyDosageFormGroupDisplayCode", CanBeNull=false)]
		public string EquivalencyDosageFormGroupDisplayCode
		{
			get
			{
				return this._EquivalencyDosageFormGroupDisplayCode;
			}
			set
			{
				if ((this._EquivalencyDosageFormGroupDisplayCode != value))
				{
					this._EquivalencyDosageFormGroupDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankValue")]
		public int RankValue
		{
			get
			{
				return this._RankValue;
			}
			set
			{
				if ((this._RankValue != value))
				{
					this._RankValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ItemEquivalencySetResult
	{
		
		private System.Guid _ItemEquivalencySetKey;
		
		private System.Guid _ItemKey;
		
		private bool _ApprovedFlag;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public ItemEquivalencySetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemEquivalencySetKey")]
		public System.Guid ItemEquivalencySetKey
		{
			get
			{
				return this._ItemEquivalencySetKey;
			}
			set
			{
				if ((this._ItemEquivalencySetKey != value))
				{
					this._ItemEquivalencySetKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey")]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this._ItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedFlag")]
		public bool ApprovedFlag
		{
			get
			{
				return this._ApprovedFlag;
			}
			set
			{
				if ((this._ApprovedFlag != value))
				{
					this._ApprovedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ItemEquivalencyResult
	{
		
		private System.Guid _ItemEquivalencyKey;
		
		private System.Guid _ItemEquivalencySetKey;
		
		private System.Guid _EquivalentItemKey;
		
		private string _EquivalentItemID;
		
		private string _EquivalentItemGenericName;
		
		private string _EquivalentItemPureGenericName;
		
		private string _EquivalentItemBrandName;
		
		private string _EquivalentItemDosageFormCode;
		
		private short _EquivalentItemQuantity;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public ItemEquivalencyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemEquivalencyKey")]
		public System.Guid ItemEquivalencyKey
		{
			get
			{
				return this._ItemEquivalencyKey;
			}
			set
			{
				if ((this._ItemEquivalencyKey != value))
				{
					this._ItemEquivalencyKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemEquivalencySetKey")]
		public System.Guid ItemEquivalencySetKey
		{
			get
			{
				return this._ItemEquivalencySetKey;
			}
			set
			{
				if ((this._ItemEquivalencySetKey != value))
				{
					this._ItemEquivalencySetKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalentItemKey")]
		public System.Guid EquivalentItemKey
		{
			get
			{
				return this._EquivalentItemKey;
			}
			set
			{
				if ((this._EquivalentItemKey != value))
				{
					this._EquivalentItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalentItemID", CanBeNull=false)]
		public string EquivalentItemID
		{
			get
			{
				return this._EquivalentItemID;
			}
			set
			{
				if ((this._EquivalentItemID != value))
				{
					this._EquivalentItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalentItemGenericName", CanBeNull=false)]
		public string EquivalentItemMedDisplayName
		{
			get
			{
				return this._EquivalentItemGenericName;
			}
			set
			{
				if ((this._EquivalentItemGenericName != value))
				{
					this._EquivalentItemGenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalentItemPureGenericName", CanBeNull=false)]
		public string EquivalentItemPureGenericName
		{
			get
			{
				return this._EquivalentItemPureGenericName;
			}
			set
			{
				if ((this._EquivalentItemPureGenericName != value))
				{
					this._EquivalentItemPureGenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalentItemBrandName", CanBeNull=false)]
		public string EquivalentItemBrandName
		{
			get
			{
				return this._EquivalentItemBrandName;
			}
			set
			{
				if ((this._EquivalentItemBrandName != value))
				{
					this._EquivalentItemBrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalentItemDosageFormCode", CanBeNull=false)]
		public string EquivalentItemDosageFormCode
		{
			get
			{
				return this._EquivalentItemDosageFormCode;
			}
			set
			{
				if ((this._EquivalentItemDosageFormCode != value))
				{
					this._EquivalentItemDosageFormCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalentItemQuantity")]
		public short EquivalentItemQuantity
		{
			get
			{
				return this._EquivalentItemQuantity;
			}
			set
			{
				if ((this._EquivalentItemQuantity != value))
				{
					this._EquivalentItemQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_ComboComponentCurrent")]
	public partial class ComboComponentEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ComboComponentSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _ComboFacilityItemKey;
		
		private System.Guid _ComponentFacilityItemKey;
		
		private System.Nullable<short> _ComponentQuantity;
		
		private bool _ChargeComponentFlag;
		
		private bool _MultiplierFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<ComboComponentAdminRouteEntity> _ComboComponentAdminRouteEntities;
		
		private EntityRef<FacilityItemEntity> _ComboFacilityItemEntity;
		
		private EntityRef<FacilityItemEntity> _ComponentFacilityItemEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnComboComponentSnapshotKeyChanging(System.Guid value);
    partial void OnComboComponentSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnComboFacilityItemKeyChanging(System.Guid value);
    partial void OnComboFacilityItemKeyChanged();
    partial void OnComponentFacilityItemKeyChanging(System.Guid value);
    partial void OnComponentFacilityItemKeyChanged();
    partial void OnComponentQuantityChanging(System.Nullable<short> value);
    partial void OnComponentQuantityChanged();
    partial void OnChargeComponentFlagChanging(bool value);
    partial void OnChargeComponentFlagChanged();
    partial void OnMultiplierFlagChanging(bool value);
    partial void OnMultiplierFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ComboComponentEntity()
		{
			this._ComboComponentAdminRouteEntities = new EntitySet<ComboComponentAdminRouteEntity>(new Action<ComboComponentAdminRouteEntity>(this.attach_ComboComponentAdminRouteEntities), new Action<ComboComponentAdminRouteEntity>(this.detach_ComboComponentAdminRouteEntities));
			this._ComboFacilityItemEntity = default(EntityRef<FacilityItemEntity>);
			this._ComponentFacilityItemEntity = default(EntityRef<FacilityItemEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ComboComponentKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboComponentSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ComboComponentSnapshotKey
		{
			get
			{
				return this._ComboComponentSnapshotKey;
			}
			set
			{
				if ((this._ComboComponentSnapshotKey != value))
				{
					this.OnComboComponentSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboComponentSnapshotKey = value;
					this.SendPropertyChanged("ComboComponentSnapshotKey");
					this.OnComboComponentSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboFacilityItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ComboFacilityItemKey
		{
			get
			{
				return this._ComboFacilityItemKey;
			}
			set
			{
				if ((this._ComboFacilityItemKey != value))
				{
					if (this._ComboFacilityItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComboFacilityItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboFacilityItemKey = value;
					this.SendPropertyChanged("ComboFacilityItemKey");
					this.OnComboFacilityItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentFacilityItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ComponentFacilityItemKey
		{
			get
			{
				return this._ComponentFacilityItemKey;
			}
			set
			{
				if ((this._ComponentFacilityItemKey != value))
				{
					if (this._ComponentFacilityItemEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComponentFacilityItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ComponentFacilityItemKey = value;
					this.SendPropertyChanged("ComponentFacilityItemKey");
					this.OnComponentFacilityItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentQuantity", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> ComponentQuantity
		{
			get
			{
				return this._ComponentQuantity;
			}
			set
			{
				if ((this._ComponentQuantity != value))
				{
					this.OnComponentQuantityChanging(value);
					this.SendPropertyChanging();
					this._ComponentQuantity = value;
					this.SendPropertyChanged("ComponentQuantity");
					this.OnComponentQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeComponentFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ChargeComponentFlag
		{
			get
			{
				return this._ChargeComponentFlag;
			}
			set
			{
				if ((this._ChargeComponentFlag != value))
				{
					this.OnChargeComponentFlagChanging(value);
					this.SendPropertyChanging();
					this._ChargeComponentFlag = value;
					this.SendPropertyChanged("ChargeComponentFlag");
					this.OnChargeComponentFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiplierFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MultiplierFlag
		{
			get
			{
				return this._MultiplierFlag;
			}
			set
			{
				if ((this._MultiplierFlag != value))
				{
					this.OnMultiplierFlagChanging(value);
					this.SendPropertyChanging();
					this._MultiplierFlag = value;
					this.SendPropertyChanged("MultiplierFlag");
					this.OnMultiplierFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComboComponentEntity_ComboComponentAdminRouteEntity", Storage="_ComboComponentAdminRouteEntities", ThisKey="Key", OtherKey="ComboComponentKey")]
		public EntitySet<ComboComponentAdminRouteEntity> ComboComponentAdminRouteEntities
		{
			get
			{
				return this._ComboComponentAdminRouteEntities;
			}
			set
			{
				this._ComboComponentAdminRouteEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_ComboComponentEntity", Storage="_ComboFacilityItemEntity", ThisKey="ComboFacilityItemKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityItemEntity ComboFacilityItemEntity
		{
			get
			{
				return this._ComboFacilityItemEntity.Entity;
			}
			set
			{
				FacilityItemEntity previousValue = this._ComboFacilityItemEntity.Entity;
				if (((previousValue != value) 
							|| (this._ComboFacilityItemEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComboFacilityItemEntity.Entity = null;
						previousValue.ComboComponentEntities.Remove(this);
					}
					this._ComboFacilityItemEntity.Entity = value;
					if ((value != null))
					{
						value.ComboComponentEntities.Add(this);
						this._ComboFacilityItemKey = value.Key;
					}
					else
					{
						this._ComboFacilityItemKey = default(System.Guid);
					}
					this.SendPropertyChanged("ComboFacilityItemEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacilityItemEntity_ComboComponentEntity1", Storage="_ComponentFacilityItemEntity", ThisKey="ComponentFacilityItemKey", OtherKey="Key", IsForeignKey=true)]
		public FacilityItemEntity ComponentFacilityItemEntity
		{
			get
			{
				return this._ComponentFacilityItemEntity.Entity;
			}
			set
			{
				if ((this._ComponentFacilityItemEntity.Entity != value))
				{
					this.SendPropertyChanging();
					this._ComponentFacilityItemEntity.Entity = value;
					this.SendPropertyChanged("ComponentFacilityItemEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComboComponentAdminRouteEntities(ComboComponentAdminRouteEntity entity)
		{
			this.SendPropertyChanging();
			entity.ComboComponentEntity = this;
		}
		
		private void detach_ComboComponentAdminRouteEntities(ComboComponentAdminRouteEntity entity)
		{
			this.SendPropertyChanging();
			entity.ComboComponentEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_ComboComponentAdminRouteCurrent")]
	public partial class ComboComponentAdminRouteEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ComboComponentKey;
		
		private System.Guid _AdminRouteKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ComboComponentEntity> _ComboComponentEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnComboComponentKeyChanging(System.Guid value);
    partial void OnComboComponentKeyChanged();
    partial void OnAdminRouteKeyChanging(System.Guid value);
    partial void OnAdminRouteKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ComboComponentAdminRouteEntity()
		{
			this._ComboComponentEntity = default(EntityRef<ComboComponentEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ComboComponentAdminRouteKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboComponentKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ComboComponentKey
		{
			get
			{
				return this._ComboComponentKey;
			}
			set
			{
				if ((this._ComboComponentKey != value))
				{
					if (this._ComboComponentEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComboComponentKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboComponentKey = value;
					this.SendPropertyChanged("ComboComponentKey");
					this.OnComboComponentKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminRouteKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AdminRouteKey
		{
			get
			{
				return this._AdminRouteKey;
			}
			set
			{
				if ((this._AdminRouteKey != value))
				{
					this.OnAdminRouteKeyChanging(value);
					this.SendPropertyChanging();
					this._AdminRouteKey = value;
					this.SendPropertyChanged("AdminRouteKey");
					this.OnAdminRouteKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComboComponentEntity_ComboComponentAdminRouteEntity", Storage="_ComboComponentEntity", ThisKey="ComboComponentKey", OtherKey="Key", IsForeignKey=true)]
		public ComboComponentEntity ComboComponentEntity
		{
			get
			{
				return this._ComboComponentEntity.Entity;
			}
			set
			{
				ComboComponentEntity previousValue = this._ComboComponentEntity.Entity;
				if (((previousValue != value) 
							|| (this._ComboComponentEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComboComponentEntity.Entity = null;
						previousValue.ComboComponentAdminRouteEntities.Remove(this);
					}
					this._ComboComponentEntity.Entity = value;
					if ((value != null))
					{
						value.ComboComponentAdminRouteEntities.Add(this);
						this._ComboComponentKey = value.Key;
					}
					else
					{
						this._ComboComponentKey = default(System.Guid);
					}
					this.SendPropertyChanged("ComboComponentEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.MedFailoverReturnMode")]
	public partial class MedFailoverReturnModeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityItemEntity> _FacilityItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public MedFailoverReturnModeEntity()
		{
			this._FacilityItemEntities = new EntitySet<FacilityItemEntity>(new Action<FacilityItemEntity>(this.attach_FacilityItemEntities), new Action<FacilityItemEntity>(this.detach_FacilityItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MedFailoverReturnModeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedFailoverReturnModeEntity_FacilityItemEntity", Storage="_FacilityItemEntities", ThisKey="InternalCode", OtherKey="MedFailoverReturnModeInternalCode")]
		public EntitySet<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this._FacilityItemEntities;
			}
			set
			{
				this._FacilityItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedFailoverReturnModeEntity = this;
		}
		
		private void detach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.MedFailoverReturnModeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FacilityItemComboComponentResult
	{
		
		private System.Guid _ComboComponentKey;
		
		private System.Guid _ComboFacilityItemKey;
		
		private System.Guid _ComponentFacilityItemKey;
		
		private string _ComponentMedDisplayName;
		
		private System.Nullable<short> _ComponentQuantity;
		
		private bool _ChargeComponentFlag;
		
		private bool _MultiplierFlag;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public FacilityItemComboComponentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboComponentKey")]
		public System.Guid ComboComponentKey
		{
			get
			{
				return this._ComboComponentKey;
			}
			set
			{
				if ((this._ComboComponentKey != value))
				{
					this._ComboComponentKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboFacilityItemKey")]
		public System.Guid ComboFacilityItemKey
		{
			get
			{
				return this._ComboFacilityItemKey;
			}
			set
			{
				if ((this._ComboFacilityItemKey != value))
				{
					this._ComboFacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentFacilityItemKey")]
		public System.Guid ComponentFacilityItemKey
		{
			get
			{
				return this._ComponentFacilityItemKey;
			}
			set
			{
				if ((this._ComponentFacilityItemKey != value))
				{
					this._ComponentFacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentMedDisplayName", CanBeNull=false)]
		public string ComponentMedDisplayName
		{
			get
			{
				return this._ComponentMedDisplayName;
			}
			set
			{
				if ((this._ComponentMedDisplayName != value))
				{
					this._ComponentMedDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentQuantity")]
		public System.Nullable<short> ComponentQuantity
		{
			get
			{
				return this._ComponentQuantity;
			}
			set
			{
				if ((this._ComponentQuantity != value))
				{
					this._ComponentQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeComponentFlag")]
		public bool ChargeComponentFlag
		{
			get
			{
				return this._ChargeComponentFlag;
			}
			set
			{
				if ((this._ChargeComponentFlag != value))
				{
					this._ChargeComponentFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiplierFlag")]
		public bool MultiplierFlag
		{
			get
			{
				return this._MultiplierFlag;
			}
			set
			{
				if ((this._MultiplierFlag != value))
				{
					this._MultiplierFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ComboComponentAdminRouteResult
	{
		
		private System.Guid _ComboComponentAdminRouteKey;
		
		private System.Guid _ComboComponentKey;
		
		private System.Guid _AdminRouteKey;
		
		private string _AdminRouteDisplayCode;
		
		private string _AdminRouteDescription;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public ComboComponentAdminRouteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboComponentAdminRouteKey")]
		public System.Guid ComboComponentAdminRouteKey
		{
			get
			{
				return this._ComboComponentAdminRouteKey;
			}
			set
			{
				if ((this._ComboComponentAdminRouteKey != value))
				{
					this._ComboComponentAdminRouteKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboComponentKey")]
		public System.Guid ComboComponentKey
		{
			get
			{
				return this._ComboComponentKey;
			}
			set
			{
				if ((this._ComboComponentKey != value))
				{
					this._ComboComponentKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminRouteKey")]
		public System.Guid AdminRouteKey
		{
			get
			{
				return this._AdminRouteKey;
			}
			set
			{
				if ((this._AdminRouteKey != value))
				{
					this._AdminRouteKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminRouteDisplayCode", CanBeNull=false)]
		public string AdminRouteDisplayCode
		{
			get
			{
				return this._AdminRouteDisplayCode;
			}
			set
			{
				if ((this._AdminRouteDisplayCode != value))
				{
					this._AdminRouteDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminRouteDescription", CanBeNull=false)]
		public string AdminRouteDescription
		{
			get
			{
				return this._AdminRouteDescription;
			}
			set
			{
				if ((this._AdminRouteDescription != value))
				{
					this._AdminRouteDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_FormularyTemplateCurrent")]
	public partial class FormularyTemplateEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FormularyTemplateSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _ExternalSystemKey;
		
		private string _FormularyTemplateName;
		
		private string _DescriptionText;
		
		private bool _OutdateTrackingFlag;
		
		private string _VerifyCountModeInternalCode;
		
		private bool _VerifyCountAnesthesiaDispensingFlag;
		
		private bool _WitnessOnDispenseFlag;
		
		private bool _WitnessOnReturnFlag;
		
		private bool _WitnessOnDisposeFlag;
		
		private bool _WitnessOnLoadRefillFlag;
		
		private bool _WitnessOnUnloadFlag;
		
		private bool _WitnessOnOverrideFlag;
		
		private bool _WitnessOnOutdateFlag;
		
		private bool _WitnessOnInventoryFlag;
		
		private bool _WitnessOnEmptyReturnBinFlag;
		
		private bool _WitnessOnDestockFlag;
		
		private bool _WitnessOnRxCheckFlag;
		
		private bool _ScanOnLoadRefillFlag;
		
		private bool _ScanOnRemoveFlag;
		
		private bool _ScanOnReturnFlag;
		
		private bool _RequireLotIDOnRemoveFlag;
		
		private bool _RequireLotIDOnReturnFlag;
		
		private bool _RequireSerialIDOnRemoveFlag;
		
		private bool _RequireSerialIDOnReturnFlag;
		
		private bool _RequireExpirationDateOnRemoveFlag;
		
		private bool _RequireExpirationDateOnReturnFlag;
		
		private bool _RequireInventoryReferenceIDFlag;
		
		private bool _ReverificationFlag;
		
		private System.Nullable<short> _TooCloseRemoveDurationAmount;
		
		private System.Nullable<System.Guid> _SecurityGroupKey;
		
		private bool _ActiveFlag;
		
		private bool _AutoResolveDiscrepancyFlag;
		
		private bool _ChargeableFlag;
		
		private bool _HighCostFlag;
		
		private bool _AllowSplittingFlag;
		
		private bool _HighRiskFlag;
		
		private bool _TrackInventoryQuantityFlag;
		
		private bool _MultiDoseFlag;
		
		private bool _BackorderedFlag;
		
		private string _MedReturnModeInternalCode;
		
		private string _MedFailoverReturnModeInternalCode;
		
		private string _ReplenishmentScanModeInternalCode;
		
		private string _PharmacyNotesText;
		
		private string _NursingNotesText;
		
		private System.Nullable<byte> _CriticalLowPercentage;
		
		private bool _StockOutNoticeFlag;
		
		private bool _OMNLNoticeFlag;
		
		private bool _AnesthesiaMyItemsFlag;
		
		private bool _ResolveUndocumentedWasteFlag;
		
		private System.Nullable<System.Guid> _DistributorKey;
		
		private bool _RxCheckFlag;
		
		private bool _PrintOnRemoveFlag;
		
		private bool _ShowConversionOnRemoveFlag;
		
		private System.Nullable<bool> _ScanAllOnPickFlag;
		
		private bool _DoOnceOnRemoveFlag;
		
		private bool _ScanOnCheckFlag;
		
		private string _CheckScanModeInternalCode;
		
		private string _AutoMedLabelModeInternalCode;
		
		private string _CountCUBIEEjectModeInternalCode;
		
		private bool _PharmacyOrderDispenseQuantityFlag;
		
		private bool _InjectableFlag;
		
		private string _GCSMMedReturnModeInternalCode;
		
		private string _GCSMVerifyCountModeInternalCode;
		
		private string _GCSMCountCUBIEEjectModeInternalCode;
		
		private bool _GCSMOutdateTrackingFlag;
		
		private bool _GCSMRequireLotNumberWhenRecallFlag;
		
		private bool _GCSMRequireInventoryReferenceNumberFlag;
		
		private bool _GCSMWitnessOnOutdateFlag;
		
		private bool _GCSMWitnessOnReturnFlag;
		
		private bool _GCSMWitnessOnAutorestockFlag;
		
		private bool _GCSMWitnessOnCompoundingFlag;
		
		private bool _GCSMWitnessOnDestructionBinFlag;
		
		private bool _GCSMWitnessOnDiscrepancyResolutionFlag;
		
		private bool _GCSMWitnessOnInventoryCountFlag;
		
		private bool _GCSMWitnessOnIssueFlag;
		
		private bool _GCSMWitnessOnPrescriptionFlag;
		
		private bool _GCSMWitnessOnRecallFlag;
		
		private bool _GCSMWitnessOnReceiveFlag;
		
		private bool _GCSMWitnessOnReverseCompoundingFlag;
		
		private bool _GCSMWitnessOnSellFlag;
		
		private bool _GCSMWitnessOnStockTransferFlag;
		
		private bool _GCSMWitnessOnUnloadFlag;
		
		private bool _GCSMWitnessOnWasteFlag;
		
		private bool _GCSMScanOnCompoundingFlag;
		
		private bool _GCSMScanOnReturnFlag;
		
		private bool _GCSMScanOnAutorestockFlag;
		
		private bool _GCSMScanOnIssueFlag;
		
		private bool _GCSMScanOnPrescriptionFlag;
		
		private bool _GCSMScanOnReceiveFlag;
		
		private bool _GCSMScanOnSellFlag;
		
		private bool _GCSMScanOnStockTransferFlag;
		
		private System.Nullable<byte> _GCSMCriticalLowPercentage;
		
		private bool _GCSMPrintOnReceiveFlag;
		
		private bool _GCSMPrintSingleMedSheetFlag;
		
		private bool _GCSMPrintDripSheetFlag;
		
		private bool _GCSMPrintMaximumRowsFlag;
		
		private short _GCSMAdditionalLabelsPrintedQuantity;
		
		private bool _GCSMStockOutNoticeFlag;
		
		private System.Nullable<System.Guid> _GCSMDistributorKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<short> _GCSMTotalDeviceParDurationAmount;
		
		private System.Nullable<short> _GCSMTotalParDurationAmount;
		
		private bool _GCSMWitnessOnAddToDestructionBinFlag;
		
		private bool _GCSMWitnessOnAccessToDestructionBinFlag;
		
		private bool _GCSMRequireOriginDestinationFlag;
		
		private EntitySet<MedClassEntity> _MedClassEntities;
		
		private EntitySet<FormularyTemplateOverrideGroupEntity> _FormularyTemplateOverrideGroupEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFormularyTemplateSnapshotKeyChanging(System.Guid value);
    partial void OnFormularyTemplateSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnExternalSystemKeyChanging(System.Guid value);
    partial void OnExternalSystemKeyChanged();
    partial void OnFormularyTemplateNameChanging(string value);
    partial void OnFormularyTemplateNameChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnOutdateTrackingFlagChanging(bool value);
    partial void OnOutdateTrackingFlagChanged();
    partial void OnVerifyCountModeInternalCodeChanging(string value);
    partial void OnVerifyCountModeInternalCodeChanged();
    partial void OnVerifyCountAnesthesiaDispensingFlagChanging(bool value);
    partial void OnVerifyCountAnesthesiaDispensingFlagChanged();
    partial void OnWitnessOnDispenseFlagChanging(bool value);
    partial void OnWitnessOnDispenseFlagChanged();
    partial void OnWitnessOnReturnFlagChanging(bool value);
    partial void OnWitnessOnReturnFlagChanged();
    partial void OnWitnessOnDisposeFlagChanging(bool value);
    partial void OnWitnessOnDisposeFlagChanged();
    partial void OnWitnessOnLoadRefillFlagChanging(bool value);
    partial void OnWitnessOnLoadRefillFlagChanged();
    partial void OnWitnessOnUnloadFlagChanging(bool value);
    partial void OnWitnessOnUnloadFlagChanged();
    partial void OnWitnessOnOverrideFlagChanging(bool value);
    partial void OnWitnessOnOverrideFlagChanged();
    partial void OnWitnessOnOutdateFlagChanging(bool value);
    partial void OnWitnessOnOutdateFlagChanged();
    partial void OnWitnessOnInventoryFlagChanging(bool value);
    partial void OnWitnessOnInventoryFlagChanged();
    partial void OnWitnessOnEmptyReturnBinFlagChanging(bool value);
    partial void OnWitnessOnEmptyReturnBinFlagChanged();
    partial void OnWitnessOnDestockFlagChanging(bool value);
    partial void OnWitnessOnDestockFlagChanged();
    partial void OnWitnessOnRxCheckFlagChanging(bool value);
    partial void OnWitnessOnRxCheckFlagChanged();
    partial void OnScanOnLoadRefillFlagChanging(bool value);
    partial void OnScanOnLoadRefillFlagChanged();
    partial void OnScanOnRemoveFlagChanging(bool value);
    partial void OnScanOnRemoveFlagChanged();
    partial void OnScanOnReturnFlagChanging(bool value);
    partial void OnScanOnReturnFlagChanged();
    partial void OnRequireLotIDOnRemoveFlagChanging(bool value);
    partial void OnRequireLotIDOnRemoveFlagChanged();
    partial void OnRequireLotIDOnReturnFlagChanging(bool value);
    partial void OnRequireLotIDOnReturnFlagChanged();
    partial void OnRequireSerialIDOnRemoveFlagChanging(bool value);
    partial void OnRequireSerialIDOnRemoveFlagChanged();
    partial void OnRequireSerialIDOnReturnFlagChanging(bool value);
    partial void OnRequireSerialIDOnReturnFlagChanged();
    partial void OnRequireExpirationDateOnRemoveFlagChanging(bool value);
    partial void OnRequireExpirationDateOnRemoveFlagChanged();
    partial void OnRequireExpirationDateOnReturnFlagChanging(bool value);
    partial void OnRequireExpirationDateOnReturnFlagChanged();
    partial void OnRequireInventoryReferenceIDFlagChanging(bool value);
    partial void OnRequireInventoryReferenceIDFlagChanged();
    partial void OnReverificationFlagChanging(bool value);
    partial void OnReverificationFlagChanged();
    partial void OnTooCloseRemoveDurationAmountChanging(System.Nullable<short> value);
    partial void OnTooCloseRemoveDurationAmountChanged();
    partial void OnSecurityGroupKeyChanging(System.Nullable<System.Guid> value);
    partial void OnSecurityGroupKeyChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnAutoResolveDiscrepancyFlagChanging(bool value);
    partial void OnAutoResolveDiscrepancyFlagChanged();
    partial void OnChargeableFlagChanging(bool value);
    partial void OnChargeableFlagChanged();
    partial void OnHighCostFlagChanging(bool value);
    partial void OnHighCostFlagChanged();
    partial void OnAllowSplittingFlagChanging(bool value);
    partial void OnAllowSplittingFlagChanged();
    partial void OnHighRiskFlagChanging(bool value);
    partial void OnHighRiskFlagChanged();
    partial void OnTrackInventoryQuantityFlagChanging(bool value);
    partial void OnTrackInventoryQuantityFlagChanged();
    partial void OnMultiDoseFlagChanging(bool value);
    partial void OnMultiDoseFlagChanged();
    partial void OnBackorderedFlagChanging(bool value);
    partial void OnBackorderedFlagChanged();
    partial void OnMedReturnModeInternalCodeChanging(string value);
    partial void OnMedReturnModeInternalCodeChanged();
    partial void OnMedFailoverReturnModeInternalCodeChanging(string value);
    partial void OnMedFailoverReturnModeInternalCodeChanged();
    partial void OnReplenishmentScanModeInternalCodeChanging(string value);
    partial void OnReplenishmentScanModeInternalCodeChanged();
    partial void OnPharmacyNotesTextChanging(string value);
    partial void OnPharmacyNotesTextChanged();
    partial void OnNursingNotesTextChanging(string value);
    partial void OnNursingNotesTextChanged();
    partial void OnCriticalLowPercentageChanging(System.Nullable<byte> value);
    partial void OnCriticalLowPercentageChanged();
    partial void OnStockOutNoticeFlagChanging(bool value);
    partial void OnStockOutNoticeFlagChanged();
    partial void OnOMNLNoticeFlagChanging(bool value);
    partial void OnOMNLNoticeFlagChanged();
    partial void OnAnesthesiaMyItemsFlagChanging(bool value);
    partial void OnAnesthesiaMyItemsFlagChanged();
    partial void OnResolveUndocumentedWasteFlagChanging(bool value);
    partial void OnResolveUndocumentedWasteFlagChanged();
    partial void OnDistributorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDistributorKeyChanged();
    partial void OnRxCheckFlagChanging(bool value);
    partial void OnRxCheckFlagChanged();
    partial void OnPrintOnRemoveFlagChanging(bool value);
    partial void OnPrintOnRemoveFlagChanged();
    partial void OnShowConversionOnRemoveFlagChanging(bool value);
    partial void OnShowConversionOnRemoveFlagChanged();
    partial void OnScanAllOnPickFlagChanging(System.Nullable<bool> value);
    partial void OnScanAllOnPickFlagChanged();
    partial void OnDoOnceOnRemoveFlagChanging(bool value);
    partial void OnDoOnceOnRemoveFlagChanged();
    partial void OnScanOnCheckFlagChanging(bool value);
    partial void OnScanOnCheckFlagChanged();
    partial void OnCheckScanModeInternalCodeChanging(string value);
    partial void OnCheckScanModeInternalCodeChanged();
    partial void OnAutoMedLabelModeInternalCodeChanging(string value);
    partial void OnAutoMedLabelModeInternalCodeChanged();
    partial void OnCountCUBIEEjectModeInternalCodeChanging(string value);
    partial void OnCountCUBIEEjectModeInternalCodeChanged();
    partial void OnPharmacyOrderDispenseQuantityFlagChanging(bool value);
    partial void OnPharmacyOrderDispenseQuantityFlagChanged();
    partial void OnInjectableFlagChanging(bool value);
    partial void OnInjectableFlagChanged();
    partial void OnGCSMMedReturnModeInternalCodeChanging(string value);
    partial void OnGCSMMedReturnModeInternalCodeChanged();
    partial void OnGCSMVerifyCountModeInternalCodeChanging(string value);
    partial void OnGCSMVerifyCountModeInternalCodeChanged();
    partial void OnGCSMCountCUBIEEjectModeInternalCodeChanging(string value);
    partial void OnGCSMCountCUBIEEjectModeInternalCodeChanged();
    partial void OnGCSMOutdateTrackingFlagChanging(bool value);
    partial void OnGCSMOutdateTrackingFlagChanged();
    partial void OnGCSMRequireLotNumberWhenRecallFlagChanging(bool value);
    partial void OnGCSMRequireLotNumberWhenRecallFlagChanged();
    partial void OnGCSMRequireInventoryReferenceNumberFlagChanging(bool value);
    partial void OnGCSMRequireInventoryReferenceNumberFlagChanged();
    partial void OnGCSMWitnessOnOutdateFlagChanging(bool value);
    partial void OnGCSMWitnessOnOutdateFlagChanged();
    partial void OnGCSMWitnessOnReturnFlagChanging(bool value);
    partial void OnGCSMWitnessOnReturnFlagChanged();
    partial void OnGCSMWitnessOnAutorestockFlagChanging(bool value);
    partial void OnGCSMWitnessOnAutorestockFlagChanged();
    partial void OnGCSMWitnessOnCompoundingFlagChanging(bool value);
    partial void OnGCSMWitnessOnCompoundingFlagChanged();
    partial void OnGCSMWitnessOnDestructionBinFlagChanging(bool value);
    partial void OnGCSMWitnessOnDestructionBinFlagChanged();
    partial void OnGCSMWitnessOnDiscrepancyResolutionFlagChanging(bool value);
    partial void OnGCSMWitnessOnDiscrepancyResolutionFlagChanged();
    partial void OnGCSMWitnessOnInventoryCountFlagChanging(bool value);
    partial void OnGCSMWitnessOnInventoryCountFlagChanged();
    partial void OnGCSMWitnessOnIssueFlagChanging(bool value);
    partial void OnGCSMWitnessOnIssueFlagChanged();
    partial void OnGCSMWitnessOnPrescriptionFlagChanging(bool value);
    partial void OnGCSMWitnessOnPrescriptionFlagChanged();
    partial void OnGCSMWitnessOnRecallFlagChanging(bool value);
    partial void OnGCSMWitnessOnRecallFlagChanged();
    partial void OnGCSMWitnessOnReceiveFlagChanging(bool value);
    partial void OnGCSMWitnessOnReceiveFlagChanged();
    partial void OnGCSMWitnessOnReverseCompoundingFlagChanging(bool value);
    partial void OnGCSMWitnessOnReverseCompoundingFlagChanged();
    partial void OnGCSMWitnessOnSellFlagChanging(bool value);
    partial void OnGCSMWitnessOnSellFlagChanged();
    partial void OnGCSMWitnessOnStockTransferFlagChanging(bool value);
    partial void OnGCSMWitnessOnStockTransferFlagChanged();
    partial void OnGCSMWitnessOnUnloadFlagChanging(bool value);
    partial void OnGCSMWitnessOnUnloadFlagChanged();
    partial void OnGCSMWitnessOnWasteFlagChanging(bool value);
    partial void OnGCSMWitnessOnWasteFlagChanged();
    partial void OnGCSMScanOnCompoundingFlagChanging(bool value);
    partial void OnGCSMScanOnCompoundingFlagChanged();
    partial void OnGCSMScanOnReturnFlagChanging(bool value);
    partial void OnGCSMScanOnReturnFlagChanged();
    partial void OnGCSMScanOnAutorestockFlagChanging(bool value);
    partial void OnGCSMScanOnAutorestockFlagChanged();
    partial void OnGCSMScanOnIssueFlagChanging(bool value);
    partial void OnGCSMScanOnIssueFlagChanged();
    partial void OnGCSMScanOnPrescriptionFlagChanging(bool value);
    partial void OnGCSMScanOnPrescriptionFlagChanged();
    partial void OnGCSMScanOnReceiveFlagChanging(bool value);
    partial void OnGCSMScanOnReceiveFlagChanged();
    partial void OnGCSMScanOnSellFlagChanging(bool value);
    partial void OnGCSMScanOnSellFlagChanged();
    partial void OnGCSMScanOnStockTransferFlagChanging(bool value);
    partial void OnGCSMScanOnStockTransferFlagChanged();
    partial void OnGCSMCriticalLowPercentageChanging(System.Nullable<byte> value);
    partial void OnGCSMCriticalLowPercentageChanged();
    partial void OnGCSMPrintOnReceiveFlagChanging(bool value);
    partial void OnGCSMPrintOnReceiveFlagChanged();
    partial void OnGCSMPrintSingleMedSheetFlagChanging(bool value);
    partial void OnGCSMPrintSingleMedSheetFlagChanged();
    partial void OnGCSMPrintDripSheetFlagChanging(bool value);
    partial void OnGCSMPrintDripSheetFlagChanged();
    partial void OnGCSMPrintMaximumRowsFlagChanging(bool value);
    partial void OnGCSMPrintMaximumRowsFlagChanged();
    partial void OnGCSMAdditionalLabelsPrintedQuantityChanging(short value);
    partial void OnGCSMAdditionalLabelsPrintedQuantityChanged();
    partial void OnGCSMStockOutNoticeFlagChanging(bool value);
    partial void OnGCSMStockOutNoticeFlagChanged();
    partial void OnGCSMDistributorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnGCSMDistributorKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnGCSMTotalDeviceParDurationAmountChanging(System.Nullable<short> value);
    partial void OnGCSMTotalDeviceParDurationAmountChanged();
    partial void OnGCSMTotalParDurationAmountChanging(System.Nullable<short> value);
    partial void OnGCSMTotalParDurationAmountChanged();
    partial void OnGCSMWitnessOnAddToDestructionBinFlagChanging(bool value);
    partial void OnGCSMWitnessOnAddToDestructionBinFlagChanged();
    partial void OnGCSMWitnessOnAccessToDestructionBinFlagChanging(bool value);
    partial void OnGCSMWitnessOnAccessToDestructionBinFlagChanged();
    partial void OnGCSMRequireOriginDestinationFlagChanging(bool value);
    partial void OnGCSMRequireOriginDestinationFlagChanged();
    #endregion
		
		public FormularyTemplateEntity()
		{
			this._MedClassEntities = new EntitySet<MedClassEntity>(new Action<MedClassEntity>(this.attach_MedClassEntities), new Action<MedClassEntity>(this.detach_MedClassEntities));
			this._FormularyTemplateOverrideGroupEntities = new EntitySet<FormularyTemplateOverrideGroupEntity>(new Action<FormularyTemplateOverrideGroupEntity>(this.attach_FormularyTemplateOverrideGroupEntities), new Action<FormularyTemplateOverrideGroupEntity>(this.detach_FormularyTemplateOverrideGroupEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FormularyTemplateKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormularyTemplateSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FormularyTemplateSnapshotKey
		{
			get
			{
				return this._FormularyTemplateSnapshotKey;
			}
			set
			{
				if ((this._FormularyTemplateSnapshotKey != value))
				{
					this.OnFormularyTemplateSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._FormularyTemplateSnapshotKey = value;
					this.SendPropertyChanged("FormularyTemplateSnapshotKey");
					this.OnFormularyTemplateSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormularyTemplateName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string FormularyTemplateName
		{
			get
			{
				return this._FormularyTemplateName;
			}
			set
			{
				if ((this._FormularyTemplateName != value))
				{
					this.OnFormularyTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._FormularyTemplateName = value;
					this.SendPropertyChanged("FormularyTemplateName");
					this.OnFormularyTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdateTrackingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OutdateTrackingFlag
		{
			get
			{
				return this._OutdateTrackingFlag;
			}
			set
			{
				if ((this._OutdateTrackingFlag != value))
				{
					this.OnOutdateTrackingFlagChanging(value);
					this.SendPropertyChanging();
					this._OutdateTrackingFlag = value;
					this.SendPropertyChanged("OutdateTrackingFlag");
					this.OnOutdateTrackingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCountModeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string VerifyCountModeInternalCode
		{
			get
			{
				return this._VerifyCountModeInternalCode;
			}
			set
			{
				if ((this._VerifyCountModeInternalCode != value))
				{
					this.OnVerifyCountModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._VerifyCountModeInternalCode = value;
					this.SendPropertyChanged("VerifyCountModeInternalCode");
					this.OnVerifyCountModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCountAnesthesiaDispensingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool VerifyCountAnesthesiaDispensingFlag
		{
			get
			{
				return this._VerifyCountAnesthesiaDispensingFlag;
			}
			set
			{
				if ((this._VerifyCountAnesthesiaDispensingFlag != value))
				{
					this.OnVerifyCountAnesthesiaDispensingFlagChanging(value);
					this.SendPropertyChanging();
					this._VerifyCountAnesthesiaDispensingFlag = value;
					this.SendPropertyChanged("VerifyCountAnesthesiaDispensingFlag");
					this.OnVerifyCountAnesthesiaDispensingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDispenseFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnDispenseFlag
		{
			get
			{
				return this._WitnessOnDispenseFlag;
			}
			set
			{
				if ((this._WitnessOnDispenseFlag != value))
				{
					this.OnWitnessOnDispenseFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnDispenseFlag = value;
					this.SendPropertyChanged("WitnessOnDispenseFlag");
					this.OnWitnessOnDispenseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnReturnFlag
		{
			get
			{
				return this._WitnessOnReturnFlag;
			}
			set
			{
				if ((this._WitnessOnReturnFlag != value))
				{
					this.OnWitnessOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnReturnFlag = value;
					this.SendPropertyChanged("WitnessOnReturnFlag");
					this.OnWitnessOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDisposeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnDisposeFlag
		{
			get
			{
				return this._WitnessOnDisposeFlag;
			}
			set
			{
				if ((this._WitnessOnDisposeFlag != value))
				{
					this.OnWitnessOnDisposeFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnDisposeFlag = value;
					this.SendPropertyChanged("WitnessOnDisposeFlag");
					this.OnWitnessOnDisposeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnLoadRefillFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnLoadRefillFlag
		{
			get
			{
				return this._WitnessOnLoadRefillFlag;
			}
			set
			{
				if ((this._WitnessOnLoadRefillFlag != value))
				{
					this.OnWitnessOnLoadRefillFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnLoadRefillFlag = value;
					this.SendPropertyChanged("WitnessOnLoadRefillFlag");
					this.OnWitnessOnLoadRefillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnUnloadFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnUnloadFlag
		{
			get
			{
				return this._WitnessOnUnloadFlag;
			}
			set
			{
				if ((this._WitnessOnUnloadFlag != value))
				{
					this.OnWitnessOnUnloadFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnUnloadFlag = value;
					this.SendPropertyChanged("WitnessOnUnloadFlag");
					this.OnWitnessOnUnloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnOverrideFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnOverrideFlag
		{
			get
			{
				return this._WitnessOnOverrideFlag;
			}
			set
			{
				if ((this._WitnessOnOverrideFlag != value))
				{
					this.OnWitnessOnOverrideFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnOverrideFlag = value;
					this.SendPropertyChanged("WitnessOnOverrideFlag");
					this.OnWitnessOnOverrideFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnOutdateFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnOutdateFlag
		{
			get
			{
				return this._WitnessOnOutdateFlag;
			}
			set
			{
				if ((this._WitnessOnOutdateFlag != value))
				{
					this.OnWitnessOnOutdateFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnOutdateFlag = value;
					this.SendPropertyChanged("WitnessOnOutdateFlag");
					this.OnWitnessOnOutdateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnInventoryFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnInventoryFlag
		{
			get
			{
				return this._WitnessOnInventoryFlag;
			}
			set
			{
				if ((this._WitnessOnInventoryFlag != value))
				{
					this.OnWitnessOnInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnInventoryFlag = value;
					this.SendPropertyChanged("WitnessOnInventoryFlag");
					this.OnWitnessOnInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnEmptyReturnBinFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnEmptyReturnBinFlag
		{
			get
			{
				return this._WitnessOnEmptyReturnBinFlag;
			}
			set
			{
				if ((this._WitnessOnEmptyReturnBinFlag != value))
				{
					this.OnWitnessOnEmptyReturnBinFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnEmptyReturnBinFlag = value;
					this.SendPropertyChanged("WitnessOnEmptyReturnBinFlag");
					this.OnWitnessOnEmptyReturnBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDestockFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool WitnessOnDestockFlag
		{
			get
			{
				return this._WitnessOnDestockFlag;
			}
			set
			{
				if ((this._WitnessOnDestockFlag != value))
				{
					this.OnWitnessOnDestockFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnDestockFlag = value;
					this.SendPropertyChanged("WitnessOnDestockFlag");
					this.OnWitnessOnDestockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnRxCheckFlag", DbType="Bit NOT NULL")]
		public bool WitnessOnRxCheckFlag
		{
			get
			{
				return this._WitnessOnRxCheckFlag;
			}
			set
			{
				if ((this._WitnessOnRxCheckFlag != value))
				{
					this.OnWitnessOnRxCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._WitnessOnRxCheckFlag = value;
					this.SendPropertyChanged("WitnessOnRxCheckFlag");
					this.OnWitnessOnRxCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnLoadRefillFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ScanOnLoadRefillFlag
		{
			get
			{
				return this._ScanOnLoadRefillFlag;
			}
			set
			{
				if ((this._ScanOnLoadRefillFlag != value))
				{
					this.OnScanOnLoadRefillFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnLoadRefillFlag = value;
					this.SendPropertyChanged("ScanOnLoadRefillFlag");
					this.OnScanOnLoadRefillFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ScanOnRemoveFlag
		{
			get
			{
				return this._ScanOnRemoveFlag;
			}
			set
			{
				if ((this._ScanOnRemoveFlag != value))
				{
					this.OnScanOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnRemoveFlag = value;
					this.SendPropertyChanged("ScanOnRemoveFlag");
					this.OnScanOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ScanOnReturnFlag
		{
			get
			{
				return this._ScanOnReturnFlag;
			}
			set
			{
				if ((this._ScanOnReturnFlag != value))
				{
					this.OnScanOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnReturnFlag = value;
					this.SendPropertyChanged("ScanOnReturnFlag");
					this.OnScanOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLotIDOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireLotIDOnRemoveFlag
		{
			get
			{
				return this._RequireLotIDOnRemoveFlag;
			}
			set
			{
				if ((this._RequireLotIDOnRemoveFlag != value))
				{
					this.OnRequireLotIDOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireLotIDOnRemoveFlag = value;
					this.SendPropertyChanged("RequireLotIDOnRemoveFlag");
					this.OnRequireLotIDOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLotIDOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireLotIDOnReturnFlag
		{
			get
			{
				return this._RequireLotIDOnReturnFlag;
			}
			set
			{
				if ((this._RequireLotIDOnReturnFlag != value))
				{
					this.OnRequireLotIDOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireLotIDOnReturnFlag = value;
					this.SendPropertyChanged("RequireLotIDOnReturnFlag");
					this.OnRequireLotIDOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSerialIDOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireSerialIDOnRemoveFlag
		{
			get
			{
				return this._RequireSerialIDOnRemoveFlag;
			}
			set
			{
				if ((this._RequireSerialIDOnRemoveFlag != value))
				{
					this.OnRequireSerialIDOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireSerialIDOnRemoveFlag = value;
					this.SendPropertyChanged("RequireSerialIDOnRemoveFlag");
					this.OnRequireSerialIDOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSerialIDOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireSerialIDOnReturnFlag
		{
			get
			{
				return this._RequireSerialIDOnReturnFlag;
			}
			set
			{
				if ((this._RequireSerialIDOnReturnFlag != value))
				{
					this.OnRequireSerialIDOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireSerialIDOnReturnFlag = value;
					this.SendPropertyChanged("RequireSerialIDOnReturnFlag");
					this.OnRequireSerialIDOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireExpirationDateOnRemoveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireExpirationDateOnRemoveFlag
		{
			get
			{
				return this._RequireExpirationDateOnRemoveFlag;
			}
			set
			{
				if ((this._RequireExpirationDateOnRemoveFlag != value))
				{
					this.OnRequireExpirationDateOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireExpirationDateOnRemoveFlag = value;
					this.SendPropertyChanged("RequireExpirationDateOnRemoveFlag");
					this.OnRequireExpirationDateOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireExpirationDateOnReturnFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RequireExpirationDateOnReturnFlag
		{
			get
			{
				return this._RequireExpirationDateOnReturnFlag;
			}
			set
			{
				if ((this._RequireExpirationDateOnReturnFlag != value))
				{
					this.OnRequireExpirationDateOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireExpirationDateOnReturnFlag = value;
					this.SendPropertyChanged("RequireExpirationDateOnReturnFlag");
					this.OnRequireExpirationDateOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireInventoryReferenceIDFlag", DbType="Bit NOT NULL")]
		public bool RequireInventoryReferenceIDFlag
		{
			get
			{
				return this._RequireInventoryReferenceIDFlag;
			}
			set
			{
				if ((this._RequireInventoryReferenceIDFlag != value))
				{
					this.OnRequireInventoryReferenceIDFlagChanging(value);
					this.SendPropertyChanging();
					this._RequireInventoryReferenceIDFlag = value;
					this.SendPropertyChanged("RequireInventoryReferenceIDFlag");
					this.OnRequireInventoryReferenceIDFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReverificationFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ReverificationFlag
		{
			get
			{
				return this._ReverificationFlag;
			}
			set
			{
				if ((this._ReverificationFlag != value))
				{
					this.OnReverificationFlagChanging(value);
					this.SendPropertyChanging();
					this._ReverificationFlag = value;
					this.SendPropertyChanged("ReverificationFlag");
					this.OnReverificationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseRemoveDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TooCloseRemoveDurationAmount
		{
			get
			{
				return this._TooCloseRemoveDurationAmount;
			}
			set
			{
				if ((this._TooCloseRemoveDurationAmount != value))
				{
					this.OnTooCloseRemoveDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._TooCloseRemoveDurationAmount = value;
					this.SendPropertyChanged("TooCloseRemoveDurationAmount");
					this.OnTooCloseRemoveDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> SecurityGroupKey
		{
			get
			{
				return this._SecurityGroupKey;
			}
			set
			{
				if ((this._SecurityGroupKey != value))
				{
					this.OnSecurityGroupKeyChanging(value);
					this.SendPropertyChanging();
					this._SecurityGroupKey = value;
					this.SendPropertyChanged("SecurityGroupKey");
					this.OnSecurityGroupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoResolveDiscrepancyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AutoResolveDiscrepancyFlag
		{
			get
			{
				return this._AutoResolveDiscrepancyFlag;
			}
			set
			{
				if ((this._AutoResolveDiscrepancyFlag != value))
				{
					this.OnAutoResolveDiscrepancyFlagChanging(value);
					this.SendPropertyChanging();
					this._AutoResolveDiscrepancyFlag = value;
					this.SendPropertyChanged("AutoResolveDiscrepancyFlag");
					this.OnAutoResolveDiscrepancyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeableFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ChargeableFlag
		{
			get
			{
				return this._ChargeableFlag;
			}
			set
			{
				if ((this._ChargeableFlag != value))
				{
					this.OnChargeableFlagChanging(value);
					this.SendPropertyChanging();
					this._ChargeableFlag = value;
					this.SendPropertyChanged("ChargeableFlag");
					this.OnChargeableFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighCostFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool HighCostFlag
		{
			get
			{
				return this._HighCostFlag;
			}
			set
			{
				if ((this._HighCostFlag != value))
				{
					this.OnHighCostFlagChanging(value);
					this.SendPropertyChanging();
					this._HighCostFlag = value;
					this.SendPropertyChanged("HighCostFlag");
					this.OnHighCostFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSplittingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllowSplittingFlag
		{
			get
			{
				return this._AllowSplittingFlag;
			}
			set
			{
				if ((this._AllowSplittingFlag != value))
				{
					this.OnAllowSplittingFlagChanging(value);
					this.SendPropertyChanging();
					this._AllowSplittingFlag = value;
					this.SendPropertyChanged("AllowSplittingFlag");
					this.OnAllowSplittingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighRiskFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool HighRiskFlag
		{
			get
			{
				return this._HighRiskFlag;
			}
			set
			{
				if ((this._HighRiskFlag != value))
				{
					this.OnHighRiskFlagChanging(value);
					this.SendPropertyChanging();
					this._HighRiskFlag = value;
					this.SendPropertyChanged("HighRiskFlag");
					this.OnHighRiskFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackInventoryQuantityFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TrackInventoryQuantityFlag
		{
			get
			{
				return this._TrackInventoryQuantityFlag;
			}
			set
			{
				if ((this._TrackInventoryQuantityFlag != value))
				{
					this.OnTrackInventoryQuantityFlagChanging(value);
					this.SendPropertyChanging();
					this._TrackInventoryQuantityFlag = value;
					this.SendPropertyChanged("TrackInventoryQuantityFlag");
					this.OnTrackInventoryQuantityFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiDoseFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool MultiDoseFlag
		{
			get
			{
				return this._MultiDoseFlag;
			}
			set
			{
				if ((this._MultiDoseFlag != value))
				{
					this.OnMultiDoseFlagChanging(value);
					this.SendPropertyChanging();
					this._MultiDoseFlag = value;
					this.SendPropertyChanged("MultiDoseFlag");
					this.OnMultiDoseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackorderedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool BackorderedFlag
		{
			get
			{
				return this._BackorderedFlag;
			}
			set
			{
				if ((this._BackorderedFlag != value))
				{
					this.OnBackorderedFlagChanging(value);
					this.SendPropertyChanging();
					this._BackorderedFlag = value;
					this.SendPropertyChanged("BackorderedFlag");
					this.OnBackorderedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedReturnModeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string MedReturnModeInternalCode
		{
			get
			{
				return this._MedReturnModeInternalCode;
			}
			set
			{
				if ((this._MedReturnModeInternalCode != value))
				{
					this.OnMedReturnModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._MedReturnModeInternalCode = value;
					this.SendPropertyChanged("MedReturnModeInternalCode");
					this.OnMedReturnModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedFailoverReturnModeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string MedFailoverReturnModeInternalCode
		{
			get
			{
				return this._MedFailoverReturnModeInternalCode;
			}
			set
			{
				if ((this._MedFailoverReturnModeInternalCode != value))
				{
					this.OnMedFailoverReturnModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._MedFailoverReturnModeInternalCode = value;
					this.SendPropertyChanged("MedFailoverReturnModeInternalCode");
					this.OnMedFailoverReturnModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentScanModeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ReplenishmentScanModeInternalCode
		{
			get
			{
				return this._ReplenishmentScanModeInternalCode;
			}
			set
			{
				if ((this._ReplenishmentScanModeInternalCode != value))
				{
					this.OnReplenishmentScanModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ReplenishmentScanModeInternalCode = value;
					this.SendPropertyChanged("ReplenishmentScanModeInternalCode");
					this.OnReplenishmentScanModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyNotesText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string PharmacyNotesText
		{
			get
			{
				return this._PharmacyNotesText;
			}
			set
			{
				if ((this._PharmacyNotesText != value))
				{
					this.OnPharmacyNotesTextChanging(value);
					this.SendPropertyChanging();
					this._PharmacyNotesText = value;
					this.SendPropertyChanged("PharmacyNotesText");
					this.OnPharmacyNotesTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NursingNotesText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string NursingNotesText
		{
			get
			{
				return this._NursingNotesText;
			}
			set
			{
				if ((this._NursingNotesText != value))
				{
					this.OnNursingNotesTextChanging(value);
					this.SendPropertyChanging();
					this._NursingNotesText = value;
					this.SendPropertyChanged("NursingNotesText");
					this.OnNursingNotesTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalLowPercentage", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> CriticalLowPercentage
		{
			get
			{
				return this._CriticalLowPercentage;
			}
			set
			{
				if ((this._CriticalLowPercentage != value))
				{
					this.OnCriticalLowPercentageChanging(value);
					this.SendPropertyChanging();
					this._CriticalLowPercentage = value;
					this.SendPropertyChanged("CriticalLowPercentage");
					this.OnCriticalLowPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockOutNoticeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool StockOutNoticeFlag
		{
			get
			{
				return this._StockOutNoticeFlag;
			}
			set
			{
				if ((this._StockOutNoticeFlag != value))
				{
					this.OnStockOutNoticeFlagChanging(value);
					this.SendPropertyChanging();
					this._StockOutNoticeFlag = value;
					this.SendPropertyChanged("StockOutNoticeFlag");
					this.OnStockOutNoticeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMNLNoticeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OMNLNoticeFlag
		{
			get
			{
				return this._OMNLNoticeFlag;
			}
			set
			{
				if ((this._OMNLNoticeFlag != value))
				{
					this.OnOMNLNoticeFlagChanging(value);
					this.SendPropertyChanging();
					this._OMNLNoticeFlag = value;
					this.SendPropertyChanged("OMNLNoticeFlag");
					this.OnOMNLNoticeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaMyItemsFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AnesthesiaMyItemsFlag
		{
			get
			{
				return this._AnesthesiaMyItemsFlag;
			}
			set
			{
				if ((this._AnesthesiaMyItemsFlag != value))
				{
					this.OnAnesthesiaMyItemsFlagChanging(value);
					this.SendPropertyChanging();
					this._AnesthesiaMyItemsFlag = value;
					this.SendPropertyChanged("AnesthesiaMyItemsFlag");
					this.OnAnesthesiaMyItemsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolveUndocumentedWasteFlag", DbType="Bit NOT NULL")]
		public bool ResolveUndocumentedWasteFlag
		{
			get
			{
				return this._ResolveUndocumentedWasteFlag;
			}
			set
			{
				if ((this._ResolveUndocumentedWasteFlag != value))
				{
					this.OnResolveUndocumentedWasteFlagChanging(value);
					this.SendPropertyChanging();
					this._ResolveUndocumentedWasteFlag = value;
					this.SendPropertyChanged("ResolveUndocumentedWasteFlag");
					this.OnResolveUndocumentedWasteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DistributorKey
		{
			get
			{
				return this._DistributorKey;
			}
			set
			{
				if ((this._DistributorKey != value))
				{
					this.OnDistributorKeyChanging(value);
					this.SendPropertyChanging();
					this._DistributorKey = value;
					this.SendPropertyChanged("DistributorKey");
					this.OnDistributorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxCheckFlag", DbType="Bit NOT NULL")]
		public bool RxCheckFlag
		{
			get
			{
				return this._RxCheckFlag;
			}
			set
			{
				if ((this._RxCheckFlag != value))
				{
					this.OnRxCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._RxCheckFlag = value;
					this.SendPropertyChanged("RxCheckFlag");
					this.OnRxCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintOnRemoveFlag", DbType="Bit NOT NULL")]
		public bool PrintOnRemoveFlag
		{
			get
			{
				return this._PrintOnRemoveFlag;
			}
			set
			{
				if ((this._PrintOnRemoveFlag != value))
				{
					this.OnPrintOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintOnRemoveFlag = value;
					this.SendPropertyChanged("PrintOnRemoveFlag");
					this.OnPrintOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowConversionOnRemoveFlag", DbType="Bit NOT NULL")]
		public bool ShowConversionOnRemoveFlag
		{
			get
			{
				return this._ShowConversionOnRemoveFlag;
			}
			set
			{
				if ((this._ShowConversionOnRemoveFlag != value))
				{
					this.OnShowConversionOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._ShowConversionOnRemoveFlag = value;
					this.SendPropertyChanged("ShowConversionOnRemoveFlag");
					this.OnShowConversionOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanAllOnPickFlag", DbType="Bit")]
		public System.Nullable<bool> ScanAllOnPickFlag
		{
			get
			{
				return this._ScanAllOnPickFlag;
			}
			set
			{
				if ((this._ScanAllOnPickFlag != value))
				{
					this.OnScanAllOnPickFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanAllOnPickFlag = value;
					this.SendPropertyChanged("ScanAllOnPickFlag");
					this.OnScanAllOnPickFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoOnceOnRemoveFlag", DbType="Bit NOT NULL")]
		public bool DoOnceOnRemoveFlag
		{
			get
			{
				return this._DoOnceOnRemoveFlag;
			}
			set
			{
				if ((this._DoOnceOnRemoveFlag != value))
				{
					this.OnDoOnceOnRemoveFlagChanging(value);
					this.SendPropertyChanging();
					this._DoOnceOnRemoveFlag = value;
					this.SendPropertyChanged("DoOnceOnRemoveFlag");
					this.OnDoOnceOnRemoveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnCheckFlag", DbType="Bit NOT NULL")]
		public bool ScanOnCheckFlag
		{
			get
			{
				return this._ScanOnCheckFlag;
			}
			set
			{
				if ((this._ScanOnCheckFlag != value))
				{
					this.OnScanOnCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._ScanOnCheckFlag = value;
					this.SendPropertyChanged("ScanOnCheckFlag");
					this.OnScanOnCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckScanModeInternalCode", DbType="VarChar(10)")]
		public string CheckScanModeInternalCode
		{
			get
			{
				return this._CheckScanModeInternalCode;
			}
			set
			{
				if ((this._CheckScanModeInternalCode != value))
				{
					this.OnCheckScanModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._CheckScanModeInternalCode = value;
					this.SendPropertyChanged("CheckScanModeInternalCode");
					this.OnCheckScanModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoMedLabelModeInternalCode", DbType="VarChar(10)")]
		public string AutoMedLabelModeInternalCode
		{
			get
			{
				return this._AutoMedLabelModeInternalCode;
			}
			set
			{
				if ((this._AutoMedLabelModeInternalCode != value))
				{
					this.OnAutoMedLabelModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._AutoMedLabelModeInternalCode = value;
					this.SendPropertyChanged("AutoMedLabelModeInternalCode");
					this.OnAutoMedLabelModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountCUBIEEjectModeInternalCode", DbType="VarChar(10)")]
		public string CountCUBIEEjectModeInternalCode
		{
			get
			{
				return this._CountCUBIEEjectModeInternalCode;
			}
			set
			{
				if ((this._CountCUBIEEjectModeInternalCode != value))
				{
					this.OnCountCUBIEEjectModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._CountCUBIEEjectModeInternalCode = value;
					this.SendPropertyChanged("CountCUBIEEjectModeInternalCode");
					this.OnCountCUBIEEjectModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderDispenseQuantityFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PharmacyOrderDispenseQuantityFlag
		{
			get
			{
				return this._PharmacyOrderDispenseQuantityFlag;
			}
			set
			{
				if ((this._PharmacyOrderDispenseQuantityFlag != value))
				{
					this.OnPharmacyOrderDispenseQuantityFlagChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderDispenseQuantityFlag = value;
					this.SendPropertyChanged("PharmacyOrderDispenseQuantityFlag");
					this.OnPharmacyOrderDispenseQuantityFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InjectableFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool InjectableFlag
		{
			get
			{
				return this._InjectableFlag;
			}
			set
			{
				if ((this._InjectableFlag != value))
				{
					this.OnInjectableFlagChanging(value);
					this.SendPropertyChanging();
					this._InjectableFlag = value;
					this.SendPropertyChanged("InjectableFlag");
					this.OnInjectableFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMMedReturnModeInternalCode", DbType="VarChar(10)")]
		public string GCSMMedReturnModeInternalCode
		{
			get
			{
				return this._GCSMMedReturnModeInternalCode;
			}
			set
			{
				if ((this._GCSMMedReturnModeInternalCode != value))
				{
					this.OnGCSMMedReturnModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._GCSMMedReturnModeInternalCode = value;
					this.SendPropertyChanged("GCSMMedReturnModeInternalCode");
					this.OnGCSMMedReturnModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMVerifyCountModeInternalCode", DbType="VarChar(10)")]
		public string GCSMVerifyCountModeInternalCode
		{
			get
			{
				return this._GCSMVerifyCountModeInternalCode;
			}
			set
			{
				if ((this._GCSMVerifyCountModeInternalCode != value))
				{
					this.OnGCSMVerifyCountModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._GCSMVerifyCountModeInternalCode = value;
					this.SendPropertyChanged("GCSMVerifyCountModeInternalCode");
					this.OnGCSMVerifyCountModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCountCUBIEEjectModeInternalCode", DbType="VarChar(10)")]
		public string GCSMCountCUBIEEjectModeInternalCode
		{
			get
			{
				return this._GCSMCountCUBIEEjectModeInternalCode;
			}
			set
			{
				if ((this._GCSMCountCUBIEEjectModeInternalCode != value))
				{
					this.OnGCSMCountCUBIEEjectModeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._GCSMCountCUBIEEjectModeInternalCode = value;
					this.SendPropertyChanged("GCSMCountCUBIEEjectModeInternalCode");
					this.OnGCSMCountCUBIEEjectModeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMOutdateTrackingFlag", DbType="Bit NOT NULL")]
		public bool GCSMOutdateTrackingFlag
		{
			get
			{
				return this._GCSMOutdateTrackingFlag;
			}
			set
			{
				if ((this._GCSMOutdateTrackingFlag != value))
				{
					this.OnGCSMOutdateTrackingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMOutdateTrackingFlag = value;
					this.SendPropertyChanged("GCSMOutdateTrackingFlag");
					this.OnGCSMOutdateTrackingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMRequireLotNumberWhenRecallFlag", DbType="Bit NOT NULL")]
		public bool GCSMRequireLotNumberWhenRecallFlag
		{
			get
			{
				return this._GCSMRequireLotNumberWhenRecallFlag;
			}
			set
			{
				if ((this._GCSMRequireLotNumberWhenRecallFlag != value))
				{
					this.OnGCSMRequireLotNumberWhenRecallFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMRequireLotNumberWhenRecallFlag = value;
					this.SendPropertyChanged("GCSMRequireLotNumberWhenRecallFlag");
					this.OnGCSMRequireLotNumberWhenRecallFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMRequireInventoryReferenceNumberFlag", DbType="Bit NOT NULL")]
		public bool GCSMRequireInventoryReferenceNumberFlag
		{
			get
			{
				return this._GCSMRequireInventoryReferenceNumberFlag;
			}
			set
			{
				if ((this._GCSMRequireInventoryReferenceNumberFlag != value))
				{
					this.OnGCSMRequireInventoryReferenceNumberFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMRequireInventoryReferenceNumberFlag = value;
					this.SendPropertyChanged("GCSMRequireInventoryReferenceNumberFlag");
					this.OnGCSMRequireInventoryReferenceNumberFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnOutdateFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnOutdateFlag
		{
			get
			{
				return this._GCSMWitnessOnOutdateFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnOutdateFlag != value))
				{
					this.OnGCSMWitnessOnOutdateFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnOutdateFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnOutdateFlag");
					this.OnGCSMWitnessOnOutdateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReturnFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnReturnFlag
		{
			get
			{
				return this._GCSMWitnessOnReturnFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReturnFlag != value))
				{
					this.OnGCSMWitnessOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnReturnFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnReturnFlag");
					this.OnGCSMWitnessOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAutorestockFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnAutorestockFlag
		{
			get
			{
				return this._GCSMWitnessOnAutorestockFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAutorestockFlag != value))
				{
					this.OnGCSMWitnessOnAutorestockFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnAutorestockFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnAutorestockFlag");
					this.OnGCSMWitnessOnAutorestockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnCompoundingFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnCompoundingFlag
		{
			get
			{
				return this._GCSMWitnessOnCompoundingFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnCompoundingFlag != value))
				{
					this.OnGCSMWitnessOnCompoundingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnCompoundingFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnCompoundingFlag");
					this.OnGCSMWitnessOnCompoundingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnDestructionBinFlag != value))
				{
					this.OnGCSMWitnessOnDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnDestructionBinFlag");
					this.OnGCSMWitnessOnDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnDiscrepancyResolutionFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnDiscrepancyResolutionFlag
		{
			get
			{
				return this._GCSMWitnessOnDiscrepancyResolutionFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnDiscrepancyResolutionFlag != value))
				{
					this.OnGCSMWitnessOnDiscrepancyResolutionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnDiscrepancyResolutionFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnDiscrepancyResolutionFlag");
					this.OnGCSMWitnessOnDiscrepancyResolutionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnInventoryCountFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnInventoryCountFlag
		{
			get
			{
				return this._GCSMWitnessOnInventoryCountFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnInventoryCountFlag != value))
				{
					this.OnGCSMWitnessOnInventoryCountFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnInventoryCountFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnInventoryCountFlag");
					this.OnGCSMWitnessOnInventoryCountFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnIssueFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnIssueFlag
		{
			get
			{
				return this._GCSMWitnessOnIssueFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnIssueFlag != value))
				{
					this.OnGCSMWitnessOnIssueFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnIssueFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnIssueFlag");
					this.OnGCSMWitnessOnIssueFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnPrescriptionFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnPrescriptionFlag
		{
			get
			{
				return this._GCSMWitnessOnPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnPrescriptionFlag != value))
				{
					this.OnGCSMWitnessOnPrescriptionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnPrescriptionFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnPrescriptionFlag");
					this.OnGCSMWitnessOnPrescriptionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnRecallFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnRecallFlag
		{
			get
			{
				return this._GCSMWitnessOnRecallFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnRecallFlag != value))
				{
					this.OnGCSMWitnessOnRecallFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnRecallFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnRecallFlag");
					this.OnGCSMWitnessOnRecallFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReceiveFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnReceiveFlag
		{
			get
			{
				return this._GCSMWitnessOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReceiveFlag != value))
				{
					this.OnGCSMWitnessOnReceiveFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnReceiveFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnReceiveFlag");
					this.OnGCSMWitnessOnReceiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReverseCompoundingFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnReverseCompoundingFlag
		{
			get
			{
				return this._GCSMWitnessOnReverseCompoundingFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReverseCompoundingFlag != value))
				{
					this.OnGCSMWitnessOnReverseCompoundingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnReverseCompoundingFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnReverseCompoundingFlag");
					this.OnGCSMWitnessOnReverseCompoundingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnSellFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnSellFlag
		{
			get
			{
				return this._GCSMWitnessOnSellFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnSellFlag != value))
				{
					this.OnGCSMWitnessOnSellFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnSellFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnSellFlag");
					this.OnGCSMWitnessOnSellFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnStockTransferFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnStockTransferFlag
		{
			get
			{
				return this._GCSMWitnessOnStockTransferFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnStockTransferFlag != value))
				{
					this.OnGCSMWitnessOnStockTransferFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnStockTransferFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnStockTransferFlag");
					this.OnGCSMWitnessOnStockTransferFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnUnloadFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnUnloadFlag
		{
			get
			{
				return this._GCSMWitnessOnUnloadFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnUnloadFlag != value))
				{
					this.OnGCSMWitnessOnUnloadFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnUnloadFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnUnloadFlag");
					this.OnGCSMWitnessOnUnloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnWasteFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnWasteFlag
		{
			get
			{
				return this._GCSMWitnessOnWasteFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnWasteFlag != value))
				{
					this.OnGCSMWitnessOnWasteFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnWasteFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnWasteFlag");
					this.OnGCSMWitnessOnWasteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnCompoundingFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnCompoundingFlag
		{
			get
			{
				return this._GCSMScanOnCompoundingFlag;
			}
			set
			{
				if ((this._GCSMScanOnCompoundingFlag != value))
				{
					this.OnGCSMScanOnCompoundingFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnCompoundingFlag = value;
					this.SendPropertyChanged("GCSMScanOnCompoundingFlag");
					this.OnGCSMScanOnCompoundingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnReturnFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnReturnFlag
		{
			get
			{
				return this._GCSMScanOnReturnFlag;
			}
			set
			{
				if ((this._GCSMScanOnReturnFlag != value))
				{
					this.OnGCSMScanOnReturnFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnReturnFlag = value;
					this.SendPropertyChanged("GCSMScanOnReturnFlag");
					this.OnGCSMScanOnReturnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnAutorestockFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnAutorestockFlag
		{
			get
			{
				return this._GCSMScanOnAutorestockFlag;
			}
			set
			{
				if ((this._GCSMScanOnAutorestockFlag != value))
				{
					this.OnGCSMScanOnAutorestockFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnAutorestockFlag = value;
					this.SendPropertyChanged("GCSMScanOnAutorestockFlag");
					this.OnGCSMScanOnAutorestockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnIssueFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnIssueFlag
		{
			get
			{
				return this._GCSMScanOnIssueFlag;
			}
			set
			{
				if ((this._GCSMScanOnIssueFlag != value))
				{
					this.OnGCSMScanOnIssueFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnIssueFlag = value;
					this.SendPropertyChanged("GCSMScanOnIssueFlag");
					this.OnGCSMScanOnIssueFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnPrescriptionFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnPrescriptionFlag
		{
			get
			{
				return this._GCSMScanOnPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMScanOnPrescriptionFlag != value))
				{
					this.OnGCSMScanOnPrescriptionFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnPrescriptionFlag = value;
					this.SendPropertyChanged("GCSMScanOnPrescriptionFlag");
					this.OnGCSMScanOnPrescriptionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnReceiveFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnReceiveFlag
		{
			get
			{
				return this._GCSMScanOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMScanOnReceiveFlag != value))
				{
					this.OnGCSMScanOnReceiveFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnReceiveFlag = value;
					this.SendPropertyChanged("GCSMScanOnReceiveFlag");
					this.OnGCSMScanOnReceiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnSellFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnSellFlag
		{
			get
			{
				return this._GCSMScanOnSellFlag;
			}
			set
			{
				if ((this._GCSMScanOnSellFlag != value))
				{
					this.OnGCSMScanOnSellFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnSellFlag = value;
					this.SendPropertyChanged("GCSMScanOnSellFlag");
					this.OnGCSMScanOnSellFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnStockTransferFlag", DbType="Bit NOT NULL")]
		public bool GCSMScanOnStockTransferFlag
		{
			get
			{
				return this._GCSMScanOnStockTransferFlag;
			}
			set
			{
				if ((this._GCSMScanOnStockTransferFlag != value))
				{
					this.OnGCSMScanOnStockTransferFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMScanOnStockTransferFlag = value;
					this.SendPropertyChanged("GCSMScanOnStockTransferFlag");
					this.OnGCSMScanOnStockTransferFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCriticalLowPercentage", DbType="TinyInt")]
		public System.Nullable<byte> GCSMCriticalLowPercentage
		{
			get
			{
				return this._GCSMCriticalLowPercentage;
			}
			set
			{
				if ((this._GCSMCriticalLowPercentage != value))
				{
					this.OnGCSMCriticalLowPercentageChanging(value);
					this.SendPropertyChanging();
					this._GCSMCriticalLowPercentage = value;
					this.SendPropertyChanged("GCSMCriticalLowPercentage");
					this.OnGCSMCriticalLowPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintOnReceiveFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintOnReceiveFlag
		{
			get
			{
				return this._GCSMPrintOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMPrintOnReceiveFlag != value))
				{
					this.OnGCSMPrintOnReceiveFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintOnReceiveFlag = value;
					this.SendPropertyChanged("GCSMPrintOnReceiveFlag");
					this.OnGCSMPrintOnReceiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintSingleMedSheetFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintSingleMedSheetFlag
		{
			get
			{
				return this._GCSMPrintSingleMedSheetFlag;
			}
			set
			{
				if ((this._GCSMPrintSingleMedSheetFlag != value))
				{
					this.OnGCSMPrintSingleMedSheetFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintSingleMedSheetFlag = value;
					this.SendPropertyChanged("GCSMPrintSingleMedSheetFlag");
					this.OnGCSMPrintSingleMedSheetFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintDripSheetFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintDripSheetFlag
		{
			get
			{
				return this._GCSMPrintDripSheetFlag;
			}
			set
			{
				if ((this._GCSMPrintDripSheetFlag != value))
				{
					this.OnGCSMPrintDripSheetFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintDripSheetFlag = value;
					this.SendPropertyChanged("GCSMPrintDripSheetFlag");
					this.OnGCSMPrintDripSheetFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintMaximumRowsFlag", DbType="Bit NOT NULL")]
		public bool GCSMPrintMaximumRowsFlag
		{
			get
			{
				return this._GCSMPrintMaximumRowsFlag;
			}
			set
			{
				if ((this._GCSMPrintMaximumRowsFlag != value))
				{
					this.OnGCSMPrintMaximumRowsFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMPrintMaximumRowsFlag = value;
					this.SendPropertyChanged("GCSMPrintMaximumRowsFlag");
					this.OnGCSMPrintMaximumRowsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMAdditionalLabelsPrintedQuantity", DbType="SmallInt NOT NULL")]
		public short GCSMAdditionalLabelsPrintedQuantity
		{
			get
			{
				return this._GCSMAdditionalLabelsPrintedQuantity;
			}
			set
			{
				if ((this._GCSMAdditionalLabelsPrintedQuantity != value))
				{
					this.OnGCSMAdditionalLabelsPrintedQuantityChanging(value);
					this.SendPropertyChanging();
					this._GCSMAdditionalLabelsPrintedQuantity = value;
					this.SendPropertyChanged("GCSMAdditionalLabelsPrintedQuantity");
					this.OnGCSMAdditionalLabelsPrintedQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMStockOutNoticeFlag", DbType="Bit NOT NULL")]
		public bool GCSMStockOutNoticeFlag
		{
			get
			{
				return this._GCSMStockOutNoticeFlag;
			}
			set
			{
				if ((this._GCSMStockOutNoticeFlag != value))
				{
					this.OnGCSMStockOutNoticeFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMStockOutNoticeFlag = value;
					this.SendPropertyChanged("GCSMStockOutNoticeFlag");
					this.OnGCSMStockOutNoticeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDistributorKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GCSMDistributorKey
		{
			get
			{
				return this._GCSMDistributorKey;
			}
			set
			{
				if ((this._GCSMDistributorKey != value))
				{
					this.OnGCSMDistributorKeyChanging(value);
					this.SendPropertyChanging();
					this._GCSMDistributorKey = value;
					this.SendPropertyChanged("GCSMDistributorKey");
					this.OnGCSMDistributorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMTotalDeviceParDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> GCSMTotalDeviceParDurationAmount
		{
			get
			{
				return this._GCSMTotalDeviceParDurationAmount;
			}
			set
			{
				if ((this._GCSMTotalDeviceParDurationAmount != value))
				{
					this.OnGCSMTotalDeviceParDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._GCSMTotalDeviceParDurationAmount = value;
					this.SendPropertyChanged("GCSMTotalDeviceParDurationAmount");
					this.OnGCSMTotalDeviceParDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMTotalParDurationAmount", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> GCSMTotalParDurationAmount
		{
			get
			{
				return this._GCSMTotalParDurationAmount;
			}
			set
			{
				if ((this._GCSMTotalParDurationAmount != value))
				{
					this.OnGCSMTotalParDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._GCSMTotalParDurationAmount = value;
					this.SendPropertyChanged("GCSMTotalParDurationAmount");
					this.OnGCSMTotalParDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnAddToDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnAddToDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAddToDestructionBinFlag != value))
				{
					this.OnGCSMWitnessOnAddToDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnAddToDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnAddToDestructionBinFlag");
					this.OnGCSMWitnessOnAddToDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit NOT NULL")]
		public bool GCSMWitnessOnAccessToDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnAccessToDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAccessToDestructionBinFlag != value))
				{
					this.OnGCSMWitnessOnAccessToDestructionBinFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMWitnessOnAccessToDestructionBinFlag = value;
					this.SendPropertyChanged("GCSMWitnessOnAccessToDestructionBinFlag");
					this.OnGCSMWitnessOnAccessToDestructionBinFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMRequireOriginDestinationFlag", DbType="Bit NOT NULL")]
		public bool GCSMRequireOriginDestinationFlag
		{
			get
			{
				return this._GCSMRequireOriginDestinationFlag;
			}
			set
			{
				if ((this._GCSMRequireOriginDestinationFlag != value))
				{
					this.OnGCSMRequireOriginDestinationFlagChanging(value);
					this.SendPropertyChanging();
					this._GCSMRequireOriginDestinationFlag = value;
					this.SendPropertyChanged("GCSMRequireOriginDestinationFlag");
					this.OnGCSMRequireOriginDestinationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormularyTemplateEntity_MedClassEntity", Storage="_MedClassEntities", ThisKey="Key", OtherKey="FormularyTemplateKey")]
		public EntitySet<MedClassEntity> MedClassEntities
		{
			get
			{
				return this._MedClassEntities;
			}
			set
			{
				this._MedClassEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormularyTemplateEntity_FormularyTemplateOverrideGroupEntity", Storage="_FormularyTemplateOverrideGroupEntities", ThisKey="Key", OtherKey="FormularyTemplateKey")]
		public EntitySet<FormularyTemplateOverrideGroupEntity> FormularyTemplateOverrideGroupEntities
		{
			get
			{
				return this._FormularyTemplateOverrideGroupEntities;
			}
			set
			{
				this._FormularyTemplateOverrideGroupEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MedClassEntities(MedClassEntity entity)
		{
			this.SendPropertyChanging();
			entity.FormularyTemplateEntity = this;
		}
		
		private void detach_MedClassEntities(MedClassEntity entity)
		{
			this.SendPropertyChanging();
			entity.FormularyTemplateEntity = null;
		}
		
		private void attach_FormularyTemplateOverrideGroupEntities(FormularyTemplateOverrideGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.FormularyTemplateEntity = this;
		}
		
		private void detach_FormularyTemplateOverrideGroupEntities(FormularyTemplateOverrideGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.FormularyTemplateEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.vw_FormularyTemplateOverrideGroupCurrent")]
	public partial class FormularyTemplateOverrideGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _FormularyTemplateKey;
		
		private System.Guid _OverrideGroupKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<FormularyTemplateEntity> _FormularyTemplateEntity;
		
		private EntityRef<OverrideGroupEntity> _OverrideGroupEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnFormularyTemplateKeyChanging(System.Guid value);
    partial void OnFormularyTemplateKeyChanged();
    partial void OnOverrideGroupKeyChanging(System.Guid value);
    partial void OnOverrideGroupKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public FormularyTemplateOverrideGroupEntity()
		{
			this._FormularyTemplateEntity = default(EntityRef<FormularyTemplateEntity>);
			this._OverrideGroupEntity = default(EntityRef<OverrideGroupEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FormularyTemplateOverrideGroupKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormularyTemplateKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FormularyTemplateKey
		{
			get
			{
				return this._FormularyTemplateKey;
			}
			set
			{
				if ((this._FormularyTemplateKey != value))
				{
					if (this._FormularyTemplateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormularyTemplateKeyChanging(value);
					this.SendPropertyChanging();
					this._FormularyTemplateKey = value;
					this.SendPropertyChanged("FormularyTemplateKey");
					this.OnFormularyTemplateKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideGroupKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid OverrideGroupKey
		{
			get
			{
				return this._OverrideGroupKey;
			}
			set
			{
				if ((this._OverrideGroupKey != value))
				{
					if (this._OverrideGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOverrideGroupKeyChanging(value);
					this.SendPropertyChanging();
					this._OverrideGroupKey = value;
					this.SendPropertyChanged("OverrideGroupKey");
					this.OnOverrideGroupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormularyTemplateEntity_FormularyTemplateOverrideGroupEntity", Storage="_FormularyTemplateEntity", ThisKey="FormularyTemplateKey", OtherKey="Key", IsForeignKey=true)]
		public FormularyTemplateEntity FormularyTemplateEntity
		{
			get
			{
				return this._FormularyTemplateEntity.Entity;
			}
			set
			{
				FormularyTemplateEntity previousValue = this._FormularyTemplateEntity.Entity;
				if (((previousValue != value) 
							|| (this._FormularyTemplateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormularyTemplateEntity.Entity = null;
						previousValue.FormularyTemplateOverrideGroupEntities.Remove(this);
					}
					this._FormularyTemplateEntity.Entity = value;
					if ((value != null))
					{
						value.FormularyTemplateOverrideGroupEntities.Add(this);
						this._FormularyTemplateKey = value.Key;
					}
					else
					{
						this._FormularyTemplateKey = default(System.Guid);
					}
					this.SendPropertyChanged("FormularyTemplateEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OverrideGroupEntity_FormularyTemplateOverrideGroupEntity", Storage="_OverrideGroupEntity", ThisKey="OverrideGroupKey", OtherKey="Key", IsForeignKey=true)]
		public OverrideGroupEntity OverrideGroupEntity
		{
			get
			{
				return this._OverrideGroupEntity.Entity;
			}
			set
			{
				OverrideGroupEntity previousValue = this._OverrideGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._OverrideGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OverrideGroupEntity.Entity = null;
						previousValue.FormularyTemplateOverrideGroupEntities.Remove(this);
					}
					this._OverrideGroupEntity.Entity = value;
					if ((value != null))
					{
						value.FormularyTemplateOverrideGroupEntities.Add(this);
						this._OverrideGroupKey = value.Key;
					}
					else
					{
						this._OverrideGroupKey = default(System.Guid);
					}
					this.SendPropertyChanged("OverrideGroupEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FormularyTemplateOverrideGroupResult
	{
		
		private System.Guid _FormularyTemplateOverrideGroupKey;
		
		private System.Guid _FormularyTemplateKey;
		
		private System.Guid _OverrideGroupKey;
		
		private string _DisplayCode;
		
		private string _DescriptionText;
		
		private bool _ActiveFlag;
		
		public FormularyTemplateOverrideGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormularyTemplateOverrideGroupKey")]
		public System.Guid FormularyTemplateOverrideGroupKey
		{
			get
			{
				return this._FormularyTemplateOverrideGroupKey;
			}
			set
			{
				if ((this._FormularyTemplateOverrideGroupKey != value))
				{
					this._FormularyTemplateOverrideGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormularyTemplateKey")]
		public System.Guid FormularyTemplateKey
		{
			get
			{
				return this._FormularyTemplateKey;
			}
			set
			{
				if ((this._FormularyTemplateKey != value))
				{
					this._FormularyTemplateKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideGroupKey")]
		public System.Guid OverrideGroupKey
		{
			get
			{
				return this._OverrideGroupKey;
			}
			set
			{
				if ((this._OverrideGroupKey != value))
				{
					this._OverrideGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", CanBeNull=false)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this._DisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", CanBeNull=false)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this._DescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FacilityItemCommonAttributeResult
	{
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private System.Nullable<byte> _OutdateTrackingFlag;
		
		private string _VerifyCountModeInternalCode;
		
		private byte _VerifyCountModeInternalCodeNullValueFlag;
		
		private System.Nullable<byte> _VerifyCountAnesthesiaDispensingFlag;
		
		private System.Nullable<byte> _WitnessOnDispenseFlag;
		
		private System.Nullable<byte> _WitnessOnReturnFlag;
		
		private System.Nullable<byte> _WitnessOnDisposeFlag;
		
		private System.Nullable<byte> _WitnessOnLoadRefillFlag;
		
		private System.Nullable<byte> _WitnessOnUnloadFlag;
		
		private System.Nullable<byte> _WitnessOnOverrideFlag;
		
		private System.Nullable<byte> _WitnessOnOutdateFlag;
		
		private System.Nullable<byte> _WitnessOnInventoryFlag;
		
		private System.Nullable<byte> _WitnessOnEmptyReturnBinFlag;
		
		private System.Nullable<byte> _WitnessOnDestockFlag;
		
		private System.Nullable<byte> _WitnessOnRxCheckFlag;
		
		private System.Nullable<byte> _ScanOnLoadRefillFlag;
		
		private System.Nullable<byte> _ScanOnRemoveFlag;
		
		private System.Nullable<byte> _ScanOnReturnFlag;
		
		private System.Nullable<byte> _ScanOnCheckFlag;
		
		private System.Nullable<byte> _DoOnceOnRemoveFlag;
		
		private System.Nullable<byte> _RequireLotIDOnRemoveFlag;
		
		private System.Nullable<byte> _RequireLotIDOnReturnFlag;
		
		private System.Nullable<byte> _RequireSerialIDOnRemoveFlag;
		
		private System.Nullable<byte> _RequireSerialIDOnReturnFlag;
		
		private System.Nullable<byte> _RequireExpirationDateOnRemoveFlag;
		
		private System.Nullable<byte> _RequireExpirationDateOnReturnFlag;
		
		private System.Nullable<byte> _RequireInventoryReferenceIDFlag;
		
		private System.Nullable<byte> _ReverificationFlag;
		
		private System.Nullable<short> _TooCloseRemoveDurationAmount;
		
		private byte _TooCloseRemoveDurationAmountNullValueFlag;
		
		private System.Nullable<System.Guid> _SecurityGroupKey;
		
		private byte _SecurityGroupKeyNullValueFlag;
		
		private System.Nullable<byte> _ActiveFlag;
		
		private System.Nullable<byte> _AutoResolveDiscrepancyFlag;
		
		private System.Nullable<byte> _ChargeableFlag;
		
		private System.Nullable<byte> _HighCostFlag;
		
		private System.Nullable<byte> _AllowSplittingFlag;
		
		private System.Nullable<byte> _HighRiskFlag;
		
		private System.Nullable<System.Guid> _HazardousWasteClassKey;
		
		private byte _HazardousWasteClassKeyNullValueFlag;
		
		private System.Nullable<byte> _MultiDoseFlag;
		
		private System.Nullable<byte> _BackorderedFlag;
		
		private System.Nullable<System.Guid> _RefillUOMKey;
		
		private byte _RefillUOMKeyNullValueFlag;
		
		private System.Nullable<System.Guid> _IssueUOMKey;
		
		private byte _IssueUOMKeyNullValueFlag;
		
		private System.Nullable<decimal> _UOIPerUORAmount;
		
		private byte _UOIPerUORAmountNullValueFlag;
		
		private System.Nullable<byte> _StandardStockFlag;
		
		private string _MedReturnModeInternalCode;
		
		private string _MedFailoverReturnModeInternalCode;
		
		private byte _MedFailoverReturnModeInternalCodeNullValueFlag;
		
		private string _ReplenishmentScanModeInternalCode;
		
		private byte _ReplenishmentScanModeInternalCodeNullValueFlag;
		
		private string _FractionalUOMTypeInternalCode;
		
		private byte _FractionalUOMTypeInternalCodeNullValueFlag;
		
		private string _AutoMedLabelModeInternalCode;
		
		private byte _AutoMedLabelModeInternalCodeNullValueFlag;
		
		private string _PharmacyNotesText;
		
		private byte _PharmacyNotesTextNullValueFlag;
		
		private string _NursingNotesText;
		
		private byte _NursingNotesTextNullValueFlag;
		
		private System.Nullable<byte> _CriticalLowPercentage;
		
		private byte _CriticalLowPercentageNullValueFlag;
		
		private System.Nullable<byte> _StockOutNoticeFlag;
		
		private System.Nullable<byte> _OMNLNoticeFlag;
		
		private System.Nullable<byte> _AnesthesiaMyItemsFlag;
		
		private System.Nullable<byte> _TrackUndocumentedWasteFlag;
		
		private System.Nullable<System.Guid> _ReplenishmentPickAreaKey;
		
		private byte _ReplenishmentPickAreaKeyNullValueFlag;
		
		private System.Nullable<System.Guid> _DistributorKey;
		
		private byte _DistributorKeyNullValueFlag;
		
		private System.Nullable<byte> _MedItemFlag;
		
		private string _MedItemTypeInternalCode;
		
		private byte _MedItemTypeInternalCodeNullValueFlag;
		
		private byte _StrengthUOMKeyPresent;
		
		private System.Nullable<byte> _RxCheckFlag;
		
		private System.Nullable<byte> _PrintOnRemoveFlag;
		
		private System.Nullable<byte> _PrintOnReturnFlag;
		
		private System.Nullable<byte> _PrintOnDisposeFlag;
		
		private System.Nullable<byte> _ShowConversionOnRemoveFlag;
		
		private System.Nullable<byte> _ScanAllOnPickFlag;
		
		private string _CountCUBIEEjectModeInternalCode;
		
		private byte _CountCUBIEEjectModeInternalCodeNullValueFlag;
		
		private byte _VolumeUOMKeyPresent;
		
		private System.Nullable<byte> _PrintOnLoadRefillFlag;
		
		private System.Nullable<byte> _PharmacyOrderDispenseQuantityFlag;
		
		private System.Nullable<byte> _InjectableFlag;
		
		private System.Nullable<byte> _GCSMOutdateTrackingFlag;
		
		private System.Nullable<byte> _GCSMBlindCountFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnInventoryCountFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnOutdateFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnReturnFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnAutorestockFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnCompoundingFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnDestructionBinFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnDiscrepancyResolutionFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnIssueFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnPrescriptionFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnReceiveFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnSellFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnStockTransferFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnWasteFlag;
		
		private System.Nullable<byte> _GCSMScanOnReturnFlag;
		
		private System.Nullable<byte> _GCSMScanOnAutorestockFlag;
		
		private System.Nullable<byte> _GCSMScanOnIssueFlag;
		
		private System.Nullable<byte> _GCSMScanOnPrescriptionFlag;
		
		private System.Nullable<byte> _GCSMScanOnReceiveFlag;
		
		private System.Nullable<byte> _GCSMScanOnSellFlag;
		
		private System.Nullable<byte> _GCSMScanOnStockTransferFlag;
		
		private System.Nullable<byte> _GCSMCriticalLowPercentage;
		
		private System.Nullable<byte> _GCSMPrintOnReceiveFlag;
		
		private System.Nullable<System.Guid> _GCSMDistributorKey;
		
		private System.Nullable<byte> _GCSMPrintSingleMedSheetFlag;
		
		private System.Nullable<byte> _GCSMPrintDripSheetFlag;
		
		private System.Nullable<byte> _GCSMPrintMaximumRowsFlag;
		
		private byte _GCSMAdditionalLabelsPrintedQuantityNullValueFlag;
		
		private System.Nullable<byte> _GCSMDistributorKeyNullValueFlag;
		
		private byte _GCSMCriticalLowPercentageNullValueFlag;
		
		private System.Nullable<byte> _GCSMScanOnCompoundingFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnRecallFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnReverseCompoundingFlag;
		
		private System.Nullable<byte> _GCSMWitnessOnUnloadFlag;
		
		private System.Nullable<byte> _GCSMRequireInventoryReferenceNumberFlag;
		
		private byte _GCSMRequireLotNumberWhenRecallFlag;
		
		private byte _GCSMStockOutNoticeFlag;
		
		private string _GCSMCountCUBIEEjectModeInternalCode;
		
		private byte _GCSMCountCUBIEEjectModeInternalCodeNullValueFlag;
		
		private string _GCSMVerifyCountModeInternalCode;
		
		private byte _GCSMVerifyCountModeInternalCodeNullValueFlag;
		
		private string _GCSMAdditionalLabelsPrintedQuantity;
		
		private string _GCSMMedReturnModeInternalCode;
		
		private byte _GCSMMedReturnModeInternalCodeNullValueFlag;
		
		private string _GCSMADMDispenseQuantity;
		
		private string _GCSMDistributorPackageSizeQuantity;
		
		private byte _GCSMTotalDeviceParDurationAmountNullValueFlag;
		
		private byte _GCSMTotalParDurationAmountNullValueFlag;
		
		private System.Nullable<short> _GCSMTotalDeviceParDurationAmount;
		
		private System.Nullable<short> _GCSMTotalParDurationAmount;
		
		private byte _CIISafeKitPresent;
		
		private byte _GCSMWitnessOnAddToDestructionBinFlag;
		
		private byte _GCSMWitnessOnAccessToDestructionBinFlag;
		
		private System.Nullable<byte> _GCSMRequireOriginDestinationFlag;
		
		public FacilityItemCommonAttributeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey")]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdateTrackingFlag")]
		public System.Nullable<byte> OutdateTrackingFlag
		{
			get
			{
				return this._OutdateTrackingFlag;
			}
			set
			{
				if ((this._OutdateTrackingFlag != value))
				{
					this._OutdateTrackingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCountModeInternalCode")]
		public string VerifyCountModeInternalCode
		{
			get
			{
				return this._VerifyCountModeInternalCode;
			}
			set
			{
				if ((this._VerifyCountModeInternalCode != value))
				{
					this._VerifyCountModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCountModeInternalCodeNullValueFlag")]
		public byte VerifyCountModeInternalCodeNullValueFlag
		{
			get
			{
				return this._VerifyCountModeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._VerifyCountModeInternalCodeNullValueFlag != value))
				{
					this._VerifyCountModeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyCountAnesthesiaDispensingFlag")]
		public System.Nullable<byte> VerifyCountAnesthesiaDispensingFlag
		{
			get
			{
				return this._VerifyCountAnesthesiaDispensingFlag;
			}
			set
			{
				if ((this._VerifyCountAnesthesiaDispensingFlag != value))
				{
					this._VerifyCountAnesthesiaDispensingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDispenseFlag")]
		public System.Nullable<byte> WitnessOnDispenseFlag
		{
			get
			{
				return this._WitnessOnDispenseFlag;
			}
			set
			{
				if ((this._WitnessOnDispenseFlag != value))
				{
					this._WitnessOnDispenseFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnReturnFlag")]
		public System.Nullable<byte> WitnessOnReturnFlag
		{
			get
			{
				return this._WitnessOnReturnFlag;
			}
			set
			{
				if ((this._WitnessOnReturnFlag != value))
				{
					this._WitnessOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDisposeFlag")]
		public System.Nullable<byte> WitnessOnDisposeFlag
		{
			get
			{
				return this._WitnessOnDisposeFlag;
			}
			set
			{
				if ((this._WitnessOnDisposeFlag != value))
				{
					this._WitnessOnDisposeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnLoadRefillFlag")]
		public System.Nullable<byte> WitnessOnLoadRefillFlag
		{
			get
			{
				return this._WitnessOnLoadRefillFlag;
			}
			set
			{
				if ((this._WitnessOnLoadRefillFlag != value))
				{
					this._WitnessOnLoadRefillFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnUnloadFlag")]
		public System.Nullable<byte> WitnessOnUnloadFlag
		{
			get
			{
				return this._WitnessOnUnloadFlag;
			}
			set
			{
				if ((this._WitnessOnUnloadFlag != value))
				{
					this._WitnessOnUnloadFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnOverrideFlag")]
		public System.Nullable<byte> WitnessOnOverrideFlag
		{
			get
			{
				return this._WitnessOnOverrideFlag;
			}
			set
			{
				if ((this._WitnessOnOverrideFlag != value))
				{
					this._WitnessOnOverrideFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnOutdateFlag")]
		public System.Nullable<byte> WitnessOnOutdateFlag
		{
			get
			{
				return this._WitnessOnOutdateFlag;
			}
			set
			{
				if ((this._WitnessOnOutdateFlag != value))
				{
					this._WitnessOnOutdateFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnInventoryFlag")]
		public System.Nullable<byte> WitnessOnInventoryFlag
		{
			get
			{
				return this._WitnessOnInventoryFlag;
			}
			set
			{
				if ((this._WitnessOnInventoryFlag != value))
				{
					this._WitnessOnInventoryFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnEmptyReturnBinFlag")]
		public System.Nullable<byte> WitnessOnEmptyReturnBinFlag
		{
			get
			{
				return this._WitnessOnEmptyReturnBinFlag;
			}
			set
			{
				if ((this._WitnessOnEmptyReturnBinFlag != value))
				{
					this._WitnessOnEmptyReturnBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnDestockFlag")]
		public System.Nullable<byte> WitnessOnDestockFlag
		{
			get
			{
				return this._WitnessOnDestockFlag;
			}
			set
			{
				if ((this._WitnessOnDestockFlag != value))
				{
					this._WitnessOnDestockFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessOnRxCheckFlag")]
		public System.Nullable<byte> WitnessOnRxCheckFlag
		{
			get
			{
				return this._WitnessOnRxCheckFlag;
			}
			set
			{
				if ((this._WitnessOnRxCheckFlag != value))
				{
					this._WitnessOnRxCheckFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnLoadRefillFlag")]
		public System.Nullable<byte> ScanOnLoadRefillFlag
		{
			get
			{
				return this._ScanOnLoadRefillFlag;
			}
			set
			{
				if ((this._ScanOnLoadRefillFlag != value))
				{
					this._ScanOnLoadRefillFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnRemoveFlag")]
		public System.Nullable<byte> ScanOnRemoveFlag
		{
			get
			{
				return this._ScanOnRemoveFlag;
			}
			set
			{
				if ((this._ScanOnRemoveFlag != value))
				{
					this._ScanOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnReturnFlag")]
		public System.Nullable<byte> ScanOnReturnFlag
		{
			get
			{
				return this._ScanOnReturnFlag;
			}
			set
			{
				if ((this._ScanOnReturnFlag != value))
				{
					this._ScanOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanOnCheckFlag")]
		public System.Nullable<byte> ScanOnCheckFlag
		{
			get
			{
				return this._ScanOnCheckFlag;
			}
			set
			{
				if ((this._ScanOnCheckFlag != value))
				{
					this._ScanOnCheckFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoOnceOnRemoveFlag")]
		public System.Nullable<byte> DoOnceOnRemoveFlag
		{
			get
			{
				return this._DoOnceOnRemoveFlag;
			}
			set
			{
				if ((this._DoOnceOnRemoveFlag != value))
				{
					this._DoOnceOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLotIDOnRemoveFlag")]
		public System.Nullable<byte> RequireLotIDOnRemoveFlag
		{
			get
			{
				return this._RequireLotIDOnRemoveFlag;
			}
			set
			{
				if ((this._RequireLotIDOnRemoveFlag != value))
				{
					this._RequireLotIDOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireLotIDOnReturnFlag")]
		public System.Nullable<byte> RequireLotIDOnReturnFlag
		{
			get
			{
				return this._RequireLotIDOnReturnFlag;
			}
			set
			{
				if ((this._RequireLotIDOnReturnFlag != value))
				{
					this._RequireLotIDOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSerialIDOnRemoveFlag")]
		public System.Nullable<byte> RequireSerialIDOnRemoveFlag
		{
			get
			{
				return this._RequireSerialIDOnRemoveFlag;
			}
			set
			{
				if ((this._RequireSerialIDOnRemoveFlag != value))
				{
					this._RequireSerialIDOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireSerialIDOnReturnFlag")]
		public System.Nullable<byte> RequireSerialIDOnReturnFlag
		{
			get
			{
				return this._RequireSerialIDOnReturnFlag;
			}
			set
			{
				if ((this._RequireSerialIDOnReturnFlag != value))
				{
					this._RequireSerialIDOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireExpirationDateOnRemoveFlag")]
		public System.Nullable<byte> RequireExpirationDateOnRemoveFlag
		{
			get
			{
				return this._RequireExpirationDateOnRemoveFlag;
			}
			set
			{
				if ((this._RequireExpirationDateOnRemoveFlag != value))
				{
					this._RequireExpirationDateOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireExpirationDateOnReturnFlag")]
		public System.Nullable<byte> RequireExpirationDateOnReturnFlag
		{
			get
			{
				return this._RequireExpirationDateOnReturnFlag;
			}
			set
			{
				if ((this._RequireExpirationDateOnReturnFlag != value))
				{
					this._RequireExpirationDateOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireInventoryReferenceIDFlag")]
		public System.Nullable<byte> RequireInventoryReferenceIDFlag
		{
			get
			{
				return this._RequireInventoryReferenceIDFlag;
			}
			set
			{
				if ((this._RequireInventoryReferenceIDFlag != value))
				{
					this._RequireInventoryReferenceIDFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReverificationFlag")]
		public System.Nullable<byte> ReverificationFlag
		{
			get
			{
				return this._ReverificationFlag;
			}
			set
			{
				if ((this._ReverificationFlag != value))
				{
					this._ReverificationFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseRemoveDurationAmount")]
		public System.Nullable<short> TooCloseRemoveDurationAmount
		{
			get
			{
				return this._TooCloseRemoveDurationAmount;
			}
			set
			{
				if ((this._TooCloseRemoveDurationAmount != value))
				{
					this._TooCloseRemoveDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseRemoveDurationAmountNullValueFlag")]
		public byte TooCloseRemoveDurationAmountNullValueFlag
		{
			get
			{
				return this._TooCloseRemoveDurationAmountNullValueFlag;
			}
			set
			{
				if ((this._TooCloseRemoveDurationAmountNullValueFlag != value))
				{
					this._TooCloseRemoveDurationAmountNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupKey")]
		public System.Nullable<System.Guid> SecurityGroupKey
		{
			get
			{
				return this._SecurityGroupKey;
			}
			set
			{
				if ((this._SecurityGroupKey != value))
				{
					this._SecurityGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityGroupKeyNullValueFlag")]
		public byte SecurityGroupKeyNullValueFlag
		{
			get
			{
				return this._SecurityGroupKeyNullValueFlag;
			}
			set
			{
				if ((this._SecurityGroupKeyNullValueFlag != value))
				{
					this._SecurityGroupKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag")]
		public System.Nullable<byte> ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoResolveDiscrepancyFlag")]
		public System.Nullable<byte> AutoResolveDiscrepancyFlag
		{
			get
			{
				return this._AutoResolveDiscrepancyFlag;
			}
			set
			{
				if ((this._AutoResolveDiscrepancyFlag != value))
				{
					this._AutoResolveDiscrepancyFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeableFlag")]
		public System.Nullable<byte> ChargeableFlag
		{
			get
			{
				return this._ChargeableFlag;
			}
			set
			{
				if ((this._ChargeableFlag != value))
				{
					this._ChargeableFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighCostFlag")]
		public System.Nullable<byte> HighCostFlag
		{
			get
			{
				return this._HighCostFlag;
			}
			set
			{
				if ((this._HighCostFlag != value))
				{
					this._HighCostFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSplittingFlag")]
		public System.Nullable<byte> AllowSplittingFlag
		{
			get
			{
				return this._AllowSplittingFlag;
			}
			set
			{
				if ((this._AllowSplittingFlag != value))
				{
					this._AllowSplittingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighRiskFlag")]
		public System.Nullable<byte> HighRiskFlag
		{
			get
			{
				return this._HighRiskFlag;
			}
			set
			{
				if ((this._HighRiskFlag != value))
				{
					this._HighRiskFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardousWasteClassKey")]
		public System.Nullable<System.Guid> HazardousWasteClassKey
		{
			get
			{
				return this._HazardousWasteClassKey;
			}
			set
			{
				if ((this._HazardousWasteClassKey != value))
				{
					this._HazardousWasteClassKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardousWasteClassKeyNullValueFlag")]
		public byte HazardousWasteClassKeyNullValueFlag
		{
			get
			{
				return this._HazardousWasteClassKeyNullValueFlag;
			}
			set
			{
				if ((this._HazardousWasteClassKeyNullValueFlag != value))
				{
					this._HazardousWasteClassKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiDoseFlag")]
		public System.Nullable<byte> MultiDoseFlag
		{
			get
			{
				return this._MultiDoseFlag;
			}
			set
			{
				if ((this._MultiDoseFlag != value))
				{
					this._MultiDoseFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackorderedFlag")]
		public System.Nullable<byte> BackorderedFlag
		{
			get
			{
				return this._BackorderedFlag;
			}
			set
			{
				if ((this._BackorderedFlag != value))
				{
					this._BackorderedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillUOMKey")]
		public System.Nullable<System.Guid> RefillUOMKey
		{
			get
			{
				return this._RefillUOMKey;
			}
			set
			{
				if ((this._RefillUOMKey != value))
				{
					this._RefillUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefillUOMKeyNullValueFlag")]
		public byte RefillUOMKeyNullValueFlag
		{
			get
			{
				return this._RefillUOMKeyNullValueFlag;
			}
			set
			{
				if ((this._RefillUOMKeyNullValueFlag != value))
				{
					this._RefillUOMKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUOMKey")]
		public System.Nullable<System.Guid> IssueUOMKey
		{
			get
			{
				return this._IssueUOMKey;
			}
			set
			{
				if ((this._IssueUOMKey != value))
				{
					this._IssueUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUOMKeyNullValueFlag")]
		public byte IssueUOMKeyNullValueFlag
		{
			get
			{
				return this._IssueUOMKeyNullValueFlag;
			}
			set
			{
				if ((this._IssueUOMKeyNullValueFlag != value))
				{
					this._IssueUOMKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOIPerUORAmount")]
		public System.Nullable<decimal> UOIPerUORAmount
		{
			get
			{
				return this._UOIPerUORAmount;
			}
			set
			{
				if ((this._UOIPerUORAmount != value))
				{
					this._UOIPerUORAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOIPerUORAmountNullValueFlag")]
		public byte UOIPerUORAmountNullValueFlag
		{
			get
			{
				return this._UOIPerUORAmountNullValueFlag;
			}
			set
			{
				if ((this._UOIPerUORAmountNullValueFlag != value))
				{
					this._UOIPerUORAmountNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardStockFlag")]
		public System.Nullable<byte> StandardStockFlag
		{
			get
			{
				return this._StandardStockFlag;
			}
			set
			{
				if ((this._StandardStockFlag != value))
				{
					this._StandardStockFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedReturnModeInternalCode")]
		public string MedReturnModeInternalCode
		{
			get
			{
				return this._MedReturnModeInternalCode;
			}
			set
			{
				if ((this._MedReturnModeInternalCode != value))
				{
					this._MedReturnModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedFailoverReturnModeInternalCode")]
		public string MedFailoverReturnModeInternalCode
		{
			get
			{
				return this._MedFailoverReturnModeInternalCode;
			}
			set
			{
				if ((this._MedFailoverReturnModeInternalCode != value))
				{
					this._MedFailoverReturnModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedFailoverReturnModeInternalCodeNullValueFlag")]
		public byte MedFailoverReturnModeInternalCodeNullValueFlag
		{
			get
			{
				return this._MedFailoverReturnModeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._MedFailoverReturnModeInternalCodeNullValueFlag != value))
				{
					this._MedFailoverReturnModeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentScanModeInternalCode")]
		public string ReplenishmentScanModeInternalCode
		{
			get
			{
				return this._ReplenishmentScanModeInternalCode;
			}
			set
			{
				if ((this._ReplenishmentScanModeInternalCode != value))
				{
					this._ReplenishmentScanModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentScanModeInternalCodeNullValueFlag")]
		public byte ReplenishmentScanModeInternalCodeNullValueFlag
		{
			get
			{
				return this._ReplenishmentScanModeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._ReplenishmentScanModeInternalCodeNullValueFlag != value))
				{
					this._ReplenishmentScanModeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FractionalUOMTypeInternalCode")]
		public string FractionalUOMTypeInternalCode
		{
			get
			{
				return this._FractionalUOMTypeInternalCode;
			}
			set
			{
				if ((this._FractionalUOMTypeInternalCode != value))
				{
					this._FractionalUOMTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FractionalUOMTypeInternalCodeNullValueFlag")]
		public byte FractionalUOMTypeInternalCodeNullValueFlag
		{
			get
			{
				return this._FractionalUOMTypeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._FractionalUOMTypeInternalCodeNullValueFlag != value))
				{
					this._FractionalUOMTypeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoMedLabelModeInternalCode")]
		public string AutoMedLabelModeInternalCode
		{
			get
			{
				return this._AutoMedLabelModeInternalCode;
			}
			set
			{
				if ((this._AutoMedLabelModeInternalCode != value))
				{
					this._AutoMedLabelModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoMedLabelModeInternalCodeNullValueFlag")]
		public byte AutoMedLabelModeInternalCodeNullValueFlag
		{
			get
			{
				return this._AutoMedLabelModeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._AutoMedLabelModeInternalCodeNullValueFlag != value))
				{
					this._AutoMedLabelModeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyNotesText")]
		public string PharmacyNotesText
		{
			get
			{
				return this._PharmacyNotesText;
			}
			set
			{
				if ((this._PharmacyNotesText != value))
				{
					this._PharmacyNotesText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyNotesTextNullValueFlag")]
		public byte PharmacyNotesTextNullValueFlag
		{
			get
			{
				return this._PharmacyNotesTextNullValueFlag;
			}
			set
			{
				if ((this._PharmacyNotesTextNullValueFlag != value))
				{
					this._PharmacyNotesTextNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NursingNotesText")]
		public string NursingNotesText
		{
			get
			{
				return this._NursingNotesText;
			}
			set
			{
				if ((this._NursingNotesText != value))
				{
					this._NursingNotesText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NursingNotesTextNullValueFlag")]
		public byte NursingNotesTextNullValueFlag
		{
			get
			{
				return this._NursingNotesTextNullValueFlag;
			}
			set
			{
				if ((this._NursingNotesTextNullValueFlag != value))
				{
					this._NursingNotesTextNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalLowPercentage")]
		public System.Nullable<byte> CriticalLowPercentage
		{
			get
			{
				return this._CriticalLowPercentage;
			}
			set
			{
				if ((this._CriticalLowPercentage != value))
				{
					this._CriticalLowPercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalLowPercentageNullValueFlag")]
		public byte CriticalLowPercentageNullValueFlag
		{
			get
			{
				return this._CriticalLowPercentageNullValueFlag;
			}
			set
			{
				if ((this._CriticalLowPercentageNullValueFlag != value))
				{
					this._CriticalLowPercentageNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockOutNoticeFlag")]
		public System.Nullable<byte> StockOutNoticeFlag
		{
			get
			{
				return this._StockOutNoticeFlag;
			}
			set
			{
				if ((this._StockOutNoticeFlag != value))
				{
					this._StockOutNoticeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMNLNoticeFlag")]
		public System.Nullable<byte> OMNLNoticeFlag
		{
			get
			{
				return this._OMNLNoticeFlag;
			}
			set
			{
				if ((this._OMNLNoticeFlag != value))
				{
					this._OMNLNoticeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiaMyItemsFlag")]
		public System.Nullable<byte> AnesthesiaMyItemsFlag
		{
			get
			{
				return this._AnesthesiaMyItemsFlag;
			}
			set
			{
				if ((this._AnesthesiaMyItemsFlag != value))
				{
					this._AnesthesiaMyItemsFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackUndocumentedWasteFlag")]
		public System.Nullable<byte> ResolveUndocumentedWasteFlag
		{
			get
			{
				return this._TrackUndocumentedWasteFlag;
			}
			set
			{
				if ((this._TrackUndocumentedWasteFlag != value))
				{
					this._TrackUndocumentedWasteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentPickAreaKey")]
		public System.Nullable<System.Guid> ReplenishmentPickAreaKey
		{
			get
			{
				return this._ReplenishmentPickAreaKey;
			}
			set
			{
				if ((this._ReplenishmentPickAreaKey != value))
				{
					this._ReplenishmentPickAreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentPickAreaKeyNullValueFlag")]
		public byte ReplenishmentPickAreaKeyNullValueFlag
		{
			get
			{
				return this._ReplenishmentPickAreaKeyNullValueFlag;
			}
			set
			{
				if ((this._ReplenishmentPickAreaKeyNullValueFlag != value))
				{
					this._ReplenishmentPickAreaKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributorKey")]
		public System.Nullable<System.Guid> DistributorKey
		{
			get
			{
				return this._DistributorKey;
			}
			set
			{
				if ((this._DistributorKey != value))
				{
					this._DistributorKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributorKeyNullValueFlag")]
		public byte DistributorKeyNullValueFlag
		{
			get
			{
				return this._DistributorKeyNullValueFlag;
			}
			set
			{
				if ((this._DistributorKeyNullValueFlag != value))
				{
					this._DistributorKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemFlag")]
		public System.Nullable<byte> MedItemFlag
		{
			get
			{
				return this._MedItemFlag;
			}
			set
			{
				if ((this._MedItemFlag != value))
				{
					this._MedItemFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemTypeInternalCode")]
		public string MedItemTypeInternalCode
		{
			get
			{
				return this._MedItemTypeInternalCode;
			}
			set
			{
				if ((this._MedItemTypeInternalCode != value))
				{
					this._MedItemTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemTypeInternalCodeNullValueFlag")]
		public byte MedItemTypeInternalCodeNullValueFlag
		{
			get
			{
				return this._MedItemTypeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._MedItemTypeInternalCodeNullValueFlag != value))
				{
					this._MedItemTypeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOMKeyPresent")]
		public byte StrengthUOMKeyPresent
		{
			get
			{
				return this._StrengthUOMKeyPresent;
			}
			set
			{
				if ((this._StrengthUOMKeyPresent != value))
				{
					this._StrengthUOMKeyPresent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxCheckFlag")]
		public System.Nullable<byte> RxCheckFlag
		{
			get
			{
				return this._RxCheckFlag;
			}
			set
			{
				if ((this._RxCheckFlag != value))
				{
					this._RxCheckFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintOnRemoveFlag")]
		public System.Nullable<byte> PrintOnRemoveFlag
		{
			get
			{
				return this._PrintOnRemoveFlag;
			}
			set
			{
				if ((this._PrintOnRemoveFlag != value))
				{
					this._PrintOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintOnReturnFlag")]
		public System.Nullable<byte> PrintOnReturnFlag
		{
			get
			{
				return this._PrintOnReturnFlag;
			}
			set
			{
				if ((this._PrintOnReturnFlag != value))
				{
					this._PrintOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintOnDisposeFlag")]
		public System.Nullable<byte> PrintOnDisposeFlag
		{
			get
			{
				return this._PrintOnDisposeFlag;
			}
			set
			{
				if ((this._PrintOnDisposeFlag != value))
				{
					this._PrintOnDisposeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowConversionOnRemoveFlag")]
		public System.Nullable<byte> ShowConversionOnRemoveFlag
		{
			get
			{
				return this._ShowConversionOnRemoveFlag;
			}
			set
			{
				if ((this._ShowConversionOnRemoveFlag != value))
				{
					this._ShowConversionOnRemoveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanAllOnPickFlag")]
		public System.Nullable<byte> ScanAllOnPickFlag
		{
			get
			{
				return this._ScanAllOnPickFlag;
			}
			set
			{
				if ((this._ScanAllOnPickFlag != value))
				{
					this._ScanAllOnPickFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountCUBIEEjectModeInternalCode")]
		public string CountCUBIEEjectModeInternalCode
		{
			get
			{
				return this._CountCUBIEEjectModeInternalCode;
			}
			set
			{
				if ((this._CountCUBIEEjectModeInternalCode != value))
				{
					this._CountCUBIEEjectModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountCUBIEEjectModeInternalCodeNullValueFlag")]
		public byte CountCUBIEEjectModeInternalCodeNullValueFlag
		{
			get
			{
				return this._CountCUBIEEjectModeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._CountCUBIEEjectModeInternalCodeNullValueFlag != value))
				{
					this._CountCUBIEEjectModeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeUOMKeyPresent")]
		public byte VolumeUOMKeyPresent
		{
			get
			{
				return this._VolumeUOMKeyPresent;
			}
			set
			{
				if ((this._VolumeUOMKeyPresent != value))
				{
					this._VolumeUOMKeyPresent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintOnLoadRefillFlag")]
		public System.Nullable<byte> PrintOnLoadRefillFlag
		{
			get
			{
				return this._PrintOnLoadRefillFlag;
			}
			set
			{
				if ((this._PrintOnLoadRefillFlag != value))
				{
					this._PrintOnLoadRefillFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderDispenseQuantityFlag")]
		public System.Nullable<byte> PharmacyOrderDispenseQuantityFlag
		{
			get
			{
				return this._PharmacyOrderDispenseQuantityFlag;
			}
			set
			{
				if ((this._PharmacyOrderDispenseQuantityFlag != value))
				{
					this._PharmacyOrderDispenseQuantityFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InjectableFlag")]
		public System.Nullable<byte> InjectableFlag
		{
			get
			{
				return this._InjectableFlag;
			}
			set
			{
				if ((this._InjectableFlag != value))
				{
					this._InjectableFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMOutdateTrackingFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMOutdateTrackingFlag
		{
			get
			{
				return this._GCSMOutdateTrackingFlag;
			}
			set
			{
				if ((this._GCSMOutdateTrackingFlag != value))
				{
					this._GCSMOutdateTrackingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMBlindCountFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMBlindCountFlag
		{
			get
			{
				return this._GCSMBlindCountFlag;
			}
			set
			{
				if ((this._GCSMBlindCountFlag != value))
				{
					this._GCSMBlindCountFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnInventoryCountFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnInventoryCountFlag
		{
			get
			{
				return this._GCSMWitnessOnInventoryCountFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnInventoryCountFlag != value))
				{
					this._GCSMWitnessOnInventoryCountFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnOutdateFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnOutdateFlag
		{
			get
			{
				return this._GCSMWitnessOnOutdateFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnOutdateFlag != value))
				{
					this._GCSMWitnessOnOutdateFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReturnFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnReturnFlag
		{
			get
			{
				return this._GCSMWitnessOnReturnFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReturnFlag != value))
				{
					this._GCSMWitnessOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAutorestockFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnAutorestockFlag
		{
			get
			{
				return this._GCSMWitnessOnAutorestockFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAutorestockFlag != value))
				{
					this._GCSMWitnessOnAutorestockFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnCompoundingFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnCompoundingFlag
		{
			get
			{
				return this._GCSMWitnessOnCompoundingFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnCompoundingFlag != value))
				{
					this._GCSMWitnessOnCompoundingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnDestructionBinFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnDestructionBinFlag != value))
				{
					this._GCSMWitnessOnDestructionBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnDiscrepancyResolutionFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnDiscrepancyResolutionFlag
		{
			get
			{
				return this._GCSMWitnessOnDiscrepancyResolutionFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnDiscrepancyResolutionFlag != value))
				{
					this._GCSMWitnessOnDiscrepancyResolutionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnIssueFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnIssueFlag
		{
			get
			{
				return this._GCSMWitnessOnIssueFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnIssueFlag != value))
				{
					this._GCSMWitnessOnIssueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnPrescriptionFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnPrescriptionFlag
		{
			get
			{
				return this._GCSMWitnessOnPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnPrescriptionFlag != value))
				{
					this._GCSMWitnessOnPrescriptionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReceiveFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnReceiveFlag
		{
			get
			{
				return this._GCSMWitnessOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReceiveFlag != value))
				{
					this._GCSMWitnessOnReceiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnSellFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnSellFlag
		{
			get
			{
				return this._GCSMWitnessOnSellFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnSellFlag != value))
				{
					this._GCSMWitnessOnSellFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnStockTransferFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnStockTransferFlag
		{
			get
			{
				return this._GCSMWitnessOnStockTransferFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnStockTransferFlag != value))
				{
					this._GCSMWitnessOnStockTransferFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnWasteFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnWasteFlag
		{
			get
			{
				return this._GCSMWitnessOnWasteFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnWasteFlag != value))
				{
					this._GCSMWitnessOnWasteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnReturnFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMScanOnReturnFlag
		{
			get
			{
				return this._GCSMScanOnReturnFlag;
			}
			set
			{
				if ((this._GCSMScanOnReturnFlag != value))
				{
					this._GCSMScanOnReturnFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnAutorestockFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMScanOnAutorestockFlag
		{
			get
			{
				return this._GCSMScanOnAutorestockFlag;
			}
			set
			{
				if ((this._GCSMScanOnAutorestockFlag != value))
				{
					this._GCSMScanOnAutorestockFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnIssueFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMScanOnIssueFlag
		{
			get
			{
				return this._GCSMScanOnIssueFlag;
			}
			set
			{
				if ((this._GCSMScanOnIssueFlag != value))
				{
					this._GCSMScanOnIssueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnPrescriptionFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMScanOnPrescriptionFlag
		{
			get
			{
				return this._GCSMScanOnPrescriptionFlag;
			}
			set
			{
				if ((this._GCSMScanOnPrescriptionFlag != value))
				{
					this._GCSMScanOnPrescriptionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnReceiveFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMScanOnReceiveFlag
		{
			get
			{
				return this._GCSMScanOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMScanOnReceiveFlag != value))
				{
					this._GCSMScanOnReceiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnSellFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMScanOnSellFlag
		{
			get
			{
				return this._GCSMScanOnSellFlag;
			}
			set
			{
				if ((this._GCSMScanOnSellFlag != value))
				{
					this._GCSMScanOnSellFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnStockTransferFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMScanOnStockTransferFlag
		{
			get
			{
				return this._GCSMScanOnStockTransferFlag;
			}
			set
			{
				if ((this._GCSMScanOnStockTransferFlag != value))
				{
					this._GCSMScanOnStockTransferFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCriticalLowPercentage", DbType="TinyInt")]
		public System.Nullable<byte> GCSMCriticalLowPercentage
		{
			get
			{
				return this._GCSMCriticalLowPercentage;
			}
			set
			{
				if ((this._GCSMCriticalLowPercentage != value))
				{
					this._GCSMCriticalLowPercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintOnReceiveFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMPrintOnReceiveFlag
		{
			get
			{
				return this._GCSMPrintOnReceiveFlag;
			}
			set
			{
				if ((this._GCSMPrintOnReceiveFlag != value))
				{
					this._GCSMPrintOnReceiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDistributorKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GCSMDistributorKey
		{
			get
			{
				return this._GCSMDistributorKey;
			}
			set
			{
				if ((this._GCSMDistributorKey != value))
				{
					this._GCSMDistributorKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintSingleMedSheetFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMPrintSingleMedSheetFlag
		{
			get
			{
				return this._GCSMPrintSingleMedSheetFlag;
			}
			set
			{
				if ((this._GCSMPrintSingleMedSheetFlag != value))
				{
					this._GCSMPrintSingleMedSheetFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintDripSheetFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMPrintDripSheetFlag
		{
			get
			{
				return this._GCSMPrintDripSheetFlag;
			}
			set
			{
				if ((this._GCSMPrintDripSheetFlag != value))
				{
					this._GCSMPrintDripSheetFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMPrintMaximumRowsFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMPrintMaximumRowsFlag
		{
			get
			{
				return this._GCSMPrintMaximumRowsFlag;
			}
			set
			{
				if ((this._GCSMPrintMaximumRowsFlag != value))
				{
					this._GCSMPrintMaximumRowsFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMAdditionalLabelsPrintedQuantityNullValueFlag")]
		public byte GCSMAdditionalLabelsPrintedQuantityNullValueFlag
		{
			get
			{
				return this._GCSMAdditionalLabelsPrintedQuantityNullValueFlag;
			}
			set
			{
				if ((this._GCSMAdditionalLabelsPrintedQuantityNullValueFlag != value))
				{
					this._GCSMAdditionalLabelsPrintedQuantityNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDistributorKeyNullValueFlag")]
		public System.Nullable<byte> GCSMDistributorKeyNullValueFlag
		{
			get
			{
				return this._GCSMDistributorKeyNullValueFlag;
			}
			set
			{
				if ((this._GCSMDistributorKeyNullValueFlag != value))
				{
					this._GCSMDistributorKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCriticalLowPercentageNullValueFlag")]
		public byte GCSMCriticalLowPercentageNullValueFlag
		{
			get
			{
				return this._GCSMCriticalLowPercentageNullValueFlag;
			}
			set
			{
				if ((this._GCSMCriticalLowPercentageNullValueFlag != value))
				{
					this._GCSMCriticalLowPercentageNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMScanOnCompoundingFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMScanOnCompoundingFlag
		{
			get
			{
				return this._GCSMScanOnCompoundingFlag;
			}
			set
			{
				if ((this._GCSMScanOnCompoundingFlag != value))
				{
					this._GCSMScanOnCompoundingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnRecallFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnRecallFlag
		{
			get
			{
				return this._GCSMWitnessOnRecallFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnRecallFlag != value))
				{
					this._GCSMWitnessOnRecallFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnReverseCompoundingFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnReverseCompoundingFlag
		{
			get
			{
				return this._GCSMWitnessOnReverseCompoundingFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnReverseCompoundingFlag != value))
				{
					this._GCSMWitnessOnReverseCompoundingFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnUnloadFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMWitnessOnUnloadFlag
		{
			get
			{
				return this._GCSMWitnessOnUnloadFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnUnloadFlag != value))
				{
					this._GCSMWitnessOnUnloadFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMRequireInventoryReferenceNumberFlag", DbType="Bit NOT NULL")]
		public System.Nullable<byte> GCSMRequireInventoryReferenceNumberFlag
		{
			get
			{
				return this._GCSMRequireInventoryReferenceNumberFlag;
			}
			set
			{
				if ((this._GCSMRequireInventoryReferenceNumberFlag != value))
				{
					this._GCSMRequireInventoryReferenceNumberFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMRequireLotNumberWhenRecallFlag", DbType="Bit NOT NULL")]
		public byte GCSMRequireLotNumberWhenRecallFlag
		{
			get
			{
				return this._GCSMRequireLotNumberWhenRecallFlag;
			}
			set
			{
				if ((this._GCSMRequireLotNumberWhenRecallFlag != value))
				{
					this._GCSMRequireLotNumberWhenRecallFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMStockOutNoticeFlag", DbType="Bit NOT NULL")]
		public byte GCSMStockOutNoticeFlag
		{
			get
			{
				return this._GCSMStockOutNoticeFlag;
			}
			set
			{
				if ((this._GCSMStockOutNoticeFlag != value))
				{
					this._GCSMStockOutNoticeFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCountCUBIEEjectModeInternalCode")]
		public string GCSMCountCUBIEEjectModeInternalCode
		{
			get
			{
				return this._GCSMCountCUBIEEjectModeInternalCode;
			}
			set
			{
				if ((this._GCSMCountCUBIEEjectModeInternalCode != value))
				{
					this._GCSMCountCUBIEEjectModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMCountCUBIEEjectModeInternalCodeNullValueFlag")]
		public byte GCSMCountCUBIEEjectModeInternalCodeNullValueFlag
		{
			get
			{
				return this._GCSMCountCUBIEEjectModeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._GCSMCountCUBIEEjectModeInternalCodeNullValueFlag != value))
				{
					this._GCSMCountCUBIEEjectModeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMVerifyCountModeInternalCode")]
		public string GCSMVerifyCountModeInternalCode
		{
			get
			{
				return this._GCSMVerifyCountModeInternalCode;
			}
			set
			{
				if ((this._GCSMVerifyCountModeInternalCode != value))
				{
					this._GCSMVerifyCountModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMVerifyCountModeInternalCodeNullValueFlag")]
		public byte GCSMVerifyCountModeInternalCodeNullValueFlag
		{
			get
			{
				return this._GCSMVerifyCountModeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._GCSMVerifyCountModeInternalCodeNullValueFlag != value))
				{
					this._GCSMVerifyCountModeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMAdditionalLabelsPrintedQuantity")]
		public string GCSMAdditionalLabelsPrintedQuantity
		{
			get
			{
				return this._GCSMAdditionalLabelsPrintedQuantity;
			}
			set
			{
				if ((this._GCSMAdditionalLabelsPrintedQuantity != value))
				{
					this._GCSMAdditionalLabelsPrintedQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMMedReturnModeInternalCode")]
		public string GCSMMedReturnModeInternalCode
		{
			get
			{
				return this._GCSMMedReturnModeInternalCode;
			}
			set
			{
				if ((this._GCSMMedReturnModeInternalCode != value))
				{
					this._GCSMMedReturnModeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMMedReturnModeInternalCodeNullValueFlag")]
		public byte GCSMMedReturnModeInternalCodeNullValueFlag
		{
			get
			{
				return this._GCSMMedReturnModeInternalCodeNullValueFlag;
			}
			set
			{
				if ((this._GCSMMedReturnModeInternalCodeNullValueFlag != value))
				{
					this._GCSMMedReturnModeInternalCodeNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMADMDispenseQuantity")]
		public string GCSMADMDispenseQuantity
		{
			get
			{
				return this._GCSMADMDispenseQuantity;
			}
			set
			{
				if ((this._GCSMADMDispenseQuantity != value))
				{
					this._GCSMADMDispenseQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMDistributorPackageSizeQuantity")]
		public string GCSMDistributorPackageSizeQuantity
		{
			get
			{
				return this._GCSMDistributorPackageSizeQuantity;
			}
			set
			{
				if ((this._GCSMDistributorPackageSizeQuantity != value))
				{
					this._GCSMDistributorPackageSizeQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMTotalDeviceParDurationAmountNullValueFlag")]
		public byte GCSMTotalDeviceParDurationAmountNullValueFlag
		{
			get
			{
				return this._GCSMTotalDeviceParDurationAmountNullValueFlag;
			}
			set
			{
				if ((this._GCSMTotalDeviceParDurationAmountNullValueFlag != value))
				{
					this._GCSMTotalDeviceParDurationAmountNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMTotalParDurationAmountNullValueFlag")]
		public byte GCSMTotalParDurationAmountNullValueFlag
		{
			get
			{
				return this._GCSMTotalParDurationAmountNullValueFlag;
			}
			set
			{
				if ((this._GCSMTotalParDurationAmountNullValueFlag != value))
				{
					this._GCSMTotalParDurationAmountNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMTotalDeviceParDurationAmount")]
		public System.Nullable<short> GCSMTotalDeviceParDurationAmount
		{
			get
			{
				return this._GCSMTotalDeviceParDurationAmount;
			}
			set
			{
				if ((this._GCSMTotalDeviceParDurationAmount != value))
				{
					this._GCSMTotalDeviceParDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMTotalParDurationAmount")]
		public System.Nullable<short> GCSMTotalParDurationAmount
		{
			get
			{
				return this._GCSMTotalParDurationAmount;
			}
			set
			{
				if ((this._GCSMTotalParDurationAmount != value))
				{
					this._GCSMTotalParDurationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIISafeKitPresent")]
		public byte CIISafeKitPresent
		{
			get
			{
				return this._CIISafeKitPresent;
			}
			set
			{
				if ((this._CIISafeKitPresent != value))
				{
					this._CIISafeKitPresent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAddToDestructionBinFlag", DbType="Bit NOT NULL")]
		public byte GCSMWitnessOnAddToDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnAddToDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAddToDestructionBinFlag != value))
				{
					this._GCSMWitnessOnAddToDestructionBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMWitnessOnAccessToDestructionBinFlag", DbType="Bit NOT NULL")]
		public byte GCSMWitnessOnAccessToDestructionBinFlag
		{
			get
			{
				return this._GCSMWitnessOnAccessToDestructionBinFlag;
			}
			set
			{
				if ((this._GCSMWitnessOnAccessToDestructionBinFlag != value))
				{
					this._GCSMWitnessOnAccessToDestructionBinFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GCSMRequireOriginDestinationFlag")]
		public System.Nullable<byte> GCSMRequireOriginDestinationFlag
		{
			get
			{
				return this._GCSMRequireOriginDestinationFlag;
			}
			set
			{
				if ((this._GCSMRequireOriginDestinationFlag != value))
				{
					this._GCSMRequireOriginDestinationFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FacilityItemSummaryResult
	{
		
		private System.Guid _FacilityItemKey;
		
		private System.Guid _FacilityKey;
		
		private string _FacilityCode;
		
		private string _FacilityName;
		
		private System.Guid _ItemKey;
		
		private string _MedDisplayName;
		
		private bool _ComboFlag;
		
		private bool _ActiveFlag;
		
		private bool _MedItemFlag;
		
		private System.Nullable<System.Guid> _ExternalSystemKey;
		
		private System.Nullable<System.DateTime> _ExternalSystemDeleteUTCDateTime;
		
		private string _ItemID;
		
		private string _GenericName;
		
		private string _BrandName;
		
		private System.Nullable<System.Guid> _DosageFormKey;
		
		private string _DosageFormCode;
		
		private string _StrengthText;
		
		private System.Nullable<decimal> _StrengthAmount;
		
		private System.Nullable<System.Guid> _StrengthUOMKey;
		
		private string _StrengthUOMDisplayCode;
		
		private System.Nullable<decimal> _TotalVolumeAmount;
		
		private System.Nullable<System.Guid> _TotalVolumeUOMKey;
		
		private string _TotalVolumeUOMDisplayCode;
		
		private string _MedItemTypeInternalCode;
		
		private long _TotalRows;
		
		private string _ItemTypeInternalCode;
		
		private string _ItemSubTypeInternalCode;
		
		public FacilityItemSummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey")]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey")]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityCode", CanBeNull=false)]
		public string FacilityCode
		{
			get
			{
				return this._FacilityCode;
			}
			set
			{
				if ((this._FacilityCode != value))
				{
					this._FacilityCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", CanBeNull=false)]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this._FacilityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey")]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this._ItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedDisplayName", CanBeNull=false)]
		public string MedDisplayName
		{
			get
			{
				return this._MedDisplayName;
			}
			set
			{
				if ((this._MedDisplayName != value))
				{
					this._MedDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboFlag")]
		public bool ComboFlag
		{
			get
			{
				return this._ComboFlag;
			}
			set
			{
				if ((this._ComboFlag != value))
				{
					this._ComboFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemFlag")]
		public bool MedItemFlag
		{
			get
			{
				return this._MedItemFlag;
			}
			set
			{
				if ((this._MedItemFlag != value))
				{
					this._MedItemFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey")]
		public System.Nullable<System.Guid> ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this._ExternalSystemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemDeleteUTCDateTime")]
		public System.Nullable<System.DateTime> ExternalSystemDeleteUTCDateTime
		{
			get
			{
				return this._ExternalSystemDeleteUTCDateTime;
			}
			set
			{
				if ((this._ExternalSystemDeleteUTCDateTime != value))
				{
					this._ExternalSystemDeleteUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", CanBeNull=false)]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericName", CanBeNull=false)]
		public string GenericName
		{
			get
			{
				return this._GenericName;
			}
			set
			{
				if ((this._GenericName != value))
				{
					this._GenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormKey")]
		public System.Nullable<System.Guid> DosageFormKey
		{
			get
			{
				return this._DosageFormKey;
			}
			set
			{
				if ((this._DosageFormKey != value))
				{
					this._DosageFormKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormCode", CanBeNull=false)]
		public string DosageFormCode
		{
			get
			{
				return this._DosageFormCode;
			}
			set
			{
				if ((this._DosageFormCode != value))
				{
					this._DosageFormCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthText", CanBeNull=false)]
		public string StrengthText
		{
			get
			{
				return this._StrengthText;
			}
			set
			{
				if ((this._StrengthText != value))
				{
					this._StrengthText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthAmount")]
		public System.Nullable<decimal> StrengthAmount
		{
			get
			{
				return this._StrengthAmount;
			}
			set
			{
				if ((this._StrengthAmount != value))
				{
					this._StrengthAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOMKey")]
		public System.Nullable<System.Guid> StrengthUOMKey
		{
			get
			{
				return this._StrengthUOMKey;
			}
			set
			{
				if ((this._StrengthUOMKey != value))
				{
					this._StrengthUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOMDisplayCode", CanBeNull=false)]
		public string StrengthUOMDisplayCode
		{
			get
			{
				return this._StrengthUOMDisplayCode;
			}
			set
			{
				if ((this._StrengthUOMDisplayCode != value))
				{
					this._StrengthUOMDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeAmount")]
		public System.Nullable<decimal> TotalVolumeAmount
		{
			get
			{
				return this._TotalVolumeAmount;
			}
			set
			{
				if ((this._TotalVolumeAmount != value))
				{
					this._TotalVolumeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeUOMKey")]
		public System.Nullable<System.Guid> TotalVolumeUOMKey
		{
			get
			{
				return this._TotalVolumeUOMKey;
			}
			set
			{
				if ((this._TotalVolumeUOMKey != value))
				{
					this._TotalVolumeUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeUOMDisplayCode", CanBeNull=false)]
		public string TotalVolumeUOMDisplayCode
		{
			get
			{
				return this._TotalVolumeUOMDisplayCode;
			}
			set
			{
				if ((this._TotalVolumeUOMDisplayCode != value))
				{
					this._TotalVolumeUOMDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemTypeInternalCode", CanBeNull=false)]
		public string MedItemTypeInternalCode
		{
			get
			{
				return this._MedItemTypeInternalCode;
			}
			set
			{
				if ((this._MedItemTypeInternalCode != value))
				{
					this._MedItemTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRows")]
		public long TotalRows
		{
			get
			{
				return this._TotalRows;
			}
			set
			{
				if ((this._TotalRows != value))
				{
					this._TotalRows = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTypeInternalCode")]
		public string ItemTypeInternalCode
		{
			get
			{
				return this._ItemTypeInternalCode;
			}
			set
			{
				if ((this._ItemTypeInternalCode != value))
				{
					this._ItemTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSubTypeInternalCode")]
		public string ItemSubTypeInternalCode
		{
			get
			{
				return this._ItemSubTypeInternalCode;
			}
			set
			{
				if ((this._ItemSubTypeInternalCode != value))
				{
					this._ItemSubTypeInternalCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class OverrideGroupCommonAttributeResult
	{
		
		private System.Guid _OverrideGroupKey;
		
		private string _DisplayCode;
		
		private string _DescriptionText;
		
		private bool _ActiveFlag;
		
		public OverrideGroupCommonAttributeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideGroupKey")]
		public System.Guid OverrideGroupKey
		{
			get
			{
				return this._OverrideGroupKey;
			}
			set
			{
				if ((this._OverrideGroupKey != value))
				{
					this._OverrideGroupKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", CanBeNull=false)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this._DisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", CanBeNull=false)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this._DescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this._ActiveFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PickAreaCommonAttributeResult
	{
		
		private System.Guid _PickAreaKey;
		
		private string _PickAreaName;
		
		public PickAreaCommonAttributeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickAreaKey")]
		public System.Guid PickAreaKey
		{
			get
			{
				return this._PickAreaKey;
			}
			set
			{
				if ((this._PickAreaKey != value))
				{
					this._PickAreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickAreaName", CanBeNull=false)]
		public string PickAreaName
		{
			get
			{
				return this._PickAreaName;
			}
			set
			{
				if ((this._PickAreaName != value))
				{
					this._PickAreaName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ClinicalDataSubjectCommonAttributeResult
	{
		
		private string _PatientCareFunctionInternalCode;
		
		private System.Guid _ClinicalDataSubjectKey;
		
		public ClinicalDataSubjectCommonAttributeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientCareFunctionInternalCode", CanBeNull=false)]
		public string PatientCareFunctionInternalCode
		{
			get
			{
				return this._PatientCareFunctionInternalCode;
			}
			set
			{
				if ((this._PatientCareFunctionInternalCode != value))
				{
					this._PatientCareFunctionInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectKey")]
		public System.Guid ClinicalDataSubjectKey
		{
			get
			{
				return this._ClinicalDataSubjectKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectKey != value))
				{
					this._ClinicalDataSubjectKey = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PharmacyFormularySummaryResult
	{
		
		private System.Guid _MedItemKey;
		
		private System.Guid _MedItemSnapshotKey;
		
		private bool _MedItemFlag;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private System.Nullable<System.Guid> _ExternalSystemKey;
		
		private System.Nullable<System.DateTime> _ExternalSystemDeleteUTCDateTime;
		
		private string _MedDisplayName;
		
		private string _ItemID;
		
		private string _PureGenericName;
		
		private string _GenericName;
		
		private string _BrandName;
		
		private System.Nullable<System.Guid> _DosageFormKey;
		
		private string _DosageFormCode;
		
		private string _StrengthText;
		
		private System.Nullable<decimal> _StrengthAmount;
		
		private System.Nullable<System.Guid> _StrengthUOMKey;
		
		private string _StrengthUOMDisplayCode;
		
		private System.Nullable<decimal> _TotalVolumeAmount;
		
		private System.Nullable<System.Guid> _TotalVolumeUOMKey;
		
		private string _TotalVolumeUOMDisplayCode;
		
		private string _MedItemTypeInternalCode;
		
		private string _EquivalencyDosageFormDisplayCode;
		
		private long _TotalRows;
		
		public PharmacyFormularySummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey")]
		public System.Guid MedItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					this._MedItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemSnapshotKey")]
		public System.Guid MedItemSnapshotKey
		{
			get
			{
				return this._MedItemSnapshotKey;
			}
			set
			{
				if ((this._MedItemSnapshotKey != value))
				{
					this._MedItemSnapshotKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemFlag")]
		public bool MedItemFlag
		{
			get
			{
				return this._MedItemFlag;
			}
			set
			{
				if ((this._MedItemFlag != value))
				{
					this._MedItemFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey")]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey")]
		public System.Nullable<System.Guid> ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this._ExternalSystemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemDeleteUTCDateTime")]
		public System.Nullable<System.DateTime> ExternalSystemDeleteUTCDateTime
		{
			get
			{
				return this._ExternalSystemDeleteUTCDateTime;
			}
			set
			{
				if ((this._ExternalSystemDeleteUTCDateTime != value))
				{
					this._ExternalSystemDeleteUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedDisplayName", CanBeNull=false)]
		public string MedDisplayName
		{
			get
			{
				return this._MedDisplayName;
			}
			set
			{
				if ((this._MedDisplayName != value))
				{
					this._MedDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", CanBeNull=false)]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PureGenericName", CanBeNull=false)]
		public string PureGenericName
		{
			get
			{
				return this._PureGenericName;
			}
			set
			{
				if ((this._PureGenericName != value))
				{
					this._PureGenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericName", CanBeNull=false)]
		public string GenericName
		{
			get
			{
				return this._GenericName;
			}
			set
			{
				if ((this._GenericName != value))
				{
					this._GenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormKey")]
		public System.Nullable<System.Guid> DosageFormKey
		{
			get
			{
				return this._DosageFormKey;
			}
			set
			{
				if ((this._DosageFormKey != value))
				{
					this._DosageFormKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormCode", CanBeNull=false)]
		public string DosageFormCode
		{
			get
			{
				return this._DosageFormCode;
			}
			set
			{
				if ((this._DosageFormCode != value))
				{
					this._DosageFormCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthText", CanBeNull=false)]
		public string StrengthText
		{
			get
			{
				return this._StrengthText;
			}
			set
			{
				if ((this._StrengthText != value))
				{
					this._StrengthText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthAmount")]
		public System.Nullable<decimal> StrengthAmount
		{
			get
			{
				return this._StrengthAmount;
			}
			set
			{
				if ((this._StrengthAmount != value))
				{
					this._StrengthAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOMKey")]
		public System.Nullable<System.Guid> StrengthUOMKey
		{
			get
			{
				return this._StrengthUOMKey;
			}
			set
			{
				if ((this._StrengthUOMKey != value))
				{
					this._StrengthUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOMDisplayCode", CanBeNull=false)]
		public string StrengthUOMDisplayCode
		{
			get
			{
				return this._StrengthUOMDisplayCode;
			}
			set
			{
				if ((this._StrengthUOMDisplayCode != value))
				{
					this._StrengthUOMDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeAmount")]
		public System.Nullable<decimal> TotalVolumeAmount
		{
			get
			{
				return this._TotalVolumeAmount;
			}
			set
			{
				if ((this._TotalVolumeAmount != value))
				{
					this._TotalVolumeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeUOMKey")]
		public System.Nullable<System.Guid> TotalVolumeUOMKey
		{
			get
			{
				return this._TotalVolumeUOMKey;
			}
			set
			{
				if ((this._TotalVolumeUOMKey != value))
				{
					this._TotalVolumeUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeUOMDisplayCode", CanBeNull=false)]
		public string TotalVolumeUOMDisplayCode
		{
			get
			{
				return this._TotalVolumeUOMDisplayCode;
			}
			set
			{
				if ((this._TotalVolumeUOMDisplayCode != value))
				{
					this._TotalVolumeUOMDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemTypeInternalCode", CanBeNull=false)]
		public string MedItemTypeInternalCode
		{
			get
			{
				return this._MedItemTypeInternalCode;
			}
			set
			{
				if ((this._MedItemTypeInternalCode != value))
				{
					this._MedItemTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalencyDosageFormDisplayCode", CanBeNull=false)]
		public string EquivalencyDosageFormDisplayCode
		{
			get
			{
				return this._EquivalencyDosageFormDisplayCode;
			}
			set
			{
				if ((this._EquivalencyDosageFormDisplayCode != value))
				{
					this._EquivalencyDosageFormDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRows")]
		public long TotalRows
		{
			get
			{
				return this._TotalRows;
			}
			set
			{
				if ((this._TotalRows != value))
				{
					this._TotalRows = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PharmacyFormularyCommonAtrributeResult
	{
		
		private System.Nullable<System.Guid> _ExternalSystemKey;
		
		private string _PureGenericName;
		
		private bool _PureGenericNameNullValueFlag;
		
		private System.Nullable<System.Guid> _DosageFormKey;
		
		private bool _DosageFormKeyNullValueFlag;
		
		private System.Nullable<System.Guid> _MedClassKey;
		
		private bool _MedClassKeyNullValueFlag;
		
		private long _TotalRows;
		
		public PharmacyFormularyCommonAtrributeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey")]
		public System.Nullable<System.Guid> ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this._ExternalSystemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PureGenericName", CanBeNull=false)]
		public string PureGenericName
		{
			get
			{
				return this._PureGenericName;
			}
			set
			{
				if ((this._PureGenericName != value))
				{
					this._PureGenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PureGenericNameNullValueFlag")]
		public bool PureGenericNameNullValueFlag
		{
			get
			{
				return this._PureGenericNameNullValueFlag;
			}
			set
			{
				if ((this._PureGenericNameNullValueFlag != value))
				{
					this._PureGenericNameNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormKey")]
		public System.Nullable<System.Guid> DosageFormKey
		{
			get
			{
				return this._DosageFormKey;
			}
			set
			{
				if ((this._DosageFormKey != value))
				{
					this._DosageFormKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormKeyNullValueFlag")]
		public bool DosageFormKeyNullValueFlag
		{
			get
			{
				return this._DosageFormKeyNullValueFlag;
			}
			set
			{
				if ((this._DosageFormKeyNullValueFlag != value))
				{
					this._DosageFormKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassKey")]
		public System.Nullable<System.Guid> MedClassKey
		{
			get
			{
				return this._MedClassKey;
			}
			set
			{
				if ((this._MedClassKey != value))
				{
					this._MedClassKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassKeyNullValueFlag")]
		public bool MedClassKeyNullValueFlag
		{
			get
			{
				return this._MedClassKeyNullValueFlag;
			}
			set
			{
				if ((this._MedClassKeyNullValueFlag != value))
				{
					this._MedClassKeyNullValueFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRows")]
		public long TotalRows
		{
			get
			{
				return this._TotalRows;
			}
			set
			{
				if ((this._TotalRows != value))
				{
					this._TotalRows = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.FractionalUOMType")]
	public partial class FractionalUOMTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityItemEntity> _FacilityItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public FractionalUOMTypeEntity()
		{
			this._FacilityItemEntities = new EntitySet<FacilityItemEntity>(new Action<FacilityItemEntity>(this.attach_FacilityItemEntities), new Action<FacilityItemEntity>(this.detach_FacilityItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FractionalUOMTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FractionalUOMTypeEntity_FacilityItemEntity", Storage="_FacilityItemEntities", ThisKey="InternalCode", OtherKey="FractionalUOMTypeInternalCode")]
		public EntitySet<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this._FacilityItemEntities;
			}
			set
			{
				this._FacilityItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.FractionalUOMTypeEntity = this;
		}
		
		private void detach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.FractionalUOMTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Item.AutoMedLabelMode")]
	public partial class AutoMedLabelModeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<FacilityItemEntity> _FacilityItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public AutoMedLabelModeEntity()
		{
			this._FacilityItemEntities = new EntitySet<FacilityItemEntity>(new Action<FacilityItemEntity>(this.attach_FacilityItemEntities), new Action<FacilityItemEntity>(this.detach_FacilityItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AutoMedLabelModeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AutoMedLabelModeEntity_FacilityItemEntity", Storage="_FacilityItemEntities", ThisKey="InternalCode", OtherKey="AutoMedLabelModeInternalCode")]
		public EntitySet<FacilityItemEntity> FacilityItemEntities
		{
			get
			{
				return this._FacilityItemEntities;
			}
			set
			{
				this._FacilityItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.AutoMedLabelModeEntity = this;
		}
		
		private void detach_FacilityItemEntities(FacilityItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.AutoMedLabelModeEntity = null;
		}
	}
	
	public partial class bsp_ListNewFacilityItemQueueSummaryResult
	{
		
		private System.Guid _FacilityItemQueueKey;
		
		private string _ItemID;
		
		private string _BrandName;
		
		private string _DisplayName;
		
		private System.Nullable<bool> _ActiveOrderFlag;
		
		private System.Nullable<int> _TotalRows;
		
		public bsp_ListNewFacilityItemQueueSummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemQueueKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityItemQueueKey
		{
			get
			{
				return this._FacilityItemQueueKey;
			}
			set
			{
				if ((this._FacilityItemQueueKey != value))
				{
					this._FacilityItemQueueKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="NVarChar(100)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(100)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(1000)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveOrderFlag", DbType="Bit")]
		public System.Nullable<bool> ActiveOrderFlag
		{
			get
			{
				return this._ActiveOrderFlag;
			}
			set
			{
				if ((this._ActiveOrderFlag != value))
				{
					this._ActiveOrderFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRows", DbType="Int")]
		public System.Nullable<int> TotalRows
		{
			get
			{
				return this._TotalRows;
			}
			set
			{
				if ((this._TotalRows != value))
				{
					this._TotalRows = value;
				}
			}
		}
	}
	
	public partial class bsp_ListOverrideItemKeysResult
	{
		
		private System.Guid _ItemKey;
		
		public bsp_ListOverrideItemKeysResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this._ItemKey = value;
				}
			}
		}
	}
	
	public partial class bsp_ListPermissibleItemKeysResult
	{
		
		private System.Guid _ItemKey;
		
		public bsp_ListPermissibleItemKeysResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this._ItemKey = value;
				}
			}
		}
	}
	
	public partial class bsp_ListDeletedFacilityItemQueueSummaryResult
	{
		
		private System.Guid _FacilityItemKey;
		
		private string _ItemID;
		
		private string _BrandName;
		
		private string _DisplayName;
		
		private System.Nullable<bool> _LoadedFlag;
		
		private System.Nullable<bool> _PendedFlag;
		
		private System.Nullable<int> _TotalRows;
		
		public bsp_ListDeletedFacilityItemQueueSummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="NVarChar(100)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(100)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(1000)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadedFlag", DbType="Bit")]
		public System.Nullable<bool> LoadedFlag
		{
			get
			{
				return this._LoadedFlag;
			}
			set
			{
				if ((this._LoadedFlag != value))
				{
					this._LoadedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendedFlag", DbType="Bit")]
		public System.Nullable<bool> PendedFlag
		{
			get
			{
				return this._PendedFlag;
			}
			set
			{
				if ((this._PendedFlag != value))
				{
					this._PendedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRows", DbType="Int")]
		public System.Nullable<int> TotalRows
		{
			get
			{
				return this._TotalRows;
			}
			set
			{
				if ((this._TotalRows != value))
				{
					this._TotalRows = value;
				}
			}
		}
	}
	
	public partial class bsp_ListDispensingDeviceItemInventoryResult
	{
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		private string _DispensingDeviceName;
		
		private System.Nullable<System.Guid> _ItemKey;
		
		private System.Nullable<decimal> _InventoryQuantity;
		
		private System.Nullable<bool> _BlindCount;
		
		private System.Nullable<bool> _DispenseFraction;
		
		private System.Guid _AreaKey;
		
		private string _AreaName;
		
		private System.Nullable<bool> _HasRemovePermission;
		
		private System.Nullable<bool> _SameAreaAsCurrentDevice;
		
		public bsp_ListDispensingDeviceItemInventoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this._DispensingDeviceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceName", DbType="VarChar(50)")]
		public string DispensingDeviceName
		{
			get
			{
				return this._DispensingDeviceName;
			}
			set
			{
				if ((this._DispensingDeviceName != value))
				{
					this._DispensingDeviceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this._ItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> InventoryQuantity
		{
			get
			{
				return this._InventoryQuantity;
			}
			set
			{
				if ((this._InventoryQuantity != value))
				{
					this._InventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlindCount", DbType="Bit")]
		public System.Nullable<bool> BlindCount
		{
			get
			{
				return this._BlindCount;
			}
			set
			{
				if ((this._BlindCount != value))
				{
					this._BlindCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispenseFraction", DbType="Bit")]
		public System.Nullable<bool> DispenseFraction
		{
			get
			{
				return this._DispenseFraction;
			}
			set
			{
				if ((this._DispenseFraction != value))
				{
					this._DispenseFraction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					this._AreaKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AreaName
		{
			get
			{
				return this._AreaName;
			}
			set
			{
				if ((this._AreaName != value))
				{
					this._AreaName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasRemovePermission", DbType="Bit")]
		public System.Nullable<bool> HasRemovePermission
		{
			get
			{
				return this._HasRemovePermission;
			}
			set
			{
				if ((this._HasRemovePermission != value))
				{
					this._HasRemovePermission = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SameAreaAsCurrentDevice", DbType="Bit")]
		public System.Nullable<bool> SameAreaAsCurrentDevice
		{
			get
			{
				return this._SameAreaAsCurrentDevice;
			}
			set
			{
				if ((this._SameAreaAsCurrentDevice != value))
				{
					this._SameAreaAsCurrentDevice = value;
				}
			}
		}
	}
	
	public partial class bsp_ListHistoricalMedicationsResult
	{
		
		private string _ItemID;
		
		private string _ItemDisplayName;
		
		private string _GenericName;
		
		private string _SearchGenericName;
		
		private string _BrandName;
		
		private string _SearchBrandName;
		
		private string _DosageFormText;
		
		private System.Nullable<System.Guid> _MedClassKey;
		
		private System.Nullable<decimal> _Strength;
		
		private string _StrengthDisplayCode;
		
		private System.Nullable<decimal> _TotalVolume;
		
		private string _TotalVolumeDisplayCode;
		
		private System.Nullable<decimal> _ConcentrationVolume;
		
		private string _ConcentrationVolumeDisplayCode;
		
		private System.Guid _ItemKey;
		
		public bsp_ListHistoricalMedicationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="NVarChar(100)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDisplayName", DbType="NVarChar(500)")]
		public string ItemDisplayName
		{
			get
			{
				return this._ItemDisplayName;
			}
			set
			{
				if ((this._ItemDisplayName != value))
				{
					this._ItemDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string GenericName
		{
			get
			{
				return this._GenericName;
			}
			set
			{
				if ((this._GenericName != value))
				{
					this._GenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchGenericName", DbType="NVarChar(150)")]
		public string SearchGenericName
		{
			get
			{
				return this._SearchGenericName;
			}
			set
			{
				if ((this._SearchGenericName != value))
				{
					this._SearchGenericName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(100)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this._BrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchBrandName", DbType="NVarChar(100)")]
		public string SearchBrandName
		{
			get
			{
				return this._SearchBrandName;
			}
			set
			{
				if ((this._SearchBrandName != value))
				{
					this._SearchBrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosageFormText", DbType="NVarChar(20)")]
		public string DosageFormText
		{
			get
			{
				return this._DosageFormText;
			}
			set
			{
				if ((this._DosageFormText != value))
				{
					this._DosageFormText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedClassKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MedClassKey
		{
			get
			{
				return this._MedClassKey;
			}
			set
			{
				if ((this._MedClassKey != value))
				{
					this._MedClassKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthDisplayCode", DbType="NVarChar(50)")]
		public string StrengthDisplayCode
		{
			get
			{
				return this._StrengthDisplayCode;
			}
			set
			{
				if ((this._StrengthDisplayCode != value))
				{
					this._StrengthDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolume", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> TotalVolume
		{
			get
			{
				return this._TotalVolume;
			}
			set
			{
				if ((this._TotalVolume != value))
				{
					this._TotalVolume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolumeDisplayCode", DbType="NVarChar(50)")]
		public string TotalVolumeDisplayCode
		{
			get
			{
				return this._TotalVolumeDisplayCode;
			}
			set
			{
				if ((this._TotalVolumeDisplayCode != value))
				{
					this._TotalVolumeDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolume", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> ConcentrationVolume
		{
			get
			{
				return this._ConcentrationVolume;
			}
			set
			{
				if ((this._ConcentrationVolume != value))
				{
					this._ConcentrationVolume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationVolumeDisplayCode", DbType="NVarChar(50)")]
		public string ConcentrationVolumeDisplayCode
		{
			get
			{
				return this._ConcentrationVolumeDisplayCode;
			}
			set
			{
				if ((this._ConcentrationVolumeDisplayCode != value))
				{
					this._ConcentrationVolumeDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this._ItemKey = value;
				}
			}
		}
	}
	
	public partial class bsp_ListRejectedDeletedItemProductIDsResult
	{
		
		private System.Guid _ProductIDKey;
		
		private string _ProductID;
		
		private System.DateTime _StartUTCDateTime;
		
		private bool _FromExternalSystemFlag;
		
		private System.Nullable<System.Guid> _LinkedByUserAccountKey;
		
		private System.DateTime _LinkedUTCDateTime;
		
		private System.Nullable<System.Guid> _VerifiedByUserAccountKey;
		
		private System.Nullable<System.DateTime> _VerifiedUTCDateTime;
		
		private string _ScanProductDeleteReasonInternalCode;
		
		private string _ScanProductDeleteReasonDescription;
		
		private string _OtherItemID;
		
		private string _MedDisplayName;
		
		private string _ItemID;
		
		public bsp_ListRejectedDeletedItemProductIDsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductIDKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProductIDKey
		{
			get
			{
				return this._ProductIDKey;
			}
			set
			{
				if ((this._ProductIDKey != value))
				{
					this._ProductIDKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this._StartUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromExternalSystemFlag", DbType="Bit NOT NULL")]
		public bool FromExternalSystemFlag
		{
			get
			{
				return this._FromExternalSystemFlag;
			}
			set
			{
				if ((this._FromExternalSystemFlag != value))
				{
					this._FromExternalSystemFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedByUserAccountKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LinkedByUserAccountKey
		{
			get
			{
				return this._LinkedByUserAccountKey;
			}
			set
			{
				if ((this._LinkedByUserAccountKey != value))
				{
					this._LinkedByUserAccountKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedUTCDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime LinkedUTCDateTime
		{
			get
			{
				return this._LinkedUTCDateTime;
			}
			set
			{
				if ((this._LinkedUTCDateTime != value))
				{
					this._LinkedUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedByUserAccountKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VerifiedByUserAccountKey
		{
			get
			{
				return this._VerifiedByUserAccountKey;
			}
			set
			{
				if ((this._VerifiedByUserAccountKey != value))
				{
					this._VerifiedByUserAccountKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> VerifiedUTCDateTime
		{
			get
			{
				return this._VerifiedUTCDateTime;
			}
			set
			{
				if ((this._VerifiedUTCDateTime != value))
				{
					this._VerifiedUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanProductDeleteReasonInternalCode", DbType="VarChar(10)")]
		public string ScanProductDeleteReasonInternalCode
		{
			get
			{
				return this._ScanProductDeleteReasonInternalCode;
			}
			set
			{
				if ((this._ScanProductDeleteReasonInternalCode != value))
				{
					this._ScanProductDeleteReasonInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanProductDeleteReasonDescription", DbType="NVarChar(50)")]
		public string ScanProductDeleteReasonDescription
		{
			get
			{
				return this._ScanProductDeleteReasonDescription;
			}
			set
			{
				if ((this._ScanProductDeleteReasonDescription != value))
				{
					this._ScanProductDeleteReasonDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherItemID", DbType="NVarChar(100)")]
		public string OtherItemID
		{
			get
			{
				return this._OtherItemID;
			}
			set
			{
				if ((this._OtherItemID != value))
				{
					this._OtherItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedDisplayName", DbType="NVarChar(1000)")]
		public string MedDisplayName
		{
			get
			{
				return this._MedDisplayName;
			}
			set
			{
				if ((this._MedDisplayName != value))
				{
					this._MedDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="NVarChar(100)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
	}
	
	public partial class bsp_ListRejectedDeletedItemScanCodesResult
	{
		
		private System.Guid _ItemScanCodeKey;
		
		private string _ScanCodeValue;
		
		private System.DateTime _StartUTCDateTime;
		
		private bool _FromExternalSystemFlag;
		
		private System.Nullable<System.Guid> _LinkedByUserAccountKey;
		
		private System.DateTime _LinkedUTCDateTime;
		
		private System.Nullable<System.Guid> _VerifiedByUserAccountKey;
		
		private System.Nullable<System.DateTime> _VerifiedUTCDateTime;
		
		private string _ScanProductDeleteReasonInternalCode;
		
		private string _ScanProductDeleteReasonDescription;
		
		private string _OtherItemID;
		
		private string _MedDisplayName;
		
		private string _ItemID;
		
		public bsp_ListRejectedDeletedItemScanCodesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemScanCodeKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemScanCodeKey
		{
			get
			{
				return this._ItemScanCodeKey;
			}
			set
			{
				if ((this._ItemScanCodeKey != value))
				{
					this._ItemScanCodeKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanCodeValue", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ScanCodeValue
		{
			get
			{
				return this._ScanCodeValue;
			}
			set
			{
				if ((this._ScanCodeValue != value))
				{
					this._ScanCodeValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this._StartUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromExternalSystemFlag", DbType="Bit NOT NULL")]
		public bool FromExternalSystemFlag
		{
			get
			{
				return this._FromExternalSystemFlag;
			}
			set
			{
				if ((this._FromExternalSystemFlag != value))
				{
					this._FromExternalSystemFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedByUserAccountKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LinkedByUserAccountKey
		{
			get
			{
				return this._LinkedByUserAccountKey;
			}
			set
			{
				if ((this._LinkedByUserAccountKey != value))
				{
					this._LinkedByUserAccountKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedUTCDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime LinkedUTCDateTime
		{
			get
			{
				return this._LinkedUTCDateTime;
			}
			set
			{
				if ((this._LinkedUTCDateTime != value))
				{
					this._LinkedUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedByUserAccountKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VerifiedByUserAccountKey
		{
			get
			{
				return this._VerifiedByUserAccountKey;
			}
			set
			{
				if ((this._VerifiedByUserAccountKey != value))
				{
					this._VerifiedByUserAccountKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> VerifiedUTCDateTime
		{
			get
			{
				return this._VerifiedUTCDateTime;
			}
			set
			{
				if ((this._VerifiedUTCDateTime != value))
				{
					this._VerifiedUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanProductDeleteReasonInternalCode", DbType="VarChar(10)")]
		public string ScanProductDeleteReasonInternalCode
		{
			get
			{
				return this._ScanProductDeleteReasonInternalCode;
			}
			set
			{
				if ((this._ScanProductDeleteReasonInternalCode != value))
				{
					this._ScanProductDeleteReasonInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanProductDeleteReasonDescription", DbType="NVarChar(50)")]
		public string ScanProductDeleteReasonDescription
		{
			get
			{
				return this._ScanProductDeleteReasonDescription;
			}
			set
			{
				if ((this._ScanProductDeleteReasonDescription != value))
				{
					this._ScanProductDeleteReasonDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherItemID", DbType="NVarChar(100)")]
		public string OtherItemID
		{
			get
			{
				return this._OtherItemID;
			}
			set
			{
				if ((this._OtherItemID != value))
				{
					this._OtherItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedDisplayName", DbType="NVarChar(1000)")]
		public string MedDisplayName
		{
			get
			{
				return this._MedDisplayName;
			}
			set
			{
				if ((this._MedDisplayName != value))
				{
					this._MedDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="NVarChar(100)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
	}
	
	public partial class bsp_AcceptQueuedItemsResult
	{
		
		private System.Guid _FacilityItemQueueKey;
		
		private System.Nullable<System.Guid> _FacilityKey;
		
		private string _ItemID;
		
		private System.Nullable<bool> _IDExists;
		
		public bsp_AcceptQueuedItemsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemQueueKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityItemQueueKey
		{
			get
			{
				return this._FacilityItemQueueKey;
			}
			set
			{
				if ((this._FacilityItemQueueKey != value))
				{
					this._FacilityItemQueueKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="NVarChar(100)")]
		public string ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDExists", DbType="Bit")]
		public System.Nullable<bool> IDExists
		{
			get
			{
				return this._IDExists;
			}
			set
			{
				if ((this._IDExists != value))
				{
					this._IDExists = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
