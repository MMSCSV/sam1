#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CareFusion.Dispensing.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSServerOLTP")]
	public partial class CdcDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClinicalDataCategoryEntity(ClinicalDataCategoryEntity instance);
    partial void UpdateClinicalDataCategoryEntity(ClinicalDataCategoryEntity instance);
    partial void DeleteClinicalDataCategoryEntity(ClinicalDataCategoryEntity instance);
    partial void InsertClinicalDataSubjectEntity(ClinicalDataSubjectEntity instance);
    partial void UpdateClinicalDataSubjectEntity(ClinicalDataSubjectEntity instance);
    partial void DeleteClinicalDataSubjectEntity(ClinicalDataSubjectEntity instance);
    partial void InsertClinicalDataSubjectDispensingDeviceEntity(ClinicalDataSubjectDispensingDeviceEntity instance);
    partial void UpdateClinicalDataSubjectDispensingDeviceEntity(ClinicalDataSubjectDispensingDeviceEntity instance);
    partial void DeleteClinicalDataSubjectDispensingDeviceEntity(ClinicalDataSubjectDispensingDeviceEntity instance);
    partial void InsertClinicalDataSubjectTypeEntity(ClinicalDataSubjectTypeEntity instance);
    partial void UpdateClinicalDataSubjectTypeEntity(ClinicalDataSubjectTypeEntity instance);
    partial void DeleteClinicalDataSubjectTypeEntity(ClinicalDataSubjectTypeEntity instance);
    partial void InsertClinicalDataResponseEntity(ClinicalDataResponseEntity instance);
    partial void UpdateClinicalDataResponseEntity(ClinicalDataResponseEntity instance);
    partial void DeleteClinicalDataResponseEntity(ClinicalDataResponseEntity instance);
    partial void InsertClinicalDataSubjectFacilityItemFunctionEntity(ClinicalDataSubjectFacilityItemFunctionEntity instance);
    partial void UpdateClinicalDataSubjectFacilityItemFunctionEntity(ClinicalDataSubjectFacilityItemFunctionEntity instance);
    partial void DeleteClinicalDataSubjectFacilityItemFunctionEntity(ClinicalDataSubjectFacilityItemFunctionEntity instance);
    partial void InsertClinicalDataSubjectUserTypeEntity(ClinicalDataSubjectUserTypeEntity instance);
    partial void UpdateClinicalDataSubjectUserTypeEntity(ClinicalDataSubjectUserTypeEntity instance);
    partial void DeleteClinicalDataSubjectUserTypeEntity(ClinicalDataSubjectUserTypeEntity instance);
    partial void InsertClinicalDataSubjectAreaEntity(ClinicalDataSubjectAreaEntity instance);
    partial void UpdateClinicalDataSubjectAreaEntity(ClinicalDataSubjectAreaEntity instance);
    partial void DeleteClinicalDataSubjectAreaEntity(ClinicalDataSubjectAreaEntity instance);
    #endregion
		
		public CdcDataContext() : 
				base("Data Source=.;Initial Catalog=DSServerOLTP;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public CdcDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CdcDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CdcDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CdcDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ClinicalDataCategoryEntity> ClinicalDataCategoryEntities
		{
			get
			{
				return this.GetTable<ClinicalDataCategoryEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClinicalDataSubjectEntity> ClinicalDataSubjectEntities
		{
			get
			{
				return this.GetTable<ClinicalDataSubjectEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClinicalDataSubjectDispensingDeviceEntity> ClinicalDataSubjectDispensingDeviceEntities
		{
			get
			{
				return this.GetTable<ClinicalDataSubjectDispensingDeviceEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClinicalDataSubjectTypeEntity> ClinicalDataSubjectTypeEntities
		{
			get
			{
				return this.GetTable<ClinicalDataSubjectTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClinicalDataResponseEntity> ClinicalDataResponseEntities
		{
			get
			{
				return this.GetTable<ClinicalDataResponseEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClinicalDataSubjectFacilityItemFunctionEntity> ClinicalDataSubjectFacilityItemFunctionEntities
		{
			get
			{
				return this.GetTable<ClinicalDataSubjectFacilityItemFunctionEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClinicalDataSubjectUserTypeEntity> ClinicalDataSubjectUserTypeEntities
		{
			get
			{
				return this.GetTable<ClinicalDataSubjectUserTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClinicalDataSubjectAreaEntity> ClinicalDataSubjectAreaEntities
		{
			get
			{
				return this.GetTable<ClinicalDataSubjectAreaEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataCategoryDelete")]
		public int usp_ClinicalDataCategoryDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataCategoryKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataCategoryKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), endUTCDateTime, endLocalDateTime, lastModifiedActorKey, clinicalDataCategoryKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataCategoryInsert")]
		public int usp_ClinicalDataCategoryInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(100)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataCategoryKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> clinicalDataCategoryKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), descriptionText, createdUTCDateTime, createdLocalDateTime, lastModifiedActorKey, clinicalDataCategoryKey);
			clinicalDataCategoryKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataCategoryUpdate")]
		public int usp_ClinicalDataCategoryUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(100)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> endLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataCategoryKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataCategoryKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), descriptionText, endUTCDateTime, endLocalDateTime, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, clinicalDataCategoryKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataResponseDelete")]
		public int usp_ClinicalDataResponseDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataResponseKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataResponseKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, clinicalDataResponseKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataResponseInsert")]
		public int usp_ClinicalDataResponseInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataAssentInternalCode", DbType="VarChar(10)")] string clinicalDataAssentInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResponseText", DbType="NVarChar(250)")] string responseText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstructionText", DbType="NVarChar(250)")] string instructionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataResponseKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> clinicalDataResponseKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, clinicalDataSubjectKey, clinicalDataAssentInternalCode, responseText, instructionText, lastModifiedActorKey, clinicalDataResponseKey);
			clinicalDataResponseKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataResponseUpdate")]
		public int usp_ClinicalDataResponseUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataAssentInternalCode", DbType="VarChar(10)")] string clinicalDataAssentInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResponseText", DbType="NVarChar(250)")] string responseText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstructionText", DbType="NVarChar(250)")] string instructionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataResponseKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataResponseKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, clinicalDataSubjectKey, clinicalDataAssentInternalCode, responseText, instructionText, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, clinicalDataResponseKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectDelete")]
		public int usp_ClinicalDataSubjectDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedActorKey, clinicalDataSubjectKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectDispensingDeviceDelete")]
		public int usp_ClinicalDataSubjectDispensingDeviceDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clinicalDataSubjectKey, dispensingDeviceKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectDispensingDeviceInsert")]
		public int usp_ClinicalDataSubjectDispensingDeviceInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clinicalDataSubjectKey, dispensingDeviceKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectUserTypeDelete")]
		public int usp_ClinicalDataSubjectUserTypeDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userTypeKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clinicalDataSubjectKey, userTypeKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectUserTypeInsert")]
		public int usp_ClinicalDataSubjectUserTypeInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userTypeKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clinicalDataSubjectKey, userTypeKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectAreaDelete")]
		public int usp_ClinicalDataSubjectAreaDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> areaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> disassociationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisassociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> disassociationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clinicalDataSubjectKey, areaKey, disassociationUTCDateTime, disassociationLocalDateTime, disassociationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectAreaInsert")]
		public int usp_ClinicalDataSubjectAreaInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AreaKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> areaKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> associationActorKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clinicalDataSubjectKey, areaKey, associationUTCDateTime, associationLocalDateTime, associationActorKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectUpdate")]
		public int usp_ClinicalDataSubjectUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataCategoryKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataCategoryKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectTypeInternalCode", DbType="VarChar(10)")] string clinicalDataSubjectTypeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayOnceFlag", DbType="Bit")] System.Nullable<bool> displayOnceFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(500)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleText", DbType="NVarChar(250)")] string titleText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatKitFlag", DbType="Bit")] System.Nullable<bool> statKitFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, clinicalDataCategoryKey, clinicalDataSubjectTypeInternalCode, displayOnceFlag, descriptionText, titleText, statKitFlag, activeFlag, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, clinicalDataSubjectKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="CDCat.usp_ClinicalDataSubjectInsert")]
		public int usp_ClinicalDataSubjectInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataCategoryKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataCategoryKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectTypeInternalCode", DbType="VarChar(10)")] string clinicalDataSubjectTypeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayOnceFlag", DbType="Bit")] System.Nullable<bool> displayOnceFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescriptionText", DbType="NVarChar(500)")] string descriptionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleText", DbType="NVarChar(250)")] string titleText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatKitFlag", DbType="Bit")] System.Nullable<bool> statKitFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActiveFlag", DbType="Bit")] System.Nullable<bool> activeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> clinicalDataSubjectKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, clinicalDataCategoryKey, clinicalDataSubjectTypeInternalCode, displayOnceFlag, descriptionText, titleText, statKitFlag, activeFlag, lastModifiedActorKey, clinicalDataSubjectKey);
			clinicalDataSubjectKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CDCat.vw_ClinicalDataCategoryCurrent")]
	public partial class ClinicalDataCategoryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private string _DescriptionText;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<ClinicalDataSubjectEntity> _ClinicalDataSubjectEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ClinicalDataCategoryEntity()
		{
			this._ClinicalDataSubjectEntities = new EntitySet<ClinicalDataSubjectEntity>(new Action<ClinicalDataSubjectEntity>(this.attach_ClinicalDataSubjectEntities), new Action<ClinicalDataSubjectEntity>(this.detach_ClinicalDataSubjectEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ClinicalDataCategoryKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataCategoryEntity_ClinicalDataSubjectEntity", Storage="_ClinicalDataSubjectEntities", ThisKey="Key", OtherKey="ClinicalDataCategoryKey")]
		public EntitySet<ClinicalDataSubjectEntity> ClinicalDataSubjectEntities
		{
			get
			{
				return this._ClinicalDataSubjectEntities;
			}
			set
			{
				this._ClinicalDataSubjectEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClinicalDataSubjectEntities(ClinicalDataSubjectEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataCategoryEntity = this;
		}
		
		private void detach_ClinicalDataSubjectEntities(ClinicalDataSubjectEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataCategoryEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CDCat.vw_ClinicalDataSubjectCurrent")]
	public partial class ClinicalDataSubjectEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ClinicalDataSubjectSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _ClinicalDataCategoryKey;
		
		private string _ClinicalDataSubjectTypeInternalCode;
		
		private bool _DisplayOnceFlag;
		
		private string _DescriptionText;
		
		private string _TitleText;
		
		private bool _StatKitFlag;
		
		private bool _ActiveFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<ClinicalDataSubjectDispensingDeviceEntity> _ClinicalDataSubjectDispensingDeviceEntities;
		
		private EntitySet<ClinicalDataResponseEntity> _ClinicalDataResponseEntities;
		
		private EntitySet<ClinicalDataSubjectFacilityItemFunctionEntity> _ClinicalDataSubjectFacilityItemFunctionEntities;
		
		private EntitySet<ClinicalDataSubjectUserTypeEntity> _ClinicalDataSubjectUserTypeEntities;
		
		private EntitySet<ClinicalDataSubjectAreaEntity> _ClinicalDataSubjectAreaEntities;
		
		private EntityRef<ClinicalDataCategoryEntity> _ClinicalDataCategoryEntity;
		
		private EntityRef<ClinicalDataSubjectTypeEntity> _ClinicalDataSubjectTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnClinicalDataSubjectSnapshotKeyChanging(System.Guid value);
    partial void OnClinicalDataSubjectSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnClinicalDataCategoryKeyChanging(System.Guid value);
    partial void OnClinicalDataCategoryKeyChanged();
    partial void OnClinicalDataSubjectTypeInternalCodeChanging(string value);
    partial void OnClinicalDataSubjectTypeInternalCodeChanged();
    partial void OnDisplayOnceFlagChanging(bool value);
    partial void OnDisplayOnceFlagChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnTitleTextChanging(string value);
    partial void OnTitleTextChanged();
    partial void OnStatKitFlagChanging(bool value);
    partial void OnStatKitFlagChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ClinicalDataSubjectEntity()
		{
			this._ClinicalDataSubjectDispensingDeviceEntities = new EntitySet<ClinicalDataSubjectDispensingDeviceEntity>(new Action<ClinicalDataSubjectDispensingDeviceEntity>(this.attach_ClinicalDataSubjectDispensingDeviceEntities), new Action<ClinicalDataSubjectDispensingDeviceEntity>(this.detach_ClinicalDataSubjectDispensingDeviceEntities));
			this._ClinicalDataResponseEntities = new EntitySet<ClinicalDataResponseEntity>(new Action<ClinicalDataResponseEntity>(this.attach_ClinicalDataResponseEntities), new Action<ClinicalDataResponseEntity>(this.detach_ClinicalDataResponseEntities));
			this._ClinicalDataSubjectFacilityItemFunctionEntities = new EntitySet<ClinicalDataSubjectFacilityItemFunctionEntity>(new Action<ClinicalDataSubjectFacilityItemFunctionEntity>(this.attach_ClinicalDataSubjectFacilityItemFunctionEntities), new Action<ClinicalDataSubjectFacilityItemFunctionEntity>(this.detach_ClinicalDataSubjectFacilityItemFunctionEntities));
			this._ClinicalDataSubjectUserTypeEntities = new EntitySet<ClinicalDataSubjectUserTypeEntity>(new Action<ClinicalDataSubjectUserTypeEntity>(this.attach_ClinicalDataSubjectUserTypeEntities), new Action<ClinicalDataSubjectUserTypeEntity>(this.detach_ClinicalDataSubjectUserTypeEntities));
			this._ClinicalDataSubjectAreaEntities = new EntitySet<ClinicalDataSubjectAreaEntity>(new Action<ClinicalDataSubjectAreaEntity>(this.attach_ClinicalDataSubjectAreaEntities), new Action<ClinicalDataSubjectAreaEntity>(this.detach_ClinicalDataSubjectAreaEntities));
			this._ClinicalDataCategoryEntity = default(EntityRef<ClinicalDataCategoryEntity>);
			this._ClinicalDataSubjectTypeEntity = default(EntityRef<ClinicalDataSubjectTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ClinicalDataSubjectKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataSubjectSnapshotKey
		{
			get
			{
				return this._ClinicalDataSubjectSnapshotKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectSnapshotKey != value))
				{
					this.OnClinicalDataSubjectSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataSubjectSnapshotKey = value;
					this.SendPropertyChanged("ClinicalDataSubjectSnapshotKey");
					this.OnClinicalDataSubjectSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataCategoryKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataCategoryKey
		{
			get
			{
				return this._ClinicalDataCategoryKey;
			}
			set
			{
				if ((this._ClinicalDataCategoryKey != value))
				{
					if (this._ClinicalDataCategoryEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClinicalDataCategoryKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataCategoryKey = value;
					this.SendPropertyChanged("ClinicalDataCategoryKey");
					this.OnClinicalDataCategoryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ClinicalDataSubjectTypeInternalCode
		{
			get
			{
				return this._ClinicalDataSubjectTypeInternalCode;
			}
			set
			{
				if ((this._ClinicalDataSubjectTypeInternalCode != value))
				{
					if (this._ClinicalDataSubjectTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClinicalDataSubjectTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataSubjectTypeInternalCode = value;
					this.SendPropertyChanged("ClinicalDataSubjectTypeInternalCode");
					this.OnClinicalDataSubjectTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOnceFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DisplayOnceFlag
		{
			get
			{
				return this._DisplayOnceFlag;
			}
			set
			{
				if ((this._DisplayOnceFlag != value))
				{
					this.OnDisplayOnceFlagChanging(value);
					this.SendPropertyChanging();
					this._DisplayOnceFlag = value;
					this.SendPropertyChanged("DisplayOnceFlag");
					this.OnDisplayOnceFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleText", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TitleText
		{
			get
			{
				return this._TitleText;
			}
			set
			{
				if ((this._TitleText != value))
				{
					this.OnTitleTextChanging(value);
					this.SendPropertyChanging();
					this._TitleText = value;
					this.SendPropertyChanged("TitleText");
					this.OnTitleTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatKitFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool StatKitFlag
		{
			get
			{
				return this._StatKitFlag;
			}
			set
			{
				if ((this._StatKitFlag != value))
				{
					this.OnStatKitFlagChanging(value);
					this.SendPropertyChanging();
					this._StatKitFlag = value;
					this.SendPropertyChanged("StatKitFlag");
					this.OnStatKitFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectEntity_ClinicalDataSubjectDispensingDeviceEntity", Storage="_ClinicalDataSubjectDispensingDeviceEntities", ThisKey="Key", OtherKey="ClinicalDataSubjectKey")]
		public EntitySet<ClinicalDataSubjectDispensingDeviceEntity> ClinicalDataSubjectDispensingDeviceEntities
		{
			get
			{
				return this._ClinicalDataSubjectDispensingDeviceEntities;
			}
			set
			{
				this._ClinicalDataSubjectDispensingDeviceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectEntity_ClinicalDataResponseEntity", Storage="_ClinicalDataResponseEntities", ThisKey="Key", OtherKey="ClinicalDataSubjectKey")]
		public EntitySet<ClinicalDataResponseEntity> ClinicalDataResponseEntities
		{
			get
			{
				return this._ClinicalDataResponseEntities;
			}
			set
			{
				this._ClinicalDataResponseEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectEntity_ClinicalDataSubjectFacilityItemFunctionEntity", Storage="_ClinicalDataSubjectFacilityItemFunctionEntities", ThisKey="Key", OtherKey="ClinicalDataSubjectKey")]
		public EntitySet<ClinicalDataSubjectFacilityItemFunctionEntity> ClinicalDataSubjectFacilityItemFunctionEntities
		{
			get
			{
				return this._ClinicalDataSubjectFacilityItemFunctionEntities;
			}
			set
			{
				this._ClinicalDataSubjectFacilityItemFunctionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectEntity_ClinicalDataSubjectUserTypeEntity", Storage="_ClinicalDataSubjectUserTypeEntities", ThisKey="Key", OtherKey="ClinicalDataSubjectKey")]
		public EntitySet<ClinicalDataSubjectUserTypeEntity> ClinicalDataSubjectUserTypeEntities
		{
			get
			{
				return this._ClinicalDataSubjectUserTypeEntities;
			}
			set
			{
				this._ClinicalDataSubjectUserTypeEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectEntity_ClinicalDataSubjectAreaEntity", Storage="_ClinicalDataSubjectAreaEntities", ThisKey="Key", OtherKey="ClinicalDataSubjectKey")]
		public EntitySet<ClinicalDataSubjectAreaEntity> ClinicalDataSubjectAreaEntities
		{
			get
			{
				return this._ClinicalDataSubjectAreaEntities;
			}
			set
			{
				this._ClinicalDataSubjectAreaEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataCategoryEntity_ClinicalDataSubjectEntity", Storage="_ClinicalDataCategoryEntity", ThisKey="ClinicalDataCategoryKey", OtherKey="Key", IsForeignKey=true)]
		public ClinicalDataCategoryEntity ClinicalDataCategoryEntity
		{
			get
			{
				return this._ClinicalDataCategoryEntity.Entity;
			}
			set
			{
				ClinicalDataCategoryEntity previousValue = this._ClinicalDataCategoryEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClinicalDataCategoryEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClinicalDataCategoryEntity.Entity = null;
						previousValue.ClinicalDataSubjectEntities.Remove(this);
					}
					this._ClinicalDataCategoryEntity.Entity = value;
					if ((value != null))
					{
						value.ClinicalDataSubjectEntities.Add(this);
						this._ClinicalDataCategoryKey = value.Key;
					}
					else
					{
						this._ClinicalDataCategoryKey = default(System.Guid);
					}
					this.SendPropertyChanged("ClinicalDataCategoryEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectTypeEntity_ClinicalDataSubjectEntity", Storage="_ClinicalDataSubjectTypeEntity", ThisKey="ClinicalDataSubjectTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public ClinicalDataSubjectTypeEntity ClinicalDataSubjectTypeEntity
		{
			get
			{
				return this._ClinicalDataSubjectTypeEntity.Entity;
			}
			set
			{
				ClinicalDataSubjectTypeEntity previousValue = this._ClinicalDataSubjectTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClinicalDataSubjectTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClinicalDataSubjectTypeEntity.Entity = null;
						previousValue.ClinicalDataSubjectEntities.Remove(this);
					}
					this._ClinicalDataSubjectTypeEntity.Entity = value;
					if ((value != null))
					{
						value.ClinicalDataSubjectEntities.Add(this);
						this._ClinicalDataSubjectTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._ClinicalDataSubjectTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("ClinicalDataSubjectTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClinicalDataSubjectDispensingDeviceEntities(ClinicalDataSubjectDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectEntity = this;
		}
		
		private void detach_ClinicalDataSubjectDispensingDeviceEntities(ClinicalDataSubjectDispensingDeviceEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectEntity = null;
		}
		
		private void attach_ClinicalDataResponseEntities(ClinicalDataResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectEntity = this;
		}
		
		private void detach_ClinicalDataResponseEntities(ClinicalDataResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectEntity = null;
		}
		
		private void attach_ClinicalDataSubjectFacilityItemFunctionEntities(ClinicalDataSubjectFacilityItemFunctionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectEntity = this;
		}
		
		private void detach_ClinicalDataSubjectFacilityItemFunctionEntities(ClinicalDataSubjectFacilityItemFunctionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectEntity = null;
		}
		
		private void attach_ClinicalDataSubjectUserTypeEntities(ClinicalDataSubjectUserTypeEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectEntity = this;
		}
		
		private void detach_ClinicalDataSubjectUserTypeEntities(ClinicalDataSubjectUserTypeEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectEntity = null;
		}
		
		private void attach_ClinicalDataSubjectAreaEntities(ClinicalDataSubjectAreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectEntity = this;
		}
		
		private void detach_ClinicalDataSubjectAreaEntities(ClinicalDataSubjectAreaEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CDCat.vw_ClinicalDataSubjectDispensingDeviceCurrent")]
	public partial class ClinicalDataSubjectDispensingDeviceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ClinicalDataSubjectKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ClinicalDataSubjectEntity> _ClinicalDataSubjectEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnClinicalDataSubjectKeyChanging(System.Guid value);
    partial void OnClinicalDataSubjectKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ClinicalDataSubjectDispensingDeviceEntity()
		{
			this._ClinicalDataSubjectEntity = default(EntityRef<ClinicalDataSubjectEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ClinicalDataSubjectDispensingDeviceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataSubjectKey
		{
			get
			{
				return this._ClinicalDataSubjectKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectKey != value))
				{
					if (this._ClinicalDataSubjectEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClinicalDataSubjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataSubjectKey = value;
					this.SendPropertyChanged("ClinicalDataSubjectKey");
					this.OnClinicalDataSubjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectEntity_ClinicalDataSubjectDispensingDeviceEntity", Storage="_ClinicalDataSubjectEntity", ThisKey="ClinicalDataSubjectKey", OtherKey="Key", IsForeignKey=true)]
		public ClinicalDataSubjectEntity ClinicalDataSubjectEntity
		{
			get
			{
				return this._ClinicalDataSubjectEntity.Entity;
			}
			set
			{
				ClinicalDataSubjectEntity previousValue = this._ClinicalDataSubjectEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClinicalDataSubjectEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClinicalDataSubjectEntity.Entity = null;
						previousValue.ClinicalDataSubjectDispensingDeviceEntities.Remove(this);
					}
					this._ClinicalDataSubjectEntity.Entity = value;
					if ((value != null))
					{
						value.ClinicalDataSubjectDispensingDeviceEntities.Add(this);
						this._ClinicalDataSubjectKey = value.Key;
					}
					else
					{
						this._ClinicalDataSubjectKey = default(System.Guid);
					}
					this.SendPropertyChanged("ClinicalDataSubjectEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CDCat.ClinicalDataSubjectType")]
	public partial class ClinicalDataSubjectTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<ClinicalDataSubjectEntity> _ClinicalDataSubjectEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ClinicalDataSubjectTypeEntity()
		{
			this._ClinicalDataSubjectEntities = new EntitySet<ClinicalDataSubjectEntity>(new Action<ClinicalDataSubjectEntity>(this.attach_ClinicalDataSubjectEntities), new Action<ClinicalDataSubjectEntity>(this.detach_ClinicalDataSubjectEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ClinicalDataSubjectTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectTypeEntity_ClinicalDataSubjectEntity", Storage="_ClinicalDataSubjectEntities", ThisKey="InternalCode", OtherKey="ClinicalDataSubjectTypeInternalCode")]
		public EntitySet<ClinicalDataSubjectEntity> ClinicalDataSubjectEntities
		{
			get
			{
				return this._ClinicalDataSubjectEntities;
			}
			set
			{
				this._ClinicalDataSubjectEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClinicalDataSubjectEntities(ClinicalDataSubjectEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectTypeEntity = this;
		}
		
		private void detach_ClinicalDataSubjectEntities(ClinicalDataSubjectEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataSubjectTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CDCat.vw_ClinicalDataResponseCurrent")]
	public partial class ClinicalDataResponseEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ClinicalDataResponseSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _ClinicalDataSubjectKey;
		
		private string _ClinicalDataAssentInternalCode;
		
		private string _ResponseText;
		
		private string _InstructionText;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ClinicalDataSubjectEntity> _ClinicalDataSubjectEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnClinicalDataResponseSnapshotKeyChanging(System.Guid value);
    partial void OnClinicalDataResponseSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnClinicalDataSubjectKeyChanging(System.Guid value);
    partial void OnClinicalDataSubjectKeyChanged();
    partial void OnClinicalDataAssentInternalCodeChanging(string value);
    partial void OnClinicalDataAssentInternalCodeChanged();
    partial void OnResponseTextChanging(string value);
    partial void OnResponseTextChanged();
    partial void OnInstructionTextChanging(string value);
    partial void OnInstructionTextChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ClinicalDataResponseEntity()
		{
			this._ClinicalDataSubjectEntity = default(EntityRef<ClinicalDataSubjectEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ClinicalDataResponseKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataResponseSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataResponseSnapshotKey
		{
			get
			{
				return this._ClinicalDataResponseSnapshotKey;
			}
			set
			{
				if ((this._ClinicalDataResponseSnapshotKey != value))
				{
					this.OnClinicalDataResponseSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataResponseSnapshotKey = value;
					this.SendPropertyChanged("ClinicalDataResponseSnapshotKey");
					this.OnClinicalDataResponseSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataSubjectKey
		{
			get
			{
				return this._ClinicalDataSubjectKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectKey != value))
				{
					if (this._ClinicalDataSubjectEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClinicalDataSubjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataSubjectKey = value;
					this.SendPropertyChanged("ClinicalDataSubjectKey");
					this.OnClinicalDataSubjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataAssentInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ClinicalDataAssentInternalCode
		{
			get
			{
				return this._ClinicalDataAssentInternalCode;
			}
			set
			{
				if ((this._ClinicalDataAssentInternalCode != value))
				{
					this.OnClinicalDataAssentInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataAssentInternalCode = value;
					this.SendPropertyChanged("ClinicalDataAssentInternalCode");
					this.OnClinicalDataAssentInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string ResponseText
		{
			get
			{
				return this._ResponseText;
			}
			set
			{
				if ((this._ResponseText != value))
				{
					this.OnResponseTextChanging(value);
					this.SendPropertyChanging();
					this._ResponseText = value;
					this.SendPropertyChanged("ResponseText");
					this.OnResponseTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstructionText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string InstructionText
		{
			get
			{
				return this._InstructionText;
			}
			set
			{
				if ((this._InstructionText != value))
				{
					this.OnInstructionTextChanging(value);
					this.SendPropertyChanging();
					this._InstructionText = value;
					this.SendPropertyChanged("InstructionText");
					this.OnInstructionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectEntity_ClinicalDataResponseEntity", Storage="_ClinicalDataSubjectEntity", ThisKey="ClinicalDataSubjectKey", OtherKey="Key", IsForeignKey=true)]
		public ClinicalDataSubjectEntity ClinicalDataSubjectEntity
		{
			get
			{
				return this._ClinicalDataSubjectEntity.Entity;
			}
			set
			{
				ClinicalDataSubjectEntity previousValue = this._ClinicalDataSubjectEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClinicalDataSubjectEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClinicalDataSubjectEntity.Entity = null;
						previousValue.ClinicalDataResponseEntities.Remove(this);
					}
					this._ClinicalDataSubjectEntity.Entity = value;
					if ((value != null))
					{
						value.ClinicalDataResponseEntities.Add(this);
						this._ClinicalDataSubjectKey = value.Key;
					}
					else
					{
						this._ClinicalDataSubjectKey = default(System.Guid);
					}
					this.SendPropertyChanged("ClinicalDataSubjectEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CDCat.vw_ClinicalDataSubjectFacilityItemFunctionCurrent")]
	public partial class ClinicalDataSubjectFacilityItemFunctionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ClinicalDataSubjectKey;
		
		private System.Guid _FacilityItemKey;
		
		private string _PatientCareFunctionInternalCode;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ClinicalDataSubjectEntity> _ClinicalDataSubjectEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnClinicalDataSubjectKeyChanging(System.Guid value);
    partial void OnClinicalDataSubjectKeyChanged();
    partial void OnFacilityItemKeyChanging(System.Guid value);
    partial void OnFacilityItemKeyChanged();
    partial void OnPatientCareFunctionInternalCodeChanging(string value);
    partial void OnPatientCareFunctionInternalCodeChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ClinicalDataSubjectFacilityItemFunctionEntity()
		{
			this._ClinicalDataSubjectEntity = default(EntityRef<ClinicalDataSubjectEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ClinicalDataSubjectFacilityItemFunctionKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataSubjectKey
		{
			get
			{
				return this._ClinicalDataSubjectKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectKey != value))
				{
					if (this._ClinicalDataSubjectEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClinicalDataSubjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataSubjectKey = value;
					this.SendPropertyChanged("ClinicalDataSubjectKey");
					this.OnClinicalDataSubjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this.OnFacilityItemKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityItemKey = value;
					this.SendPropertyChanged("FacilityItemKey");
					this.OnFacilityItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientCareFunctionInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PatientCareFunctionInternalCode
		{
			get
			{
				return this._PatientCareFunctionInternalCode;
			}
			set
			{
				if ((this._PatientCareFunctionInternalCode != value))
				{
					this.OnPatientCareFunctionInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._PatientCareFunctionInternalCode = value;
					this.SendPropertyChanged("PatientCareFunctionInternalCode");
					this.OnPatientCareFunctionInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectEntity_ClinicalDataSubjectFacilityItemFunctionEntity", Storage="_ClinicalDataSubjectEntity", ThisKey="ClinicalDataSubjectKey", OtherKey="Key", IsForeignKey=true)]
		public ClinicalDataSubjectEntity ClinicalDataSubjectEntity
		{
			get
			{
				return this._ClinicalDataSubjectEntity.Entity;
			}
			set
			{
				ClinicalDataSubjectEntity previousValue = this._ClinicalDataSubjectEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClinicalDataSubjectEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClinicalDataSubjectEntity.Entity = null;
						previousValue.ClinicalDataSubjectFacilityItemFunctionEntities.Remove(this);
					}
					this._ClinicalDataSubjectEntity.Entity = value;
					if ((value != null))
					{
						value.ClinicalDataSubjectFacilityItemFunctionEntities.Add(this);
						this._ClinicalDataSubjectKey = value.Key;
					}
					else
					{
						this._ClinicalDataSubjectKey = default(System.Guid);
					}
					this.SendPropertyChanged("ClinicalDataSubjectEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CDCat.vw_ClinicalDataSubjectUserTypeCurrent")]
	public partial class ClinicalDataSubjectUserTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ClinicalDataSubjectKey;
		
		private System.Guid _UserTypeKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ClinicalDataSubjectEntity> _ClinicalDataSubjectEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnClinicalDataSubjectKeyChanging(System.Guid value);
    partial void OnClinicalDataSubjectKeyChanged();
    partial void OnUserTypeKeyChanging(System.Guid value);
    partial void OnUserTypeKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ClinicalDataSubjectUserTypeEntity()
		{
			this._ClinicalDataSubjectEntity = default(EntityRef<ClinicalDataSubjectEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ClinicalDataSubjectUserTypeKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataSubjectKey
		{
			get
			{
				return this._ClinicalDataSubjectKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectKey != value))
				{
					if (this._ClinicalDataSubjectEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClinicalDataSubjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataSubjectKey = value;
					this.SendPropertyChanged("ClinicalDataSubjectKey");
					this.OnClinicalDataSubjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserTypeKey
		{
			get
			{
				return this._UserTypeKey;
			}
			set
			{
				if ((this._UserTypeKey != value))
				{
					this.OnUserTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._UserTypeKey = value;
					this.SendPropertyChanged("UserTypeKey");
					this.OnUserTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectEntity_ClinicalDataSubjectUserTypeEntity", Storage="_ClinicalDataSubjectEntity", ThisKey="ClinicalDataSubjectKey", OtherKey="Key", IsForeignKey=true)]
		public ClinicalDataSubjectEntity ClinicalDataSubjectEntity
		{
			get
			{
				return this._ClinicalDataSubjectEntity.Entity;
			}
			set
			{
				ClinicalDataSubjectEntity previousValue = this._ClinicalDataSubjectEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClinicalDataSubjectEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClinicalDataSubjectEntity.Entity = null;
						previousValue.ClinicalDataSubjectUserTypeEntities.Remove(this);
					}
					this._ClinicalDataSubjectEntity.Entity = value;
					if ((value != null))
					{
						value.ClinicalDataSubjectUserTypeEntities.Add(this);
						this._ClinicalDataSubjectKey = value.Key;
					}
					else
					{
						this._ClinicalDataSubjectKey = default(System.Guid);
					}
					this.SendPropertyChanged("ClinicalDataSubjectEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CDCat.vw_ClinicalDataSubjectAreaCurrent")]
	public partial class ClinicalDataSubjectAreaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ClinicalDataSubjectKey;
		
		private System.Guid _AreaKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ClinicalDataSubjectEntity> _ClinicalDataSubjectEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnClinicalDataSubjectKeyChanging(System.Guid value);
    partial void OnClinicalDataSubjectKeyChanged();
    partial void OnAreaKeyChanging(System.Guid value);
    partial void OnAreaKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ClinicalDataSubjectAreaEntity()
		{
			this._ClinicalDataSubjectEntity = default(EntityRef<ClinicalDataSubjectEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ClinicalDataSubjectAreaKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataSubjectKey
		{
			get
			{
				return this._ClinicalDataSubjectKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectKey != value))
				{
					if (this._ClinicalDataSubjectEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClinicalDataSubjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataSubjectKey = value;
					this.SendPropertyChanged("ClinicalDataSubjectKey");
					this.OnClinicalDataSubjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AreaKey
		{
			get
			{
				return this._AreaKey;
			}
			set
			{
				if ((this._AreaKey != value))
				{
					this.OnAreaKeyChanging(value);
					this.SendPropertyChanging();
					this._AreaKey = value;
					this.SendPropertyChanged("AreaKey");
					this.OnAreaKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataSubjectEntity_ClinicalDataSubjectAreaEntity", Storage="_ClinicalDataSubjectEntity", ThisKey="ClinicalDataSubjectKey", OtherKey="Key", IsForeignKey=true)]
		public ClinicalDataSubjectEntity ClinicalDataSubjectEntity
		{
			get
			{
				return this._ClinicalDataSubjectEntity.Entity;
			}
			set
			{
				ClinicalDataSubjectEntity previousValue = this._ClinicalDataSubjectEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClinicalDataSubjectEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClinicalDataSubjectEntity.Entity = null;
						previousValue.ClinicalDataSubjectAreaEntities.Remove(this);
					}
					this._ClinicalDataSubjectEntity.Entity = value;
					if ((value != null))
					{
						value.ClinicalDataSubjectAreaEntities.Add(this);
						this._ClinicalDataSubjectKey = value.Key;
					}
					else
					{
						this._ClinicalDataSubjectKey = default(System.Guid);
					}
					this.SendPropertyChanged("ClinicalDataSubjectEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
