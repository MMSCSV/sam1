#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CareFusion.Dispensing.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSClientOLTP")]
	public partial class SyncDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSyncTransferEntity(SyncTransferEntity instance);
    partial void UpdateSyncTransferEntity(SyncTransferEntity instance);
    partial void DeleteSyncTransferEntity(SyncTransferEntity instance);
    partial void InsertSyncTransferStatusEntity(SyncTransferStatusEntity instance);
    partial void UpdateSyncTransferStatusEntity(SyncTransferStatusEntity instance);
    partial void DeleteSyncTransferStatusEntity(SyncTransferStatusEntity instance);
    partial void InsertSyncTransferTypeEntity(SyncTransferTypeEntity instance);
    partial void UpdateSyncTransferTypeEntity(SyncTransferTypeEntity instance);
    partial void DeleteSyncTransferTypeEntity(SyncTransferTypeEntity instance);
    partial void InsertNewColumnList(NewColumnList instance);
    partial void UpdateNewColumnList(NewColumnList instance);
    partial void DeleteNewColumnList(NewColumnList instance);
    partial void InsertDispensingDeviceSyncStateEntity(DispensingDeviceSyncStateEntity instance);
    partial void UpdateDispensingDeviceSyncStateEntity(DispensingDeviceSyncStateEntity instance);
    partial void DeleteDispensingDeviceSyncStateEntity(DispensingDeviceSyncStateEntity instance);
    #endregion
		
		public SyncDataContext() : 
				base("Data Source=localhost;Initial Catalog=DSClientOLTP;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public SyncDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SyncDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SyncDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SyncDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SyncTransferEntity> SyncTransferEntities
		{
			get
			{
				return this.GetTable<SyncTransferEntity>();
			}
		}
		
		public System.Data.Linq.Table<SyncTransferStatusEntity> SyncTransferStatusEntities
		{
			get
			{
				return this.GetTable<SyncTransferStatusEntity>();
			}
		}
		
		public System.Data.Linq.Table<SyncTransferTypeEntity> SyncTransferTypeEntities
		{
			get
			{
				return this.GetTable<SyncTransferTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<NewColumnList> NewColumnLists
		{
			get
			{
				return this.GetTable<NewColumnList>();
			}
		}
		
		public System.Data.Linq.Table<DispensingDeviceSyncStateEntity> DispensingDeviceSyncStateEntities
		{
			get
			{
				return this.GetTable<DispensingDeviceSyncStateEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sync.SyncTransfer")]
	public partial class SyncTransferEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _DispensingDeviceKey;
		
		private string _SyncTransferTypeInternalCode;
		
		private string _SyncTransferStatusInternalCode;
		
		private System.DateTime _TransferStartUTCDateTime;
		
		private System.DateTime _TransferStartLocalDateTime;
		
		private System.Nullable<int> _RetrieveRecordQuantity;
		
		private System.Nullable<int> _RetrieveDurationAmount;
		
		private System.Nullable<int> _ApplyRecordQuantity;
		
		private System.Nullable<int> _ApplyDurationAmount;
		
		private System.Nullable<int> _TotalDurationAmount;
		
		private string _ErrorText;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<SyncTransferStatusEntity> _SyncTransferStatusEntity;
		
		private EntityRef<SyncTransferTypeEntity> _SyncTransferTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnSyncTransferTypeInternalCodeChanging(string value);
    partial void OnSyncTransferTypeInternalCodeChanged();
    partial void OnSyncTransferStatusInternalCodeChanging(string value);
    partial void OnSyncTransferStatusInternalCodeChanged();
    partial void OnTransferStartUTCDateTimeChanging(System.DateTime value);
    partial void OnTransferStartUTCDateTimeChanged();
    partial void OnTransferStartLocalDateTimeChanging(System.DateTime value);
    partial void OnTransferStartLocalDateTimeChanged();
    partial void OnRetrieveRecordQuantityChanging(System.Nullable<int> value);
    partial void OnRetrieveRecordQuantityChanged();
    partial void OnRetrieveDurationAmountChanging(System.Nullable<int> value);
    partial void OnRetrieveDurationAmountChanged();
    partial void OnApplyRecordQuantityChanging(System.Nullable<int> value);
    partial void OnApplyRecordQuantityChanged();
    partial void OnApplyDurationAmountChanging(System.Nullable<int> value);
    partial void OnApplyDurationAmountChanged();
    partial void OnTotalDurationAmountChanging(System.Nullable<int> value);
    partial void OnTotalDurationAmountChanged();
    partial void OnErrorTextChanging(string value);
    partial void OnErrorTextChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public SyncTransferEntity()
		{
			this._SyncTransferStatusEntity = default(EntityRef<SyncTransferStatusEntity>);
			this._SyncTransferTypeEntity = default(EntityRef<SyncTransferTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SyncTransferKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncTransferTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SyncTransferTypeInternalCode
		{
			get
			{
				return this._SyncTransferTypeInternalCode;
			}
			set
			{
				if ((this._SyncTransferTypeInternalCode != value))
				{
					if (this._SyncTransferTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSyncTransferTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._SyncTransferTypeInternalCode = value;
					this.SendPropertyChanged("SyncTransferTypeInternalCode");
					this.OnSyncTransferTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncTransferStatusInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SyncTransferStatusInternalCode
		{
			get
			{
				return this._SyncTransferStatusInternalCode;
			}
			set
			{
				if ((this._SyncTransferStatusInternalCode != value))
				{
					if (this._SyncTransferStatusEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSyncTransferStatusInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._SyncTransferStatusInternalCode = value;
					this.SendPropertyChanged("SyncTransferStatusInternalCode");
					this.OnSyncTransferStatusInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferStartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TransferStartUTCDateTime
		{
			get
			{
				return this._TransferStartUTCDateTime;
			}
			set
			{
				if ((this._TransferStartUTCDateTime != value))
				{
					this.OnTransferStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TransferStartUTCDateTime = value;
					this.SendPropertyChanged("TransferStartUTCDateTime");
					this.OnTransferStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferStartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TransferStartLocalDateTime
		{
			get
			{
				return this._TransferStartLocalDateTime;
			}
			set
			{
				if ((this._TransferStartLocalDateTime != value))
				{
					this.OnTransferStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TransferStartLocalDateTime = value;
					this.SendPropertyChanged("TransferStartLocalDateTime");
					this.OnTransferStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetrieveRecordQuantity", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RetrieveRecordQuantity
		{
			get
			{
				return this._RetrieveRecordQuantity;
			}
			set
			{
				if ((this._RetrieveRecordQuantity != value))
				{
					this.OnRetrieveRecordQuantityChanging(value);
					this.SendPropertyChanging();
					this._RetrieveRecordQuantity = value;
					this.SendPropertyChanged("RetrieveRecordQuantity");
					this.OnRetrieveRecordQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetrieveDurationAmount", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RetrieveDurationAmount
		{
			get
			{
				return this._RetrieveDurationAmount;
			}
			set
			{
				if ((this._RetrieveDurationAmount != value))
				{
					this.OnRetrieveDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._RetrieveDurationAmount = value;
					this.SendPropertyChanged("RetrieveDurationAmount");
					this.OnRetrieveDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyRecordQuantity", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ApplyRecordQuantity
		{
			get
			{
				return this._ApplyRecordQuantity;
			}
			set
			{
				if ((this._ApplyRecordQuantity != value))
				{
					this.OnApplyRecordQuantityChanging(value);
					this.SendPropertyChanging();
					this._ApplyRecordQuantity = value;
					this.SendPropertyChanged("ApplyRecordQuantity");
					this.OnApplyRecordQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyDurationAmount", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ApplyDurationAmount
		{
			get
			{
				return this._ApplyDurationAmount;
			}
			set
			{
				if ((this._ApplyDurationAmount != value))
				{
					this.OnApplyDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._ApplyDurationAmount = value;
					this.SendPropertyChanged("ApplyDurationAmount");
					this.OnApplyDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDurationAmount", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TotalDurationAmount
		{
			get
			{
				return this._TotalDurationAmount;
			}
			set
			{
				if ((this._TotalDurationAmount != value))
				{
					this.OnTotalDurationAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalDurationAmount = value;
					this.SendPropertyChanged("TotalDurationAmount");
					this.OnTotalDurationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorText", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string ErrorText
		{
			get
			{
				return this._ErrorText;
			}
			set
			{
				if ((this._ErrorText != value))
				{
					this.OnErrorTextChanging(value);
					this.SendPropertyChanging();
					this._ErrorText = value;
					this.SendPropertyChanged("ErrorText");
					this.OnErrorTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SyncTransferStatusEntity_SyncTransferEntity", Storage="_SyncTransferStatusEntity", ThisKey="SyncTransferStatusInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public SyncTransferStatusEntity SyncTransferStatusEntity
		{
			get
			{
				return this._SyncTransferStatusEntity.Entity;
			}
			set
			{
				SyncTransferStatusEntity previousValue = this._SyncTransferStatusEntity.Entity;
				if (((previousValue != value) 
							|| (this._SyncTransferStatusEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SyncTransferStatusEntity.Entity = null;
						previousValue.SyncTransferEntities.Remove(this);
					}
					this._SyncTransferStatusEntity.Entity = value;
					if ((value != null))
					{
						value.SyncTransferEntities.Add(this);
						this._SyncTransferStatusInternalCode = value.InternalCode;
					}
					else
					{
						this._SyncTransferStatusInternalCode = default(string);
					}
					this.SendPropertyChanged("SyncTransferStatusEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SyncTransferTypeEntity_SyncTransferEntity", Storage="_SyncTransferTypeEntity", ThisKey="SyncTransferTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public SyncTransferTypeEntity SyncTransferTypeEntity
		{
			get
			{
				return this._SyncTransferTypeEntity.Entity;
			}
			set
			{
				SyncTransferTypeEntity previousValue = this._SyncTransferTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._SyncTransferTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SyncTransferTypeEntity.Entity = null;
						previousValue.SyncTransferEntities.Remove(this);
					}
					this._SyncTransferTypeEntity.Entity = value;
					if ((value != null))
					{
						value.SyncTransferEntities.Add(this);
						this._SyncTransferTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._SyncTransferTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("SyncTransferTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sync.SyncTransferStatus")]
	public partial class SyncTransferStatusEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<SyncTransferEntity> _SyncTransferEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public SyncTransferStatusEntity()
		{
			this._SyncTransferEntities = new EntitySet<SyncTransferEntity>(new Action<SyncTransferEntity>(this.attach_SyncTransferEntities), new Action<SyncTransferEntity>(this.detach_SyncTransferEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SyncTransferStatusInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SyncTransferStatusEntity_SyncTransferEntity", Storage="_SyncTransferEntities", ThisKey="InternalCode", OtherKey="SyncTransferStatusInternalCode")]
		public EntitySet<SyncTransferEntity> SyncTransferEntities
		{
			get
			{
				return this._SyncTransferEntities;
			}
			set
			{
				this._SyncTransferEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SyncTransferEntities(SyncTransferEntity entity)
		{
			this.SendPropertyChanging();
			entity.SyncTransferStatusEntity = this;
		}
		
		private void detach_SyncTransferEntities(SyncTransferEntity entity)
		{
			this.SendPropertyChanging();
			entity.SyncTransferStatusEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sync.SyncTransferType")]
	public partial class SyncTransferTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<SyncTransferEntity> _SyncTransferEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public SyncTransferTypeEntity()
		{
			this._SyncTransferEntities = new EntitySet<SyncTransferEntity>(new Action<SyncTransferEntity>(this.attach_SyncTransferEntities), new Action<SyncTransferEntity>(this.detach_SyncTransferEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SyncTransferTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SyncTransferTypeEntity_SyncTransferEntity", Storage="_SyncTransferEntities", ThisKey="InternalCode", OtherKey="SyncTransferTypeInternalCode")]
		public EntitySet<SyncTransferEntity> SyncTransferEntities
		{
			get
			{
				return this._SyncTransferEntities;
			}
			set
			{
				this._SyncTransferEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SyncTransferEntities(SyncTransferEntity entity)
		{
			this.SendPropertyChanging();
			entity.SyncTransferTypeEntity = this;
		}
		
		private void detach_SyncTransferEntities(SyncTransferEntity entity)
		{
			this.SendPropertyChanging();
			entity.SyncTransferTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sync.NewColumnList")]
	public partial class NewColumnList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NewColumnListKey;
		
		private string _FullTableName;
		
		private string _ColumnListValue;
		
		private string _PrimaryKeyColumnName;
		
		private bool _BulkInsertFlag;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewColumnListKeyChanging(System.Guid value);
    partial void OnNewColumnListKeyChanged();
    partial void OnFullTableNameChanging(string value);
    partial void OnFullTableNameChanged();
    partial void OnColumnListValueChanging(string value);
    partial void OnColumnListValueChanged();
    partial void OnPrimaryKeyColumnNameChanging(string value);
    partial void OnPrimaryKeyColumnNameChanged();
    partial void OnBulkInsertFlagChanging(bool value);
    partial void OnBulkInsertFlagChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public NewColumnList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewColumnListKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid NewColumnListKey
		{
			get
			{
				return this._NewColumnListKey;
			}
			set
			{
				if ((this._NewColumnListKey != value))
				{
					this.OnNewColumnListKeyChanging(value);
					this.SendPropertyChanging();
					this._NewColumnListKey = value;
					this.SendPropertyChanged("NewColumnListKey");
					this.OnNewColumnListKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullTableName", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FullTableName
		{
			get
			{
				return this._FullTableName;
			}
			set
			{
				if ((this._FullTableName != value))
				{
					this.OnFullTableNameChanging(value);
					this.SendPropertyChanging();
					this._FullTableName = value;
					this.SendPropertyChanged("FullTableName");
					this.OnFullTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnListValue", DbType="VarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string ColumnListValue
		{
			get
			{
				return this._ColumnListValue;
			}
			set
			{
				if ((this._ColumnListValue != value))
				{
					this.OnColumnListValueChanging(value);
					this.SendPropertyChanging();
					this._ColumnListValue = value;
					this.SendPropertyChanged("ColumnListValue");
					this.OnColumnListValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryKeyColumnName", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PrimaryKeyColumnName
		{
			get
			{
				return this._PrimaryKeyColumnName;
			}
			set
			{
				if ((this._PrimaryKeyColumnName != value))
				{
					this.OnPrimaryKeyColumnNameChanging(value);
					this.SendPropertyChanging();
					this._PrimaryKeyColumnName = value;
					this.SendPropertyChanged("PrimaryKeyColumnName");
					this.OnPrimaryKeyColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BulkInsertFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool BulkInsertFlag
		{
			get
			{
				return this._BulkInsertFlag;
			}
			set
			{
				if ((this._BulkInsertFlag != value))
				{
					this.OnBulkInsertFlagChanging(value);
					this.SendPropertyChanging();
					this._BulkInsertFlag = value;
					this.SendPropertyChanged("BulkInsertFlag");
					this.OnBulkInsertFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sync.DispensingDeviceSyncState")]
	public partial class DispensingDeviceSyncStateEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DispensingDeviceSyncStateKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private string _DispensingDeviceSyncStateStatusInternalCode;
		
		private long _LastUploadMessageSequenceNumber;
		
		private long _LastUploadChangeTrackingValue;
		
		private long _LastDownloadMessageSequenceNumber;
		
		private System.Nullable<System.DateTimeOffset> _LastDownloadMessageDateTime;
		
		private System.Nullable<System.DateTimeOffset> _LastDownloadDateTime;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDispensingDeviceSyncStateKeyChanging(System.Guid value);
    partial void OnDispensingDeviceSyncStateKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnDispensingDeviceSyncStateStatusInternalCodeChanging(string value);
    partial void OnDispensingDeviceSyncStateStatusInternalCodeChanged();
    partial void OnLastUploadMessageSequenceNumberChanging(long value);
    partial void OnLastUploadMessageSequenceNumberChanged();
    partial void OnLastUploadChangeTrackingValueChanging(long value);
    partial void OnLastUploadChangeTrackingValueChanged();
    partial void OnLastDownloadMessageSequenceNumberChanging(long value);
    partial void OnLastDownloadMessageSequenceNumberChanged();
    partial void OnLastDownloadMessageDateTimeChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnLastDownloadMessageDateTimeChanged();
    partial void OnLastDownloadDateTimeChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnLastDownloadDateTimeChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public DispensingDeviceSyncStateEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceSyncStateKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceSyncStateKey
		{
			get
			{
				return this._DispensingDeviceSyncStateKey;
			}
			set
			{
				if ((this._DispensingDeviceSyncStateKey != value))
				{
					this.OnDispensingDeviceSyncStateKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceSyncStateKey = value;
					this.SendPropertyChanged("DispensingDeviceSyncStateKey");
					this.OnDispensingDeviceSyncStateKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceSyncStateStatusInternalCode", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DispensingDeviceSyncStateStatusInternalCode
		{
			get
			{
				return this._DispensingDeviceSyncStateStatusInternalCode;
			}
			set
			{
				if ((this._DispensingDeviceSyncStateStatusInternalCode != value))
				{
					this.OnDispensingDeviceSyncStateStatusInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceSyncStateStatusInternalCode = value;
					this.SendPropertyChanged("DispensingDeviceSyncStateStatusInternalCode");
					this.OnDispensingDeviceSyncStateStatusInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUploadMessageSequenceNumber", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long LastUploadMessageSequenceNumber
		{
			get
			{
				return this._LastUploadMessageSequenceNumber;
			}
			set
			{
				if ((this._LastUploadMessageSequenceNumber != value))
				{
					this.OnLastUploadMessageSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._LastUploadMessageSequenceNumber = value;
					this.SendPropertyChanged("LastUploadMessageSequenceNumber");
					this.OnLastUploadMessageSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUploadChangeTrackingValue", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long LastUploadChangeTrackingValue
		{
			get
			{
				return this._LastUploadChangeTrackingValue;
			}
			set
			{
				if ((this._LastUploadChangeTrackingValue != value))
				{
					this.OnLastUploadChangeTrackingValueChanging(value);
					this.SendPropertyChanging();
					this._LastUploadChangeTrackingValue = value;
					this.SendPropertyChanged("LastUploadChangeTrackingValue");
					this.OnLastUploadChangeTrackingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDownloadMessageSequenceNumber", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long LastDownloadMessageSequenceNumber
		{
			get
			{
				return this._LastDownloadMessageSequenceNumber;
			}
			set
			{
				if ((this._LastDownloadMessageSequenceNumber != value))
				{
					this.OnLastDownloadMessageSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._LastDownloadMessageSequenceNumber = value;
					this.SendPropertyChanged("LastDownloadMessageSequenceNumber");
					this.OnLastDownloadMessageSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDownloadMessageDateTime", DbType="DateTimeOffset", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTimeOffset> LastDownloadMessageDateTime
		{
			get
			{
				return this._LastDownloadMessageDateTime;
			}
			set
			{
				if ((this._LastDownloadMessageDateTime != value))
				{
					this.OnLastDownloadMessageDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastDownloadMessageDateTime = value;
					this.SendPropertyChanged("LastDownloadMessageDateTime");
					this.OnLastDownloadMessageDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDownloadDateTime", DbType="DateTimeOffset", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTimeOffset> LastDownloadDateTime
		{
			get
			{
				return this._LastDownloadDateTime;
			}
			set
			{
				if ((this._LastDownloadDateTime != value))
				{
					this.OnLastDownloadDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastDownloadDateTime = value;
					this.SendPropertyChanged("LastDownloadDateTime");
					this.OnLastDownloadDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
