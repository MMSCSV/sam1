#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CareFusion.Dispensing.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSClientOLTP")]
	internal partial class AdtDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPatientEntity(PatientEntity instance);
    partial void UpdatePatientEntity(PatientEntity instance);
    partial void DeletePatientEntity(PatientEntity instance);
    partial void InsertGenderEntity(GenderEntity instance);
    partial void UpdateGenderEntity(GenderEntity instance);
    partial void DeleteGenderEntity(GenderEntity instance);
    partial void InsertEncounterEntity(EncounterEntity instance);
    partial void UpdateEncounterEntity(EncounterEntity instance);
    partial void DeleteEncounterEntity(EncounterEntity instance);
    partial void InsertEncounterPatientLocationEntity(EncounterPatientLocationEntity instance);
    partial void UpdateEncounterPatientLocationEntity(EncounterPatientLocationEntity instance);
    partial void DeleteEncounterPatientLocationEntity(EncounterPatientLocationEntity instance);
    partial void InsertEncounterPhysicianRoleSetEntity(EncounterPhysicianRoleSetEntity instance);
    partial void UpdateEncounterPhysicianRoleSetEntity(EncounterPhysicianRoleSetEntity instance);
    partial void DeleteEncounterPhysicianRoleSetEntity(EncounterPhysicianRoleSetEntity instance);
    partial void InsertUserEncounterAssociationEntity(UserEncounterAssociationEntity instance);
    partial void UpdateUserEncounterAssociationEntity(UserEncounterAssociationEntity instance);
    partial void DeleteUserEncounterAssociationEntity(UserEncounterAssociationEntity instance);
    partial void InsertPatientIDTypeEntity(PatientIDTypeEntity instance);
    partial void UpdatePatientIDTypeEntity(PatientIDTypeEntity instance);
    partial void DeletePatientIDTypeEntity(PatientIDTypeEntity instance);
    partial void InsertPatientIDEntity(PatientIDEntity instance);
    partial void UpdatePatientIDEntity(PatientIDEntity instance);
    partial void DeletePatientIDEntity(PatientIDEntity instance);
    partial void InsertPatientIDSetEntity(PatientIDSetEntity instance);
    partial void UpdatePatientIDSetEntity(PatientIDSetEntity instance);
    partial void DeletePatientIDSetEntity(PatientIDSetEntity instance);
    partial void InsertAllergyTypeEntity(AllergyTypeEntity instance);
    partial void UpdateAllergyTypeEntity(AllergyTypeEntity instance);
    partial void DeleteAllergyTypeEntity(AllergyTypeEntity instance);
    partial void InsertPatientAllergyEntity(PatientAllergyEntity instance);
    partial void UpdatePatientAllergyEntity(PatientAllergyEntity instance);
    partial void DeletePatientAllergyEntity(PatientAllergyEntity instance);
    partial void InsertPatientAllergySetEntity(PatientAllergySetEntity instance);
    partial void UpdatePatientAllergySetEntity(PatientAllergySetEntity instance);
    partial void DeletePatientAllergySetEntity(PatientAllergySetEntity instance);
    partial void InsertAllergySeverityEntity(AllergySeverityEntity instance);
    partial void UpdateAllergySeverityEntity(AllergySeverityEntity instance);
    partial void DeleteAllergySeverityEntity(AllergySeverityEntity instance);
    partial void InsertEncounterPatientClassEntity(EncounterPatientClassEntity instance);
    partial void UpdateEncounterPatientClassEntity(EncounterPatientClassEntity instance);
    partial void DeleteEncounterPatientClassEntity(EncounterPatientClassEntity instance);
    partial void InsertEncounterPhysicianRoleEntity(EncounterPhysicianRoleEntity instance);
    partial void UpdateEncounterPhysicianRoleEntity(EncounterPhysicianRoleEntity instance);
    partial void DeleteEncounterPhysicianRoleEntity(EncounterPhysicianRoleEntity instance);
    partial void InsertEncounterPhysicianEntity(EncounterPhysicianEntity instance);
    partial void UpdateEncounterPhysicianEntity(EncounterPhysicianEntity instance);
    partial void DeleteEncounterPhysicianEntity(EncounterPhysicianEntity instance);
    partial void InsertPatientSiloEntity(PatientSiloEntity instance);
    partial void UpdatePatientSiloEntity(PatientSiloEntity instance);
    partial void DeletePatientSiloEntity(PatientSiloEntity instance);
    partial void InsertEncounterAdmissionStatusEntity(EncounterAdmissionStatusEntity instance);
    partial void UpdateEncounterAdmissionStatusEntity(EncounterAdmissionStatusEntity instance);
    partial void DeleteEncounterAdmissionStatusEntity(EncounterAdmissionStatusEntity instance);
    partial void InsertHospitalServiceEntity(HospitalServiceEntity instance);
    partial void UpdateHospitalServiceEntity(HospitalServiceEntity instance);
    partial void DeleteHospitalServiceEntity(HospitalServiceEntity instance);
    partial void InsertPatientAllergyReactionEntity(PatientAllergyReactionEntity instance);
    partial void UpdatePatientAllergyReactionEntity(PatientAllergyReactionEntity instance);
    partial void DeletePatientAllergyReactionEntity(PatientAllergyReactionEntity instance);
    partial void InsertEncounterDispensingDeviceEntity(EncounterDispensingDeviceEntity instance);
    partial void UpdateEncounterDispensingDeviceEntity(EncounterDispensingDeviceEntity instance);
    partial void DeleteEncounterDispensingDeviceEntity(EncounterDispensingDeviceEntity instance);
    partial void InsertEncounterMergeEntity(EncounterMergeEntity instance);
    partial void UpdateEncounterMergeEntity(EncounterMergeEntity instance);
    partial void DeleteEncounterMergeEntity(EncounterMergeEntity instance);
    partial void InsertEncounterTypeEntity(EncounterTypeEntity instance);
    partial void UpdateEncounterTypeEntity(EncounterTypeEntity instance);
    partial void DeleteEncounterTypeEntity(EncounterTypeEntity instance);
    partial void InsertPatientResult(PatientResult instance);
    partial void UpdatePatientResult(PatientResult instance);
    partial void DeletePatientResult(PatientResult instance);
    partial void InsertEncounterResult(EncounterResult instance);
    partial void UpdateEncounterResult(EncounterResult instance);
    partial void DeleteEncounterResult(EncounterResult instance);
    #endregion
		
		public AdtDataContext() : 
				base("Data Source=.;Initial Catalog=DSClientOLTP;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public AdtDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdtDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdtDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdtDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PatientEntity> PatientEntities
		{
			get
			{
				return this.GetTable<PatientEntity>();
			}
		}
		
		public System.Data.Linq.Table<GenderEntity> GenderEntities
		{
			get
			{
				return this.GetTable<GenderEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterEntity> EncounterEntities
		{
			get
			{
				return this.GetTable<EncounterEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterPatientLocationEntity> EncounterPatientLocationEntities
		{
			get
			{
				return this.GetTable<EncounterPatientLocationEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterPhysicianRoleSetEntity> EncounterPhysicianRoleSetEntities
		{
			get
			{
				return this.GetTable<EncounterPhysicianRoleSetEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserEncounterAssociationEntity> UserEncounterAssociationEntities
		{
			get
			{
				return this.GetTable<UserEncounterAssociationEntity>();
			}
		}
		
		public System.Data.Linq.Table<PatientIDTypeEntity> PatientIDTypeEntities
		{
			get
			{
				return this.GetTable<PatientIDTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<PatientIDEntity> PatientIDEntities
		{
			get
			{
				return this.GetTable<PatientIDEntity>();
			}
		}
		
		public System.Data.Linq.Table<PatientIDSetEntity> PatientIDSetEntities
		{
			get
			{
				return this.GetTable<PatientIDSetEntity>();
			}
		}
		
		public System.Data.Linq.Table<AllergyTypeEntity> AllergyTypeEntities
		{
			get
			{
				return this.GetTable<AllergyTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<PatientAllergyEntity> PatientAllergyEntities
		{
			get
			{
				return this.GetTable<PatientAllergyEntity>();
			}
		}
		
		public System.Data.Linq.Table<PatientAllergySetEntity> PatientAllergySetEntities
		{
			get
			{
				return this.GetTable<PatientAllergySetEntity>();
			}
		}
		
		public System.Data.Linq.Table<AllergySeverityEntity> AllergySeverityEntities
		{
			get
			{
				return this.GetTable<AllergySeverityEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterPatientClassEntity> EncounterPatientClassEntities
		{
			get
			{
				return this.GetTable<EncounterPatientClassEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterPhysicianRoleEntity> EncounterPhysicianRoleEntities
		{
			get
			{
				return this.GetTable<EncounterPhysicianRoleEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterPhysicianEntity> EncounterPhysicianEntities
		{
			get
			{
				return this.GetTable<EncounterPhysicianEntity>();
			}
		}
		
		public System.Data.Linq.Table<PatientSiloEntity> PatientSiloEntities
		{
			get
			{
				return this.GetTable<PatientSiloEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterAdmissionStatusEntity> EncounterAdmissionStatusEntities
		{
			get
			{
				return this.GetTable<EncounterAdmissionStatusEntity>();
			}
		}
		
		public System.Data.Linq.Table<HospitalServiceEntity> HospitalServiceEntities
		{
			get
			{
				return this.GetTable<HospitalServiceEntity>();
			}
		}
		
		public System.Data.Linq.Table<PatientAllergyReactionEntity> PatientAllergyReactionEntities
		{
			get
			{
				return this.GetTable<PatientAllergyReactionEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterDispensingDeviceEntity> EncounterDispensingDeviceEntities
		{
			get
			{
				return this.GetTable<EncounterDispensingDeviceEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterMergeEntity> EncounterMergeEntities
		{
			get
			{
				return this.GetTable<EncounterMergeEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterTypeEntity> EncounterTypeEntities
		{
			get
			{
				return this.GetTable<EncounterTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<PatientSiloFacilityResult> PatientSiloFacilityResults
		{
			get
			{
				return this.GetTable<PatientSiloFacilityResult>();
			}
		}
		
		public System.Data.Linq.Table<FacilityPrimaryPatientIDTypeEntity> FacilityPrimaryPatientIDTypeEntities
		{
			get
			{
				return this.GetTable<FacilityPrimaryPatientIDTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<PatientIDSetResult> PatientIDSetResults
		{
			get
			{
				return this.GetTable<PatientIDSetResult>();
			}
		}
		
		public System.Data.Linq.Table<PatientIDResult> PatientIDResults
		{
			get
			{
				return this.GetTable<PatientIDResult>();
			}
		}
		
		public System.Data.Linq.Table<PatientAllergySetResult> PatientAllergySetResults
		{
			get
			{
				return this.GetTable<PatientAllergySetResult>();
			}
		}
		
		public System.Data.Linq.Table<PatientAllergyResult> PatientAllergyResults
		{
			get
			{
				return this.GetTable<PatientAllergyResult>();
			}
		}
		
		public System.Data.Linq.Table<PatientAllergyReactionResult> PatientAllergyReactionResults
		{
			get
			{
				return this.GetTable<PatientAllergyReactionResult>();
			}
		}
		
		public System.Data.Linq.Table<EncounterPatientLocationResult> EncounterPatientLocationResults
		{
			get
			{
				return this.GetTable<EncounterPatientLocationResult>();
			}
		}
		
		public System.Data.Linq.Table<EncounterPhysicianRoleSetResult> EncounterPhysicianRoleSetResults
		{
			get
			{
				return this.GetTable<EncounterPhysicianRoleSetResult>();
			}
		}
		
		public System.Data.Linq.Table<EncounterPhysicianResult> EncounterPhysicianResults
		{
			get
			{
				return this.GetTable<EncounterPhysicianResult>();
			}
		}
		
		public System.Data.Linq.Table<PatientResult> PatientResults
		{
			get
			{
				return this.GetTable<PatientResult>();
			}
		}
		
		public System.Data.Linq.Table<EncounterResult> EncounterResults
		{
			get
			{
				return this.GetTable<EncounterResult>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ADT.bsp_ListActiveEncounterKeys")]
		public ISingleResult<bsp_ListActiveEncounterKeysResult> bsp_ListActiveEncounterKeys([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchScope", DbType="VarChar(10)")] string searchScope)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, userAccountKey, searchScope);
			return ((ISingleResult<bsp_ListActiveEncounterKeysResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ADT.usp_EncounterDispensingDeviceInsert")]
		public int usp_EncounterDispensingDeviceInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncounterKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> encounterKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastUsedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastUsedUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastUsedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastUsedLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncounterDispensingDeviceKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> encounterDispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), encounterKey, dispensingDeviceKey, lastUsedUTCDateTime, lastUsedLocalDateTime, encounterDispensingDeviceKey);
			encounterDispensingDeviceKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ADT.bsp_ListRecentEncounterKeys")]
		public ISingleResult<bsp_ListRecentEncounterKeysResult> bsp_ListRecentEncounterKeys([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey);
			return ((ISingleResult<bsp_ListRecentEncounterKeysResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ADT.bsp_ListActiveEncounters")]
		public ISingleResult<bsp_ListActiveEncountersResult> bsp_ListActiveEncounters([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey);
			return ((ISingleResult<bsp_ListActiveEncountersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ADT.bsp_GetApplicableEncounterKeys")]
		public ISingleResult<bsp_GetApplicableEncounterKeysResult> bsp_GetApplicableEncounterKeys([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey);
			return ((ISingleResult<bsp_GetApplicableEncounterKeysResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ADT.bsp_ListMyUndocumentedWasteEncounterKeys")]
		public ISingleResult<bsp_ListMyUndocumentedWasteEncounterKeysResult> bsp_ListMyUndocumentedWasteEncounterKeys([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userKey, dispensingDeviceKey);
			return ((ISingleResult<bsp_ListMyUndocumentedWasteEncounterKeysResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ADT.usp_EncounterActivityUpdate")]
		public int usp_EncounterActivityUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastItemTransactionUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastItemTransactionUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastItemTransactionLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> lastItemTransactionLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncounterKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> encounterKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastItemTransactionUTCDateTime, lastItemTransactionLocalDateTime, lastModifiedDispensingDeviceKey, encounterKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ADT.bsp_ListUserEncounters")]
		public ISingleResult<bsp_ListUserEncountersResult> bsp_ListUserEncounters([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey);
			return ((ISingleResult<bsp_ListUserEncountersResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "ADT.bsp_FindActiveEncounterKeys")]
        public ISingleResult<bsp_FindActiveEncounterKeysResult> bsp_FindActiveEncounterKeys([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DispensingDeviceKey", DbType = "UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FilterRestrictedAccess", DbType = "Bit")] System.Nullable<bool> filterRestrictedAccess, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PatientID", DbType = "NVarChar(50)")] string patientID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FirstName", DbType = "NVarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "LastName", DbType = "NVarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PatientLocation", DbType = "NVarChar(50)")] string patientLocation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "MatchAllFields", DbType = "Bit")] System.Nullable<bool> matchAllFields, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SearchByPreferredNameEnabled", DbType = "Bit")] System.Nullable<bool> searchByPreferredNameEnabled)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, filterRestrictedAccess, patientID, firstName, lastName, patientLocation, matchAllFields, searchByPreferredNameEnabled);
            return ((ISingleResult<bsp_FindActiveEncounterKeysResult>)(result.ReturnValue));
        }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_PatientCurrent")]
	public partial class PatientEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _PatientSnapshotKey;
		
		private System.Nullable<System.Guid> _GenderKey;
		
		private bool _SurvivingFlag;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.Guid> _PatientSiloKey;
		
		private string _PrefixText;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _PreferredName;
		
		private bool _UnknownLastNameFlag;
		
		private string _SuffixText;
		
		private System.Nullable<System.DateTime> _BirthLocalDateTime;
		
		private string _BirthDateTimePrecisionInternalCode;
		
		private bool _DeceasedFlag;
		
		private bool _RestrictedAccessFlag;
		
		private bool _PlaceholderFlag;
		
		private System.Nullable<System.Guid> _CreatedAtDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<PatientIDSetEntity> _PatientIDSetEntities;
		
		private EntitySet<PatientAllergySetEntity> _PatientAllergySetEntities;
		
		private EntityRef<GenderEntity> _GenderEntity;
		
		private EntityRef<PatientSiloEntity> _PatientSiloEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnPatientSnapshotKeyChanging(System.Guid value);
    partial void OnPatientSnapshotKeyChanged();
    partial void OnGenderKeyChanging(System.Nullable<System.Guid> value);
    partial void OnGenderKeyChanged();
    partial void OnSurvivingFlagChanging(bool value);
    partial void OnSurvivingFlagChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnPatientSiloKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPatientSiloKeyChanged();
    partial void OnPrefixTextChanging(string value);
    partial void OnPrefixTextChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPreferredNameChanging(string value);
    partial void OnPreferredNameChanged();
    partial void OnUnknownLastNameFlagChanging(bool value);
    partial void OnUnknownLastNameFlagChanged();
    partial void OnSuffixTextChanging(string value);
    partial void OnSuffixTextChanged();
    partial void OnBirthLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthLocalDateTimeChanged();
    partial void OnBirthDateTimePrecisionInternalCodeChanging(string value);
    partial void OnBirthDateTimePrecisionInternalCodeChanged();
    partial void OnDeceasedFlagChanging(bool value);
    partial void OnDeceasedFlagChanged();
    partial void OnRestrictedAccessFlagChanging(bool value);
    partial void OnRestrictedAccessFlagChanged();
    partial void OnPlaceholderFlagChanging(bool value);
    partial void OnPlaceholderFlagChanged();
    partial void OnCreatedAtDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedAtDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PatientEntity()
		{
			this._PatientIDSetEntities = new EntitySet<PatientIDSetEntity>(new Action<PatientIDSetEntity>(this.attach_PatientIDSetEntities), new Action<PatientIDSetEntity>(this.detach_PatientIDSetEntities));
			this._PatientAllergySetEntities = new EntitySet<PatientAllergySetEntity>(new Action<PatientAllergySetEntity>(this.attach_PatientAllergySetEntities), new Action<PatientAllergySetEntity>(this.detach_PatientAllergySetEntities));
			this._GenderEntity = default(EntityRef<GenderEntity>);
			this._PatientSiloEntity = default(EntityRef<PatientSiloEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PatientKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientSnapshotKey
		{
			get
			{
				return this._PatientSnapshotKey;
			}
			set
			{
				if ((this._PatientSnapshotKey != value))
				{
					this.OnPatientSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientSnapshotKey = value;
					this.SendPropertyChanged("PatientSnapshotKey");
					this.OnPatientSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> GenderKey
		{
			get
			{
				return this._GenderKey;
			}
			set
			{
				if ((this._GenderKey != value))
				{
					if (this._GenderEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderKeyChanging(value);
					this.SendPropertyChanging();
					this._GenderKey = value;
					this.SendPropertyChanged("GenderKey");
					this.OnGenderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurvivingFlag", DbType="Bit NOT NULL")]
		public bool SurvivingFlag
		{
			get
			{
				return this._SurvivingFlag;
			}
			set
			{
				if ((this._SurvivingFlag != value))
				{
					this.OnSurvivingFlagChanging(value);
					this.SendPropertyChanging();
					this._SurvivingFlag = value;
					this.SendPropertyChanged("SurvivingFlag");
					this.OnSurvivingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSiloKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PatientSiloKey
		{
			get
			{
				return this._PatientSiloKey;
			}
			set
			{
				if ((this._PatientSiloKey != value))
				{
					if (this._PatientSiloEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientSiloKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientSiloKey = value;
					this.SendPropertyChanged("PatientSiloKey");
					this.OnPatientSiloKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string PrefixText
		{
			get
			{
				return this._PrefixText;
			}
			set
			{
				if ((this._PrefixText != value))
				{
					this.OnPrefixTextChanging(value);
					this.SendPropertyChanging();
					this._PrefixText = value;
					this.SendPropertyChanged("PrefixText");
					this.OnPrefixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PreferredName
		{
			get
			{
				return this._PreferredName;
			}
			set
			{
				if ((this._PreferredName != value))
				{
					this.OnPreferredNameChanging(value);
					this.SendPropertyChanging();
					this._PreferredName = value;
					this.SendPropertyChanged("PreferredName");
					this.OnPreferredNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnknownLastNameFlag", DbType="Bit NOT NULL")]
		public bool UnknownLastNameFlag
		{
			get
			{
				return this._UnknownLastNameFlag;
			}
			set
			{
				if ((this._UnknownLastNameFlag != value))
				{
					this.OnUnknownLastNameFlagChanging(value);
					this.SendPropertyChanging();
					this._UnknownLastNameFlag = value;
					this.SendPropertyChanged("UnknownLastNameFlag");
					this.OnUnknownLastNameFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string SuffixText
		{
			get
			{
				return this._SuffixText;
			}
			set
			{
				if ((this._SuffixText != value))
				{
					this.OnSuffixTextChanging(value);
					this.SendPropertyChanging();
					this._SuffixText = value;
					this.SendPropertyChanged("SuffixText");
					this.OnSuffixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> BirthLocalDateTime
		{
			get
			{
				return this._BirthLocalDateTime;
			}
			set
			{
				if ((this._BirthLocalDateTime != value))
				{
					this.OnBirthLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._BirthLocalDateTime = value;
					this.SendPropertyChanged("BirthLocalDateTime");
					this.OnBirthLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDateTimePrecisionInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string BirthDateTimePrecisionInternalCode
		{
			get
			{
				return this._BirthDateTimePrecisionInternalCode;
			}
			set
			{
				if ((this._BirthDateTimePrecisionInternalCode != value))
				{
					this.OnBirthDateTimePrecisionInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._BirthDateTimePrecisionInternalCode = value;
					this.SendPropertyChanged("BirthDateTimePrecisionInternalCode");
					this.OnBirthDateTimePrecisionInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeceasedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeceasedFlag
		{
			get
			{
				return this._DeceasedFlag;
			}
			set
			{
				if ((this._DeceasedFlag != value))
				{
					this.OnDeceasedFlagChanging(value);
					this.SendPropertyChanging();
					this._DeceasedFlag = value;
					this.SendPropertyChanged("DeceasedFlag");
					this.OnDeceasedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictedAccessFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RestrictedAccessFlag
		{
			get
			{
				return this._RestrictedAccessFlag;
			}
			set
			{
				if ((this._RestrictedAccessFlag != value))
				{
					this.OnRestrictedAccessFlagChanging(value);
					this.SendPropertyChanging();
					this._RestrictedAccessFlag = value;
					this.SendPropertyChanged("RestrictedAccessFlag");
					this.OnRestrictedAccessFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceholderFlag", DbType="Bit NOT NULL")]
		public bool PlaceholderFlag
		{
			get
			{
				return this._PlaceholderFlag;
			}
			set
			{
				if ((this._PlaceholderFlag != value))
				{
					this.OnPlaceholderFlagChanging(value);
					this.SendPropertyChanging();
					this._PlaceholderFlag = value;
					this.SendPropertyChanged("PlaceholderFlag");
					this.OnPlaceholderFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAtDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CreatedAtDispensingDeviceKey
		{
			get
			{
				return this._CreatedAtDispensingDeviceKey;
			}
			set
			{
				if ((this._CreatedAtDispensingDeviceKey != value))
				{
					this.OnCreatedAtDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedAtDispensingDeviceKey = value;
					this.SendPropertyChanged("CreatedAtDispensingDeviceKey");
					this.OnCreatedAtDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientEntity_PatientIDSetEntity", Storage="_PatientIDSetEntities", ThisKey="Key", OtherKey="PatientKey")]
		public EntitySet<PatientIDSetEntity> PatientIDSetEntities
		{
			get
			{
				return this._PatientIDSetEntities;
			}
			set
			{
				this._PatientIDSetEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientEntity_PatientAllergySetEntity", Storage="_PatientAllergySetEntities", ThisKey="Key", OtherKey="PatientKey")]
		public EntitySet<PatientAllergySetEntity> PatientAllergySetEntities
		{
			get
			{
				return this._PatientAllergySetEntities;
			}
			set
			{
				this._PatientAllergySetEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GenderEntity_PatientEntity", Storage="_GenderEntity", ThisKey="GenderKey", OtherKey="Key", IsForeignKey=true)]
		public GenderEntity GenderEntity
		{
			get
			{
				return this._GenderEntity.Entity;
			}
			set
			{
				GenderEntity previousValue = this._GenderEntity.Entity;
				if (((previousValue != value) 
							|| (this._GenderEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GenderEntity.Entity = null;
						previousValue.PatientEntities.Remove(this);
					}
					this._GenderEntity.Entity = value;
					if ((value != null))
					{
						value.PatientEntities.Add(this);
						this._GenderKey = value.Key;
					}
					else
					{
						this._GenderKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GenderEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientSiloEntity_PatientEntity", Storage="_PatientSiloEntity", ThisKey="PatientSiloKey", OtherKey="Key", IsForeignKey=true)]
		public PatientSiloEntity PatientSiloEntity
		{
			get
			{
				return this._PatientSiloEntity.Entity;
			}
			set
			{
				PatientSiloEntity previousValue = this._PatientSiloEntity.Entity;
				if (((previousValue != value) 
							|| (this._PatientSiloEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientSiloEntity.Entity = null;
						previousValue.PatientEntities.Remove(this);
					}
					this._PatientSiloEntity.Entity = value;
					if ((value != null))
					{
						value.PatientEntities.Add(this);
						this._PatientSiloKey = value.Key;
					}
					else
					{
						this._PatientSiloKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("PatientSiloEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientIDSetEntities(PatientIDSetEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientEntity = this;
		}
		
		private void detach_PatientIDSetEntities(PatientIDSetEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientEntity = null;
		}
		
		private void attach_PatientAllergySetEntities(PatientAllergySetEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientEntity = this;
		}
		
		private void detach_PatientAllergySetEntities(PatientAllergySetEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.Gender")]
	public partial class GenderEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private string _DisplayCode;
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private bool _ActiveFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<PatientEntity> _PatientEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public GenderEntity()
		{
			this._PatientEntities = new EntitySet<PatientEntity>(new Action<PatientEntity>(this.attach_PatientEntities), new Action<PatientEntity>(this.detach_PatientEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GenderKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GenderEntity_PatientEntity", Storage="_PatientEntities", ThisKey="Key", OtherKey="GenderKey")]
		public EntitySet<PatientEntity> PatientEntities
		{
			get
			{
				return this._PatientEntities;
			}
			set
			{
				this._PatientEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientEntities(PatientEntity entity)
		{
			this.SendPropertyChanging();
			entity.GenderEntity = this;
		}
		
		private void detach_PatientEntities(PatientEntity entity)
		{
			this.SendPropertyChanging();
			entity.GenderEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_EncounterCurrent")]
	public partial class EncounterEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _EncounterSnapshotKey;
		
		private System.Nullable<System.DateTime> _LastItemTransactionUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastItemTransactionLocalDateTime;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private bool _SurvivingFlag;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private string _EncounterAdmissionStatusInternalCode;
		
		private string _EncounterID;
		
		private string _EncounterIDCheckValue;
		
		private string _PreadmitID;
		
		private string _PreadmitIDCheckValue;
		
		private string _AlternateEncounterID;
		
		private string _AlternateEncounterIDCheckValue;
		
		private string _AccountID;
		
		private string _AccountIDCheckValue;
		
		private System.Guid _PatientKey;
		
		private System.Nullable<System.DateTime> _AdmitUTCDateTime;
		
		private System.Nullable<System.DateTime> _AdmitLocalDateTime;
		
		private bool _AdmitDateOnlyFlag;
		
		private System.Nullable<System.DateTime> _ExpectedAdmitUTCDateTime;
		
		private System.Nullable<System.DateTime> _ExpectedAdmitLocalDateTime;
		
		private bool _ExpectedAdmitDateOnlyFlag;
		
		private System.Nullable<System.DateTime> _DischargeUTCDateTime;
		
		private System.Nullable<System.DateTime> _DischargeLocalDateTime;
		
		private bool _DischargeDateOnlyFlag;
		
		private bool _AlternateAutoDischargeDurationFlag;
		
		private System.Nullable<System.Guid> _EncounterPatientClassKey;
		
		private System.Nullable<System.Guid> _HospitalServiceKey;
		
		private string _CommentText;
		
		private bool _RecurringFlag;
		
		private bool _TemporaryFlag;
		
		private string _EncounterTypeInternalCode;
		
		private System.Nullable<decimal> _HeightAmount;
		
		private System.Nullable<System.Guid> _HeightUOMKey;
		
		private string _HeightMethodInternalCode;
		
		private System.Nullable<decimal> _WeightAmount;
		
		private System.Nullable<System.DateTime> _WeightUTCDateTime;
		
		private System.Nullable<System.DateTime> _WeightLocalDateTime;
		
		private System.Nullable<System.Guid> _WeightUOMKey;
		
		private string _WeightMethodInternalCode;
		
		private System.Nullable<System.Guid> _CreatedAtDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<System.DateTime> _LeaveOfAbsenceEffectiveUTCDateTime;
		
		private System.Nullable<System.DateTime> _LeaveOfAbsenceEffectiveLocalDateTime;
		
		private System.Nullable<System.DateTime> _LeaveOfAbsenceReturnUTCDateTime;
		
		private System.Nullable<System.DateTime> _LeaveOfAbsenceReturnLocalDateTime;
		
		private EntitySet<EncounterPatientLocationEntity> _EncounterPatientLocationEntities;
		
		private EntitySet<EncounterPhysicianRoleSetEntity> _EncounterPhysicianRoleSetEntities;
		
		private EntitySet<UserEncounterAssociationEntity> _UserEncounterAssociationEntities;
		
		private EntityRef<EncounterPatientClassEntity> _EncounterPatientClassEntity;
		
		private EntityRef<EncounterAdmissionStatusEntity> _EncounterAdmissionStatusEntity;
		
		private EntityRef<HospitalServiceEntity> _HospitalServiceEntity;
		
		private EntityRef<EncounterMergeEntity> _EncounterMergeEntity;
		
		private EntityRef<EncounterMergeEntity> _EncounterMergeEntity1;
		
		private EntityRef<EncounterTypeEntity> _EncounterTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnEncounterSnapshotKeyChanging(System.Guid value);
    partial void OnEncounterSnapshotKeyChanged();
    partial void OnLastItemTransactionUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastItemTransactionUTCDateTimeChanged();
    partial void OnLastItemTransactionLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastItemTransactionLocalDateTimeChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnSurvivingFlagChanging(bool value);
    partial void OnSurvivingFlagChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnEncounterAdmissionStatusInternalCodeChanging(string value);
    partial void OnEncounterAdmissionStatusInternalCodeChanged();
    partial void OnEncounterIDChanging(string value);
    partial void OnEncounterIDChanged();
    partial void OnEncounterIDCheckValueChanging(string value);
    partial void OnEncounterIDCheckValueChanged();
    partial void OnPreadmitIDChanging(string value);
    partial void OnPreadmitIDChanged();
    partial void OnPreadmitIDCheckValueChanging(string value);
    partial void OnPreadmitIDCheckValueChanged();
    partial void OnAlternateEncounterIDChanging(string value);
    partial void OnAlternateEncounterIDChanged();
    partial void OnAlternateEncounterIDCheckValueChanging(string value);
    partial void OnAlternateEncounterIDCheckValueChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnAccountIDCheckValueChanging(string value);
    partial void OnAccountIDCheckValueChanged();
    partial void OnPatientKeyChanging(System.Guid value);
    partial void OnPatientKeyChanged();
    partial void OnAdmitUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAdmitUTCDateTimeChanged();
    partial void OnAdmitLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAdmitLocalDateTimeChanged();
    partial void OnAdmitDateOnlyFlagChanging(bool value);
    partial void OnAdmitDateOnlyFlagChanged();
    partial void OnExpectedAdmitUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedAdmitUTCDateTimeChanged();
    partial void OnExpectedAdmitLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedAdmitLocalDateTimeChanged();
    partial void OnExpectedAdmitDateOnlyFlagChanging(bool value);
    partial void OnExpectedAdmitDateOnlyFlagChanged();
    partial void OnDischargeUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDischargeUTCDateTimeChanged();
    partial void OnDischargeLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDischargeLocalDateTimeChanged();
    partial void OnDischargeDateOnlyFlagChanging(bool value);
    partial void OnDischargeDateOnlyFlagChanged();
    partial void OnAlternateAutoDischargeDurationFlagChanging(bool value);
    partial void OnAlternateAutoDischargeDurationFlagChanged();
    partial void OnEncounterPatientClassKeyChanging(System.Nullable<System.Guid> value);
    partial void OnEncounterPatientClassKeyChanged();
    partial void OnHospitalServiceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnHospitalServiceKeyChanged();
    partial void OnCommentTextChanging(string value);
    partial void OnCommentTextChanged();
    partial void OnRecurringFlagChanging(bool value);
    partial void OnRecurringFlagChanged();
    partial void OnTemporaryFlagChanging(bool value);
    partial void OnTemporaryFlagChanged();
    partial void OnEncounterTypeInternalCodeChanging(string value);
    partial void OnEncounterTypeInternalCodeChanged();
    partial void OnHeightAmountChanging(System.Nullable<decimal> value);
    partial void OnHeightAmountChanged();
    partial void OnHeightUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnHeightUOMKeyChanged();
    partial void OnHeightMethodInternalCodeChanging(string value);
    partial void OnHeightMethodInternalCodeChanged();
    partial void OnWeightAmountChanging(System.Nullable<decimal> value);
    partial void OnWeightAmountChanged();
    partial void OnWeightUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnWeightUTCDateTimeChanged();
    partial void OnWeightLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnWeightLocalDateTimeChanged();
    partial void OnWeightUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnWeightUOMKeyChanged();
    partial void OnWeightMethodInternalCodeChanging(string value);
    partial void OnWeightMethodInternalCodeChanged();
    partial void OnCreatedAtDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedAtDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnLeaveOfAbsenceEffectiveUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveOfAbsenceEffectiveUTCDateTimeChanged();
    partial void OnLeaveOfAbsenceEffectiveLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveOfAbsenceEffectiveLocalDateTimeChanged();
    partial void OnLeaveOfAbsenceReturnUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveOfAbsenceReturnUTCDateTimeChanged();
    partial void OnLeaveOfAbsenceReturnLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveOfAbsenceReturnLocalDateTimeChanged();
    #endregion
		
		public EncounterEntity()
		{
			this._EncounterPatientLocationEntities = new EntitySet<EncounterPatientLocationEntity>(new Action<EncounterPatientLocationEntity>(this.attach_EncounterPatientLocationEntities), new Action<EncounterPatientLocationEntity>(this.detach_EncounterPatientLocationEntities));
			this._EncounterPhysicianRoleSetEntities = new EntitySet<EncounterPhysicianRoleSetEntity>(new Action<EncounterPhysicianRoleSetEntity>(this.attach_EncounterPhysicianRoleSetEntities), new Action<EncounterPhysicianRoleSetEntity>(this.detach_EncounterPhysicianRoleSetEntities));
			this._UserEncounterAssociationEntities = new EntitySet<UserEncounterAssociationEntity>(new Action<UserEncounterAssociationEntity>(this.attach_UserEncounterAssociationEntities), new Action<UserEncounterAssociationEntity>(this.detach_UserEncounterAssociationEntities));
			this._EncounterPatientClassEntity = default(EntityRef<EncounterPatientClassEntity>);
			this._EncounterAdmissionStatusEntity = default(EntityRef<EncounterAdmissionStatusEntity>);
			this._HospitalServiceEntity = default(EntityRef<HospitalServiceEntity>);
			this._EncounterMergeEntity = default(EntityRef<EncounterMergeEntity>);
			this._EncounterMergeEntity1 = default(EntityRef<EncounterMergeEntity>);
			this._EncounterTypeEntity = default(EntityRef<EncounterTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EncounterKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterSnapshotKey
		{
			get
			{
				return this._EncounterSnapshotKey;
			}
			set
			{
				if ((this._EncounterSnapshotKey != value))
				{
					this.OnEncounterSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterSnapshotKey = value;
					this.SendPropertyChanged("EncounterSnapshotKey");
					this.OnEncounterSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastItemTransactionUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastItemTransactionUTCDateTime
		{
			get
			{
				return this._LastItemTransactionUTCDateTime;
			}
			set
			{
				if ((this._LastItemTransactionUTCDateTime != value))
				{
					this.OnLastItemTransactionUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastItemTransactionUTCDateTime = value;
					this.SendPropertyChanged("LastItemTransactionUTCDateTime");
					this.OnLastItemTransactionUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastItemTransactionLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastItemTransactionLocalDateTime
		{
			get
			{
				return this._LastItemTransactionLocalDateTime;
			}
			set
			{
				if ((this._LastItemTransactionLocalDateTime != value))
				{
					this.OnLastItemTransactionLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastItemTransactionLocalDateTime = value;
					this.SendPropertyChanged("LastItemTransactionLocalDateTime");
					this.OnLastItemTransactionLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurvivingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SurvivingFlag
		{
			get
			{
				return this._SurvivingFlag;
			}
			set
			{
				if ((this._SurvivingFlag != value))
				{
					this.OnSurvivingFlagChanging(value);
					this.SendPropertyChanging();
					this._SurvivingFlag = value;
					this.SendPropertyChanged("SurvivingFlag");
					this.OnSurvivingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterAdmissionStatusInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EncounterAdmissionStatusInternalCode
		{
			get
			{
				return this._EncounterAdmissionStatusInternalCode;
			}
			set
			{
				if ((this._EncounterAdmissionStatusInternalCode != value))
				{
					if (this._EncounterAdmissionStatusEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEncounterAdmissionStatusInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._EncounterAdmissionStatusInternalCode = value;
					this.SendPropertyChanged("EncounterAdmissionStatusInternalCode");
					this.OnEncounterAdmissionStatusInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EncounterID
		{
			get
			{
				return this._EncounterID;
			}
			set
			{
				if ((this._EncounterID != value))
				{
					this.OnEncounterIDChanging(value);
					this.SendPropertyChanging();
					this._EncounterID = value;
					this.SendPropertyChanged("EncounterID");
					this.OnEncounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterIDCheckValue", DbType="NVarChar(2)")]
		public string EncounterIDCheckValue
		{
			get
			{
				return this._EncounterIDCheckValue;
			}
			set
			{
				if ((this._EncounterIDCheckValue != value))
				{
					this.OnEncounterIDCheckValueChanging(value);
					this.SendPropertyChanging();
					this._EncounterIDCheckValue = value;
					this.SendPropertyChanged("EncounterIDCheckValue");
					this.OnEncounterIDCheckValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmitID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PreadmitID
		{
			get
			{
				return this._PreadmitID;
			}
			set
			{
				if ((this._PreadmitID != value))
				{
					this.OnPreadmitIDChanging(value);
					this.SendPropertyChanging();
					this._PreadmitID = value;
					this.SendPropertyChanged("PreadmitID");
					this.OnPreadmitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmitIDCheckValue", DbType="NVarChar(2)")]
		public string PreadmitIDCheckValue
		{
			get
			{
				return this._PreadmitIDCheckValue;
			}
			set
			{
				if ((this._PreadmitIDCheckValue != value))
				{
					this.OnPreadmitIDCheckValueChanging(value);
					this.SendPropertyChanging();
					this._PreadmitIDCheckValue = value;
					this.SendPropertyChanged("PreadmitIDCheckValue");
					this.OnPreadmitIDCheckValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEncounterID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AlternateEncounterID
		{
			get
			{
				return this._AlternateEncounterID;
			}
			set
			{
				if ((this._AlternateEncounterID != value))
				{
					this.OnAlternateEncounterIDChanging(value);
					this.SendPropertyChanging();
					this._AlternateEncounterID = value;
					this.SendPropertyChanged("AlternateEncounterID");
					this.OnAlternateEncounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEncounterIDCheckValue", DbType="NVarChar(2)")]
		public string AlternateEncounterIDCheckValue
		{
			get
			{
				return this._AlternateEncounterIDCheckValue;
			}
			set
			{
				if ((this._AlternateEncounterIDCheckValue != value))
				{
					this.OnAlternateEncounterIDCheckValueChanging(value);
					this.SendPropertyChanging();
					this._AlternateEncounterIDCheckValue = value;
					this.SendPropertyChanged("AlternateEncounterIDCheckValue");
					this.OnAlternateEncounterIDCheckValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountIDCheckValue", DbType="NVarChar(2)")]
		public string AccountIDCheckValue
		{
			get
			{
				return this._AccountIDCheckValue;
			}
			set
			{
				if ((this._AccountIDCheckValue != value))
				{
					this.OnAccountIDCheckValueChanging(value);
					this.SendPropertyChanging();
					this._AccountIDCheckValue = value;
					this.SendPropertyChanged("AccountIDCheckValue");
					this.OnAccountIDCheckValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientKey
		{
			get
			{
				return this._PatientKey;
			}
			set
			{
				if ((this._PatientKey != value))
				{
					this.OnPatientKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientKey = value;
					this.SendPropertyChanged("PatientKey");
					this.OnPatientKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AdmitUTCDateTime
		{
			get
			{
				return this._AdmitUTCDateTime;
			}
			set
			{
				if ((this._AdmitUTCDateTime != value))
				{
					this.OnAdmitUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitUTCDateTime = value;
					this.SendPropertyChanged("AdmitUTCDateTime");
					this.OnAdmitUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AdmitLocalDateTime
		{
			get
			{
				return this._AdmitLocalDateTime;
			}
			set
			{
				if ((this._AdmitLocalDateTime != value))
				{
					this.OnAdmitLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitLocalDateTime = value;
					this.SendPropertyChanged("AdmitLocalDateTime");
					this.OnAdmitLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDateOnlyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AdmitDateOnlyFlag
		{
			get
			{
				return this._AdmitDateOnlyFlag;
			}
			set
			{
				if ((this._AdmitDateOnlyFlag != value))
				{
					this.OnAdmitDateOnlyFlagChanging(value);
					this.SendPropertyChanging();
					this._AdmitDateOnlyFlag = value;
					this.SendPropertyChanged("AdmitDateOnlyFlag");
					this.OnAdmitDateOnlyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedAdmitUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExpectedAdmitUTCDateTime
		{
			get
			{
				return this._ExpectedAdmitUTCDateTime;
			}
			set
			{
				if ((this._ExpectedAdmitUTCDateTime != value))
				{
					this.OnExpectedAdmitUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpectedAdmitUTCDateTime = value;
					this.SendPropertyChanged("ExpectedAdmitUTCDateTime");
					this.OnExpectedAdmitUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedAdmitLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExpectedAdmitLocalDateTime
		{
			get
			{
				return this._ExpectedAdmitLocalDateTime;
			}
			set
			{
				if ((this._ExpectedAdmitLocalDateTime != value))
				{
					this.OnExpectedAdmitLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpectedAdmitLocalDateTime = value;
					this.SendPropertyChanged("ExpectedAdmitLocalDateTime");
					this.OnExpectedAdmitLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedAdmitDateOnlyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ExpectedAdmitDateOnlyFlag
		{
			get
			{
				return this._ExpectedAdmitDateOnlyFlag;
			}
			set
			{
				if ((this._ExpectedAdmitDateOnlyFlag != value))
				{
					this.OnExpectedAdmitDateOnlyFlagChanging(value);
					this.SendPropertyChanging();
					this._ExpectedAdmitDateOnlyFlag = value;
					this.SendPropertyChanged("ExpectedAdmitDateOnlyFlag");
					this.OnExpectedAdmitDateOnlyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DischargeUTCDateTime
		{
			get
			{
				return this._DischargeUTCDateTime;
			}
			set
			{
				if ((this._DischargeUTCDateTime != value))
				{
					this.OnDischargeUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DischargeUTCDateTime = value;
					this.SendPropertyChanged("DischargeUTCDateTime");
					this.OnDischargeUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DischargeLocalDateTime
		{
			get
			{
				return this._DischargeLocalDateTime;
			}
			set
			{
				if ((this._DischargeLocalDateTime != value))
				{
					this.OnDischargeLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DischargeLocalDateTime = value;
					this.SendPropertyChanged("DischargeLocalDateTime");
					this.OnDischargeLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDateOnlyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DischargeDateOnlyFlag
		{
			get
			{
				return this._DischargeDateOnlyFlag;
			}
			set
			{
				if ((this._DischargeDateOnlyFlag != value))
				{
					this.OnDischargeDateOnlyFlagChanging(value);
					this.SendPropertyChanging();
					this._DischargeDateOnlyFlag = value;
					this.SendPropertyChanged("DischargeDateOnlyFlag");
					this.OnDischargeDateOnlyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateAutoDischargeDurationFlag", DbType="Bit NOT NULL")]
		public bool AlternateAutoDischargeDurationFlag
		{
			get
			{
				return this._AlternateAutoDischargeDurationFlag;
			}
			set
			{
				if ((this._AlternateAutoDischargeDurationFlag != value))
				{
					this.OnAlternateAutoDischargeDurationFlagChanging(value);
					this.SendPropertyChanging();
					this._AlternateAutoDischargeDurationFlag = value;
					this.SendPropertyChanged("AlternateAutoDischargeDurationFlag");
					this.OnAlternateAutoDischargeDurationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPatientClassKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EncounterPatientClassKey
		{
			get
			{
				return this._EncounterPatientClassKey;
			}
			set
			{
				if ((this._EncounterPatientClassKey != value))
				{
					if (this._EncounterPatientClassEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEncounterPatientClassKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterPatientClassKey = value;
					this.SendPropertyChanged("EncounterPatientClassKey");
					this.OnEncounterPatientClassKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalServiceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> HospitalServiceKey
		{
			get
			{
				return this._HospitalServiceKey;
			}
			set
			{
				if ((this._HospitalServiceKey != value))
				{
					if (this._HospitalServiceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHospitalServiceKeyChanging(value);
					this.SendPropertyChanging();
					this._HospitalServiceKey = value;
					this.SendPropertyChanged("HospitalServiceKey");
					this.OnHospitalServiceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string CommentText
		{
			get
			{
				return this._CommentText;
			}
			set
			{
				if ((this._CommentText != value))
				{
					this.OnCommentTextChanging(value);
					this.SendPropertyChanging();
					this._CommentText = value;
					this.SendPropertyChanged("CommentText");
					this.OnCommentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurringFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RecurringFlag
		{
			get
			{
				return this._RecurringFlag;
			}
			set
			{
				if ((this._RecurringFlag != value))
				{
					this.OnRecurringFlagChanging(value);
					this.SendPropertyChanging();
					this._RecurringFlag = value;
					this.SendPropertyChanged("RecurringFlag");
					this.OnRecurringFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TemporaryFlag
		{
			get
			{
				return this._TemporaryFlag;
			}
			set
			{
				if ((this._TemporaryFlag != value))
				{
					this.OnTemporaryFlagChanging(value);
					this.SendPropertyChanging();
					this._TemporaryFlag = value;
					this.SendPropertyChanged("TemporaryFlag");
					this.OnTemporaryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EncounterTypeInternalCode
		{
			get
			{
				return this._EncounterTypeInternalCode;
			}
			set
			{
				if ((this._EncounterTypeInternalCode != value))
				{
					if (this._EncounterTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEncounterTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._EncounterTypeInternalCode = value;
					this.SendPropertyChanged("EncounterTypeInternalCode");
					this.OnEncounterTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightAmount", DbType="Decimal(10,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> HeightAmount
		{
			get
			{
				return this._HeightAmount;
			}
			set
			{
				if ((this._HeightAmount != value))
				{
					this.OnHeightAmountChanging(value);
					this.SendPropertyChanging();
					this._HeightAmount = value;
					this.SendPropertyChanged("HeightAmount");
					this.OnHeightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> HeightUOMKey
		{
			get
			{
				return this._HeightUOMKey;
			}
			set
			{
				if ((this._HeightUOMKey != value))
				{
					this.OnHeightUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._HeightUOMKey = value;
					this.SendPropertyChanged("HeightUOMKey");
					this.OnHeightUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightMethodInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string HeightMethodInternalCode
		{
			get
			{
				return this._HeightMethodInternalCode;
			}
			set
			{
				if ((this._HeightMethodInternalCode != value))
				{
					this.OnHeightMethodInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._HeightMethodInternalCode = value;
					this.SendPropertyChanged("HeightMethodInternalCode");
					this.OnHeightMethodInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightAmount", DbType="Decimal(10,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> WeightAmount
		{
			get
			{
				return this._WeightAmount;
			}
			set
			{
				if ((this._WeightAmount != value))
				{
					this.OnWeightAmountChanging(value);
					this.SendPropertyChanging();
					this._WeightAmount = value;
					this.SendPropertyChanged("WeightAmount");
					this.OnWeightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> WeightUTCDateTime
		{
			get
			{
				return this._WeightUTCDateTime;
			}
			set
			{
				if ((this._WeightUTCDateTime != value))
				{
					this.OnWeightUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._WeightUTCDateTime = value;
					this.SendPropertyChanged("WeightUTCDateTime");
					this.OnWeightUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> WeightLocalDateTime
		{
			get
			{
				return this._WeightLocalDateTime;
			}
			set
			{
				if ((this._WeightLocalDateTime != value))
				{
					this.OnWeightLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._WeightLocalDateTime = value;
					this.SendPropertyChanged("WeightLocalDateTime");
					this.OnWeightLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> WeightUOMKey
		{
			get
			{
				return this._WeightUOMKey;
			}
			set
			{
				if ((this._WeightUOMKey != value))
				{
					this.OnWeightUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._WeightUOMKey = value;
					this.SendPropertyChanged("WeightUOMKey");
					this.OnWeightUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightMethodInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string WeightMethodInternalCode
		{
			get
			{
				return this._WeightMethodInternalCode;
			}
			set
			{
				if ((this._WeightMethodInternalCode != value))
				{
					this.OnWeightMethodInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._WeightMethodInternalCode = value;
					this.SendPropertyChanged("WeightMethodInternalCode");
					this.OnWeightMethodInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAtDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CreatedAtDispensingDeviceKey
		{
			get
			{
				return this._CreatedAtDispensingDeviceKey;
			}
			set
			{
				if ((this._CreatedAtDispensingDeviceKey != value))
				{
					this.OnCreatedAtDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedAtDispensingDeviceKey = value;
					this.SendPropertyChanged("CreatedAtDispensingDeviceKey");
					this.OnCreatedAtDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceEffectiveUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LeaveOfAbsenceEffectiveUTCDateTime
		{
			get
			{
				return this._LeaveOfAbsenceEffectiveUTCDateTime;
			}
			set
			{
				if ((this._LeaveOfAbsenceEffectiveUTCDateTime != value))
				{
					this.OnLeaveOfAbsenceEffectiveUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceEffectiveUTCDateTime = value;
					this.SendPropertyChanged("LeaveOfAbsenceEffectiveUTCDateTime");
					this.OnLeaveOfAbsenceEffectiveUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceEffectiveLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LeaveOfAbsenceEffectiveLocalDateTime
		{
			get
			{
				return this._LeaveOfAbsenceEffectiveLocalDateTime;
			}
			set
			{
				if ((this._LeaveOfAbsenceEffectiveLocalDateTime != value))
				{
					this.OnLeaveOfAbsenceEffectiveLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceEffectiveLocalDateTime = value;
					this.SendPropertyChanged("LeaveOfAbsenceEffectiveLocalDateTime");
					this.OnLeaveOfAbsenceEffectiveLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceReturnUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LeaveOfAbsenceReturnUTCDateTime
		{
			get
			{
				return this._LeaveOfAbsenceReturnUTCDateTime;
			}
			set
			{
				if ((this._LeaveOfAbsenceReturnUTCDateTime != value))
				{
					this.OnLeaveOfAbsenceReturnUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceReturnUTCDateTime = value;
					this.SendPropertyChanged("LeaveOfAbsenceReturnUTCDateTime");
					this.OnLeaveOfAbsenceReturnUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceReturnLocalDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LeaveOfAbsenceReturnLocalDateTime
		{
			get
			{
				return this._LeaveOfAbsenceReturnLocalDateTime;
			}
			set
			{
				if ((this._LeaveOfAbsenceReturnLocalDateTime != value))
				{
					this.OnLeaveOfAbsenceReturnLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceReturnLocalDateTime = value;
					this.SendPropertyChanged("LeaveOfAbsenceReturnLocalDateTime");
					this.OnLeaveOfAbsenceReturnLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterEntity_EncounterPatientLocationEntity", Storage="_EncounterPatientLocationEntities", ThisKey="Key", OtherKey="EncounterKey")]
		public EntitySet<EncounterPatientLocationEntity> EncounterPatientLocationEntities
		{
			get
			{
				return this._EncounterPatientLocationEntities;
			}
			set
			{
				this._EncounterPatientLocationEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterEntity_EncounterPhysicianRoleSetEntity", Storage="_EncounterPhysicianRoleSetEntities", ThisKey="Key", OtherKey="EncounterKey")]
		public EntitySet<EncounterPhysicianRoleSetEntity> EncounterPhysicianRoleSetEntities
		{
			get
			{
				return this._EncounterPhysicianRoleSetEntities;
			}
			set
			{
				this._EncounterPhysicianRoleSetEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterEntity_UserEncounterAssociationEntity", Storage="_UserEncounterAssociationEntities", ThisKey="Key", OtherKey="EncounterKey")]
		public EntitySet<UserEncounterAssociationEntity> UserEncounterAssociationEntities
		{
			get
			{
				return this._UserEncounterAssociationEntities;
			}
			set
			{
				this._UserEncounterAssociationEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterPatientClassEntity_EncounterEntity", Storage="_EncounterPatientClassEntity", ThisKey="EncounterPatientClassKey", OtherKey="Key", IsForeignKey=true)]
		public EncounterPatientClassEntity EncounterPatientClassEntity
		{
			get
			{
				return this._EncounterPatientClassEntity.Entity;
			}
			set
			{
				EncounterPatientClassEntity previousValue = this._EncounterPatientClassEntity.Entity;
				if (((previousValue != value) 
							|| (this._EncounterPatientClassEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EncounterPatientClassEntity.Entity = null;
						previousValue.EncounterEntities.Remove(this);
					}
					this._EncounterPatientClassEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterEntities.Add(this);
						this._EncounterPatientClassKey = value.Key;
					}
					else
					{
						this._EncounterPatientClassKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("EncounterPatientClassEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterAdmissionStatusEntity_EncounterEntity", Storage="_EncounterAdmissionStatusEntity", ThisKey="EncounterAdmissionStatusInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public EncounterAdmissionStatusEntity EncounterAdmissionStatusEntity
		{
			get
			{
				return this._EncounterAdmissionStatusEntity.Entity;
			}
			set
			{
				EncounterAdmissionStatusEntity previousValue = this._EncounterAdmissionStatusEntity.Entity;
				if (((previousValue != value) 
							|| (this._EncounterAdmissionStatusEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EncounterAdmissionStatusEntity.Entity = null;
						previousValue.EncounterEntities.Remove(this);
					}
					this._EncounterAdmissionStatusEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterEntities.Add(this);
						this._EncounterAdmissionStatusInternalCode = value.InternalCode;
					}
					else
					{
						this._EncounterAdmissionStatusInternalCode = default(string);
					}
					this.SendPropertyChanged("EncounterAdmissionStatusEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalServiceEntity_EncounterEntity", Storage="_HospitalServiceEntity", ThisKey="HospitalServiceKey", OtherKey="Key", IsForeignKey=true)]
		public HospitalServiceEntity HospitalServiceEntity
		{
			get
			{
				return this._HospitalServiceEntity.Entity;
			}
			set
			{
				HospitalServiceEntity previousValue = this._HospitalServiceEntity.Entity;
				if (((previousValue != value) 
							|| (this._HospitalServiceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HospitalServiceEntity.Entity = null;
						previousValue.EncounterEntities.Remove(this);
					}
					this._HospitalServiceEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterEntities.Add(this);
						this._HospitalServiceKey = value.Key;
					}
					else
					{
						this._HospitalServiceKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("HospitalServiceEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterMergeEntity_EncounterEntity", Storage="_EncounterMergeEntity", ThisKey="Key", OtherKey="SurvivingEncounterKey", IsForeignKey=true)]
		public EncounterMergeEntity EncounterMergeEntity
		{
			get
			{
				return this._EncounterMergeEntity.Entity;
			}
			set
			{
				EncounterMergeEntity previousValue = this._EncounterMergeEntity.Entity;
				if (((previousValue != value) 
							|| (this._EncounterMergeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EncounterMergeEntity.Entity = null;
						previousValue.SurvivingEncounterEntity = null;
					}
					this._EncounterMergeEntity.Entity = value;
					if ((value != null))
					{
						value.SurvivingEncounterEntity = this;
						this._Key = value.SurvivingEncounterKey;
					}
					else
					{
						this._Key = default(System.Guid);
					}
					this.SendPropertyChanged("EncounterMergeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterMergeEntity_EncounterEntity1", Storage="_EncounterMergeEntity1", ThisKey="Key", OtherKey="NonSurvivingEncounterKey", IsForeignKey=true)]
		public EncounterMergeEntity EncounterMergeEntity1
		{
			get
			{
				return this._EncounterMergeEntity1.Entity;
			}
			set
			{
				EncounterMergeEntity previousValue = this._EncounterMergeEntity1.Entity;
				if (((previousValue != value) 
							|| (this._EncounterMergeEntity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EncounterMergeEntity1.Entity = null;
						previousValue.NonSurvivingEncounterEntity = null;
					}
					this._EncounterMergeEntity1.Entity = value;
					if ((value != null))
					{
						value.NonSurvivingEncounterEntity = this;
						this._Key = value.NonSurvivingEncounterKey;
					}
					else
					{
						this._Key = default(System.Guid);
					}
					this.SendPropertyChanged("EncounterMergeEntity1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterTypeEntity_EncounterEntity", Storage="_EncounterTypeEntity", ThisKey="EncounterTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public EncounterTypeEntity EncounterTypeEntity
		{
			get
			{
				return this._EncounterTypeEntity.Entity;
			}
			set
			{
				EncounterTypeEntity previousValue = this._EncounterTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._EncounterTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EncounterTypeEntity.Entity = null;
						previousValue.EncounterEntities.Remove(this);
					}
					this._EncounterTypeEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterEntities.Add(this);
						this._EncounterTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._EncounterTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("EncounterTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EncounterPatientLocationEntities(EncounterPatientLocationEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterEntity = this;
		}
		
		private void detach_EncounterPatientLocationEntities(EncounterPatientLocationEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterEntity = null;
		}
		
		private void attach_EncounterPhysicianRoleSetEntities(EncounterPhysicianRoleSetEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterEntity = this;
		}
		
		private void detach_EncounterPhysicianRoleSetEntities(EncounterPhysicianRoleSetEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterEntity = null;
		}
		
		private void attach_UserEncounterAssociationEntities(UserEncounterAssociationEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterEntity = this;
		}
		
		private void detach_UserEncounterAssociationEntities(UserEncounterAssociationEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_EncounterPatientLocationCurrent")]
	public partial class EncounterPatientLocationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _EncounterKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _AssignedFacilityKey;
		
		private System.Nullable<System.Guid> _AssignedUnitKey;
		
		private System.Nullable<System.Guid> _AssignedUnitRoomKey;
		
		private string _AssignedBedID;
		
		private System.Nullable<System.Guid> _TemporaryUnitKey;
		
		private System.Nullable<System.Guid> _TemporaryUnitRoomKey;
		
		private string _TemporaryBedID;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<EncounterEntity> _EncounterEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnEncounterKeyChanging(System.Guid value);
    partial void OnEncounterKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnAssignedFacilityKeyChanging(System.Guid value);
    partial void OnAssignedFacilityKeyChanged();
    partial void OnAssignedUnitKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssignedUnitKeyChanged();
    partial void OnAssignedUnitRoomKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssignedUnitRoomKeyChanged();
    partial void OnAssignedBedIDChanging(string value);
    partial void OnAssignedBedIDChanged();
    partial void OnTemporaryUnitKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTemporaryUnitKeyChanged();
    partial void OnTemporaryUnitRoomKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTemporaryUnitRoomKeyChanged();
    partial void OnTemporaryBedIDChanging(string value);
    partial void OnTemporaryBedIDChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EncounterPatientLocationEntity()
		{
			this._EncounterEntity = default(EntityRef<EncounterEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EncounterPatientLocationKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					if (this._EncounterEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEncounterKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterKey = value;
					this.SendPropertyChanged("EncounterKey");
					this.OnEncounterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedFacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AssignedFacilityKey
		{
			get
			{
				return this._AssignedFacilityKey;
			}
			set
			{
				if ((this._AssignedFacilityKey != value))
				{
					this.OnAssignedFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._AssignedFacilityKey = value;
					this.SendPropertyChanged("AssignedFacilityKey");
					this.OnAssignedFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedUnitKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssignedUnitKey
		{
			get
			{
				return this._AssignedUnitKey;
			}
			set
			{
				if ((this._AssignedUnitKey != value))
				{
					this.OnAssignedUnitKeyChanging(value);
					this.SendPropertyChanging();
					this._AssignedUnitKey = value;
					this.SendPropertyChanged("AssignedUnitKey");
					this.OnAssignedUnitKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedUnitRoomKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssignedUnitRoomKey
		{
			get
			{
				return this._AssignedUnitRoomKey;
			}
			set
			{
				if ((this._AssignedUnitRoomKey != value))
				{
					this.OnAssignedUnitRoomKeyChanging(value);
					this.SendPropertyChanging();
					this._AssignedUnitRoomKey = value;
					this.SendPropertyChanged("AssignedUnitRoomKey");
					this.OnAssignedUnitRoomKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedBedID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AssignedBedID
		{
			get
			{
				return this._AssignedBedID;
			}
			set
			{
				if ((this._AssignedBedID != value))
				{
					this.OnAssignedBedIDChanging(value);
					this.SendPropertyChanging();
					this._AssignedBedID = value;
					this.SendPropertyChanged("AssignedBedID");
					this.OnAssignedBedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryUnitKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TemporaryUnitKey
		{
			get
			{
				return this._TemporaryUnitKey;
			}
			set
			{
				if ((this._TemporaryUnitKey != value))
				{
					this.OnTemporaryUnitKeyChanging(value);
					this.SendPropertyChanging();
					this._TemporaryUnitKey = value;
					this.SendPropertyChanged("TemporaryUnitKey");
					this.OnTemporaryUnitKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryUnitRoomKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TemporaryUnitRoomKey
		{
			get
			{
				return this._TemporaryUnitRoomKey;
			}
			set
			{
				if ((this._TemporaryUnitRoomKey != value))
				{
					this.OnTemporaryUnitRoomKeyChanging(value);
					this.SendPropertyChanging();
					this._TemporaryUnitRoomKey = value;
					this.SendPropertyChanged("TemporaryUnitRoomKey");
					this.OnTemporaryUnitRoomKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryBedID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TemporaryBedID
		{
			get
			{
				return this._TemporaryBedID;
			}
			set
			{
				if ((this._TemporaryBedID != value))
				{
					this.OnTemporaryBedIDChanging(value);
					this.SendPropertyChanging();
					this._TemporaryBedID = value;
					this.SendPropertyChanged("TemporaryBedID");
					this.OnTemporaryBedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterEntity_EncounterPatientLocationEntity", Storage="_EncounterEntity", ThisKey="EncounterKey", OtherKey="Key", IsForeignKey=true)]
		public EncounterEntity EncounterEntity
		{
			get
			{
				return this._EncounterEntity.Entity;
			}
			set
			{
				EncounterEntity previousValue = this._EncounterEntity.Entity;
				if (((previousValue != value) 
							|| (this._EncounterEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EncounterEntity.Entity = null;
						previousValue.EncounterPatientLocationEntities.Remove(this);
					}
					this._EncounterEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterPatientLocationEntities.Add(this);
						this._EncounterKey = value.Key;
					}
					else
					{
						this._EncounterKey = default(System.Guid);
					}
					this.SendPropertyChanged("EncounterEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_EncounterPhysicianRoleSetCurrent")]
	public partial class EncounterPhysicianRoleSetEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _EncounterKey;
		
		private string _EncounterPhysicianRoleInternalCode;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.Guid> _CreatedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<EncounterPhysicianEntity> _EncounterPhysicianEntities;
		
		private EntityRef<EncounterEntity> _EncounterEntity;
		
		private EntityRef<EncounterPhysicianRoleEntity> _EncounterPhysicianRoleEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnEncounterKeyChanging(System.Guid value);
    partial void OnEncounterKeyChanged();
    partial void OnEncounterPhysicianRoleInternalCodeChanging(string value);
    partial void OnEncounterPhysicianRoleInternalCodeChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnCreatedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EncounterPhysicianRoleSetEntity()
		{
			this._EncounterPhysicianEntities = new EntitySet<EncounterPhysicianEntity>(new Action<EncounterPhysicianEntity>(this.attach_EncounterPhysicianEntities), new Action<EncounterPhysicianEntity>(this.detach_EncounterPhysicianEntities));
			this._EncounterEntity = default(EntityRef<EncounterEntity>);
			this._EncounterPhysicianRoleEntity = default(EntityRef<EncounterPhysicianRoleEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EncounterPhysicianRoleSetKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					if (this._EncounterEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEncounterKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterKey = value;
					this.SendPropertyChanged("EncounterKey");
					this.OnEncounterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPhysicianRoleInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EncounterPhysicianRoleInternalCode
		{
			get
			{
				return this._EncounterPhysicianRoleInternalCode;
			}
			set
			{
				if ((this._EncounterPhysicianRoleInternalCode != value))
				{
					if (this._EncounterPhysicianRoleEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEncounterPhysicianRoleInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._EncounterPhysicianRoleInternalCode = value;
					this.SendPropertyChanged("EncounterPhysicianRoleInternalCode");
					this.OnEncounterPhysicianRoleInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CreatedActorKey
		{
			get
			{
				return this._CreatedActorKey;
			}
			set
			{
				if ((this._CreatedActorKey != value))
				{
					this.OnCreatedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedActorKey = value;
					this.SendPropertyChanged("CreatedActorKey");
					this.OnCreatedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterPhysicianRoleSetEntity_EncounterPhysicianEntity", Storage="_EncounterPhysicianEntities", ThisKey="Key", OtherKey="EncounterPhysicianRoleSetKey")]
		public EntitySet<EncounterPhysicianEntity> EncounterPhysicianEntities
		{
			get
			{
				return this._EncounterPhysicianEntities;
			}
			set
			{
				this._EncounterPhysicianEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterEntity_EncounterPhysicianRoleSetEntity", Storage="_EncounterEntity", ThisKey="EncounterKey", OtherKey="Key", IsForeignKey=true)]
		public EncounterEntity EncounterEntity
		{
			get
			{
				return this._EncounterEntity.Entity;
			}
			set
			{
				EncounterEntity previousValue = this._EncounterEntity.Entity;
				if (((previousValue != value) 
							|| (this._EncounterEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EncounterEntity.Entity = null;
						previousValue.EncounterPhysicianRoleSetEntities.Remove(this);
					}
					this._EncounterEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterPhysicianRoleSetEntities.Add(this);
						this._EncounterKey = value.Key;
					}
					else
					{
						this._EncounterKey = default(System.Guid);
					}
					this.SendPropertyChanged("EncounterEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterPhysicianRoleEntity_EncounterPhysicianRoleSetEntity", Storage="_EncounterPhysicianRoleEntity", ThisKey="EncounterPhysicianRoleInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public EncounterPhysicianRoleEntity EncounterPhysicianRoleEntity
		{
			get
			{
				return this._EncounterPhysicianRoleEntity.Entity;
			}
			set
			{
				EncounterPhysicianRoleEntity previousValue = this._EncounterPhysicianRoleEntity.Entity;
				if (((previousValue != value) 
							|| (this._EncounterPhysicianRoleEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EncounterPhysicianRoleEntity.Entity = null;
						previousValue.EncounterPhysicianRoleSetEntities.Remove(this);
					}
					this._EncounterPhysicianRoleEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterPhysicianRoleSetEntities.Add(this);
						this._EncounterPhysicianRoleInternalCode = value.InternalCode;
					}
					else
					{
						this._EncounterPhysicianRoleInternalCode = default(string);
					}
					this.SendPropertyChanged("EncounterPhysicianRoleEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EncounterPhysicianEntities(EncounterPhysicianEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterPhysicianRoleSetEntity = this;
		}
		
		private void detach_EncounterPhysicianEntities(EncounterPhysicianEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterPhysicianRoleSetEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_UserEncounterAssociationCurrent")]
	public partial class UserEncounterAssociationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserAccountKey;
		
		private System.Guid _EncounterKey;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<EncounterEntity> _EncounterEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserAccountKeyChanging(System.Guid value);
    partial void OnUserAccountKeyChanged();
    partial void OnEncounterKeyChanging(System.Guid value);
    partial void OnEncounterKeyChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserEncounterAssociationEntity()
		{
			this._EncounterEntity = default(EntityRef<EncounterEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserEncounterAssociationKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					if (this._EncounterEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEncounterKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterKey = value;
					this.SendPropertyChanged("EncounterKey");
					this.OnEncounterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterEntity_UserEncounterAssociationEntity", Storage="_EncounterEntity", ThisKey="EncounterKey", OtherKey="Key", IsForeignKey=true)]
		public EncounterEntity EncounterEntity
		{
			get
			{
				return this._EncounterEntity.Entity;
			}
			set
			{
				EncounterEntity previousValue = this._EncounterEntity.Entity;
				if (((previousValue != value) 
							|| (this._EncounterEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EncounterEntity.Entity = null;
						previousValue.UserEncounterAssociationEntities.Remove(this);
					}
					this._EncounterEntity.Entity = value;
					if ((value != null))
					{
						value.UserEncounterAssociationEntities.Add(this);
						this._EncounterKey = value.Key;
					}
					else
					{
						this._EncounterKey = default(System.Guid);
					}
					this.SendPropertyChanged("EncounterEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.PatientIDType")]
	public partial class PatientIDTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private string _DisplayCode;
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private bool _ActiveFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<PatientIDEntity> _PatientIDEntities;
		
		private EntitySet<PatientSiloEntity> _PatientSiloEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnDisplayCodeChanging(string value);
    partial void OnDisplayCodeChanged();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PatientIDTypeEntity()
		{
			this._PatientIDEntities = new EntitySet<PatientIDEntity>(new Action<PatientIDEntity>(this.attach_PatientIDEntities), new Action<PatientIDEntity>(this.detach_PatientIDEntities));
			this._PatientSiloEntities = new EntitySet<PatientSiloEntity>(new Action<PatientSiloEntity>(this.attach_PatientSiloEntities), new Action<PatientSiloEntity>(this.detach_PatientSiloEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PatientIDTypeKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DisplayCode
		{
			get
			{
				return this._DisplayCode;
			}
			set
			{
				if ((this._DisplayCode != value))
				{
					this.OnDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayCode = value;
					this.SendPropertyChanged("DisplayCode");
					this.OnDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientIDTypeEntity_PatientIDEntity", Storage="_PatientIDEntities", ThisKey="Key", OtherKey="PatientIDTypeKey")]
		public EntitySet<PatientIDEntity> PatientIDEntities
		{
			get
			{
				return this._PatientIDEntities;
			}
			set
			{
				this._PatientIDEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientIDTypeEntity_PatientSiloEntity", Storage="_PatientSiloEntities", ThisKey="Key", OtherKey="PrimaryPatientIDTypeKey")]
		public EntitySet<PatientSiloEntity> PatientSiloEntities
		{
			get
			{
				return this._PatientSiloEntities;
			}
			set
			{
				this._PatientSiloEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientIDEntities(PatientIDEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientIDTypeEntity = this;
		}
		
		private void detach_PatientIDEntities(PatientIDEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientIDTypeEntity = null;
		}
		
		private void attach_PatientSiloEntities(PatientSiloEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientIDTypeEntity = this;
		}
		
		private void detach_PatientSiloEntities(PatientSiloEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientIDTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.PatientID")]
	public partial class PatientIDEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _PatientIDSetKey;
		
		private System.Guid _PatientIDTypeKey;
		
		private string _PatientID;
		
		private string _CheckValue;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<PatientIDTypeEntity> _PatientIDTypeEntity;
		
		private EntityRef<PatientIDSetEntity> _PatientIDSetEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnPatientIDSetKeyChanging(System.Guid value);
    partial void OnPatientIDSetKeyChanged();
    partial void OnPatientIDTypeKeyChanging(System.Guid value);
    partial void OnPatientIDTypeKeyChanged();
    partial void OnPatientIDChanging(string value);
    partial void OnPatientIDChanged();
    partial void OnCheckValueChanging(string value);
    partial void OnCheckValueChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PatientIDEntity()
		{
			this._PatientIDTypeEntity = default(EntityRef<PatientIDTypeEntity>);
			this._PatientIDSetEntity = default(EntityRef<PatientIDSetEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PatientIDKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientIDSetKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientIDSetKey
		{
			get
			{
				return this._PatientIDSetKey;
			}
			set
			{
				if ((this._PatientIDSetKey != value))
				{
					if (this._PatientIDSetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIDSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientIDSetKey = value;
					this.SendPropertyChanged("PatientIDSetKey");
					this.OnPatientIDSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientIDTypeKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientIDTypeKey
		{
			get
			{
				return this._PatientIDTypeKey;
			}
			set
			{
				if ((this._PatientIDTypeKey != value))
				{
					if (this._PatientIDTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIDTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientIDTypeKey = value;
					this.SendPropertyChanged("PatientIDTypeKey");
					this.OnPatientIDTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckValue", DbType="NVarChar(2)", UpdateCheck=UpdateCheck.Never)]
		public string CheckValue
		{
			get
			{
				return this._CheckValue;
			}
			set
			{
				if ((this._CheckValue != value))
				{
					this.OnCheckValueChanging(value);
					this.SendPropertyChanging();
					this._CheckValue = value;
					this.SendPropertyChanged("CheckValue");
					this.OnCheckValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientIDTypeEntity_PatientIDEntity", Storage="_PatientIDTypeEntity", ThisKey="PatientIDTypeKey", OtherKey="Key", IsForeignKey=true)]
		public PatientIDTypeEntity PatientIDTypeEntity
		{
			get
			{
				return this._PatientIDTypeEntity.Entity;
			}
			set
			{
				PatientIDTypeEntity previousValue = this._PatientIDTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._PatientIDTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientIDTypeEntity.Entity = null;
						previousValue.PatientIDEntities.Remove(this);
					}
					this._PatientIDTypeEntity.Entity = value;
					if ((value != null))
					{
						value.PatientIDEntities.Add(this);
						this._PatientIDTypeKey = value.Key;
					}
					else
					{
						this._PatientIDTypeKey = default(System.Guid);
					}
					this.SendPropertyChanged("PatientIDTypeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientIDSetEntity_PatientIDEntity", Storage="_PatientIDSetEntity", ThisKey="PatientIDSetKey", OtherKey="Key", IsForeignKey=true)]
		public PatientIDSetEntity PatientIDSetEntity
		{
			get
			{
				return this._PatientIDSetEntity.Entity;
			}
			set
			{
				PatientIDSetEntity previousValue = this._PatientIDSetEntity.Entity;
				if (((previousValue != value) 
							|| (this._PatientIDSetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientIDSetEntity.Entity = null;
						previousValue.PatientIDEntities.Remove(this);
					}
					this._PatientIDSetEntity.Entity = value;
					if ((value != null))
					{
						value.PatientIDEntities.Add(this);
						this._PatientIDSetKey = value.Key;
					}
					else
					{
						this._PatientIDSetKey = default(System.Guid);
					}
					this.SendPropertyChanged("PatientIDSetEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_PatientIDSetCurrent")]
	public partial class PatientIDSetEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _PatientKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.Guid> _CreatedActorKey;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<PatientIDEntity> _PatientIDEntities;
		
		private EntityRef<PatientEntity> _PatientEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnPatientKeyChanging(System.Guid value);
    partial void OnPatientKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnCreatedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedActorKeyChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PatientIDSetEntity()
		{
			this._PatientIDEntities = new EntitySet<PatientIDEntity>(new Action<PatientIDEntity>(this.attach_PatientIDEntities), new Action<PatientIDEntity>(this.detach_PatientIDEntities));
			this._PatientEntity = default(EntityRef<PatientEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PatientIDSetKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientKey
		{
			get
			{
				return this._PatientKey;
			}
			set
			{
				if ((this._PatientKey != value))
				{
					if (this._PatientEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientKey = value;
					this.SendPropertyChanged("PatientKey");
					this.OnPatientKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CreatedActorKey
		{
			get
			{
				return this._CreatedActorKey;
			}
			set
			{
				if ((this._CreatedActorKey != value))
				{
					this.OnCreatedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedActorKey = value;
					this.SendPropertyChanged("CreatedActorKey");
					this.OnCreatedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientIDSetEntity_PatientIDEntity", Storage="_PatientIDEntities", ThisKey="Key", OtherKey="PatientIDSetKey")]
		public EntitySet<PatientIDEntity> PatientIDEntities
		{
			get
			{
				return this._PatientIDEntities;
			}
			set
			{
				this._PatientIDEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientEntity_PatientIDSetEntity", Storage="_PatientEntity", ThisKey="PatientKey", OtherKey="Key", IsForeignKey=true)]
		public PatientEntity PatientEntity
		{
			get
			{
				return this._PatientEntity.Entity;
			}
			set
			{
				PatientEntity previousValue = this._PatientEntity.Entity;
				if (((previousValue != value) 
							|| (this._PatientEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientEntity.Entity = null;
						previousValue.PatientIDSetEntities.Remove(this);
					}
					this._PatientEntity.Entity = value;
					if ((value != null))
					{
						value.PatientIDSetEntities.Add(this);
						this._PatientKey = value.Key;
					}
					else
					{
						this._PatientKey = default(System.Guid);
					}
					this.SendPropertyChanged("PatientEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientIDEntities(PatientIDEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientIDSetEntity = this;
		}
		
		private void detach_PatientIDEntities(PatientIDEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientIDSetEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_AllergyTypeCurrent")]
	public partial class AllergyTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ExternalSystemKey;
		
		private string _AllergyTypeCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<PatientAllergyEntity> _PatientAllergyEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnExternalSystemKeyChanging(System.Guid value);
    partial void OnExternalSystemKeyChanged();
    partial void OnAllergyTypeCodeChanging(string value);
    partial void OnAllergyTypeCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public AllergyTypeEntity()
		{
			this._PatientAllergyEntities = new EntitySet<PatientAllergyEntity>(new Action<PatientAllergyEntity>(this.attach_PatientAllergyEntities), new Action<PatientAllergyEntity>(this.detach_PatientAllergyEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AllergyTypeKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergyTypeCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AllergyTypeCode
		{
			get
			{
				return this._AllergyTypeCode;
			}
			set
			{
				if ((this._AllergyTypeCode != value))
				{
					this.OnAllergyTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._AllergyTypeCode = value;
					this.SendPropertyChanged("AllergyTypeCode");
					this.OnAllergyTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllergyTypeEntity_PatientAllergyEntity", Storage="_PatientAllergyEntities", ThisKey="Key", OtherKey="AllergyTypeKey")]
		public EntitySet<PatientAllergyEntity> PatientAllergyEntities
		{
			get
			{
				return this._PatientAllergyEntities;
			}
			set
			{
				this._PatientAllergyEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientAllergyEntities(PatientAllergyEntity entity)
		{
			this.SendPropertyChanging();
			entity.AllergyTypeEntity = this;
		}
		
		private void detach_PatientAllergyEntities(PatientAllergyEntity entity)
		{
			this.SendPropertyChanging();
			entity.AllergyTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.PatientAllergy")]
	public partial class PatientAllergyEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _PatientAllergySetKey;
		
		private int _SequenceNumber;
		
		private System.Nullable<System.Guid> _AllergyTypeKey;
		
		private string _AllergenCode;
		
		private string _AllergenDescriptionText;
		
		private bool _AllergenDescriptionTruncatedFlag;
		
		private System.Nullable<System.Guid> _AllergySeverityKey;
		
		private string _SensitivityCode;
		
		private string _SensitivityDescriptionText;
		
		private string _AllergyUniqueID;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<PatientAllergyReactionEntity> _PatientAllergyReactionEntities;
		
		private EntityRef<AllergyTypeEntity> _AllergyTypeEntity;
		
		private EntityRef<PatientAllergySetEntity> _PatientAllergySetEntity;
		
		private EntityRef<AllergySeverityEntity> _AllergySeverityEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnPatientAllergySetKeyChanging(System.Guid value);
    partial void OnPatientAllergySetKeyChanged();
    partial void OnMemberNumberChanging(int value);
    partial void OnMemberNumberChanged();
    partial void OnAllergyTypeKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAllergyTypeKeyChanged();
    partial void OnAllergenCodeChanging(string value);
    partial void OnAllergenCodeChanged();
    partial void OnAllergenDescriptionTextChanging(string value);
    partial void OnAllergenDescriptionTextChanged();
    partial void OnAllergenDescriptionTruncatedFlagChanging(bool value);
    partial void OnAllergenDescriptionTruncatedFlagChanged();
    partial void OnAllergySeverityKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAllergySeverityKeyChanged();
    partial void OnSensitivityCodeChanging(string value);
    partial void OnSensitivityCodeChanged();
    partial void OnSensitivityDescriptionTextChanging(string value);
    partial void OnSensitivityDescriptionTextChanged();
    partial void OnAllergyUniqueIDChanging(string value);
    partial void OnAllergyUniqueIDChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PatientAllergyEntity()
		{
			this._PatientAllergyReactionEntities = new EntitySet<PatientAllergyReactionEntity>(new Action<PatientAllergyReactionEntity>(this.attach_PatientAllergyReactionEntities), new Action<PatientAllergyReactionEntity>(this.detach_PatientAllergyReactionEntities));
			this._AllergyTypeEntity = default(EntityRef<AllergyTypeEntity>);
			this._PatientAllergySetEntity = default(EntityRef<PatientAllergySetEntity>);
			this._AllergySeverityEntity = default(EntityRef<AllergySeverityEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PatientAllergyKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAllergySetKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientAllergySetKey
		{
			get
			{
				return this._PatientAllergySetKey;
			}
			set
			{
				if ((this._PatientAllergySetKey != value))
				{
					if (this._PatientAllergySetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientAllergySetKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientAllergySetKey = value;
					this.SendPropertyChanged("PatientAllergySetKey");
					this.OnPatientAllergySetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MemberNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this.OnMemberNumberChanging(value);
					this.SendPropertyChanging();
					this._SequenceNumber = value;
					this.SendPropertyChanged("MemberNumber");
					this.OnMemberNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergyTypeKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AllergyTypeKey
		{
			get
			{
				return this._AllergyTypeKey;
			}
			set
			{
				if ((this._AllergyTypeKey != value))
				{
					if (this._AllergyTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllergyTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._AllergyTypeKey = value;
					this.SendPropertyChanged("AllergyTypeKey");
					this.OnAllergyTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AllergenCode
		{
			get
			{
				return this._AllergenCode;
			}
			set
			{
				if ((this._AllergenCode != value))
				{
					this.OnAllergenCodeChanging(value);
					this.SendPropertyChanging();
					this._AllergenCode = value;
					this.SendPropertyChanged("AllergenCode");
					this.OnAllergenCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenDescriptionText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string AllergenDescriptionText
		{
			get
			{
				return this._AllergenDescriptionText;
			}
			set
			{
				if ((this._AllergenDescriptionText != value))
				{
					this.OnAllergenDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._AllergenDescriptionText = value;
					this.SendPropertyChanged("AllergenDescriptionText");
					this.OnAllergenDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenDescriptionTruncatedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AllergenDescriptionTruncatedFlag
		{
			get
			{
				return this._AllergenDescriptionTruncatedFlag;
			}
			set
			{
				if ((this._AllergenDescriptionTruncatedFlag != value))
				{
					this.OnAllergenDescriptionTruncatedFlagChanging(value);
					this.SendPropertyChanging();
					this._AllergenDescriptionTruncatedFlag = value;
					this.SendPropertyChanged("AllergenDescriptionTruncatedFlag");
					this.OnAllergenDescriptionTruncatedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergySeverityKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AllergySeverityKey
		{
			get
			{
				return this._AllergySeverityKey;
			}
			set
			{
				if ((this._AllergySeverityKey != value))
				{
					if (this._AllergySeverityEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllergySeverityKeyChanging(value);
					this.SendPropertyChanging();
					this._AllergySeverityKey = value;
					this.SendPropertyChanged("AllergySeverityKey");
					this.OnAllergySeverityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensitivityCode", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string SensitivityCode
		{
			get
			{
				return this._SensitivityCode;
			}
			set
			{
				if ((this._SensitivityCode != value))
				{
					this.OnSensitivityCodeChanging(value);
					this.SendPropertyChanging();
					this._SensitivityCode = value;
					this.SendPropertyChanged("SensitivityCode");
					this.OnSensitivityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensitivityDescriptionText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string SensitivityDescriptionText
		{
			get
			{
				return this._SensitivityDescriptionText;
			}
			set
			{
				if ((this._SensitivityDescriptionText != value))
				{
					this.OnSensitivityDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._SensitivityDescriptionText = value;
					this.SendPropertyChanged("SensitivityDescriptionText");
					this.OnSensitivityDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergyUniqueID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AllergyUniqueID
		{
			get
			{
				return this._AllergyUniqueID;
			}
			set
			{
				if ((this._AllergyUniqueID != value))
				{
					this.OnAllergyUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._AllergyUniqueID = value;
					this.SendPropertyChanged("AllergyUniqueID");
					this.OnAllergyUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientAllergyEntity_PatientAllergyReactionEntity", Storage="_PatientAllergyReactionEntities", ThisKey="Key", OtherKey="PatientAllergyKey")]
		public EntitySet<PatientAllergyReactionEntity> PatientAllergyReactionEntities
		{
			get
			{
				return this._PatientAllergyReactionEntities;
			}
			set
			{
				this._PatientAllergyReactionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllergyTypeEntity_PatientAllergyEntity", Storage="_AllergyTypeEntity", ThisKey="AllergyTypeKey", OtherKey="Key", IsForeignKey=true)]
		public AllergyTypeEntity AllergyTypeEntity
		{
			get
			{
				return this._AllergyTypeEntity.Entity;
			}
			set
			{
				AllergyTypeEntity previousValue = this._AllergyTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._AllergyTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllergyTypeEntity.Entity = null;
						previousValue.PatientAllergyEntities.Remove(this);
					}
					this._AllergyTypeEntity.Entity = value;
					if ((value != null))
					{
						value.PatientAllergyEntities.Add(this);
						this._AllergyTypeKey = value.Key;
					}
					else
					{
						this._AllergyTypeKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("AllergyTypeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientAllergySetEntity_PatientAllergyEntity", Storage="_PatientAllergySetEntity", ThisKey="PatientAllergySetKey", OtherKey="Key", IsForeignKey=true)]
		public PatientAllergySetEntity PatientAllergySetEntity
		{
			get
			{
				return this._PatientAllergySetEntity.Entity;
			}
			set
			{
				PatientAllergySetEntity previousValue = this._PatientAllergySetEntity.Entity;
				if (((previousValue != value) 
							|| (this._PatientAllergySetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientAllergySetEntity.Entity = null;
						previousValue.PatientAllergyEntities.Remove(this);
					}
					this._PatientAllergySetEntity.Entity = value;
					if ((value != null))
					{
						value.PatientAllergyEntities.Add(this);
						this._PatientAllergySetKey = value.Key;
					}
					else
					{
						this._PatientAllergySetKey = default(System.Guid);
					}
					this.SendPropertyChanged("PatientAllergySetEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllergySeverityEntity_PatientAllergyEntity", Storage="_AllergySeverityEntity", ThisKey="AllergySeverityKey", OtherKey="Key", IsForeignKey=true)]
		public AllergySeverityEntity AllergySeverityEntity
		{
			get
			{
				return this._AllergySeverityEntity.Entity;
			}
			set
			{
				AllergySeverityEntity previousValue = this._AllergySeverityEntity.Entity;
				if (((previousValue != value) 
							|| (this._AllergySeverityEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllergySeverityEntity.Entity = null;
						previousValue.PatientAllergyEntities.Remove(this);
					}
					this._AllergySeverityEntity.Entity = value;
					if ((value != null))
					{
						value.PatientAllergyEntities.Add(this);
						this._AllergySeverityKey = value.Key;
					}
					else
					{
						this._AllergySeverityKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("AllergySeverityEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientAllergyReactionEntities(PatientAllergyReactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientAllergyEntity = this;
		}
		
		private void detach_PatientAllergyReactionEntities(PatientAllergyReactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientAllergyEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_PatientAllergySetCurrent")]
	public partial class PatientAllergySetEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _PatientKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.Guid> _CreatedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<PatientAllergyEntity> _PatientAllergyEntities;
		
		private EntityRef<PatientEntity> _PatientEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnPatientKeyChanging(System.Guid value);
    partial void OnPatientKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnCreatedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PatientAllergySetEntity()
		{
			this._PatientAllergyEntities = new EntitySet<PatientAllergyEntity>(new Action<PatientAllergyEntity>(this.attach_PatientAllergyEntities), new Action<PatientAllergyEntity>(this.detach_PatientAllergyEntities));
			this._PatientEntity = default(EntityRef<PatientEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PatientAllergySetKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientKey
		{
			get
			{
				return this._PatientKey;
			}
			set
			{
				if ((this._PatientKey != value))
				{
					if (this._PatientEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientKey = value;
					this.SendPropertyChanged("PatientKey");
					this.OnPatientKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CreatedActorKey
		{
			get
			{
				return this._CreatedActorKey;
			}
			set
			{
				if ((this._CreatedActorKey != value))
				{
					this.OnCreatedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedActorKey = value;
					this.SendPropertyChanged("CreatedActorKey");
					this.OnCreatedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientAllergySetEntity_PatientAllergyEntity", Storage="_PatientAllergyEntities", ThisKey="Key", OtherKey="PatientAllergySetKey")]
		public EntitySet<PatientAllergyEntity> PatientAllergyEntities
		{
			get
			{
				return this._PatientAllergyEntities;
			}
			set
			{
				this._PatientAllergyEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientEntity_PatientAllergySetEntity", Storage="_PatientEntity", ThisKey="PatientKey", OtherKey="Key", IsForeignKey=true)]
		public PatientEntity PatientEntity
		{
			get
			{
				return this._PatientEntity.Entity;
			}
			set
			{
				PatientEntity previousValue = this._PatientEntity.Entity;
				if (((previousValue != value) 
							|| (this._PatientEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientEntity.Entity = null;
						previousValue.PatientAllergySetEntities.Remove(this);
					}
					this._PatientEntity.Entity = value;
					if ((value != null))
					{
						value.PatientAllergySetEntities.Add(this);
						this._PatientKey = value.Key;
					}
					else
					{
						this._PatientKey = default(System.Guid);
					}
					this.SendPropertyChanged("PatientEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientAllergyEntities(PatientAllergyEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientAllergySetEntity = this;
		}
		
		private void detach_PatientAllergyEntities(PatientAllergyEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientAllergySetEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_AllergySeverityCurrent")]
	public partial class AllergySeverityEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ExternalSystemKey;
		
		private string _AllergySeverityCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<PatientAllergyEntity> _PatientAllergyEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnExternalSystemKeyChanging(System.Guid value);
    partial void OnExternalSystemKeyChanged();
    partial void OnAllergySeverityCodeChanging(string value);
    partial void OnAllergySeverityCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public AllergySeverityEntity()
		{
			this._PatientAllergyEntities = new EntitySet<PatientAllergyEntity>(new Action<PatientAllergyEntity>(this.attach_PatientAllergyEntities), new Action<PatientAllergyEntity>(this.detach_PatientAllergyEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AllergySeverityKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergySeverityCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AllergySeverityCode
		{
			get
			{
				return this._AllergySeverityCode;
			}
			set
			{
				if ((this._AllergySeverityCode != value))
				{
					this.OnAllergySeverityCodeChanging(value);
					this.SendPropertyChanging();
					this._AllergySeverityCode = value;
					this.SendPropertyChanged("AllergySeverityCode");
					this.OnAllergySeverityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllergySeverityEntity_PatientAllergyEntity", Storage="_PatientAllergyEntities", ThisKey="Key", OtherKey="AllergySeverityKey")]
		public EntitySet<PatientAllergyEntity> PatientAllergyEntities
		{
			get
			{
				return this._PatientAllergyEntities;
			}
			set
			{
				this._PatientAllergyEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientAllergyEntities(PatientAllergyEntity entity)
		{
			this.SendPropertyChanging();
			entity.AllergySeverityEntity = this;
		}
		
		private void detach_PatientAllergyEntities(PatientAllergyEntity entity)
		{
			this.SendPropertyChanging();
			entity.AllergySeverityEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_EncounterPatientClassCurrent")]
	public partial class EncounterPatientClassEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ExternalSystemKey;
		
		private string _EncounterPatientClassCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<EncounterEntity> _EncounterEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnExternalSystemKeyChanging(System.Guid value);
    partial void OnExternalSystemKeyChanged();
    partial void OnEncounterPatientClassCodeChanging(string value);
    partial void OnEncounterPatientClassCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EncounterPatientClassEntity()
		{
			this._EncounterEntities = new EntitySet<EncounterEntity>(new Action<EncounterEntity>(this.attach_EncounterEntities), new Action<EncounterEntity>(this.detach_EncounterEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EncounterPatientClassKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPatientClassCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EncounterPatientClassCode
		{
			get
			{
				return this._EncounterPatientClassCode;
			}
			set
			{
				if ((this._EncounterPatientClassCode != value))
				{
					this.OnEncounterPatientClassCodeChanging(value);
					this.SendPropertyChanging();
					this._EncounterPatientClassCode = value;
					this.SendPropertyChanged("EncounterPatientClassCode");
					this.OnEncounterPatientClassCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterPatientClassEntity_EncounterEntity", Storage="_EncounterEntities", ThisKey="Key", OtherKey="EncounterPatientClassKey")]
		public EntitySet<EncounterEntity> EncounterEntities
		{
			get
			{
				return this._EncounterEntities;
			}
			set
			{
				this._EncounterEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EncounterEntities(EncounterEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterPatientClassEntity = this;
		}
		
		private void detach_EncounterEntities(EncounterEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterPatientClassEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.EncounterPhysicianRole")]
	public partial class EncounterPhysicianRoleEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<EncounterPhysicianRoleSetEntity> _EncounterPhysicianRoleSetEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EncounterPhysicianRoleEntity()
		{
			this._EncounterPhysicianRoleSetEntities = new EntitySet<EncounterPhysicianRoleSetEntity>(new Action<EncounterPhysicianRoleSetEntity>(this.attach_EncounterPhysicianRoleSetEntities), new Action<EncounterPhysicianRoleSetEntity>(this.detach_EncounterPhysicianRoleSetEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EncounterPhysicianRoleInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterPhysicianRoleEntity_EncounterPhysicianRoleSetEntity", Storage="_EncounterPhysicianRoleSetEntities", ThisKey="InternalCode", OtherKey="EncounterPhysicianRoleInternalCode")]
		public EntitySet<EncounterPhysicianRoleSetEntity> EncounterPhysicianRoleSetEntities
		{
			get
			{
				return this._EncounterPhysicianRoleSetEntities;
			}
			set
			{
				this._EncounterPhysicianRoleSetEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EncounterPhysicianRoleSetEntities(EncounterPhysicianRoleSetEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterPhysicianRoleEntity = this;
		}
		
		private void detach_EncounterPhysicianRoleSetEntities(EncounterPhysicianRoleSetEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterPhysicianRoleEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.EncounterPhysician")]
	public partial class EncounterPhysicianEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _EncounterPhysicianRoleSetKey;
		
		private int _MemberNumber;
		
		private string _PhysicianID;
		
		private string _PrefixText;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _SuffixText;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<EncounterPhysicianRoleSetEntity> _EncounterPhysicianRoleSetEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnEncounterPhysicianRoleSetKeyChanging(System.Guid value);
    partial void OnEncounterPhysicianRoleSetKeyChanged();
    partial void OnMemberNumberChanging(int value);
    partial void OnMemberNumberChanged();
    partial void OnPhysicianIDChanging(string value);
    partial void OnPhysicianIDChanged();
    partial void OnPrefixTextChanging(string value);
    partial void OnPrefixTextChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSuffixTextChanging(string value);
    partial void OnSuffixTextChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EncounterPhysicianEntity()
		{
			this._EncounterPhysicianRoleSetEntity = default(EntityRef<EncounterPhysicianRoleSetEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EncounterPhysicianKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPhysicianRoleSetKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterPhysicianRoleSetKey
		{
			get
			{
				return this._EncounterPhysicianRoleSetKey;
			}
			set
			{
				if ((this._EncounterPhysicianRoleSetKey != value))
				{
					if (this._EncounterPhysicianRoleSetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEncounterPhysicianRoleSetKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterPhysicianRoleSetKey = value;
					this.SendPropertyChanged("EncounterPhysicianRoleSetKey");
					this.OnEncounterPhysicianRoleSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberNumber", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MemberNumber
		{
			get
			{
				return this._MemberNumber;
			}
			set
			{
				if ((this._MemberNumber != value))
				{
					this.OnMemberNumberChanging(value);
					this.SendPropertyChanging();
					this._MemberNumber = value;
					this.SendPropertyChanged("MemberNumber");
					this.OnMemberNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicianID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PhysicianID
		{
			get
			{
				return this._PhysicianID;
			}
			set
			{
				if ((this._PhysicianID != value))
				{
					this.OnPhysicianIDChanging(value);
					this.SendPropertyChanging();
					this._PhysicianID = value;
					this.SendPropertyChanged("PhysicianID");
					this.OnPhysicianIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string PrefixText
		{
			get
			{
				return this._PrefixText;
			}
			set
			{
				if ((this._PrefixText != value))
				{
					this.OnPrefixTextChanging(value);
					this.SendPropertyChanging();
					this._PrefixText = value;
					this.SendPropertyChanged("PrefixText");
					this.OnPrefixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string SuffixText
		{
			get
			{
				return this._SuffixText;
			}
			set
			{
				if ((this._SuffixText != value))
				{
					this.OnSuffixTextChanging(value);
					this.SendPropertyChanging();
					this._SuffixText = value;
					this.SendPropertyChanged("SuffixText");
					this.OnSuffixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterPhysicianRoleSetEntity_EncounterPhysicianEntity", Storage="_EncounterPhysicianRoleSetEntity", ThisKey="EncounterPhysicianRoleSetKey", OtherKey="Key", IsForeignKey=true)]
		public EncounterPhysicianRoleSetEntity EncounterPhysicianRoleSetEntity
		{
			get
			{
				return this._EncounterPhysicianRoleSetEntity.Entity;
			}
			set
			{
				EncounterPhysicianRoleSetEntity previousValue = this._EncounterPhysicianRoleSetEntity.Entity;
				if (((previousValue != value) 
							|| (this._EncounterPhysicianRoleSetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EncounterPhysicianRoleSetEntity.Entity = null;
						previousValue.EncounterPhysicianEntities.Remove(this);
					}
					this._EncounterPhysicianRoleSetEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterPhysicianEntities.Add(this);
						this._EncounterPhysicianRoleSetKey = value.Key;
					}
					else
					{
						this._EncounterPhysicianRoleSetKey = default(System.Guid);
					}
					this.SendPropertyChanged("EncounterPhysicianRoleSetEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_PatientSiloCurrent")]
	public partial class PatientSiloEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _PatientSiloSnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _ADTSystemKey;
		
		private string _PatientSiloName;
		
		private System.Guid _PrimaryPatientIDTypeKey;
		
		private System.Nullable<System.Guid> _PatientAllergyProviderKey;
		
		private System.Nullable<System.Guid> _PatientPhysicalObservationProviderKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<PatientEntity> _PatientEntities;
		
		private EntityRef<PatientIDTypeEntity> _PatientIDTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnPatientSiloSnapshotKeyChanging(System.Guid value);
    partial void OnPatientSiloSnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnADTSystemKeyChanging(System.Guid value);
    partial void OnADTSystemKeyChanged();
    partial void OnPatientSiloNameChanging(string value);
    partial void OnPatientSiloNameChanged();
    partial void OnPrimaryPatientIDTypeKeyChanging(System.Guid value);
    partial void OnPrimaryPatientIDTypeKeyChanged();
    partial void OnPatientAllergyProviderKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPatientAllergyProviderKeyChanged();
    partial void OnPatientPhysicalObservationProviderKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPatientPhysicalObservationProviderKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PatientSiloEntity()
		{
			this._PatientEntities = new EntitySet<PatientEntity>(new Action<PatientEntity>(this.attach_PatientEntities), new Action<PatientEntity>(this.detach_PatientEntities));
			this._PatientIDTypeEntity = default(EntityRef<PatientIDTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PatientSiloKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSiloSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientSiloSnapshotKey
		{
			get
			{
				return this._PatientSiloSnapshotKey;
			}
			set
			{
				if ((this._PatientSiloSnapshotKey != value))
				{
					this.OnPatientSiloSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientSiloSnapshotKey = value;
					this.SendPropertyChanged("PatientSiloSnapshotKey");
					this.OnPatientSiloSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADTSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ADTSystemKey
		{
			get
			{
				return this._ADTSystemKey;
			}
			set
			{
				if ((this._ADTSystemKey != value))
				{
					this.OnADTSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ADTSystemKey = value;
					this.SendPropertyChanged("ADTSystemKey");
					this.OnADTSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSiloName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PatientSiloName
		{
			get
			{
				return this._PatientSiloName;
			}
			set
			{
				if ((this._PatientSiloName != value))
				{
					this.OnPatientSiloNameChanging(value);
					this.SendPropertyChanging();
					this._PatientSiloName = value;
					this.SendPropertyChanged("PatientSiloName");
					this.OnPatientSiloNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryPatientIDTypeKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PrimaryPatientIDTypeKey
		{
			get
			{
				return this._PrimaryPatientIDTypeKey;
			}
			set
			{
				if ((this._PrimaryPatientIDTypeKey != value))
				{
					if (this._PatientIDTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryPatientIDTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._PrimaryPatientIDTypeKey = value;
					this.SendPropertyChanged("PrimaryPatientIDTypeKey");
					this.OnPrimaryPatientIDTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAllergyProviderKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PatientAllergyProviderKey
		{
			get
			{
				return this._PatientAllergyProviderKey;
			}
			set
			{
				if ((this._PatientAllergyProviderKey != value))
				{
					this.OnPatientAllergyProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientAllergyProviderKey = value;
					this.SendPropertyChanged("PatientAllergyProviderKey");
					this.OnPatientAllergyProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientPhysicalObservationProviderKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PatientPhysicalObservationProviderKey
		{
			get
			{
				return this._PatientPhysicalObservationProviderKey;
			}
			set
			{
				if ((this._PatientPhysicalObservationProviderKey != value))
				{
					this.OnPatientPhysicalObservationProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientPhysicalObservationProviderKey = value;
					this.SendPropertyChanged("PatientPhysicalObservationProviderKey");
					this.OnPatientPhysicalObservationProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientSiloEntity_PatientEntity", Storage="_PatientEntities", ThisKey="Key", OtherKey="PatientSiloKey")]
		public EntitySet<PatientEntity> PatientEntities
		{
			get
			{
				return this._PatientEntities;
			}
			set
			{
				this._PatientEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientIDTypeEntity_PatientSiloEntity", Storage="_PatientIDTypeEntity", ThisKey="PrimaryPatientIDTypeKey", OtherKey="Key", IsForeignKey=true)]
		public PatientIDTypeEntity PatientIDTypeEntity
		{
			get
			{
				return this._PatientIDTypeEntity.Entity;
			}
			set
			{
				PatientIDTypeEntity previousValue = this._PatientIDTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._PatientIDTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientIDTypeEntity.Entity = null;
						previousValue.PatientSiloEntities.Remove(this);
					}
					this._PatientIDTypeEntity.Entity = value;
					if ((value != null))
					{
						value.PatientSiloEntities.Add(this);
						this._PrimaryPatientIDTypeKey = value.Key;
					}
					else
					{
						this._PrimaryPatientIDTypeKey = default(System.Guid);
					}
					this.SendPropertyChanged("PatientIDTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientEntities(PatientEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientSiloEntity = this;
		}
		
		private void detach_PatientEntities(PatientEntity entity)
		{
			this.SendPropertyChanging();
			entity.PatientSiloEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.EncounterAdmissionStatus")]
	public partial class EncounterAdmissionStatusEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<EncounterEntity> _EncounterEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EncounterAdmissionStatusEntity()
		{
			this._EncounterEntities = new EntitySet<EncounterEntity>(new Action<EncounterEntity>(this.attach_EncounterEntities), new Action<EncounterEntity>(this.detach_EncounterEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EncounterAdmissionStatusInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterAdmissionStatusEntity_EncounterEntity", Storage="_EncounterEntities", ThisKey="InternalCode", OtherKey="EncounterAdmissionStatusInternalCode")]
		public EntitySet<EncounterEntity> EncounterEntities
		{
			get
			{
				return this._EncounterEntities;
			}
			set
			{
				this._EncounterEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EncounterEntities(EncounterEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterAdmissionStatusEntity = this;
		}
		
		private void detach_EncounterEntities(EncounterEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterAdmissionStatusEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_HospitalServiceCurrent")]
	public partial class HospitalServiceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ExternalSystemKey;
		
		private string _HospitalServiceCode;
		
		private string _DescriptionText;
		
		private System.Nullable<int> _SortValue;
		
		private bool _DeleteFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<EncounterEntity> _EncounterEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnExternalSystemKeyChanging(System.Guid value);
    partial void OnExternalSystemKeyChanged();
    partial void OnHospitalServiceCodeChanging(string value);
    partial void OnHospitalServiceCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(System.Nullable<int> value);
    partial void OnSortValueChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public HospitalServiceEntity()
		{
			this._EncounterEntities = new EntitySet<EncounterEntity>(new Action<EncounterEntity>(this.attach_EncounterEntities), new Action<EncounterEntity>(this.detach_EncounterEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="HospitalServiceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSystemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ExternalSystemKey
		{
			get
			{
				return this._ExternalSystemKey;
			}
			set
			{
				if ((this._ExternalSystemKey != value))
				{
					this.OnExternalSystemKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalSystemKey = value;
					this.SendPropertyChanged("ExternalSystemKey");
					this.OnExternalSystemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalServiceCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HospitalServiceCode
		{
			get
			{
				return this._HospitalServiceCode;
			}
			set
			{
				if ((this._HospitalServiceCode != value))
				{
					this.OnHospitalServiceCodeChanging(value);
					this.SendPropertyChanging();
					this._HospitalServiceCode = value;
					this.SendPropertyChanged("HospitalServiceCode");
					this.OnHospitalServiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalServiceEntity_EncounterEntity", Storage="_EncounterEntities", ThisKey="Key", OtherKey="HospitalServiceKey")]
		public EntitySet<EncounterEntity> EncounterEntities
		{
			get
			{
				return this._EncounterEntities;
			}
			set
			{
				this._EncounterEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EncounterEntities(EncounterEntity entity)
		{
			this.SendPropertyChanging();
			entity.HospitalServiceEntity = this;
		}
		
		private void detach_EncounterEntities(EncounterEntity entity)
		{
			this.SendPropertyChanging();
			entity.HospitalServiceEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.PatientAllergyReaction")]
	public partial class PatientAllergyReactionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _PatientAllergyKey;
		
		private int _MemberNumber;
		
		private string _ReactionCode;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<PatientAllergyEntity> _PatientAllergyEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnPatientAllergyKeyChanging(System.Guid value);
    partial void OnPatientAllergyKeyChanged();
    partial void OnMemberNumberChanging(int value);
    partial void OnMemberNumberChanged();
    partial void OnReactionCodeChanging(string value);
    partial void OnReactionCodeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PatientAllergyReactionEntity()
		{
			this._PatientAllergyEntity = default(EntityRef<PatientAllergyEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PatientAllergyReactionKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAllergyKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientAllergyKey
		{
			get
			{
				return this._PatientAllergyKey;
			}
			set
			{
				if ((this._PatientAllergyKey != value))
				{
					if (this._PatientAllergyEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientAllergyKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientAllergyKey = value;
					this.SendPropertyChanged("PatientAllergyKey");
					this.OnPatientAllergyKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberNumber", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MemberNumber
		{
			get
			{
				return this._MemberNumber;
			}
			set
			{
				if ((this._MemberNumber != value))
				{
					this.OnMemberNumberChanging(value);
					this.SendPropertyChanging();
					this._MemberNumber = value;
					this.SendPropertyChanged("MemberNumber");
					this.OnMemberNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReactionCode", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ReactionCode
		{
			get
			{
				return this._ReactionCode;
			}
			set
			{
				if ((this._ReactionCode != value))
				{
					this.OnReactionCodeChanging(value);
					this.SendPropertyChanging();
					this._ReactionCode = value;
					this.SendPropertyChanged("ReactionCode");
					this.OnReactionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientAllergyEntity_PatientAllergyReactionEntity", Storage="_PatientAllergyEntity", ThisKey="PatientAllergyKey", OtherKey="Key", IsForeignKey=true)]
		public PatientAllergyEntity PatientAllergyEntity
		{
			get
			{
				return this._PatientAllergyEntity.Entity;
			}
			set
			{
				PatientAllergyEntity previousValue = this._PatientAllergyEntity.Entity;
				if (((previousValue != value) 
							|| (this._PatientAllergyEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientAllergyEntity.Entity = null;
						previousValue.PatientAllergyReactionEntities.Remove(this);
					}
					this._PatientAllergyEntity.Entity = value;
					if ((value != null))
					{
						value.PatientAllergyReactionEntities.Add(this);
						this._PatientAllergyKey = value.Key;
					}
					else
					{
						this._PatientAllergyKey = default(System.Guid);
					}
					this.SendPropertyChanged("PatientAllergyEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.EncounterDispensingDevice")]
	public partial class EncounterDispensingDeviceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _EncounterKey;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.DateTime _LastUsedUTCDateTime;
		
		private System.DateTime _LastUsedLocalDateTime;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnEncounterKeyChanging(System.Guid value);
    partial void OnEncounterKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnLastUsedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastUsedUTCDateTimeChanged();
    partial void OnLastUsedLocalDateTimeChanging(System.DateTime value);
    partial void OnLastUsedLocalDateTimeChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EncounterDispensingDeviceEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EncounterDispensingDeviceKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this.OnEncounterKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterKey = value;
					this.SendPropertyChanged("EncounterKey");
					this.OnEncounterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUsedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastUsedUTCDateTime
		{
			get
			{
				return this._LastUsedUTCDateTime;
			}
			set
			{
				if ((this._LastUsedUTCDateTime != value))
				{
					this.OnLastUsedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUsedUTCDateTime = value;
					this.SendPropertyChanged("LastUsedUTCDateTime");
					this.OnLastUsedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUsedLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastUsedLocalDateTime
		{
			get
			{
				return this._LastUsedLocalDateTime;
			}
			set
			{
				if ((this._LastUsedLocalDateTime != value))
				{
					this.OnLastUsedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUsedLocalDateTime = value;
					this.SendPropertyChanged("LastUsedLocalDateTime");
					this.OnLastUsedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_EncounterMergeCurrent")]
	public partial class EncounterMergeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EncounterMergeKey;
		
		private System.Guid _SurvivingEncounterKey;
		
		private System.Guid _NonSurvivingEncounterKey;
		
		private bool _DerivedFlag;
		
		private System.DateTime _AssociationUTCDateTime;
		
		private System.DateTime _AssociationLocalDateTime;
		
		private System.Nullable<System.DateTime> _DisassociationUTCDateTime;
		
		private System.Nullable<System.DateTime> _DisassociationLocalDateTime;
		
		private System.Nullable<System.Guid> _AssociationActorKey;
		
		private System.Nullable<System.Guid> _DisassociationActorKey;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<EncounterEntity> _SurvivingEncounterEntity;
		
		private EntityRef<EncounterEntity> _NonSurvivingEncounterEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEncounterMergeKeyChanging(System.Guid value);
    partial void OnEncounterMergeKeyChanged();
    partial void OnSurvivingEncounterKeyChanging(System.Guid value);
    partial void OnSurvivingEncounterKeyChanged();
    partial void OnNonSurvivingEncounterKeyChanging(System.Guid value);
    partial void OnNonSurvivingEncounterKeyChanged();
    partial void OnDerivedFlagChanging(bool value);
    partial void OnDerivedFlagChanged();
    partial void OnAssociationUTCDateTimeChanging(System.DateTime value);
    partial void OnAssociationUTCDateTimeChanged();
    partial void OnAssociationLocalDateTimeChanging(System.DateTime value);
    partial void OnAssociationLocalDateTimeChanged();
    partial void OnDisassociationUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDisassociationUTCDateTimeChanged();
    partial void OnDisassociationLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDisassociationLocalDateTimeChanged();
    partial void OnAssociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssociationActorKeyChanged();
    partial void OnDisassociationActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDisassociationActorKeyChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EncounterMergeEntity()
		{
			this._SurvivingEncounterEntity = default(EntityRef<EncounterEntity>);
			this._NonSurvivingEncounterEntity = default(EntityRef<EncounterEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterMergeKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterMergeKey
		{
			get
			{
				return this._EncounterMergeKey;
			}
			set
			{
				if ((this._EncounterMergeKey != value))
				{
					this.OnEncounterMergeKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterMergeKey = value;
					this.SendPropertyChanged("EncounterMergeKey");
					this.OnEncounterMergeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurvivingEncounterKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid SurvivingEncounterKey
		{
			get
			{
				return this._SurvivingEncounterKey;
			}
			set
			{
				if ((this._SurvivingEncounterKey != value))
				{
					this.OnSurvivingEncounterKeyChanging(value);
					this.SendPropertyChanging();
					this._SurvivingEncounterKey = value;
					this.SendPropertyChanged("SurvivingEncounterKey");
					this.OnSurvivingEncounterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonSurvivingEncounterKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid NonSurvivingEncounterKey
		{
			get
			{
				return this._NonSurvivingEncounterKey;
			}
			set
			{
				if ((this._NonSurvivingEncounterKey != value))
				{
					this.OnNonSurvivingEncounterKeyChanging(value);
					this.SendPropertyChanging();
					this._NonSurvivingEncounterKey = value;
					this.SendPropertyChanged("NonSurvivingEncounterKey");
					this.OnNonSurvivingEncounterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DerivedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DerivedFlag
		{
			get
			{
				return this._DerivedFlag;
			}
			set
			{
				if ((this._DerivedFlag != value))
				{
					this.OnDerivedFlagChanging(value);
					this.SendPropertyChanging();
					this._DerivedFlag = value;
					this.SendPropertyChanged("DerivedFlag");
					this.OnDerivedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationUTCDateTime
		{
			get
			{
				return this._AssociationUTCDateTime;
			}
			set
			{
				if ((this._AssociationUTCDateTime != value))
				{
					this.OnAssociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationUTCDateTime = value;
					this.SendPropertyChanged("AssociationUTCDateTime");
					this.OnAssociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AssociationLocalDateTime
		{
			get
			{
				return this._AssociationLocalDateTime;
			}
			set
			{
				if ((this._AssociationLocalDateTime != value))
				{
					this.OnAssociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AssociationLocalDateTime = value;
					this.SendPropertyChanged("AssociationLocalDateTime");
					this.OnAssociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisassociationUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DisassociationUTCDateTime
		{
			get
			{
				return this._DisassociationUTCDateTime;
			}
			set
			{
				if ((this._DisassociationUTCDateTime != value))
				{
					this.OnDisassociationUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DisassociationUTCDateTime = value;
					this.SendPropertyChanged("DisassociationUTCDateTime");
					this.OnDisassociationUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisassociationLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DisassociationLocalDateTime
		{
			get
			{
				return this._DisassociationLocalDateTime;
			}
			set
			{
				if ((this._DisassociationLocalDateTime != value))
				{
					this.OnDisassociationLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DisassociationLocalDateTime = value;
					this.SendPropertyChanged("DisassociationLocalDateTime");
					this.OnDisassociationLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssociationActorKey
		{
			get
			{
				return this._AssociationActorKey;
			}
			set
			{
				if ((this._AssociationActorKey != value))
				{
					this.OnAssociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._AssociationActorKey = value;
					this.SendPropertyChanged("AssociationActorKey");
					this.OnAssociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisassociationActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DisassociationActorKey
		{
			get
			{
				return this._DisassociationActorKey;
			}
			set
			{
				if ((this._DisassociationActorKey != value))
				{
					this.OnDisassociationActorKeyChanging(value);
					this.SendPropertyChanging();
					this._DisassociationActorKey = value;
					this.SendPropertyChanged("DisassociationActorKey");
					this.OnDisassociationActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterMergeEntity_EncounterEntity", Storage="_SurvivingEncounterEntity", ThisKey="SurvivingEncounterKey", OtherKey="Key", IsUnique=true, IsForeignKey=false)]
		public EncounterEntity SurvivingEncounterEntity
		{
			get
			{
				return this._SurvivingEncounterEntity.Entity;
			}
			set
			{
				EncounterEntity previousValue = this._SurvivingEncounterEntity.Entity;
				if (((previousValue != value) 
							|| (this._SurvivingEncounterEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SurvivingEncounterEntity.Entity = null;
						previousValue.EncounterMergeEntity = null;
					}
					this._SurvivingEncounterEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterMergeEntity = this;
					}
					this.SendPropertyChanged("SurvivingEncounterEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterMergeEntity_EncounterEntity1", Storage="_NonSurvivingEncounterEntity", ThisKey="NonSurvivingEncounterKey", OtherKey="Key", IsUnique=true, IsForeignKey=false)]
		public EncounterEntity NonSurvivingEncounterEntity
		{
			get
			{
				return this._NonSurvivingEncounterEntity.Entity;
			}
			set
			{
				EncounterEntity previousValue = this._NonSurvivingEncounterEntity.Entity;
				if (((previousValue != value) 
							|| (this._NonSurvivingEncounterEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NonSurvivingEncounterEntity.Entity = null;
						previousValue.EncounterMergeEntity1 = null;
					}
					this._NonSurvivingEncounterEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterMergeEntity1 = this;
					}
					this.SendPropertyChanged("NonSurvivingEncounterEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.EncounterType")]
	public partial class EncounterTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<EncounterEntity> _EncounterEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public EncounterTypeEntity()
		{
			this._EncounterEntities = new EntitySet<EncounterEntity>(new Action<EncounterEntity>(this.attach_EncounterEntities), new Action<EncounterEntity>(this.detach_EncounterEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EncounterTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EncounterTypeEntity_EncounterEntity", Storage="_EncounterEntities", ThisKey="InternalCode", OtherKey="EncounterTypeInternalCode")]
		public EntitySet<EncounterEntity> EncounterEntities
		{
			get
			{
				return this._EncounterEntities;
			}
			set
			{
				this._EncounterEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EncounterEntities(EncounterEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterTypeEntity = this;
		}
		
		private void detach_EncounterEntities(EncounterEntity entity)
		{
			this.SendPropertyChanging();
			entity.EncounterTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PatientSiloFacilityResult
	{
		
		private System.Guid _PatientSiloKey;
		
		private System.Guid _FacilityKey;
		
		public PatientSiloFacilityResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSiloKey")]
		public System.Guid PatientSiloKey
		{
			get
			{
				return this._PatientSiloKey;
			}
			set
			{
				if ((this._PatientSiloKey != value))
				{
					this._PatientSiloKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey")]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ADT.vw_FacilityPrimaryPatientIDTypeCurrent")]
	public partial class FacilityPrimaryPatientIDTypeEntity
	{
		
		private System.Guid _FacilityKey;
		
		private System.Nullable<System.Guid> _PrimaryPatientIDTypeKey;
		
		public FacilityPrimaryPatientIDTypeEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this._FacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryPatientIDTypeKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PrimaryPatientIDTypeKey
		{
			get
			{
				return this._PrimaryPatientIDTypeKey;
			}
			set
			{
				if ((this._PrimaryPatientIDTypeKey != value))
				{
					this._PrimaryPatientIDTypeKey = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PatientIDSetResult
	{
		
		private System.Guid _PatientIDSetKey;
		
		private System.Guid _PatientKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public PatientIDSetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientIDSetKey")]
		public System.Guid PatientIDSetKey
		{
			get
			{
				return this._PatientIDSetKey;
			}
			set
			{
				if ((this._PatientIDSetKey != value))
				{
					this._PatientIDSetKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientKey")]
		public System.Guid PatientKey
		{
			get
			{
				return this._PatientKey;
			}
			set
			{
				if ((this._PatientKey != value))
				{
					this._PatientKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PatientIDResult
	{
		
		private System.Guid _PatientIDKey;
		
		private System.Guid _PatientIDSetKey;
		
		private System.Guid _PatientIDTypeKey;
		
		private string _PatientIDTypeDisplayCode;
		
		private string _PatientID;
		
		private string _CheckValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public PatientIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientIDKey")]
		public System.Guid PatientIDKey
		{
			get
			{
				return this._PatientIDKey;
			}
			set
			{
				if ((this._PatientIDKey != value))
				{
					this._PatientIDKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientIDSetKey")]
		public System.Guid PatientIDSetKey
		{
			get
			{
				return this._PatientIDSetKey;
			}
			set
			{
				if ((this._PatientIDSetKey != value))
				{
					this._PatientIDSetKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientIDTypeKey")]
		public System.Guid PatientIDTypeKey
		{
			get
			{
				return this._PatientIDTypeKey;
			}
			set
			{
				if ((this._PatientIDTypeKey != value))
				{
					this._PatientIDTypeKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientIDTypeDisplayCode", CanBeNull=false)]
		public string PatientIDTypeDisplayCode
		{
			get
			{
				return this._PatientIDTypeDisplayCode;
			}
			set
			{
				if ((this._PatientIDTypeDisplayCode != value))
				{
					this._PatientIDTypeDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", CanBeNull=false)]
		public string PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this._PatientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckValue", CanBeNull=false)]
		public string CheckValue
		{
			get
			{
				return this._CheckValue;
			}
			set
			{
				if ((this._CheckValue != value))
				{
					this._CheckValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PatientAllergySetResult
	{
		
		private System.Guid _PatientAllergySetKey;
		
		private System.Guid _PatientKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public PatientAllergySetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAllergySetKey")]
		public System.Guid PatientAllergySetKey
		{
			get
			{
				return this._PatientAllergySetKey;
			}
			set
			{
				if ((this._PatientAllergySetKey != value))
				{
					this._PatientAllergySetKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientKey")]
		public System.Guid PatientKey
		{
			get
			{
				return this._PatientKey;
			}
			set
			{
				if ((this._PatientKey != value))
				{
					this._PatientKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PatientAllergyResult
	{
		
		private System.Guid _PatientAllergyKey;
		
		private System.Guid _PatientAllergySetKey;
		
		private int _MemberNumber;
		
		private System.Nullable<System.Guid> _AllergyTypeKey;
		
		private string _AllergenCode;
		
		private string _AllergenDescriptionText;
		
		private bool _AllergenDescriptionTruncatedFlag;
		
		private System.Nullable<System.Guid> _AllergySeverityKey;
		
		private string _SensitivityCode;
		
		private string _SensitivityDescriptionText;
		
		private string _AllergyUniqueID;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public PatientAllergyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAllergyKey")]
		public System.Guid PatientAllergyKey
		{
			get
			{
				return this._PatientAllergyKey;
			}
			set
			{
				if ((this._PatientAllergyKey != value))
				{
					this._PatientAllergyKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAllergySetKey")]
		public System.Guid PatientAllergySetKey
		{
			get
			{
				return this._PatientAllergySetKey;
			}
			set
			{
				if ((this._PatientAllergySetKey != value))
				{
					this._PatientAllergySetKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberNumber")]
		public int MemberNumber
		{
			get
			{
				return this._MemberNumber;
			}
			set
			{
				if ((this._MemberNumber != value))
				{
					this._MemberNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergyTypeKey")]
		public System.Nullable<System.Guid> AllergyTypeKey
		{
			get
			{
				return this._AllergyTypeKey;
			}
			set
			{
				if ((this._AllergyTypeKey != value))
				{
					this._AllergyTypeKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenCode", CanBeNull=false)]
		public string AllergenCode
		{
			get
			{
				return this._AllergenCode;
			}
			set
			{
				if ((this._AllergenCode != value))
				{
					this._AllergenCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenDescriptionText", CanBeNull=false)]
		public string AllergenDescriptionText
		{
			get
			{
				return this._AllergenDescriptionText;
			}
			set
			{
				if ((this._AllergenDescriptionText != value))
				{
					this._AllergenDescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergenDescriptionTruncatedFlag")]
		public bool AllergenDescriptionTruncatedFlag
		{
			get
			{
				return this._AllergenDescriptionTruncatedFlag;
			}
			set
			{
				if ((this._AllergenDescriptionTruncatedFlag != value))
				{
					this._AllergenDescriptionTruncatedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergySeverityKey")]
		public System.Nullable<System.Guid> AllergySeverityKey
		{
			get
			{
				return this._AllergySeverityKey;
			}
			set
			{
				if ((this._AllergySeverityKey != value))
				{
					this._AllergySeverityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensitivityCode", CanBeNull=false)]
		public string SensitivityCode
		{
			get
			{
				return this._SensitivityCode;
			}
			set
			{
				if ((this._SensitivityCode != value))
				{
					this._SensitivityCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SensitivityDescriptionText", CanBeNull=false)]
		public string SensitivityDescriptionText
		{
			get
			{
				return this._SensitivityDescriptionText;
			}
			set
			{
				if ((this._SensitivityDescriptionText != value))
				{
					this._SensitivityDescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergyUniqueID", CanBeNull=false)]
		public string AllergyUniqueID
		{
			get
			{
				return this._AllergyUniqueID;
			}
			set
			{
				if ((this._AllergyUniqueID != value))
				{
					this._AllergyUniqueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PatientAllergyReactionResult
	{
		
		private System.Guid _PatientAllergyReactionKey;
		
		private System.Guid _PatientAllergyKey;
		
		private int _MemberNumber;
		
		private string _ReactionCode;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public PatientAllergyReactionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAllergyReactionKey")]
		public System.Guid PatientAllergyReactionKey
		{
			get
			{
				return this._PatientAllergyReactionKey;
			}
			set
			{
				if ((this._PatientAllergyReactionKey != value))
				{
					this._PatientAllergyReactionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAllergyKey")]
		public System.Guid PatientAllergyKey
		{
			get
			{
				return this._PatientAllergyKey;
			}
			set
			{
				if ((this._PatientAllergyKey != value))
				{
					this._PatientAllergyKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberNumber")]
		public int MemberNumber
		{
			get
			{
				return this._MemberNumber;
			}
			set
			{
				if ((this._MemberNumber != value))
				{
					this._MemberNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReactionCode", CanBeNull=false)]
		public string ReactionCode
		{
			get
			{
				return this._ReactionCode;
			}
			set
			{
				if ((this._ReactionCode != value))
				{
					this._ReactionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class EncounterPatientLocationResult
	{
		
		private System.Guid _EncounterPatientLocationKey;
		
		private System.Guid _EncounterKey;
		
		private System.Guid _AssignedFacilityKey;
		
		private System.Nullable<System.Guid> _AssignedUnitKey;
		
		private System.Nullable<System.Guid> _AssignedUnitRoomKey;
		
		private string _AssignedBedID;
		
		private System.Nullable<System.Guid> _TemporaryUnitKey;
		
		private System.Nullable<System.Guid> _TemporaryUnitRoomKey;
		
		private string _TemporaryBedID;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public EncounterPatientLocationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPatientLocationKey")]
		public System.Guid EncounterPatientLocationKey
		{
			get
			{
				return this._EncounterPatientLocationKey;
			}
			set
			{
				if ((this._EncounterPatientLocationKey != value))
				{
					this._EncounterPatientLocationKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey")]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedFacilityKey")]
		public System.Guid AssignedFacilityKey
		{
			get
			{
				return this._AssignedFacilityKey;
			}
			set
			{
				if ((this._AssignedFacilityKey != value))
				{
					this._AssignedFacilityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedUnitKey")]
		public System.Nullable<System.Guid> AssignedUnitKey
		{
			get
			{
				return this._AssignedUnitKey;
			}
			set
			{
				if ((this._AssignedUnitKey != value))
				{
					this._AssignedUnitKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedUnitRoomKey")]
		public System.Nullable<System.Guid> AssignedUnitRoomKey
		{
			get
			{
				return this._AssignedUnitRoomKey;
			}
			set
			{
				if ((this._AssignedUnitRoomKey != value))
				{
					this._AssignedUnitRoomKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedBedID", CanBeNull=false)]
		public string AssignedBedID
		{
			get
			{
				return this._AssignedBedID;
			}
			set
			{
				if ((this._AssignedBedID != value))
				{
					this._AssignedBedID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryUnitKey")]
		public System.Nullable<System.Guid> TemporaryUnitKey
		{
			get
			{
				return this._TemporaryUnitKey;
			}
			set
			{
				if ((this._TemporaryUnitKey != value))
				{
					this._TemporaryUnitKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryUnitRoomKey")]
		public System.Nullable<System.Guid> TemporaryUnitRoomKey
		{
			get
			{
				return this._TemporaryUnitRoomKey;
			}
			set
			{
				if ((this._TemporaryUnitRoomKey != value))
				{
					this._TemporaryUnitRoomKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryBedID", CanBeNull=false)]
		public string TemporaryBedID
		{
			get
			{
				return this._TemporaryBedID;
			}
			set
			{
				if ((this._TemporaryBedID != value))
				{
					this._TemporaryBedID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class EncounterPhysicianRoleSetResult
	{
		
		private System.Guid _EncounterPhysicianRoleSetKey;
		
		private System.Guid _EncounterKey;
		
		private string _EncounterPhysicianRoleInternalCode;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public EncounterPhysicianRoleSetResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPhysicianRoleSetKey")]
		public System.Guid EncounterPhysicianRoleSetKey
		{
			get
			{
				return this._EncounterPhysicianRoleSetKey;
			}
			set
			{
				if ((this._EncounterPhysicianRoleSetKey != value))
				{
					this._EncounterPhysicianRoleSetKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey")]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPhysicianRoleInternalCode", CanBeNull=false)]
		public string EncounterPhysicianRoleInternalCode
		{
			get
			{
				return this._EncounterPhysicianRoleInternalCode;
			}
			set
			{
				if ((this._EncounterPhysicianRoleInternalCode != value))
				{
					this._EncounterPhysicianRoleInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class EncounterPhysicianResult
	{
		
		private System.Guid _EncounterPhysicianKey;
		
		private System.Guid _EncounterPhysicianRoleSetKey;
		
		private int _MemberNumber;
		
		private string _PhysicianID;
		
		private string _PrefixText;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _SuffixText;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		public EncounterPhysicianResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPhysicianKey")]
		public System.Guid EncounterPhysicianKey
		{
			get
			{
				return this._EncounterPhysicianKey;
			}
			set
			{
				if ((this._EncounterPhysicianKey != value))
				{
					this._EncounterPhysicianKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPhysicianRoleSetKey")]
		public System.Guid EncounterPhysicianRoleSetKey
		{
			get
			{
				return this._EncounterPhysicianRoleSetKey;
			}
			set
			{
				if ((this._EncounterPhysicianRoleSetKey != value))
				{
					this._EncounterPhysicianRoleSetKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberNumber")]
		public int MemberNumber
		{
			get
			{
				return this._MemberNumber;
			}
			set
			{
				if ((this._MemberNumber != value))
				{
					this._MemberNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicianID", CanBeNull=false)]
		public string PhysicianID
		{
			get
			{
				return this._PhysicianID;
			}
			set
			{
				if ((this._PhysicianID != value))
				{
					this._PhysicianID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixText", CanBeNull=false)]
		public string PrefixText
		{
			get
			{
				return this._PrefixText;
			}
			set
			{
				if ((this._PrefixText != value))
				{
					this._PrefixText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixText", CanBeNull=false)]
		public string SuffixText
		{
			get
			{
				return this._SuffixText;
			}
			set
			{
				if ((this._SuffixText != value))
				{
					this._SuffixText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", CanBeNull=false)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this._LastModifiedBinaryValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PatientResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PatientSnapshotKey;
		
		private System.Guid _PatientKey;
		
		private System.Nullable<System.Guid> _PatientSiloKey;
		
		private string _PrefixText;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _PreferredName;
		
		private bool _UnknownLastNameFlag;
		
		private string _SuffixText;
		
		private System.Nullable<System.DateTime> _BirthUTCDateTime;
		
		private System.Nullable<System.DateTime> _BirthLocalDateTime;
		
		private string _BirthDateTimePrecisionInternalCode;
		
		private System.Nullable<System.Guid> _GenderKey;
		
		private bool _DeceasedFlag;
		
		private bool _RestrictedAccessFlag;
		
		private bool _PlaceholderFlag;
		
		private System.Nullable<System.Guid> _CreatedAtDispensingDeviceKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private bool _SurvivingFlag;
		
		private string _GenderDisplayCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientSnapshotKeyChanging(System.Guid value);
    partial void OnPatientSnapshotKeyChanged();
    partial void OnPatientKeyChanging(System.Guid value);
    partial void OnPatientKeyChanged();
    partial void OnPatientSiloKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPatientSiloKeyChanged();
    partial void OnPrefixTextChanging(string value);
    partial void OnPrefixTextChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPreferredNameChanging(string value);
    partial void OnPreferredNameChanged();
    partial void OnUnknownLastNameFlagChanging(bool value);
    partial void OnUnknownLastNameFlagChanged();
    partial void OnSuffixTextChanging(string value);
    partial void OnSuffixTextChanged();
    partial void OnBirthUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthUTCDateTimeChanged();
    partial void OnBirthLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthLocalDateTimeChanged();
    partial void OnBirthDateTimePrecisionInternalCodeChanging(string value);
    partial void OnBirthDateTimePrecisionInternalCodeChanged();
    partial void OnGenderKeyChanging(System.Nullable<System.Guid> value);
    partial void OnGenderKeyChanged();
    partial void OnDeceasedFlagChanging(bool value);
    partial void OnDeceasedFlagChanged();
    partial void OnRestrictedAccessFlagChanging(bool value);
    partial void OnRestrictedAccessFlagChanged();
    partial void OnPlaceholderFlagChanging(bool value);
    partial void OnPlaceholderFlagChanged();
    partial void OnCreatedAtDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedAtDispensingDeviceKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnSurvivingFlagChanging(bool value);
    partial void OnSurvivingFlagChanged();
    partial void OnGenderDisplayCodeChanging(string value);
    partial void OnGenderDisplayCodeChanged();
    #endregion
		
		public PatientResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSnapshotKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientSnapshotKey
		{
			get
			{
				return this._PatientSnapshotKey;
			}
			set
			{
				if ((this._PatientSnapshotKey != value))
				{
					this.OnPatientSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientSnapshotKey = value;
					this.SendPropertyChanged("PatientSnapshotKey");
					this.OnPatientSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientKey
		{
			get
			{
				return this._PatientKey;
			}
			set
			{
				if ((this._PatientKey != value))
				{
					this.OnPatientKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientKey = value;
					this.SendPropertyChanged("PatientKey");
					this.OnPatientKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSiloKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PatientSiloKey
		{
			get
			{
				return this._PatientSiloKey;
			}
			set
			{
				if ((this._PatientSiloKey != value))
				{
					this.OnPatientSiloKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientSiloKey = value;
					this.SendPropertyChanged("PatientSiloKey");
					this.OnPatientSiloKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string PrefixText
		{
			get
			{
				return this._PrefixText;
			}
			set
			{
				if ((this._PrefixText != value))
				{
					this.OnPrefixTextChanging(value);
					this.SendPropertyChanging();
					this._PrefixText = value;
					this.SendPropertyChanged("PrefixText");
					this.OnPrefixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PreferredName
		{
			get
			{
				return this._PreferredName;
			}
			set
			{
				if ((this._PreferredName != value))
				{
					this.OnPreferredNameChanging(value);
					this.SendPropertyChanging();
					this._PreferredName = value;
					this.SendPropertyChanged("PreferredName");
					this.OnPreferredNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnknownLastNameFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool UnknownLastNameFlag
		{
			get
			{
				return this._UnknownLastNameFlag;
			}
			set
			{
				if ((this._UnknownLastNameFlag != value))
				{
					this.OnUnknownLastNameFlagChanging(value);
					this.SendPropertyChanging();
					this._UnknownLastNameFlag = value;
					this.SendPropertyChanged("UnknownLastNameFlag");
					this.OnUnknownLastNameFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixText", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string SuffixText
		{
			get
			{
				return this._SuffixText;
			}
			set
			{
				if ((this._SuffixText != value))
				{
					this.OnSuffixTextChanging(value);
					this.SendPropertyChanging();
					this._SuffixText = value;
					this.SendPropertyChanged("SuffixText");
					this.OnSuffixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> BirthUTCDateTime
		{
			get
			{
				return this._BirthUTCDateTime;
			}
			set
			{
				if ((this._BirthUTCDateTime != value))
				{
					this.OnBirthUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._BirthUTCDateTime = value;
					this.SendPropertyChanged("BirthUTCDateTime");
					this.OnBirthUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> BirthLocalDateTime
		{
			get
			{
				return this._BirthLocalDateTime;
			}
			set
			{
				if ((this._BirthLocalDateTime != value))
				{
					this.OnBirthLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._BirthLocalDateTime = value;
					this.SendPropertyChanged("BirthLocalDateTime");
					this.OnBirthLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDateTimePrecisionInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string BirthDateTimePrecisionInternalCode
		{
			get
			{
				return this._BirthDateTimePrecisionInternalCode;
			}
			set
			{
				if ((this._BirthDateTimePrecisionInternalCode != value))
				{
					this.OnBirthDateTimePrecisionInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._BirthDateTimePrecisionInternalCode = value;
					this.SendPropertyChanged("BirthDateTimePrecisionInternalCode");
					this.OnBirthDateTimePrecisionInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> GenderKey
		{
			get
			{
				return this._GenderKey;
			}
			set
			{
				if ((this._GenderKey != value))
				{
					this.OnGenderKeyChanging(value);
					this.SendPropertyChanging();
					this._GenderKey = value;
					this.SendPropertyChanged("GenderKey");
					this.OnGenderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeceasedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeceasedFlag
		{
			get
			{
				return this._DeceasedFlag;
			}
			set
			{
				if ((this._DeceasedFlag != value))
				{
					this.OnDeceasedFlagChanging(value);
					this.SendPropertyChanging();
					this._DeceasedFlag = value;
					this.SendPropertyChanged("DeceasedFlag");
					this.OnDeceasedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictedAccessFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RestrictedAccessFlag
		{
			get
			{
				return this._RestrictedAccessFlag;
			}
			set
			{
				if ((this._RestrictedAccessFlag != value))
				{
					this.OnRestrictedAccessFlagChanging(value);
					this.SendPropertyChanging();
					this._RestrictedAccessFlag = value;
					this.SendPropertyChanged("RestrictedAccessFlag");
					this.OnRestrictedAccessFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceholderFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PlaceholderFlag
		{
			get
			{
				return this._PlaceholderFlag;
			}
			set
			{
				if ((this._PlaceholderFlag != value))
				{
					this.OnPlaceholderFlagChanging(value);
					this.SendPropertyChanging();
					this._PlaceholderFlag = value;
					this.SendPropertyChanged("PlaceholderFlag");
					this.OnPlaceholderFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAtDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CreatedAtDispensingDeviceKey
		{
			get
			{
				return this._CreatedAtDispensingDeviceKey;
			}
			set
			{
				if ((this._CreatedAtDispensingDeviceKey != value))
				{
					this.OnCreatedAtDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedAtDispensingDeviceKey = value;
					this.SendPropertyChanged("CreatedAtDispensingDeviceKey");
					this.OnCreatedAtDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurvivingFlag", DbType="Bit NOT NULL")]
		public bool SurvivingFlag
		{
			get
			{
				return this._SurvivingFlag;
			}
			set
			{
				if ((this._SurvivingFlag != value))
				{
					this.OnSurvivingFlagChanging(value);
					this.SendPropertyChanging();
					this._SurvivingFlag = value;
					this.SendPropertyChanged("SurvivingFlag");
					this.OnSurvivingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderDisplayCode", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string GenderDisplayCode
		{
			get
			{
				return this._GenderDisplayCode;
			}
			set
			{
				if ((this._GenderDisplayCode != value))
				{
					this.OnGenderDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._GenderDisplayCode = value;
					this.SendPropertyChanged("GenderDisplayCode");
					this.OnGenderDisplayCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class EncounterResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EncounterSnapshotKey;
		
		private System.Guid _EncounterKey;
		
		private string _EncounterAdmissionStatusInternalCode;
		
		private string _EncounterID;
		
		private string _EncounterIDCheckValue;
		
		private string _PreadmitID;
		
		private string _PreadmitIDCheckValue;
		
		private string _AlternateEncounterID;
		
		private string _AlternateEncounterIDCheckValue;
		
		private string _AccountID;
		
		private string _AccountIDCheckValue;
		
		private System.Guid _PatientKey;
		
		private bool _PatientChangedFlag;
		
		private System.Nullable<System.DateTime> _AdmitUTCDateTime;
		
		private System.Nullable<System.DateTime> _AdmitLocalDateTime;
		
		private bool _AdmitDateOnlyFlag;
		
		private System.Nullable<System.DateTime> _ExpectedAdmitUTCDateTime;
		
		private System.Nullable<System.DateTime> _ExpectedAdmitLocalDateTime;
		
		private bool _ExpectedAdmitDateOnlyFlag;
		
		private System.Nullable<System.DateTime> _DischargeUTCDateTime;
		
		private System.Nullable<System.DateTime> _DischargeLocalDateTime;
		
		private bool _DischargeDateOnlyFlag;
		
		private bool _AlternateAutoDischargeDurationFlag;
		
		private System.Nullable<System.DateTime> _CancelledUTCDateTime;
		
		private System.Nullable<System.DateTime> _CancelledLocalDateTime;
		
		private System.Nullable<System.Guid> _EncounterPatientClassKey;
		
		private System.Nullable<System.Guid> _HospitalServiceKey;
		
		private string _CommentText;
		
		private bool _RecurringFlag;
		
		private bool _TemporaryFlag;
		
		private string _EncounterTypeInternalCode;
		
		private System.Nullable<decimal> _HeightAmount;
		
		private System.Nullable<System.Guid> _HeightUOMKey;
		
		private string _HeightMethodInternalCode;
		
		private System.Nullable<decimal> _WeightAmount;
		
		private System.Nullable<System.DateTime> _WeightUTCDateTime;
		
		private System.Nullable<System.DateTime> _WeightLocalDateTime;
		
		private System.Nullable<System.Guid> _WeightUOMKey;
		
		private string _WeightMethodInternalCode;
		
		private System.Nullable<System.DateTime> _LeaveOfAbsenceEffectiveUTCDateTime;
		
		private System.Nullable<System.DateTime> _LeaveOfAbsenceEffectiveLocalDateTime;
		
		private System.Nullable<System.DateTime> _LeaveOfAbsenceReturnUTCDateTime;
		
		private System.Nullable<System.DateTime> _LeaveOfAbsenceReturnLocalDateTime;
		
		private System.Nullable<System.Guid> _CreatedAtDispensingDeviceKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<System.DateTime> _LastItemTransactionUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastItemTransactionLocalDateTime;
		
		private bool _SurvivingFlag;
		
		private System.Nullable<System.DateTime> _CreatedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CreatedLocalDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEncounterSnapshotKeyChanging(System.Guid value);
    partial void OnEncounterSnapshotKeyChanged();
    partial void OnEncounterKeyChanging(System.Guid value);
    partial void OnEncounterKeyChanged();
    partial void OnEncounterAdmissionStatusInternalCodeChanging(string value);
    partial void OnEncounterAdmissionStatusInternalCodeChanged();
    partial void OnEncounterIDChanging(string value);
    partial void OnEncounterIDChanged();
    partial void OnEncounterIDCheckValueChanging(string value);
    partial void OnEncounterIDCheckValueChanged();
    partial void OnPreadmitIDChanging(string value);
    partial void OnPreadmitIDChanged();
    partial void OnPreadmitIDCheckValueChanging(string value);
    partial void OnPreadmitIDCheckValueChanged();
    partial void OnAlternateEncounterIDChanging(string value);
    partial void OnAlternateEncounterIDChanged();
    partial void OnAlternateEncounterIDCheckValueChanging(string value);
    partial void OnAlternateEncounterIDCheckValueChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnAccountIDCheckValueChanging(string value);
    partial void OnAccountIDCheckValueChanged();
    partial void OnPatientKeyChanging(System.Guid value);
    partial void OnPatientKeyChanged();
    partial void OnPatientChangedFlagChanging(bool value);
    partial void OnPatientChangedFlagChanged();
    partial void OnAdmitUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAdmitUTCDateTimeChanged();
    partial void OnAdmitLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAdmitLocalDateTimeChanged();
    partial void OnAdmitDateOnlyFlagChanging(bool value);
    partial void OnAdmitDateOnlyFlagChanged();
    partial void OnExpectedAdmitUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedAdmitUTCDateTimeChanged();
    partial void OnExpectedAdmitLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedAdmitLocalDateTimeChanged();
    partial void OnExpectedAdmitDateOnlyFlagChanging(bool value);
    partial void OnExpectedAdmitDateOnlyFlagChanged();
    partial void OnDischargeUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDischargeUTCDateTimeChanged();
    partial void OnDischargeLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDischargeLocalDateTimeChanged();
    partial void OnDischargeDateOnlyFlagChanging(bool value);
    partial void OnDischargeDateOnlyFlagChanged();
    partial void OnAlternateAutoDischargeDurationFlagChanging(bool value);
    partial void OnAlternateAutoDischargeDurationFlagChanged();
    partial void OnCancelledUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelledUTCDateTimeChanged();
    partial void OnCancelledLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelledLocalDateTimeChanged();
    partial void OnEncounterPatientClassKeyChanging(System.Nullable<System.Guid> value);
    partial void OnEncounterPatientClassKeyChanged();
    partial void OnHospitalServiceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnHospitalServiceKeyChanged();
    partial void OnCommentTextChanging(string value);
    partial void OnCommentTextChanged();
    partial void OnRecurringFlagChanging(bool value);
    partial void OnRecurringFlagChanged();
    partial void OnTemporaryFlagChanging(bool value);
    partial void OnTemporaryFlagChanged();
    partial void OnEncounterTypeInternalCodeChanging(string value);
    partial void OnEncounterTypeInternalCodeChanged();
    partial void OnHeightAmountChanging(System.Nullable<decimal> value);
    partial void OnHeightAmountChanged();
    partial void OnHeightUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnHeightUOMKeyChanged();
    partial void OnHeightMethodInternalCodeChanging(string value);
    partial void OnHeightMethodInternalCodeChanged();
    partial void OnWeightAmountChanging(System.Nullable<decimal> value);
    partial void OnWeightAmountChanged();
    partial void OnWeightUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnWeightUTCDateTimeChanged();
    partial void OnWeightLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnWeightLocalDateTimeChanged();
    partial void OnWeightUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnWeightUOMKeyChanged();
    partial void OnWeightMethodInternalCodeChanging(string value);
    partial void OnWeightMethodInternalCodeChanged();
    partial void OnLeaveOfAbsenceEffectiveUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveOfAbsenceEffectiveUTCDateTimeChanged();
    partial void OnLeaveOfAbsenceEffectiveLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveOfAbsenceEffectiveLocalDateTimeChanged();
    partial void OnLeaveOfAbsenceReturnUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveOfAbsenceReturnUTCDateTimeChanged();
    partial void OnLeaveOfAbsenceReturnLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveOfAbsenceReturnLocalDateTimeChanged();
    partial void OnCreatedAtDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedAtDispensingDeviceKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnLastItemTransactionUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastItemTransactionUTCDateTimeChanged();
    partial void OnLastItemTransactionLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastItemTransactionLocalDateTimeChanged();
    partial void OnSurvivingFlagChanging(bool value);
    partial void OnSurvivingFlagChanged();
    partial void OnCreatedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedLocalDateTimeChanged();
    #endregion
		
		public EncounterResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterSnapshotKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterSnapshotKey
		{
			get
			{
				return this._EncounterSnapshotKey;
			}
			set
			{
				if ((this._EncounterSnapshotKey != value))
				{
					this.OnEncounterSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterSnapshotKey = value;
					this.SendPropertyChanged("EncounterSnapshotKey");
					this.OnEncounterSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this.OnEncounterKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterKey = value;
					this.SendPropertyChanged("EncounterKey");
					this.OnEncounterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterAdmissionStatusInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EncounterAdmissionStatusInternalCode
		{
			get
			{
				return this._EncounterAdmissionStatusInternalCode;
			}
			set
			{
				if ((this._EncounterAdmissionStatusInternalCode != value))
				{
					this.OnEncounterAdmissionStatusInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._EncounterAdmissionStatusInternalCode = value;
					this.SendPropertyChanged("EncounterAdmissionStatusInternalCode");
					this.OnEncounterAdmissionStatusInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EncounterID
		{
			get
			{
				return this._EncounterID;
			}
			set
			{
				if ((this._EncounterID != value))
				{
					this.OnEncounterIDChanging(value);
					this.SendPropertyChanging();
					this._EncounterID = value;
					this.SendPropertyChanged("EncounterID");
					this.OnEncounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterIDCheckValue", DbType="NVarChar(2)", UpdateCheck=UpdateCheck.Never)]
		public string EncounterIDCheckValue
		{
			get
			{
				return this._EncounterIDCheckValue;
			}
			set
			{
				if ((this._EncounterIDCheckValue != value))
				{
					this.OnEncounterIDCheckValueChanging(value);
					this.SendPropertyChanging();
					this._EncounterIDCheckValue = value;
					this.SendPropertyChanged("EncounterIDCheckValue");
					this.OnEncounterIDCheckValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmitID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PreadmitID
		{
			get
			{
				return this._PreadmitID;
			}
			set
			{
				if ((this._PreadmitID != value))
				{
					this.OnPreadmitIDChanging(value);
					this.SendPropertyChanging();
					this._PreadmitID = value;
					this.SendPropertyChanged("PreadmitID");
					this.OnPreadmitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreadmitIDCheckValue", DbType="NVarChar(2)", UpdateCheck=UpdateCheck.Never)]
		public string PreadmitIDCheckValue
		{
			get
			{
				return this._PreadmitIDCheckValue;
			}
			set
			{
				if ((this._PreadmitIDCheckValue != value))
				{
					this.OnPreadmitIDCheckValueChanging(value);
					this.SendPropertyChanging();
					this._PreadmitIDCheckValue = value;
					this.SendPropertyChanged("PreadmitIDCheckValue");
					this.OnPreadmitIDCheckValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEncounterID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AlternateEncounterID
		{
			get
			{
				return this._AlternateEncounterID;
			}
			set
			{
				if ((this._AlternateEncounterID != value))
				{
					this.OnAlternateEncounterIDChanging(value);
					this.SendPropertyChanging();
					this._AlternateEncounterID = value;
					this.SendPropertyChanged("AlternateEncounterID");
					this.OnAlternateEncounterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateEncounterIDCheckValue", DbType="NVarChar(2)", UpdateCheck=UpdateCheck.Never)]
		public string AlternateEncounterIDCheckValue
		{
			get
			{
				return this._AlternateEncounterIDCheckValue;
			}
			set
			{
				if ((this._AlternateEncounterIDCheckValue != value))
				{
					this.OnAlternateEncounterIDCheckValueChanging(value);
					this.SendPropertyChanging();
					this._AlternateEncounterIDCheckValue = value;
					this.SendPropertyChanged("AlternateEncounterIDCheckValue");
					this.OnAlternateEncounterIDCheckValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountIDCheckValue", DbType="NVarChar(2)", UpdateCheck=UpdateCheck.Never)]
		public string AccountIDCheckValue
		{
			get
			{
				return this._AccountIDCheckValue;
			}
			set
			{
				if ((this._AccountIDCheckValue != value))
				{
					this.OnAccountIDCheckValueChanging(value);
					this.SendPropertyChanging();
					this._AccountIDCheckValue = value;
					this.SendPropertyChanged("AccountIDCheckValue");
					this.OnAccountIDCheckValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientKey
		{
			get
			{
				return this._PatientKey;
			}
			set
			{
				if ((this._PatientKey != value))
				{
					this.OnPatientKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientKey = value;
					this.SendPropertyChanged("PatientKey");
					this.OnPatientKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientChangedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PatientChangedFlag
		{
			get
			{
				return this._PatientChangedFlag;
			}
			set
			{
				if ((this._PatientChangedFlag != value))
				{
					this.OnPatientChangedFlagChanging(value);
					this.SendPropertyChanging();
					this._PatientChangedFlag = value;
					this.SendPropertyChanged("PatientChangedFlag");
					this.OnPatientChangedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AdmitUTCDateTime
		{
			get
			{
				return this._AdmitUTCDateTime;
			}
			set
			{
				if ((this._AdmitUTCDateTime != value))
				{
					this.OnAdmitUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitUTCDateTime = value;
					this.SendPropertyChanged("AdmitUTCDateTime");
					this.OnAdmitUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AdmitLocalDateTime
		{
			get
			{
				return this._AdmitLocalDateTime;
			}
			set
			{
				if ((this._AdmitLocalDateTime != value))
				{
					this.OnAdmitLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitLocalDateTime = value;
					this.SendPropertyChanged("AdmitLocalDateTime");
					this.OnAdmitLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDateOnlyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AdmitDateOnlyFlag
		{
			get
			{
				return this._AdmitDateOnlyFlag;
			}
			set
			{
				if ((this._AdmitDateOnlyFlag != value))
				{
					this.OnAdmitDateOnlyFlagChanging(value);
					this.SendPropertyChanging();
					this._AdmitDateOnlyFlag = value;
					this.SendPropertyChanged("AdmitDateOnlyFlag");
					this.OnAdmitDateOnlyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedAdmitUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExpectedAdmitUTCDateTime
		{
			get
			{
				return this._ExpectedAdmitUTCDateTime;
			}
			set
			{
				if ((this._ExpectedAdmitUTCDateTime != value))
				{
					this.OnExpectedAdmitUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpectedAdmitUTCDateTime = value;
					this.SendPropertyChanged("ExpectedAdmitUTCDateTime");
					this.OnExpectedAdmitUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedAdmitLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExpectedAdmitLocalDateTime
		{
			get
			{
				return this._ExpectedAdmitLocalDateTime;
			}
			set
			{
				if ((this._ExpectedAdmitLocalDateTime != value))
				{
					this.OnExpectedAdmitLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpectedAdmitLocalDateTime = value;
					this.SendPropertyChanged("ExpectedAdmitLocalDateTime");
					this.OnExpectedAdmitLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedAdmitDateOnlyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ExpectedAdmitDateOnlyFlag
		{
			get
			{
				return this._ExpectedAdmitDateOnlyFlag;
			}
			set
			{
				if ((this._ExpectedAdmitDateOnlyFlag != value))
				{
					this.OnExpectedAdmitDateOnlyFlagChanging(value);
					this.SendPropertyChanging();
					this._ExpectedAdmitDateOnlyFlag = value;
					this.SendPropertyChanged("ExpectedAdmitDateOnlyFlag");
					this.OnExpectedAdmitDateOnlyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DischargeUTCDateTime
		{
			get
			{
				return this._DischargeUTCDateTime;
			}
			set
			{
				if ((this._DischargeUTCDateTime != value))
				{
					this.OnDischargeUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DischargeUTCDateTime = value;
					this.SendPropertyChanged("DischargeUTCDateTime");
					this.OnDischargeUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DischargeLocalDateTime
		{
			get
			{
				return this._DischargeLocalDateTime;
			}
			set
			{
				if ((this._DischargeLocalDateTime != value))
				{
					this.OnDischargeLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DischargeLocalDateTime = value;
					this.SendPropertyChanged("DischargeLocalDateTime");
					this.OnDischargeLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDateOnlyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DischargeDateOnlyFlag
		{
			get
			{
				return this._DischargeDateOnlyFlag;
			}
			set
			{
				if ((this._DischargeDateOnlyFlag != value))
				{
					this.OnDischargeDateOnlyFlagChanging(value);
					this.SendPropertyChanging();
					this._DischargeDateOnlyFlag = value;
					this.SendPropertyChanged("DischargeDateOnlyFlag");
					this.OnDischargeDateOnlyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateAutoDischargeDurationFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AlternateAutoDischargeDurationFlag
		{
			get
			{
				return this._AlternateAutoDischargeDurationFlag;
			}
			set
			{
				if ((this._AlternateAutoDischargeDurationFlag != value))
				{
					this.OnAlternateAutoDischargeDurationFlagChanging(value);
					this.SendPropertyChanging();
					this._AlternateAutoDischargeDurationFlag = value;
					this.SendPropertyChanged("AlternateAutoDischargeDurationFlag");
					this.OnAlternateAutoDischargeDurationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelledUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CancelledUTCDateTime
		{
			get
			{
				return this._CancelledUTCDateTime;
			}
			set
			{
				if ((this._CancelledUTCDateTime != value))
				{
					this.OnCancelledUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CancelledUTCDateTime = value;
					this.SendPropertyChanged("CancelledUTCDateTime");
					this.OnCancelledUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelledLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CancelledLocalDateTime
		{
			get
			{
				return this._CancelledLocalDateTime;
			}
			set
			{
				if ((this._CancelledLocalDateTime != value))
				{
					this.OnCancelledLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CancelledLocalDateTime = value;
					this.SendPropertyChanged("CancelledLocalDateTime");
					this.OnCancelledLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPatientClassKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EncounterPatientClassKey
		{
			get
			{
				return this._EncounterPatientClassKey;
			}
			set
			{
				if ((this._EncounterPatientClassKey != value))
				{
					this.OnEncounterPatientClassKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterPatientClassKey = value;
					this.SendPropertyChanged("EncounterPatientClassKey");
					this.OnEncounterPatientClassKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalServiceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> HospitalServiceKey
		{
			get
			{
				return this._HospitalServiceKey;
			}
			set
			{
				if ((this._HospitalServiceKey != value))
				{
					this.OnHospitalServiceKeyChanging(value);
					this.SendPropertyChanging();
					this._HospitalServiceKey = value;
					this.SendPropertyChanged("HospitalServiceKey");
					this.OnHospitalServiceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string CommentText
		{
			get
			{
				return this._CommentText;
			}
			set
			{
				if ((this._CommentText != value))
				{
					this.OnCommentTextChanging(value);
					this.SendPropertyChanging();
					this._CommentText = value;
					this.SendPropertyChanged("CommentText");
					this.OnCommentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurringFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RecurringFlag
		{
			get
			{
				return this._RecurringFlag;
			}
			set
			{
				if ((this._RecurringFlag != value))
				{
					this.OnRecurringFlagChanging(value);
					this.SendPropertyChanging();
					this._RecurringFlag = value;
					this.SendPropertyChanged("RecurringFlag");
					this.OnRecurringFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TemporaryFlag
		{
			get
			{
				return this._TemporaryFlag;
			}
			set
			{
				if ((this._TemporaryFlag != value))
				{
					this.OnTemporaryFlagChanging(value);
					this.SendPropertyChanging();
					this._TemporaryFlag = value;
					this.SendPropertyChanged("TemporaryFlag");
					this.OnTemporaryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EncounterTypeInternalCode
		{
			get
			{
				return this._EncounterTypeInternalCode;
			}
			set
			{
				if ((this._EncounterTypeInternalCode != value))
				{
					this.OnEncounterTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._EncounterTypeInternalCode = value;
					this.SendPropertyChanged("EncounterTypeInternalCode");
					this.OnEncounterTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightAmount", DbType="Decimal(10,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> HeightAmount
		{
			get
			{
				return this._HeightAmount;
			}
			set
			{
				if ((this._HeightAmount != value))
				{
					this.OnHeightAmountChanging(value);
					this.SendPropertyChanging();
					this._HeightAmount = value;
					this.SendPropertyChanged("HeightAmount");
					this.OnHeightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> HeightUOMKey
		{
			get
			{
				return this._HeightUOMKey;
			}
			set
			{
				if ((this._HeightUOMKey != value))
				{
					this.OnHeightUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._HeightUOMKey = value;
					this.SendPropertyChanged("HeightUOMKey");
					this.OnHeightUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightMethodInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string HeightMethodInternalCode
		{
			get
			{
				return this._HeightMethodInternalCode;
			}
			set
			{
				if ((this._HeightMethodInternalCode != value))
				{
					this.OnHeightMethodInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._HeightMethodInternalCode = value;
					this.SendPropertyChanged("HeightMethodInternalCode");
					this.OnHeightMethodInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightAmount", DbType="Decimal(10,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> WeightAmount
		{
			get
			{
				return this._WeightAmount;
			}
			set
			{
				if ((this._WeightAmount != value))
				{
					this.OnWeightAmountChanging(value);
					this.SendPropertyChanging();
					this._WeightAmount = value;
					this.SendPropertyChanged("WeightAmount");
					this.OnWeightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> WeightUTCDateTime
		{
			get
			{
				return this._WeightUTCDateTime;
			}
			set
			{
				if ((this._WeightUTCDateTime != value))
				{
					this.OnWeightUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._WeightUTCDateTime = value;
					this.SendPropertyChanged("WeightUTCDateTime");
					this.OnWeightUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> WeightLocalDateTime
		{
			get
			{
				return this._WeightLocalDateTime;
			}
			set
			{
				if ((this._WeightLocalDateTime != value))
				{
					this.OnWeightLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._WeightLocalDateTime = value;
					this.SendPropertyChanged("WeightLocalDateTime");
					this.OnWeightLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> WeightUOMKey
		{
			get
			{
				return this._WeightUOMKey;
			}
			set
			{
				if ((this._WeightUOMKey != value))
				{
					this.OnWeightUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._WeightUOMKey = value;
					this.SendPropertyChanged("WeightUOMKey");
					this.OnWeightUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightMethodInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string WeightMethodInternalCode
		{
			get
			{
				return this._WeightMethodInternalCode;
			}
			set
			{
				if ((this._WeightMethodInternalCode != value))
				{
					this.OnWeightMethodInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._WeightMethodInternalCode = value;
					this.SendPropertyChanged("WeightMethodInternalCode");
					this.OnWeightMethodInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceEffectiveUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LeaveOfAbsenceEffectiveUTCDateTime
		{
			get
			{
				return this._LeaveOfAbsenceEffectiveUTCDateTime;
			}
			set
			{
				if ((this._LeaveOfAbsenceEffectiveUTCDateTime != value))
				{
					this.OnLeaveOfAbsenceEffectiveUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceEffectiveUTCDateTime = value;
					this.SendPropertyChanged("LeaveOfAbsenceEffectiveUTCDateTime");
					this.OnLeaveOfAbsenceEffectiveUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceEffectiveLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LeaveOfAbsenceEffectiveLocalDateTime
		{
			get
			{
				return this._LeaveOfAbsenceEffectiveLocalDateTime;
			}
			set
			{
				if ((this._LeaveOfAbsenceEffectiveLocalDateTime != value))
				{
					this.OnLeaveOfAbsenceEffectiveLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceEffectiveLocalDateTime = value;
					this.SendPropertyChanged("LeaveOfAbsenceEffectiveLocalDateTime");
					this.OnLeaveOfAbsenceEffectiveLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceReturnUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LeaveOfAbsenceReturnUTCDateTime
		{
			get
			{
				return this._LeaveOfAbsenceReturnUTCDateTime;
			}
			set
			{
				if ((this._LeaveOfAbsenceReturnUTCDateTime != value))
				{
					this.OnLeaveOfAbsenceReturnUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceReturnUTCDateTime = value;
					this.SendPropertyChanged("LeaveOfAbsenceReturnUTCDateTime");
					this.OnLeaveOfAbsenceReturnUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveOfAbsenceReturnLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LeaveOfAbsenceReturnLocalDateTime
		{
			get
			{
				return this._LeaveOfAbsenceReturnLocalDateTime;
			}
			set
			{
				if ((this._LeaveOfAbsenceReturnLocalDateTime != value))
				{
					this.OnLeaveOfAbsenceReturnLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaveOfAbsenceReturnLocalDateTime = value;
					this.SendPropertyChanged("LeaveOfAbsenceReturnLocalDateTime");
					this.OnLeaveOfAbsenceReturnLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAtDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CreatedAtDispensingDeviceKey
		{
			get
			{
				return this._CreatedAtDispensingDeviceKey;
			}
			set
			{
				if ((this._CreatedAtDispensingDeviceKey != value))
				{
					this.OnCreatedAtDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedAtDispensingDeviceKey = value;
					this.SendPropertyChanged("CreatedAtDispensingDeviceKey");
					this.OnCreatedAtDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastItemTransactionUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastItemTransactionUTCDateTime
		{
			get
			{
				return this._LastItemTransactionUTCDateTime;
			}
			set
			{
				if ((this._LastItemTransactionUTCDateTime != value))
				{
					this.OnLastItemTransactionUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastItemTransactionUTCDateTime = value;
					this.SendPropertyChanged("LastItemTransactionUTCDateTime");
					this.OnLastItemTransactionUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastItemTransactionLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastItemTransactionLocalDateTime
		{
			get
			{
				return this._LastItemTransactionLocalDateTime;
			}
			set
			{
				if ((this._LastItemTransactionLocalDateTime != value))
				{
					this.OnLastItemTransactionLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastItemTransactionLocalDateTime = value;
					this.SendPropertyChanged("LastItemTransactionLocalDateTime");
					this.OnLastItemTransactionLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurvivingFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SurvivingFlag
		{
			get
			{
				return this._SurvivingFlag;
			}
			set
			{
				if ((this._SurvivingFlag != value))
				{
					this.OnSurvivingFlagChanging(value);
					this.SendPropertyChanging();
					this._SurvivingFlag = value;
					this.SendPropertyChanged("SurvivingFlag");
					this.OnSurvivingFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class bsp_ListActiveEncounterKeysResult
	{
		
		private System.Guid _EncounterKey;
		
		public bsp_ListActiveEncounterKeysResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
	}
	
	public partial class bsp_ListRecentEncounterKeysResult
	{
		
		private System.Guid _EncounterKey;
		
		private System.DateTime _LastUsedUTCDateTime;
		
		public bsp_ListRecentEncounterKeysResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUsedUTCDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastUsedUTCDateTime
		{
			get
			{
				return this._LastUsedUTCDateTime;
			}
			set
			{
				if ((this._LastUsedUTCDateTime != value))
				{
					this._LastUsedUTCDateTime = value;
				}
			}
		}
	}
	
	public partial class bsp_ListActiveEncountersResult
	{
		
		private System.Guid _EncounterKey;
		
		private System.Nullable<System.Guid> _AssignedUnitKey;
		
		private System.Nullable<System.Guid> _TemporaryUnitKey;
		
		public bsp_ListActiveEncountersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedUnitKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AssignedUnitKey
		{
			get
			{
				return this._AssignedUnitKey;
			}
			set
			{
				if ((this._AssignedUnitKey != value))
				{
					this._AssignedUnitKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryUnitKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TemporaryUnitKey
		{
			get
			{
				return this._TemporaryUnitKey;
			}
			set
			{
				if ((this._TemporaryUnitKey != value))
				{
					this._TemporaryUnitKey = value;
				}
			}
		}
	}
	
	public partial class bsp_GetApplicableEncounterKeysResult
	{
		
		private System.Guid _EncounterKey;
		
		public bsp_GetApplicableEncounterKeysResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
	}
	
	public partial class bsp_ListMyUndocumentedWasteEncounterKeysResult
	{
		
		private System.Guid _EncounterKey;
		
		public bsp_ListMyUndocumentedWasteEncounterKeysResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
	}
	
	public partial class bsp_ListUserEncountersResult
	{
		
		private System.Guid _EncounterKey;
		
		private System.Nullable<System.DateTime> _LastAddUTCDateTime;
		
		public bsp_ListUserEncountersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAddUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastAddUTCDateTime
		{
			get
			{
				return this._LastAddUTCDateTime;
			}
			set
			{
				if ((this._LastAddUTCDateTime != value))
				{
					this._LastAddUTCDateTime = value;
				}
			}
		}
	}
	
	public partial class bsp_FindActiveEncounterKeysResult
	{
		
		private System.Guid _EncounterKey;
		
		public bsp_FindActiveEncounterKeysResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
