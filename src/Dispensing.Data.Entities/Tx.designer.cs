#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CareFusion.Dispensing.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSClientOLTP")]
	internal partial class TxDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStorageSpaceInventoryEntity(StorageSpaceInventoryEntity instance);
    partial void UpdateStorageSpaceInventoryEntity(StorageSpaceInventoryEntity instance);
    partial void DeleteStorageSpaceInventoryEntity(StorageSpaceInventoryEntity instance);
    partial void InsertItemTransactionTypeEntity(ItemTransactionTypeEntity instance);
    partial void UpdateItemTransactionTypeEntity(ItemTransactionTypeEntity instance);
    partial void DeleteItemTransactionTypeEntity(ItemTransactionTypeEntity instance);
    partial void InsertPharmacyOrderItemTransactionEntity(PharmacyOrderItemTransactionEntity instance);
    partial void UpdatePharmacyOrderItemTransactionEntity(PharmacyOrderItemTransactionEntity instance);
    partial void DeletePharmacyOrderItemTransactionEntity(PharmacyOrderItemTransactionEntity instance);
    partial void InsertStorageItemTransactionEntity(StorageItemTransactionEntity instance);
    partial void UpdateStorageItemTransactionEntity(StorageItemTransactionEntity instance);
    partial void DeleteStorageItemTransactionEntity(StorageItemTransactionEntity instance);
    partial void InsertEncounterItemTransactionEntity(EncounterItemTransactionEntity instance);
    partial void UpdateEncounterItemTransactionEntity(EncounterItemTransactionEntity instance);
    partial void DeleteEncounterItemTransactionEntity(EncounterItemTransactionEntity instance);
    partial void InsertItemTransactionEntity(ItemTransactionEntity instance);
    partial void UpdateItemTransactionEntity(ItemTransactionEntity instance);
    partial void DeleteItemTransactionEntity(ItemTransactionEntity instance);
    partial void InsertClinicalDataNoticeEntity(ClinicalDataNoticeEntity instance);
    partial void UpdateClinicalDataNoticeEntity(ClinicalDataNoticeEntity instance);
    partial void DeleteClinicalDataNoticeEntity(ClinicalDataNoticeEntity instance);
    partial void InsertClinicalDataNoticeResponseEntity(ClinicalDataNoticeResponseEntity instance);
    partial void UpdateClinicalDataNoticeResponseEntity(ClinicalDataNoticeResponseEntity instance);
    partial void DeleteClinicalDataNoticeResponseEntity(ClinicalDataNoticeResponseEntity instance);
    partial void InsertItemTransactionClinicalDataNoticeEntity(ItemTransactionClinicalDataNoticeEntity instance);
    partial void UpdateItemTransactionClinicalDataNoticeEntity(ItemTransactionClinicalDataNoticeEntity instance);
    partial void DeleteItemTransactionClinicalDataNoticeEntity(ItemTransactionClinicalDataNoticeEntity instance);
    partial void InsertCountInventoryListEntity(CountInventoryListEntity instance);
    partial void UpdateCountInventoryListEntity(CountInventoryListEntity instance);
    partial void DeleteCountInventoryListEntity(CountInventoryListEntity instance);
    partial void InsertCountInventoryListEntryEntity(CountInventoryListEntryEntity instance);
    partial void UpdateCountInventoryListEntryEntity(CountInventoryListEntryEntity instance);
    partial void DeleteCountInventoryListEntryEntity(CountInventoryListEntryEntity instance);
    partial void InsertItemTransactionCompositeRoleEntity(ItemTransactionCompositeRoleEntity instance);
    partial void UpdateItemTransactionCompositeRoleEntity(ItemTransactionCompositeRoleEntity instance);
    partial void DeleteItemTransactionCompositeRoleEntity(ItemTransactionCompositeRoleEntity instance);
    partial void InsertTransactionSessionTypeEntity(TransactionSessionTypeEntity instance);
    partial void UpdateTransactionSessionTypeEntity(TransactionSessionTypeEntity instance);
    partial void DeleteTransactionSessionTypeEntity(TransactionSessionTypeEntity instance);
    partial void InsertTransactionSessionEntity(TransactionSessionEntity instance);
    partial void UpdateTransactionSessionEntity(TransactionSessionEntity instance);
    partial void DeleteTransactionSessionEntity(TransactionSessionEntity instance);
    partial void InsertDiscrepancyEntity(DiscrepancyEntity instance);
    partial void UpdateDiscrepancyEntity(DiscrepancyEntity instance);
    partial void DeleteDiscrepancyEntity(DiscrepancyEntity instance);
    partial void InsertDiscrepancyNoteEntity(DiscrepancyNoteEntity instance);
    partial void UpdateDiscrepancyNoteEntity(DiscrepancyNoteEntity instance);
    partial void DeleteDiscrepancyNoteEntity(DiscrepancyNoteEntity instance);
    partial void InsertItemTransactionScanEntity(ItemTransactionScanEntity instance);
    partial void UpdateItemTransactionScanEntity(ItemTransactionScanEntity instance);
    partial void DeleteItemTransactionScanEntity(ItemTransactionScanEntity instance);
    partial void InsertUserEncounterQueueEntity(UserEncounterQueueEntity instance);
    partial void UpdateUserEncounterQueueEntity(UserEncounterQueueEntity instance);
    partial void DeleteUserEncounterQueueEntity(UserEncounterQueueEntity instance);
    partial void InsertUserEncounterQueueEntryEntity(UserEncounterQueueEntryEntity instance);
    partial void UpdateUserEncounterQueueEntryEntity(UserEncounterQueueEntryEntity instance);
    partial void DeleteUserEncounterQueueEntryEntity(UserEncounterQueueEntryEntity instance);
    partial void InsertUnverifiedScanTypeEntity(UnverifiedScanTypeEntity instance);
    partial void UpdateUnverifiedScanTypeEntity(UnverifiedScanTypeEntity instance);
    partial void DeleteUnverifiedScanTypeEntity(UnverifiedScanTypeEntity instance);
    #endregion
		
		public TxDataContext() : 
				base("Data Source=.;Initial Catalog=DSClientOLTP;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public TxDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TxDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TxDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TxDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StorageSpaceInventoryEntity> StorageSpaceInventoryEntities
		{
			get
			{
				return this.GetTable<StorageSpaceInventoryEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemTransactionTypeEntity> ItemTransactionTypeEntities
		{
			get
			{
				return this.GetTable<ItemTransactionTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<PharmacyOrderItemTransactionEntity> PharmacyOrderItemTransactionEntities
		{
			get
			{
				return this.GetTable<PharmacyOrderItemTransactionEntity>();
			}
		}
		
		public System.Data.Linq.Table<StorageItemTransactionEntity> StorageItemTransactionEntities
		{
			get
			{
				return this.GetTable<StorageItemTransactionEntity>();
			}
		}
		
		public System.Data.Linq.Table<EncounterItemTransactionEntity> EncounterItemTransactionEntities
		{
			get
			{
				return this.GetTable<EncounterItemTransactionEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemTransactionEntity> ItemTransactionEntities
		{
			get
			{
				return this.GetTable<ItemTransactionEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClinicalDataNoticeEntity> ClinicalDataNoticeEntities
		{
			get
			{
				return this.GetTable<ClinicalDataNoticeEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClinicalDataNoticeResponseEntity> ClinicalDataNoticeResponseEntities
		{
			get
			{
				return this.GetTable<ClinicalDataNoticeResponseEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemTransactionClinicalDataNoticeEntity> ItemTransactionClinicalDataNoticeEntities
		{
			get
			{
				return this.GetTable<ItemTransactionClinicalDataNoticeEntity>();
			}
		}
		
		public System.Data.Linq.Table<CountInventoryListEntity> CountInventoryListEntities
		{
			get
			{
				return this.GetTable<CountInventoryListEntity>();
			}
		}
		
		public System.Data.Linq.Table<CountInventoryListEntryEntity> CountInventoryListEntryEntities
		{
			get
			{
				return this.GetTable<CountInventoryListEntryEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemTransactionCompositeRoleEntity> ItemTransactionCompositeRoleEntities
		{
			get
			{
				return this.GetTable<ItemTransactionCompositeRoleEntity>();
			}
		}
		
		public System.Data.Linq.Table<TransactionSessionTypeEntity> TransactionSessionTypeEntities
		{
			get
			{
				return this.GetTable<TransactionSessionTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<TransactionSessionEntity> TransactionSessionEntities
		{
			get
			{
				return this.GetTable<TransactionSessionEntity>();
			}
		}
		
		public System.Data.Linq.Table<DiscrepancyEntity> DiscrepancyEntities
		{
			get
			{
				return this.GetTable<DiscrepancyEntity>();
			}
		}
		
		public System.Data.Linq.Table<DiscrepancyNoteEntity> DiscrepancyNoteEntities
		{
			get
			{
				return this.GetTable<DiscrepancyNoteEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemTransactionScanEntity> ItemTransactionScanEntities
		{
			get
			{
				return this.GetTable<ItemTransactionScanEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserEncounterQueueEntity> UserEncounterQueueEntities
		{
			get
			{
				return this.GetTable<UserEncounterQueueEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserEncounterQueueEntryEntity> UserEncounterQueueEntryEntities
		{
			get
			{
				return this.GetTable<UserEncounterQueueEntryEntity>();
			}
		}
		
		public System.Data.Linq.Table<UnverifiedScanTypeEntity> UnverifiedScanTypeEntities
		{
			get
			{
				return this.GetTable<UnverifiedScanTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<vw_EncounterItemTransactionCurrent> vw_EncounterItemTransactionCurrents
		{
			get
			{
				return this.GetTable<vw_EncounterItemTransactionCurrent>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_ClinicalDataNoticeInsert")]
		public int usp_ClinicalDataNoticeInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataSubjectKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataSubjectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NoticeUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> noticeUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NoticeLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> noticeLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataResponseKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataResponseKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResponseFreeFormText", DbType="NVarChar(250)")] string responseFreeFormText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataNoticeKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> clinicalDataNoticeKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clinicalDataSubjectKey, noticeUTCDateTime, noticeLocalDateTime, clinicalDataResponseKey, responseFreeFormText, lastModifiedDispensingDeviceKey, clinicalDataNoticeKey);
			clinicalDataNoticeKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_CountInventoryListEntryInsert")]
		public int usp_CountInventoryListEntryInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountInventoryListKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> countInventoryListKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuspendFlag", DbType="Bit")] System.Nullable<bool> suspendFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountInventoryListEntryKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> countInventoryListEntryKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), countInventoryListKey, storageSpaceItemKey, startUTCDateTime, startLocalDateTime, suspendFlag, itemTransactionKey, lastModifiedActorKey, countInventoryListEntryKey);
			countInventoryListEntryKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_CountInventoryListEntryUpdate")]
		public int usp_CountInventoryListEntryUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuspendFlag", DbType="Bit")] System.Nullable<bool> suspendFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountInventoryListEntryKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> countInventoryListEntryKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, suspendFlag, itemTransactionKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, countInventoryListEntryKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_CountInventoryListInsert")]
		public int usp_CountInventoryListInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountInventoryListKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> countInventoryListKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, userAccountKey, createdUTCDateTime, createdLocalDateTime, lastModifiedActorKey, countInventoryListKey);
			countInventoryListKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_CountInventoryListUpdate")]
		public int usp_CountInventoryListUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FinishUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> finishUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FinishLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> finishLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountInventoryListKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> countInventoryListKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), finishUTCDateTime, finishLocalDateTime, lastModifiedBinaryValue, checkConcurrency, countInventoryListKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_ItemTransactionClinicalDataNoticeInsert")]
		public int usp_ItemTransactionClinicalDataNoticeInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClinicalDataNoticeKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clinicalDataNoticeKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssociationLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> associationLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionClinicalDataNoticeKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> itemTransactionClinicalDataNoticeKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemTransactionKey, clinicalDataNoticeKey, associationUTCDateTime, associationLocalDateTime, lastModifiedDispensingDeviceKey, itemTransactionClinicalDataNoticeKey);
			itemTransactionClinicalDataNoticeKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_PharmacyOrderItemTransactionInsert")]
		public int usp_PharmacyOrderItemTransactionInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaskUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> taskUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaskLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> taskLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pharmacyOrderKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderComponentKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pharmacyOrderComponentKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DecreasedDoseFlag", DbType="Bit")] System.Nullable<bool> decreasedDoseFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderItemTransactionKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> pharmacyOrderItemTransactionKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemTransactionKey, startUTCDateTime, startLocalDateTime, taskUTCDateTime, taskLocalDateTime, pharmacyOrderKey, pharmacyOrderComponentKey, decreasedDoseFlag, lastModifiedDispensingDeviceKey, lastModifiedActorKey, pharmacyOrderItemTransactionKey);
			pharmacyOrderItemTransactionKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_UserEncounterQueueInsert")]
		public int usp_UserEncounterQueueInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncounterKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> encounterKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserEncounterQueueKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userEncounterQueueKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAccountKey, encounterKey, facilityKey, createdUTCDateTime, createdLocalDateTime, userEncounterQueueKey);
			userEncounterQueueKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_StorageSpaceInventoryInsert")]
		public int usp_StorageSpaceInventoryInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> inventoryQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StrengthInventoryQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> strengthInventoryQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StrengthUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> strengthUOMKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VolumeInventoryQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> volumeInventoryQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VolumeUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> volumeUOMKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EarliestNextExpirationDate", DbType="Date")] System.Nullable<System.DateTime> earliestNextExpirationDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceInventoryKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> storageSpaceInventoryKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceItemKey, startUTCDateTime, startLocalDateTime, inventoryQuantity, strengthInventoryQuantity, strengthUOMKey, volumeInventoryQuantity, volumeUOMKey, earliestNextExpirationDate, lastModifiedDispensingDeviceKey, lastModifiedActorKey, storageSpaceInventoryKey);
			storageSpaceInventoryKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(11)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_StorageSpaceInventoryUpdate")]
		public int usp_StorageSpaceInventoryUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> inventoryQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StrengthInventoryQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> strengthInventoryQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StrengthUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> strengthUOMKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VolumeInventoryQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> volumeInventoryQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VolumeUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> volumeUOMKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EarliestNextExpirationDate", DbType="Date")] System.Nullable<System.DateTime> earliestNextExpirationDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewStorageSpaceInventoryKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> newStorageSpaceInventoryKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceItemKey, startUTCDateTime, startLocalDateTime, inventoryQuantity, strengthInventoryQuantity, strengthUOMKey, volumeInventoryQuantity, volumeUOMKey, earliestNextExpirationDate, lastModifiedDispensingDeviceKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency, newStorageSpaceInventoryKey);
			newStorageSpaceInventoryKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(13)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.bsp_ListStorageSpaceItemDiscrepancyTransactionDetail")]
		public ISingleResult<bsp_ListStorageSpaceItemDiscrepancyTransactionDetailResult> bsp_ListStorageSpaceItemDiscrepancyTransactionDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SequenceNumber", DbType="BigInt")] System.Nullable<long> sequenceNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceItemKey, sequenceNumber);
			return ((ISingleResult<bsp_ListStorageSpaceItemDiscrepancyTransactionDetailResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.bsp_ListDispenseTransactions")]
		public ISingleResult<bsp_ListDispenseTransactionsResult> bsp_ListDispenseTransactions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncounterKeyString", DbType="VarChar(MAX)")] string encounterKeyString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionUTCStartDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> transactionUTCStartDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dispensingDeviceKey, facilityKey, encounterKeyString, transactionUTCStartDateTime);
			return ((ISingleResult<bsp_ListDispenseTransactionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_TransactionSessionInsert")]
		public int usp_TransactionSessionInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionSessionTypeInternalCode", DbType="VarChar(10)")] string transactionSessionTypeInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SessionStartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> sessionStartUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SessionStartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> sessionStartLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbnormalEndFlag", DbType="Bit")] System.Nullable<bool> abnormalEndFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnrecoveredTransactionFlag", DbType="Bit")] System.Nullable<bool> unrecoveredTransactionFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecoveryDataRecordQuantity", DbType="Int")] System.Nullable<int> recoveryDataRecordQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoNotSendOutboundFlag", DbType="Bit")] System.Nullable<bool> doNotSendOutboundFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MobileFlag", DbType="Bit")] System.Nullable<bool> mobileFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionRecordQuantity", DbType="Int")] System.Nullable<int> itemTransactionRecordQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionSessionKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> transactionSessionKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transactionSessionTypeInternalCode, sessionStartUTCDateTime, sessionStartLocalDateTime, abnormalEndFlag, userAccountKey, facilityKey, dispensingDeviceKey, unrecoveredTransactionFlag, recoveryDataRecordQuantity, doNotSendOutboundFlag, mobileFlag, itemTransactionRecordQuantity, lastModifiedDispensingDeviceKey, transactionSessionKey);
			transactionSessionKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(13)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_TransactionSessionUpdate")]
		public int usp_TransactionSessionUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbnormalEndFlag", DbType="Bit")] System.Nullable<bool> abnormalEndFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnrecoveredTransactionFlag", DbType="Bit")] System.Nullable<bool> unrecoveredTransactionFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecoveryDataRecordQuantity", DbType="Int")] System.Nullable<int> recoveryDataRecordQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SessionEndUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> sessionEndUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SessionEndLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> sessionEndLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionSessionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> transactionSessionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey ", DbType="UniqueIdentifier")] System.Nullable<System.Guid> @lastModifiedDispensingDeviceKey )
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), abnormalEndFlag, unrecoveredTransactionFlag, recoveryDataRecordQuantity, sessionEndUTCDateTime, sessionEndLocalDateTime, transactionSessionKey, @lastModifiedDispensingDeviceKey );
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.bsp_ListSingleMiniTrayDiscrepancyTransactionDetail")]
		public ISingleResult<bsp_ListSingleMiniTrayDiscrepancyTransactionDetailResult> bsp_ListSingleMiniTrayDiscrepancyTransactionDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SequenceNumber", DbType="BigInt")] System.Nullable<long> sequenceNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storageSpaceItemKey, sequenceNumber);
			return ((ISingleResult<bsp_ListSingleMiniTrayDiscrepancyTransactionDetailResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_EncounterItemTransactionInsert")]
		public int usp_EncounterItemTransactionInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PatientKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> patientKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncounterKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> encounterKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncounterPatientLocationKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> encounterPatientLocationKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseReasonKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> tooCloseReasonKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TooCloseFreeFormReasonText", DbType="NVarChar(250)")] string tooCloseFreeFormReasonText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideReasonKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> overrideReasonKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideFreeFormReasonText", DbType="NVarChar(250)")] string overrideFreeFormReasonText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncounterItemTransactionKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> encounterItemTransactionKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemTransactionKey, startUTCDateTime, startLocalDateTime, patientKey, encounterKey, encounterPatientLocationKey, tooCloseReasonKey, tooCloseFreeFormReasonText, overrideReasonKey, overrideFreeFormReasonText, lastModifiedDispensingDeviceKey, lastModifiedActorKey, encounterItemTransactionKey);
			encounterItemTransactionKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(12)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_ItemTransactionScanInsert")]
		public int usp_ItemTransactionScanInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemScanCodeValue", DbType="NVarChar(250)")] string itemScanCodeValue, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideFlag", DbType="Bit")] System.Nullable<bool> overrideFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="NVarChar(100)")] string productID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReplenishmentTransactionID", DbType="NVarChar(50)")] string replenishmentTransactionID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PickQuantity", DbType="Int")] System.Nullable<int> pickQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LotID", DbType="NVarChar(20)")] string lotID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LotIDManuallyEnteredFlag", DbType="Bit")] System.Nullable<bool> lotIDManuallyEnteredFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialID", DbType="NVarChar(20)")] string serialID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialIDManuallyEnteredFlag", DbType="Bit")] System.Nullable<bool> serialIDManuallyEnteredFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpirationDate", DbType="Date")] System.Nullable<System.DateTime> expirationDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpirationYearMonthOnlyFlag", DbType="Bit")] System.Nullable<bool> expirationYearMonthOnlyFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpirationManuallyEnteredFlag", DbType="Bit")] System.Nullable<bool> expirationManuallyEnteredFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WrongItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> wrongItemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnverifiedScanTypeInternalCode", DbType="VarChar(10)")] string unverifiedScanTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnknownItemFlag", DbType="Bit")] System.Nullable<bool> unknownItemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionScanKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> itemTransactionScanKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemTransactionKey, itemScanCodeValue, overrideFlag, productID, replenishmentTransactionID, pickQuantity, lotID, lotIDManuallyEnteredFlag, serialID, serialIDManuallyEnteredFlag, expirationDate, expirationYearMonthOnlyFlag, expirationManuallyEnteredFlag, wrongItemKey, unverifiedScanTypeInternalCode, unknownItemFlag, lastModifiedDispensingDeviceKey, itemTransactionScanKey);
			itemTransactionScanKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(17)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_DiscrepancyNoteInsert")]
		public int usp_DiscrepancyNoteInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NoteText", DbType="NVarChar(250)")] string noteText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> createdLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> createdUserAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DiscrepancyNoteKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> discrepancyNoteKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemTransactionKey, noteText, createdUTCDateTime, createdLocalDateTime, createdUserAccountKey, lastModifiedDispensingDeviceKey, lastModifiedActorKey, discrepancyNoteKey);
			discrepancyNoteKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_ItemTransactionUpdate")]
		public int usp_ItemTransactionUpdate(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncounterKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> encounterKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemIssueTransactionQuantity", DbType="Decimal(28,18)")] System.Nullable<decimal> itemIssueTransactionQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EnteredQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> enteredQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EnteredUOMPerEachQuantity", DbType="Decimal(28,14)")] System.Nullable<decimal> enteredUOMPerEachQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CancelFlag", DbType="Bit")] System.Nullable<bool> cancelFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UndocumentedDisposeFlag", DbType="Bit")] System.Nullable<bool> undocumentedDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StrengthTransactionQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> strengthTransactionQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StrengthUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> strengthUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VolumeTransactionQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> volumeTransactionQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VolumeUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> volumeUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryReferenceID", DbType="NVarChar(30)")] string inventoryReferenceID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> witnessAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessAccountSnapshotKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> witnessAccountSnapshotKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessCancelFlag", DbType="Bit")] System.Nullable<bool> witnessCancelFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecoveredFlag", DbType="Bit")] System.Nullable<bool> recoveredFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, encounterKey, itemIssueTransactionQuantity, enteredQuantity, enteredUOMPerEachQuantity, cancelFlag, undocumentedDisposeFlag, strengthTransactionQuantity, strengthUOMKey, volumeTransactionQuantity, volumeUOMKey, inventoryReferenceID, witnessAccountKey, witnessAccountSnapshotKey, witnessCancelFlag, lastModifiedDispensingDeviceKey, lastModifiedActorKey, itemTransactionKey, recoveredFlag);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_StorageItemTransactionInsert")]
		public int usp_StorageItemTransactionInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> storageSpaceItemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartStorageSpaceInventoryKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> startStorageSpaceInventoryKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndStorageSpaceInventoryKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> endStorageSpaceInventoryKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManuallyVerifiedStorageSpaceFlag", DbType="Bit")] System.Nullable<bool> manuallyVerifiedStorageSpaceFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InsertFlag", DbType="Bit")] System.Nullable<bool> insertFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EjectFlag", DbType="Bit")] System.Nullable<bool> ejectFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageSpaceDisconnectFlag", DbType="Bit")] System.Nullable<bool> storageSpaceDisconnectFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InsertUncheckedCUBIEFlag", DbType="Bit")] System.Nullable<bool> insertUncheckedCUBIEFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CUBIEAnotherDestinationFlag", DbType="Bit")] System.Nullable<bool> cUBIEAnotherDestinationFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnloadReasonInternalCode", DbType="VarChar(10)")] string unloadReasonInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnloadReasonFreeText", DbType="NVarChar(500)")] string unloadReasonFreeText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationFreeText", DbType="NVarChar(500)")] string locationFreeText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCompareReportFlag", DbType="Bit")] System.Nullable<bool> gCSMCompareReportFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StorageItemTransactionKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> storageItemTransactionKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemTransactionKey, startUTCDateTime, startLocalDateTime, dispensingDeviceKey, storageSpaceKey, storageSpaceItemKey, startStorageSpaceInventoryKey, endStorageSpaceInventoryKey, manuallyVerifiedStorageSpaceFlag, insertFlag, ejectFlag, storageSpaceDisconnectFlag, insertUncheckedCUBIEFlag, cUBIEAnotherDestinationFlag, unloadReasonInternalCode, unloadReasonFreeText, locationFreeText, gCSMCompareReportFlag, lastModifiedDispensingDeviceKey, lastModifiedActorKey, storageItemTransactionKey);
			storageItemTransactionKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(20)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_ItemTransactionActivityUpdate")]
		public int usp_ItemTransactionActivityUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemainingDispenseQuantity", DbType="Decimal(28,18)")] System.Nullable<decimal> remainingDispenseQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OriginalUndocumentedDisposeQuantity", DbType="Decimal(28,18)")] System.Nullable<decimal> originalUndocumentedDisposeQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemainingUndocumentedDisposeQuantity", DbType="Decimal(28,18)")] System.Nullable<decimal> remainingUndocumentedDisposeQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutstandingTransactionQuantity", DbType="Decimal(28,18)")] System.Nullable<decimal> outstandingTransactionQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolvedUndocumentedDisposeFlag", DbType="Bit")] System.Nullable<bool> resolvedUndocumentedDisposeFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCompareReportFlag", DbType="Bit")] System.Nullable<bool> gCSMCompareReportFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), remainingDispenseQuantity, originalUndocumentedDisposeQuantity, remainingUndocumentedDisposeQuantity, outstandingTransactionQuantity, resolvedUndocumentedDisposeFlag, lastModifiedDispensingDeviceKey, itemTransactionKey, gCSMCompareReportFlag);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_ItemTransactionInsert")]
		public int usp_ItemTransactionInsert(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionSessionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> transactionSessionKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionSessionTypeInternalCode", DbType="VarChar(10)")] string transactionSessionTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pharmacyOrderKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderComponentKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pharmacyOrderComponentKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncounterKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> encounterKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemainingDispenseQuantity", DbType="Decimal(28,18)")] System.Nullable<decimal> remainingDispenseQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemainingUndocumentedDisposeQuantity", DbType="Decimal(28,18)")] System.Nullable<decimal> remainingUndocumentedDisposeQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutstandingTransactionQuantity", DbType="Decimal(28,18)")] System.Nullable<decimal> outstandingTransactionQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolvedUndocumentedWasteFlag", DbType="Bit")] System.Nullable<bool> resolvedUndocumentedWasteFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderTaskUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> pharmacyOrderTaskUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderTaskLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> pharmacyOrderTaskLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMItemTransactionRecordFlag", DbType="Bit")] System.Nullable<bool> gCSMItemTransactionRecordFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RelatedItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> relatedItemTransactionKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompositeItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> compositeItemTransactionKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionTypeInternalCode", DbType="VarChar(10)")] string itemTransactionTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionCompositeRoleInternalCode", DbType="VarChar(10)")] string itemTransactionCompositeRoleInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CancelFlag", DbType="Bit")] System.Nullable<bool> cancelFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UndocumentedDisposeFlag", DbType="Bit")] System.Nullable<bool> undocumentedDisposeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderUsedFlag", DbType="Bit")] System.Nullable<bool> pharmacyOrderUsedFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> transactionUTCDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> transactionLocalDateTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemIssueTransactionQuantity", DbType="Decimal(28,18)")] System.Nullable<decimal> itemIssueTransactionQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemIssueUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemIssueUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EnteredQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> enteredQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EnteredUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> enteredUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EnteredUOMPerEachQuantity", DbType="Decimal(28,14)")] System.Nullable<decimal> enteredUOMPerEachQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StrengthTransactionQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> strengthTransactionQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StrengthUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> strengthUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VolumeTransactionQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> volumeTransactionQuantity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VolumeUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> volumeUOMKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> medItemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemEquivalencySetKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemEquivalencySetKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityItemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> facilityKitKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityKitStatFlag", DbType="Bit")] System.Nullable<bool> facilityKitStatFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(200)")] string userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> witnessAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessCancelFlag", DbType="Bit")] System.Nullable<bool> witnessCancelFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MyItemsUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> myItemsUserAccountKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserEncounterQueueEntryKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userEncounterQueueEntryKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> comboItemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboFacilityItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> comboFacilityItemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboMedItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> comboMedItemKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComboComponentKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> comboComponentKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreditPatientFlag", DbType="Bit")] System.Nullable<bool> creditPatientFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DiscrepancyFlag", DbType="Bit")] System.Nullable<bool> discrepancyFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OverrideScanFlag", DbType="Bit")] System.Nullable<bool> overrideScanFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeOutFlag", DbType="Bit")] System.Nullable<bool> timeOutFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CriticalOverrideModeFlag", DbType="Bit")] System.Nullable<bool> criticalOverrideModeFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DispenseFractionFlag", DbType="Bit")] System.Nullable<bool> dispenseFractionFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FractionalUOMTypeInternalCode", DbType="VarChar(10)")] string fractionalUOMTypeInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxCheckReasonKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> rxCheckReasonKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxCheckFreeFormReasonText", DbType="NVarChar(250)")] string rxCheckFreeFormReasonText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UndocumentedDisposeReasonText", DbType="NVarChar(250)")] string undocumentedDisposeReasonText, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WithoutRxCheckFlag", DbType="Bit")] System.Nullable<bool> withoutRxCheckFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAtDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAtDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromExternalSystemFlag", DbType="Bit")] System.Nullable<bool> fromExternalSystemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientSystemApplicationInternalCode", DbType="VarChar(50)")] string clientSystemApplicationInternalCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalSequenceNumber", DbType="Int")] System.Nullable<int> externalSequenceNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecoveredFlag", DbType="Bit")] System.Nullable<bool> recoveredFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExplicitUserCancelFlag", DbType="Bit")] System.Nullable<bool> explicitUserCancelFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryReferenceID", DbType="NVarChar(30)")] string inventoryReferenceID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalInventoryCountRequestKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> externalInventoryCountRequestKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExternalRefillRequestKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> externalRefillRequestKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RelatedItemTransactionReferenceID", DbType="NVarChar(30)")] string relatedItemTransactionReferenceID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CancelNoStorageSpaceAccessFlag", DbType="Bit")] System.Nullable<bool> cancelNoStorageSpaceAccessFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WasteReasonSnapshotKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> wasteReasonSnapshotKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCompareReportFlag", DbType="Bit")] System.Nullable<bool> gCSMCompareReportFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GCSMCompareItemFlag", DbType="Bit")] System.Nullable<bool> gCSMCompareItemFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> itemTransactionKey, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionReferenceID", DbType="NVarChar(30)")] ref string itemTransactionReferenceID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, transactionSessionKey, transactionSessionTypeInternalCode, pharmacyOrderKey, pharmacyOrderComponentKey, encounterKey, remainingDispenseQuantity, remainingUndocumentedDisposeQuantity, outstandingTransactionQuantity, resolvedUndocumentedWasteFlag, pharmacyOrderTaskUTCDateTime, pharmacyOrderTaskLocalDateTime, gCSMItemTransactionRecordFlag, relatedItemTransactionKey, compositeItemTransactionKey, itemTransactionTypeInternalCode, itemTransactionCompositeRoleInternalCode, cancelFlag, undocumentedDisposeFlag, pharmacyOrderUsedFlag, transactionUTCDateTime, transactionLocalDateTime, itemIssueTransactionQuantity, itemIssueUOMKey, enteredQuantity, enteredUOMKey, enteredUOMPerEachQuantity, strengthTransactionQuantity, strengthUOMKey, volumeTransactionQuantity, volumeUOMKey, facilityKey, itemKey, medItemKey, itemEquivalencySetKey, facilityItemKey, facilityKitKey, facilityKitStatFlag, userAccountKey, userID, witnessAccountKey, witnessCancelFlag, myItemsUserAccountKey, userEncounterQueueEntryKey, comboItemKey, comboFacilityItemKey, comboMedItemKey, comboComponentKey, creditPatientFlag, discrepancyFlag, overrideScanFlag, timeOutFlag, criticalOverrideModeFlag, dispenseFractionFlag, fractionalUOMTypeInternalCode, rxCheckReasonKey, rxCheckFreeFormReasonText, undocumentedDisposeReasonText, withoutRxCheckFlag, userAtDispensingDeviceKey, fromExternalSystemFlag, clientSystemApplicationInternalCode, externalSequenceNumber, recoveredFlag, explicitUserCancelFlag, inventoryReferenceID, externalInventoryCountRequestKey, externalRefillRequestKey, relatedItemTransactionReferenceID, cancelNoStorageSpaceAccessFlag, wasteReasonSnapshotKey, gCSMCompareReportFlag, gCSMCompareItemFlag, lastModifiedDispensingDeviceKey, lastModifiedActorKey, itemTransactionKey, itemTransactionReferenceID);
			itemTransactionKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(76)));
			itemTransactionReferenceID = ((string)(result.GetParameterValue(77)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_UserEncounterQueueEntryUpdate")]
		public int usp_UserEncounterQueueEntryUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompletedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> completedUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompletedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> completedLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserEncounterQueueEntryKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userEncounterQueueEntryKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, completedUTCDateTime, completedLocalDateTime, lastModifiedActorKey, lastModifiedDispensingDeviceKey, lastModifiedBinaryValue, checkConcurrency, userEncounterQueueEntryKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_UserEncounterQueueEntryDelete")]
		public int usp_UserEncounterQueueEntryDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserEncounterQueueEntryKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userEncounterQueueEntryKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startUTCDateTime, startLocalDateTime, lastModifiedDispensingDeviceKey, lastModifiedActorKey, userEncounterQueueEntryKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_UserEncounterQueueEntryInsert")]
		public int usp_UserEncounterQueueEntryInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserEncounterQueueKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userEncounterQueueKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PharmacyOrderKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> pharmacyOrderKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EnteredQuantity", DbType="Decimal(14,4)")] System.Nullable<decimal> enteredQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EnteredUOMKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> enteredUOMKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaskUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> taskUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TaskLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> taskLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAtDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userAtDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromExternalSystemFlag", DbType="Bit")] System.Nullable<bool> fromExternalSystemFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientSystemApplicationInternalCode", DbType="VarChar(50)")] string clientSystemApplicationInternalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserEncounterQueueEntryKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> userEncounterQueueEntryKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userEncounterQueueKey, startUTCDateTime, startLocalDateTime, pharmacyOrderKey, itemKey, enteredQuantity, enteredUOMKey, taskUTCDateTime, taskLocalDateTime, userAtDispensingDeviceKey, fromExternalSystemFlag, clientSystemApplicationInternalCode, lastModifiedActorKey, lastModifiedDispensingDeviceKey, userEncounterQueueEntryKey);
			userEncounterQueueEntryKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(14)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_DiscrepancyInsert")]
		public int usp_DiscrepancyInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolvedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> resolvedUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolvedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> resolvedLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AutoResolvedFlag", DbType="Bit")] System.Nullable<bool> autoResolvedFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolvedUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> resolvedUserAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolvedTransactionSessionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> resolvedTransactionSessionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> witnessUserAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DiscrepancyResolutionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> discrepancyResolutionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolutionText", DbType="NVarChar(250)")] string resolutionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DiscrepancyKey", DbType="UniqueIdentifier")] ref System.Nullable<System.Guid> discrepancyKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemTransactionKey, startUTCDateTime, startLocalDateTime, resolvedUTCDateTime, resolvedLocalDateTime, autoResolvedFlag, resolvedUserAccountKey, resolvedTransactionSessionKey, witnessUserAccountKey, discrepancyResolutionKey, resolutionText, lastModifiedDispensingDeviceKey, lastModifiedActorKey, discrepancyKey);
			discrepancyKey = ((System.Nullable<System.Guid>)(result.GetParameterValue(13)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Tx.usp_DiscrepancyUpdate")]
		public int usp_DiscrepancyUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> itemTransactionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> startLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolvedUTCDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> resolvedUTCDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolvedLocalDateTime", DbType="DateTime2")] System.Nullable<System.DateTime> resolvedLocalDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolvedUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> resolvedUserAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolvedTransactionSessionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> resolvedTransactionSessionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WitnessUserAccountKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> witnessUserAccountKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DiscrepancyResolutionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> discrepancyResolutionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResolutionText", DbType="NVarChar(250)")] string resolutionText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriorItemTransactionKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> priorItemTransactionKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedDispensingDeviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedActorKey", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lastModifiedActorKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedBinaryValue", DbType="rowversion")] System.Data.Linq.Binary lastModifiedBinaryValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckConcurrency", DbType="Bit")] System.Nullable<bool> checkConcurrency)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemTransactionKey, startUTCDateTime, startLocalDateTime, resolvedUTCDateTime, resolvedLocalDateTime, resolvedUserAccountKey, resolvedTransactionSessionKey, witnessUserAccountKey, discrepancyResolutionKey, resolutionText, priorItemTransactionKey, lastModifiedDispensingDeviceKey, lastModifiedActorKey, lastModifiedBinaryValue, checkConcurrency);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.vw_StorageSpaceInventoryCurrent")]
	public partial class StorageSpaceInventoryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _StorageSpaceItemKey;
		
		private System.Nullable<decimal> _InventoryQuantity;
		
		private System.Nullable<decimal> _StrengthInventoryQuantity;
		
		private System.Nullable<System.Guid> _StrengthUOMKey;
		
		private System.Nullable<decimal> _VolumeInventoryQuantity;
		
		private System.Nullable<System.Guid> _VolumeUOMKey;
		
		private System.Nullable<System.DateTime> _EarliestNextExpirationDate;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<StorageItemTransactionEntity> _StorageItemTransactionEntities;
		
		private EntitySet<StorageItemTransactionEntity> _StorageItemTransactionEntities1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnStorageSpaceItemKeyChanging(System.Guid value);
    partial void OnStorageSpaceItemKeyChanged();
    partial void OnInventoryQuantityChanging(System.Nullable<decimal> value);
    partial void OnInventoryQuantityChanged();
    partial void OnStrengthInventoryQuantityChanging(System.Nullable<decimal> value);
    partial void OnStrengthInventoryQuantityChanged();
    partial void OnStrengthUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnStrengthUOMKeyChanged();
    partial void OnVolumeInventoryQuantityChanging(System.Nullable<decimal> value);
    partial void OnVolumeInventoryQuantityChanged();
    partial void OnVolumeUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnVolumeUOMKeyChanged();
    partial void OnEarliestNextExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEarliestNextExpirationDateChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public StorageSpaceInventoryEntity()
		{
			this._StorageItemTransactionEntities = new EntitySet<StorageItemTransactionEntity>(new Action<StorageItemTransactionEntity>(this.attach_StorageItemTransactionEntities), new Action<StorageItemTransactionEntity>(this.detach_StorageItemTransactionEntities));
			this._StorageItemTransactionEntities1 = new EntitySet<StorageItemTransactionEntity>(new Action<StorageItemTransactionEntity>(this.attach_StorageItemTransactionEntities1), new Action<StorageItemTransactionEntity>(this.detach_StorageItemTransactionEntities1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StorageSpaceInventoryKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceItemKey
		{
			get
			{
				return this._StorageSpaceItemKey;
			}
			set
			{
				if ((this._StorageSpaceItemKey != value))
				{
					this.OnStorageSpaceItemKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceItemKey = value;
					this.SendPropertyChanged("StorageSpaceItemKey");
					this.OnStorageSpaceItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryQuantity", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> InventoryQuantity
		{
			get
			{
				return this._InventoryQuantity;
			}
			set
			{
				if ((this._InventoryQuantity != value))
				{
					this.OnInventoryQuantityChanging(value);
					this.SendPropertyChanging();
					this._InventoryQuantity = value;
					this.SendPropertyChanged("InventoryQuantity");
					this.OnInventoryQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthInventoryQuantity", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> StrengthInventoryQuantity
		{
			get
			{
				return this._StrengthInventoryQuantity;
			}
			set
			{
				if ((this._StrengthInventoryQuantity != value))
				{
					this.OnStrengthInventoryQuantityChanging(value);
					this.SendPropertyChanging();
					this._StrengthInventoryQuantity = value;
					this.SendPropertyChanged("StrengthInventoryQuantity");
					this.OnStrengthInventoryQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> StrengthUOMKey
		{
			get
			{
				return this._StrengthUOMKey;
			}
			set
			{
				if ((this._StrengthUOMKey != value))
				{
					this.OnStrengthUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._StrengthUOMKey = value;
					this.SendPropertyChanged("StrengthUOMKey");
					this.OnStrengthUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeInventoryQuantity", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> VolumeInventoryQuantity
		{
			get
			{
				return this._VolumeInventoryQuantity;
			}
			set
			{
				if ((this._VolumeInventoryQuantity != value))
				{
					this.OnVolumeInventoryQuantityChanging(value);
					this.SendPropertyChanging();
					this._VolumeInventoryQuantity = value;
					this.SendPropertyChanged("VolumeInventoryQuantity");
					this.OnVolumeInventoryQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> VolumeUOMKey
		{
			get
			{
				return this._VolumeUOMKey;
			}
			set
			{
				if ((this._VolumeUOMKey != value))
				{
					this.OnVolumeUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._VolumeUOMKey = value;
					this.SendPropertyChanged("VolumeUOMKey");
					this.OnVolumeUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarliestNextExpirationDate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EarliestNextExpirationDate
		{
			get
			{
				return this._EarliestNextExpirationDate;
			}
			set
			{
				if ((this._EarliestNextExpirationDate != value))
				{
					this.OnEarliestNextExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._EarliestNextExpirationDate = value;
					this.SendPropertyChanged("EarliestNextExpirationDate");
					this.OnEarliestNextExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceInventoryEntity_StorageItemTransactionEntity", Storage="_StorageItemTransactionEntities", ThisKey="Key", OtherKey="StartStorageSpaceInventoryKey")]
		public EntitySet<StorageItemTransactionEntity> StorageItemTransactionEntities
		{
			get
			{
				return this._StorageItemTransactionEntities;
			}
			set
			{
				this._StorageItemTransactionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceInventoryEntity_StorageItemTransactionEntity1", Storage="_StorageItemTransactionEntities1", ThisKey="Key", OtherKey="EndStorageSpaceInventoryKey")]
		public EntitySet<StorageItemTransactionEntity> StorageItemTransactionEntities1
		{
			get
			{
				return this._StorageItemTransactionEntities1;
			}
			set
			{
				this._StorageItemTransactionEntities1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StorageItemTransactionEntities(StorageItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceInventoryEntity = this;
		}
		
		private void detach_StorageItemTransactionEntities(StorageItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceInventoryEntity = null;
		}
		
		private void attach_StorageItemTransactionEntities1(StorageItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceInventoryEntity1 = this;
		}
		
		private void detach_StorageItemTransactionEntities1(StorageItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.StorageSpaceInventoryEntity1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.ItemTransactionType")]
	public partial class ItemTransactionTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private string _MedDescriptionText;
		
		private string _SupplyDescriptionText;
		
		private int _SortValue;
		
		private bool _StorageApplicableFlag;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<ItemTransactionEntity> _ItemTransactionEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnMedDescriptionTextChanging(string value);
    partial void OnMedDescriptionTextChanged();
    partial void OnSupplyDescriptionTextChanging(string value);
    partial void OnSupplyDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnStorageApplicableFlagChanging(bool value);
    partial void OnStorageApplicableFlagChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ItemTransactionTypeEntity()
		{
			this._ItemTransactionEntities = new EntitySet<ItemTransactionEntity>(new Action<ItemTransactionEntity>(this.attach_ItemTransactionEntities), new Action<ItemTransactionEntity>(this.detach_ItemTransactionEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ItemTransactionTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedDescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MedDescriptionText
		{
			get
			{
				return this._MedDescriptionText;
			}
			set
			{
				if ((this._MedDescriptionText != value))
				{
					this.OnMedDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._MedDescriptionText = value;
					this.SendPropertyChanged("MedDescriptionText");
					this.OnMedDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplyDescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SupplyDescriptionText
		{
			get
			{
				return this._SupplyDescriptionText;
			}
			set
			{
				if ((this._SupplyDescriptionText != value))
				{
					this.OnSupplyDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._SupplyDescriptionText = value;
					this.SendPropertyChanged("SupplyDescriptionText");
					this.OnSupplyDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageApplicableFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool StorageApplicableFlag
		{
			get
			{
				return this._StorageApplicableFlag;
			}
			set
			{
				if ((this._StorageApplicableFlag != value))
				{
					this.OnStorageApplicableFlagChanging(value);
					this.SendPropertyChanging();
					this._StorageApplicableFlag = value;
					this.SendPropertyChanged("StorageApplicableFlag");
					this.OnStorageApplicableFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionTypeEntity_ItemTransactionEntity", Storage="_ItemTransactionEntities", ThisKey="InternalCode", OtherKey="ItemTransactionTypeInternalCode")]
		public EntitySet<ItemTransactionEntity> ItemTransactionEntities
		{
			get
			{
				return this._ItemTransactionEntities;
			}
			set
			{
				this._ItemTransactionEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemTransactionEntities(ItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionTypeEntity = this;
		}
		
		private void detach_ItemTransactionEntities(ItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.vw_PharmacyOrderItemTransactionCurrent")]
	public partial class PharmacyOrderItemTransactionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemTransactionKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.DateTime> _TaskUTCDateTime;
		
		private System.Nullable<System.DateTime> _TaskLocalDateTime;
		
		private System.Guid _PharmacyOrderKey;
		
		private System.Guid _PharmacyOrderSnapshotKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderRouteSetKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderComponentSetKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderComponentKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderSupplierDispensingInstructionSetKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderAdminInstructionSetKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderOrderingPersonSetKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderTimingRecordSetKey;
		
		private bool _DecreasedDoseFlag;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ItemTransactionEntity> _ItemTransactionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemTransactionKeyChanging(System.Guid value);
    partial void OnItemTransactionKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnTaskUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTaskUTCDateTimeChanged();
    partial void OnTaskLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTaskLocalDateTimeChanged();
    partial void OnPharmacyOrderKeyChanging(System.Guid value);
    partial void OnPharmacyOrderKeyChanged();
    partial void OnPharmacyOrderSnapshotKeyChanging(System.Guid value);
    partial void OnPharmacyOrderSnapshotKeyChanged();
    partial void OnPharmacyOrderRouteSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderRouteSetKeyChanged();
    partial void OnPharmacyOrderComponentSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderComponentSetKeyChanged();
    partial void OnPharmacyOrderComponentKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderComponentKeyChanged();
    partial void OnPharmacyOrderSupplierDispensingInstructionSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderSupplierDispensingInstructionSetKeyChanged();
    partial void OnPharmacyOrderAdminInstructionSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderAdminInstructionSetKeyChanged();
    partial void OnPharmacyOrderOrderingPersonSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderOrderingPersonSetKeyChanged();
    partial void OnPharmacyOrderTimingRecordSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderTimingRecordSetKeyChanged();
    partial void OnDecreasedDoseFlagChanging(bool value);
    partial void OnDecreasedDoseFlagChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public PharmacyOrderItemTransactionEntity()
		{
			this._ItemTransactionEntity = default(EntityRef<ItemTransactionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PharmacyOrderItemTransactionKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					if (this._ItemTransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionKey = value;
					this.SendPropertyChanged("ItemTransactionKey");
					this.OnItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TaskUTCDateTime
		{
			get
			{
				return this._TaskUTCDateTime;
			}
			set
			{
				if ((this._TaskUTCDateTime != value))
				{
					this.OnTaskUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TaskUTCDateTime = value;
					this.SendPropertyChanged("TaskUTCDateTime");
					this.OnTaskUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TaskLocalDateTime
		{
			get
			{
				return this._TaskLocalDateTime;
			}
			set
			{
				if ((this._TaskLocalDateTime != value))
				{
					this.OnTaskLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TaskLocalDateTime = value;
					this.SendPropertyChanged("TaskLocalDateTime");
					this.OnTaskLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PharmacyOrderKey
		{
			get
			{
				return this._PharmacyOrderKey;
			}
			set
			{
				if ((this._PharmacyOrderKey != value))
				{
					this.OnPharmacyOrderKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderKey = value;
					this.SendPropertyChanged("PharmacyOrderKey");
					this.OnPharmacyOrderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PharmacyOrderSnapshotKey
		{
			get
			{
				return this._PharmacyOrderSnapshotKey;
			}
			set
			{
				if ((this._PharmacyOrderSnapshotKey != value))
				{
					this.OnPharmacyOrderSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderSnapshotKey = value;
					this.SendPropertyChanged("PharmacyOrderSnapshotKey");
					this.OnPharmacyOrderSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderRouteSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderRouteSetKey
		{
			get
			{
				return this._PharmacyOrderRouteSetKey;
			}
			set
			{
				if ((this._PharmacyOrderRouteSetKey != value))
				{
					this.OnPharmacyOrderRouteSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderRouteSetKey = value;
					this.SendPropertyChanged("PharmacyOrderRouteSetKey");
					this.OnPharmacyOrderRouteSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderComponentSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderComponentSetKey
		{
			get
			{
				return this._PharmacyOrderComponentSetKey;
			}
			set
			{
				if ((this._PharmacyOrderComponentSetKey != value))
				{
					this.OnPharmacyOrderComponentSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderComponentSetKey = value;
					this.SendPropertyChanged("PharmacyOrderComponentSetKey");
					this.OnPharmacyOrderComponentSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderComponentKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderComponentKey
		{
			get
			{
				return this._PharmacyOrderComponentKey;
			}
			set
			{
				if ((this._PharmacyOrderComponentKey != value))
				{
					this.OnPharmacyOrderComponentKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderComponentKey = value;
					this.SendPropertyChanged("PharmacyOrderComponentKey");
					this.OnPharmacyOrderComponentKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderSupplierDispensingInstructionSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderSupplierDispensingInstructionSetKey
		{
			get
			{
				return this._PharmacyOrderSupplierDispensingInstructionSetKey;
			}
			set
			{
				if ((this._PharmacyOrderSupplierDispensingInstructionSetKey != value))
				{
					this.OnPharmacyOrderSupplierDispensingInstructionSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderSupplierDispensingInstructionSetKey = value;
					this.SendPropertyChanged("PharmacyOrderSupplierDispensingInstructionSetKey");
					this.OnPharmacyOrderSupplierDispensingInstructionSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderAdminInstructionSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderAdminInstructionSetKey
		{
			get
			{
				return this._PharmacyOrderAdminInstructionSetKey;
			}
			set
			{
				if ((this._PharmacyOrderAdminInstructionSetKey != value))
				{
					this.OnPharmacyOrderAdminInstructionSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderAdminInstructionSetKey = value;
					this.SendPropertyChanged("PharmacyOrderAdminInstructionSetKey");
					this.OnPharmacyOrderAdminInstructionSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderOrderingPersonSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderOrderingPersonSetKey
		{
			get
			{
				return this._PharmacyOrderOrderingPersonSetKey;
			}
			set
			{
				if ((this._PharmacyOrderOrderingPersonSetKey != value))
				{
					this.OnPharmacyOrderOrderingPersonSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderOrderingPersonSetKey = value;
					this.SendPropertyChanged("PharmacyOrderOrderingPersonSetKey");
					this.OnPharmacyOrderOrderingPersonSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderTimingRecordSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderTimingRecordSetKey
		{
			get
			{
				return this._PharmacyOrderTimingRecordSetKey;
			}
			set
			{
				if ((this._PharmacyOrderTimingRecordSetKey != value))
				{
					this.OnPharmacyOrderTimingRecordSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderTimingRecordSetKey = value;
					this.SendPropertyChanged("PharmacyOrderTimingRecordSetKey");
					this.OnPharmacyOrderTimingRecordSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecreasedDoseFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DecreasedDoseFlag
		{
			get
			{
				return this._DecreasedDoseFlag;
			}
			set
			{
				if ((this._DecreasedDoseFlag != value))
				{
					this.OnDecreasedDoseFlagChanging(value);
					this.SendPropertyChanging();
					this._DecreasedDoseFlag = value;
					this.SendPropertyChanged("DecreasedDoseFlag");
					this.OnDecreasedDoseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_PharmacyOrderItemTransactionEntity", Storage="_ItemTransactionEntity", ThisKey="ItemTransactionKey", OtherKey="Key", IsForeignKey=true)]
		public ItemTransactionEntity ItemTransactionEntity
		{
			get
			{
				return this._ItemTransactionEntity.Entity;
			}
			set
			{
				ItemTransactionEntity previousValue = this._ItemTransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTransactionEntity.Entity = null;
						previousValue.PharmacyOrderItemTransactionEntities.Remove(this);
					}
					this._ItemTransactionEntity.Entity = value;
					if ((value != null))
					{
						value.PharmacyOrderItemTransactionEntities.Add(this);
						this._ItemTransactionKey = value.Key;
					}
					else
					{
						this._ItemTransactionKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemTransactionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.vw_StorageItemTransactionCurrent")]
	public partial class StorageItemTransactionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemTransactionKey;
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		private System.Nullable<System.Guid> _DispensingDeviceSnapshotKey;
		
		private System.Guid _StorageSpaceKey;
		
		private System.Guid _StorageSpaceSnapshotKey;
		
		private System.Nullable<System.Guid> _Level2StorageSpaceSnapshotKey;
		
		private System.Nullable<System.Guid> _Level1StorageSpaceSnapshotKey;
		
		private System.Nullable<System.Guid> _Level0StorageSpaceSnapshotKey;
		
		private System.Guid _StorageSpaceItemSnapshotKey;
		
		private System.Guid _StorageSpaceItemKey;
		
		private System.Nullable<System.Guid> _StartStorageSpaceInventoryKey;
		
		private System.Nullable<System.Guid> _EndStorageSpaceInventoryKey;
		
		private bool _ManuallyVerifiedStorageSpaceFlag;
		
		private string _StorageSpaceAbbreviatedName;
		
		private string _StorageSpaceShortName;
		
		private System.Nullable<decimal> _EndTotalInventoryQuantity;
		
		private bool _MobileFlag;
		
		private bool _InsertFlag;
		
		private bool _EjectFlag;
		
		private bool _StorageSpaceDisconnectFlag;
		
		private bool _InsertUncheckedCUBIEFlag;
		
		private bool _CUBIEAnotherDestinationFlag;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<System.Guid> _ParentStorageSpaceSnapshotKey;
		
		private string _ParentStorageSpaceShortName;
		
		private EntityRef<StorageSpaceInventoryEntity> _StorageSpaceInventoryEntity;
		
		private EntityRef<StorageSpaceInventoryEntity> _StorageSpaceInventoryEntity1;
		
		private EntityRef<ItemTransactionEntity> _ItemTransactionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemTransactionKeyChanging(System.Guid value);
    partial void OnItemTransactionKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnDispensingDeviceSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDispensingDeviceSnapshotKeyChanged();
    partial void OnStorageSpaceKeyChanging(System.Guid value);
    partial void OnStorageSpaceKeyChanged();
    partial void OnStorageSpaceSnapshotKeyChanging(System.Guid value);
    partial void OnStorageSpaceSnapshotKeyChanged();
    partial void OnLevel2StorageSpaceSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLevel2StorageSpaceSnapshotKeyChanged();
    partial void OnLevel1StorageSpaceSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLevel1StorageSpaceSnapshotKeyChanged();
    partial void OnLevel0StorageSpaceSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLevel0StorageSpaceSnapshotKeyChanged();
    partial void OnStorageSpaceItemSnapshotKeyChanging(System.Guid value);
    partial void OnStorageSpaceItemSnapshotKeyChanged();
    partial void OnStorageSpaceItemKeyChanging(System.Guid value);
    partial void OnStorageSpaceItemKeyChanged();
    partial void OnStartStorageSpaceInventoryKeyChanging(System.Nullable<System.Guid> value);
    partial void OnStartStorageSpaceInventoryKeyChanged();
    partial void OnEndStorageSpaceInventoryKeyChanging(System.Nullable<System.Guid> value);
    partial void OnEndStorageSpaceInventoryKeyChanged();
    partial void OnManuallyVerifiedStorageSpaceFlagChanging(bool value);
    partial void OnManuallyVerifiedStorageSpaceFlagChanged();
    partial void OnStorageSpaceAbbreviatedNameChanging(string value);
    partial void OnStorageSpaceAbbreviatedNameChanged();
    partial void OnStorageSpaceShortNameChanging(string value);
    partial void OnStorageSpaceShortNameChanged();
    partial void OnEndTotalInventoryQuantityChanging(System.Nullable<decimal> value);
    partial void OnEndTotalInventoryQuantityChanged();
    partial void OnMobileFlagChanging(bool value);
    partial void OnMobileFlagChanged();
    partial void OnInsertFlagChanging(bool value);
    partial void OnInsertFlagChanged();
    partial void OnEjectFlagChanging(bool value);
    partial void OnEjectFlagChanged();
    partial void OnStorageSpaceDisconnectFlagChanging(bool value);
    partial void OnStorageSpaceDisconnectFlagChanged();
    partial void OnInsertUncheckedCUBIEFlagChanging(bool value);
    partial void OnInsertUncheckedCUBIEFlagChanged();
    partial void OnCUBIEAnotherDestinationFlagChanging(bool value);
    partial void OnCUBIEAnotherDestinationFlagChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnParentStorageSpaceSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnParentStorageSpaceSnapshotKeyChanged();
    partial void OnParentStorageSpaceShortNameChanging(string value);
    partial void OnParentStorageSpaceShortNameChanged();
    #endregion
		
		public StorageItemTransactionEntity()
		{
			this._StorageSpaceInventoryEntity = default(EntityRef<StorageSpaceInventoryEntity>);
			this._StorageSpaceInventoryEntity1 = default(EntityRef<StorageSpaceInventoryEntity>);
			this._ItemTransactionEntity = default(EntityRef<ItemTransactionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StorageItemTransactionKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					if (this._ItemTransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionKey = value;
					this.SendPropertyChanged("ItemTransactionKey");
					this.OnItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DispensingDeviceSnapshotKey
		{
			get
			{
				return this._DispensingDeviceSnapshotKey;
			}
			set
			{
				if ((this._DispensingDeviceSnapshotKey != value))
				{
					this.OnDispensingDeviceSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceSnapshotKey = value;
					this.SendPropertyChanged("DispensingDeviceSnapshotKey");
					this.OnDispensingDeviceSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceKey
		{
			get
			{
				return this._StorageSpaceKey;
			}
			set
			{
				if ((this._StorageSpaceKey != value))
				{
					this.OnStorageSpaceKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceKey = value;
					this.SendPropertyChanged("StorageSpaceKey");
					this.OnStorageSpaceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceSnapshotKey
		{
			get
			{
				return this._StorageSpaceSnapshotKey;
			}
			set
			{
				if ((this._StorageSpaceSnapshotKey != value))
				{
					this.OnStorageSpaceSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceSnapshotKey = value;
					this.SendPropertyChanged("StorageSpaceSnapshotKey");
					this.OnStorageSpaceSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level2StorageSpaceSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Level2StorageSpaceSnapshotKey
		{
			get
			{
				return this._Level2StorageSpaceSnapshotKey;
			}
			set
			{
				if ((this._Level2StorageSpaceSnapshotKey != value))
				{
					this.OnLevel2StorageSpaceSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._Level2StorageSpaceSnapshotKey = value;
					this.SendPropertyChanged("Level2StorageSpaceSnapshotKey");
					this.OnLevel2StorageSpaceSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level1StorageSpaceSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Level1StorageSpaceSnapshotKey
		{
			get
			{
				return this._Level1StorageSpaceSnapshotKey;
			}
			set
			{
				if ((this._Level1StorageSpaceSnapshotKey != value))
				{
					this.OnLevel1StorageSpaceSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._Level1StorageSpaceSnapshotKey = value;
					this.SendPropertyChanged("Level1StorageSpaceSnapshotKey");
					this.OnLevel1StorageSpaceSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level0StorageSpaceSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Level0StorageSpaceSnapshotKey
		{
			get
			{
				return this._Level0StorageSpaceSnapshotKey;
			}
			set
			{
				if ((this._Level0StorageSpaceSnapshotKey != value))
				{
					this.OnLevel0StorageSpaceSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._Level0StorageSpaceSnapshotKey = value;
					this.SendPropertyChanged("Level0StorageSpaceSnapshotKey");
					this.OnLevel0StorageSpaceSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceItemSnapshotKey
		{
			get
			{
				return this._StorageSpaceItemSnapshotKey;
			}
			set
			{
				if ((this._StorageSpaceItemSnapshotKey != value))
				{
					this.OnStorageSpaceItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceItemSnapshotKey = value;
					this.SendPropertyChanged("StorageSpaceItemSnapshotKey");
					this.OnStorageSpaceItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceItemKey
		{
			get
			{
				return this._StorageSpaceItemKey;
			}
			set
			{
				if ((this._StorageSpaceItemKey != value))
				{
					this.OnStorageSpaceItemKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceItemKey = value;
					this.SendPropertyChanged("StorageSpaceItemKey");
					this.OnStorageSpaceItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartStorageSpaceInventoryKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> StartStorageSpaceInventoryKey
		{
			get
			{
				return this._StartStorageSpaceInventoryKey;
			}
			set
			{
				if ((this._StartStorageSpaceInventoryKey != value))
				{
					if (this._StorageSpaceInventoryEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStartStorageSpaceInventoryKeyChanging(value);
					this.SendPropertyChanging();
					this._StartStorageSpaceInventoryKey = value;
					this.SendPropertyChanged("StartStorageSpaceInventoryKey");
					this.OnStartStorageSpaceInventoryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndStorageSpaceInventoryKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EndStorageSpaceInventoryKey
		{
			get
			{
				return this._EndStorageSpaceInventoryKey;
			}
			set
			{
				if ((this._EndStorageSpaceInventoryKey != value))
				{
					if (this._StorageSpaceInventoryEntity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEndStorageSpaceInventoryKeyChanging(value);
					this.SendPropertyChanging();
					this._EndStorageSpaceInventoryKey = value;
					this.SendPropertyChanged("EndStorageSpaceInventoryKey");
					this.OnEndStorageSpaceInventoryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManuallyVerifiedStorageSpaceFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ManuallyVerifiedStorageSpaceFlag
		{
			get
			{
				return this._ManuallyVerifiedStorageSpaceFlag;
			}
			set
			{
				if ((this._ManuallyVerifiedStorageSpaceFlag != value))
				{
					this.OnManuallyVerifiedStorageSpaceFlagChanging(value);
					this.SendPropertyChanging();
					this._ManuallyVerifiedStorageSpaceFlag = value;
					this.SendPropertyChanged("ManuallyVerifiedStorageSpaceFlag");
					this.OnManuallyVerifiedStorageSpaceFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceAbbreviatedName", DbType="NVarChar(100)")]
		public string StorageSpaceAbbreviatedName
		{
			get
			{
				return this._StorageSpaceAbbreviatedName;
			}
			set
			{
				if ((this._StorageSpaceAbbreviatedName != value))
				{
					this.OnStorageSpaceAbbreviatedNameChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceAbbreviatedName = value;
					this.SendPropertyChanged("StorageSpaceAbbreviatedName");
					this.OnStorageSpaceAbbreviatedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceShortName", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string StorageSpaceShortName
		{
			get
			{
				return this._StorageSpaceShortName;
			}
			set
			{
				if ((this._StorageSpaceShortName != value))
				{
					this.OnStorageSpaceShortNameChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceShortName = value;
					this.SendPropertyChanged("StorageSpaceShortName");
					this.OnStorageSpaceShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTotalInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> EndTotalInventoryQuantity
		{
			get
			{
				return this._EndTotalInventoryQuantity;
			}
			set
			{
				if ((this._EndTotalInventoryQuantity != value))
				{
					this.OnEndTotalInventoryQuantityChanging(value);
					this.SendPropertyChanging();
					this._EndTotalInventoryQuantity = value;
					this.SendPropertyChanged("EndTotalInventoryQuantity");
					this.OnEndTotalInventoryQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileFlag", DbType="Bit NOT NULL")]
		public bool MobileFlag
		{
			get
			{
				return this._MobileFlag;
			}
			set
			{
				if ((this._MobileFlag != value))
				{
					this.OnMobileFlagChanging(value);
					this.SendPropertyChanging();
					this._MobileFlag = value;
					this.SendPropertyChanged("MobileFlag");
					this.OnMobileFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertFlag", DbType="Bit NOT NULL")]
		public bool InsertFlag
		{
			get
			{
				return this._InsertFlag;
			}
			set
			{
				if ((this._InsertFlag != value))
				{
					this.OnInsertFlagChanging(value);
					this.SendPropertyChanging();
					this._InsertFlag = value;
					this.SendPropertyChanged("InsertFlag");
					this.OnInsertFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EjectFlag", DbType="Bit NOT NULL")]
		public bool EjectFlag
		{
			get
			{
				return this._EjectFlag;
			}
			set
			{
				if ((this._EjectFlag != value))
				{
					this.OnEjectFlagChanging(value);
					this.SendPropertyChanging();
					this._EjectFlag = value;
					this.SendPropertyChanged("EjectFlag");
					this.OnEjectFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceDisconnectFlag", DbType="Bit NOT NULL")]
		public bool StorageSpaceDisconnectFlag
		{
			get
			{
				return this._StorageSpaceDisconnectFlag;
			}
			set
			{
				if ((this._StorageSpaceDisconnectFlag != value))
				{
					this.OnStorageSpaceDisconnectFlagChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceDisconnectFlag = value;
					this.SendPropertyChanged("StorageSpaceDisconnectFlag");
					this.OnStorageSpaceDisconnectFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUncheckedCUBIEFlag", DbType="Bit NOT NULL")]
		public bool InsertUncheckedCUBIEFlag
		{
			get
			{
				return this._InsertUncheckedCUBIEFlag;
			}
			set
			{
				if ((this._InsertUncheckedCUBIEFlag != value))
				{
					this.OnInsertUncheckedCUBIEFlagChanging(value);
					this.SendPropertyChanging();
					this._InsertUncheckedCUBIEFlag = value;
					this.SendPropertyChanged("InsertUncheckedCUBIEFlag");
					this.OnInsertUncheckedCUBIEFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUBIEAnotherDestinationFlag", DbType="Bit NOT NULL")]
		public bool CUBIEAnotherDestinationFlag
		{
			get
			{
				return this._CUBIEAnotherDestinationFlag;
			}
			set
			{
				if ((this._CUBIEAnotherDestinationFlag != value))
				{
					this.OnCUBIEAnotherDestinationFlagChanging(value);
					this.SendPropertyChanging();
					this._CUBIEAnotherDestinationFlag = value;
					this.SendPropertyChanged("CUBIEAnotherDestinationFlag");
					this.OnCUBIEAnotherDestinationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentStorageSpaceSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ParentStorageSpaceSnapshotKey
		{
			get
			{
				return this._ParentStorageSpaceSnapshotKey;
			}
			set
			{
				if ((this._ParentStorageSpaceSnapshotKey != value))
				{
					this.OnParentStorageSpaceSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ParentStorageSpaceSnapshotKey = value;
					this.SendPropertyChanged("ParentStorageSpaceSnapshotKey");
					this.OnParentStorageSpaceSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentStorageSpaceShortName", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string ParentStorageSpaceShortName
		{
			get
			{
				return this._ParentStorageSpaceShortName;
			}
			set
			{
				if ((this._ParentStorageSpaceShortName != value))
				{
					this.OnParentStorageSpaceShortNameChanging(value);
					this.SendPropertyChanging();
					this._ParentStorageSpaceShortName = value;
					this.SendPropertyChanged("ParentStorageSpaceShortName");
					this.OnParentStorageSpaceShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceInventoryEntity_StorageItemTransactionEntity", Storage="_StorageSpaceInventoryEntity", ThisKey="StartStorageSpaceInventoryKey", OtherKey="Key", IsForeignKey=true)]
		public StorageSpaceInventoryEntity StorageSpaceInventoryEntity
		{
			get
			{
				return this._StorageSpaceInventoryEntity.Entity;
			}
			set
			{
				StorageSpaceInventoryEntity previousValue = this._StorageSpaceInventoryEntity.Entity;
				if (((previousValue != value) 
							|| (this._StorageSpaceInventoryEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageSpaceInventoryEntity.Entity = null;
						previousValue.StorageItemTransactionEntities.Remove(this);
					}
					this._StorageSpaceInventoryEntity.Entity = value;
					if ((value != null))
					{
						value.StorageItemTransactionEntities.Add(this);
						this._StartStorageSpaceInventoryKey = value.Key;
					}
					else
					{
						this._StartStorageSpaceInventoryKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StorageSpaceInventoryEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageSpaceInventoryEntity_StorageItemTransactionEntity1", Storage="_StorageSpaceInventoryEntity1", ThisKey="EndStorageSpaceInventoryKey", OtherKey="Key", IsForeignKey=true)]
		public StorageSpaceInventoryEntity StorageSpaceInventoryEntity1
		{
			get
			{
				return this._StorageSpaceInventoryEntity1.Entity;
			}
			set
			{
				StorageSpaceInventoryEntity previousValue = this._StorageSpaceInventoryEntity1.Entity;
				if (((previousValue != value) 
							|| (this._StorageSpaceInventoryEntity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageSpaceInventoryEntity1.Entity = null;
						previousValue.StorageItemTransactionEntities1.Remove(this);
					}
					this._StorageSpaceInventoryEntity1.Entity = value;
					if ((value != null))
					{
						value.StorageItemTransactionEntities1.Add(this);
						this._EndStorageSpaceInventoryKey = value.Key;
					}
					else
					{
						this._EndStorageSpaceInventoryKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("StorageSpaceInventoryEntity1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_StorageItemTransactionEntity", Storage="_ItemTransactionEntity", ThisKey="ItemTransactionKey", OtherKey="Key", IsForeignKey=true)]
		public ItemTransactionEntity ItemTransactionEntity
		{
			get
			{
				return this._ItemTransactionEntity.Entity;
			}
			set
			{
				ItemTransactionEntity previousValue = this._ItemTransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTransactionEntity.Entity = null;
						previousValue.StorageItemTransactionEntities.Remove(this);
					}
					this._ItemTransactionEntity.Entity = value;
					if ((value != null))
					{
						value.StorageItemTransactionEntities.Add(this);
						this._ItemTransactionKey = value.Key;
					}
					else
					{
						this._ItemTransactionKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemTransactionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.vw_EncounterItemTransactionCurrent")]
	public partial class EncounterItemTransactionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemTransactionKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _PatientKey;
		
		private System.Guid _PatientSnapshotKey;
		
		private System.Nullable<System.Guid> _PatientAllergySetKey;
		
		private System.Nullable<System.Guid> _PatientIDSetKey;
		
		private System.Nullable<System.Guid> _PrimaryPatientIDTypeKey;
		
		private System.Nullable<System.Guid> _FacilityPatientSiloSnapshotKey;
		
		private System.Guid _EncounterKey;
		
		private System.Guid _EncounterSnapshotKey;
		
		private System.Guid _EncounterPatientLocationKey;
		
		private System.Guid _AssignedFacilityKey;
		
		private System.Guid _AssignedFacilitySnapshotKey;
		
		private System.Nullable<System.Guid> _AssignedUnitKey;
		
		private System.Nullable<System.Guid> _AssignedUnitSnapshotKey;
		
		private System.Nullable<System.Guid> _AssignedUnitRoomKey;
		
		private System.Nullable<System.Guid> _AssignedUnitRoomSnapshotKey;
		
		private System.Nullable<System.Guid> _TemporaryUnitKey;
		
		private System.Nullable<System.Guid> _TemporaryUnitSnapshotKey;
		
		private System.Nullable<System.Guid> _TemporaryUnitRoomKey;
		
		private System.Nullable<System.Guid> _TemporaryUnitRoomSnapshotKey;
		
		private System.Nullable<System.Guid> _EncounterPhysicianRoleSetKey;
		
		private System.Nullable<System.Guid> _TooCloseReasonKey;
		
		private string _TooCloseFreeFormReasonText;
		
		private System.Nullable<System.Guid> _OverrideReasonKey;
		
		private string _OverrideFreeFormReasonText;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<System.Guid> _TooCloseReasonSnapshotKey;
		
		private System.Nullable<System.Guid> _OverrideReasonSnapshotKey;
		
		private EntityRef<ItemTransactionEntity> _ItemTransactionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemTransactionKeyChanging(System.Guid value);
    partial void OnItemTransactionKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnPatientKeyChanging(System.Guid value);
    partial void OnPatientKeyChanged();
    partial void OnPatientSnapshotKeyChanging(System.Guid value);
    partial void OnPatientSnapshotKeyChanged();
    partial void OnPatientAllergySetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPatientAllergySetKeyChanged();
    partial void OnPatientIDSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPatientIDSetKeyChanged();
    partial void OnPrimaryPatientIDTypeKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPrimaryPatientIDTypeKeyChanged();
    partial void OnFacilityPatientSiloSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnFacilityPatientSiloSnapshotKeyChanged();
    partial void OnEncounterKeyChanging(System.Guid value);
    partial void OnEncounterKeyChanged();
    partial void OnEncounterSnapshotKeyChanging(System.Guid value);
    partial void OnEncounterSnapshotKeyChanged();
    partial void OnEncounterPatientLocationKeyChanging(System.Guid value);
    partial void OnEncounterPatientLocationKeyChanged();
    partial void OnAssignedFacilityKeyChanging(System.Guid value);
    partial void OnAssignedFacilityKeyChanged();
    partial void OnAssignedFacilitySnapshotKeyChanging(System.Guid value);
    partial void OnAssignedFacilitySnapshotKeyChanged();
    partial void OnAssignedUnitKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssignedUnitKeyChanged();
    partial void OnAssignedUnitSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssignedUnitSnapshotKeyChanged();
    partial void OnAssignedUnitRoomKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssignedUnitRoomKeyChanged();
    partial void OnAssignedUnitRoomSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAssignedUnitRoomSnapshotKeyChanged();
    partial void OnTemporaryUnitKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTemporaryUnitKeyChanged();
    partial void OnTemporaryUnitSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTemporaryUnitSnapshotKeyChanged();
    partial void OnTemporaryUnitRoomKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTemporaryUnitRoomKeyChanged();
    partial void OnTemporaryUnitRoomSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTemporaryUnitRoomSnapshotKeyChanged();
    partial void OnEncounterPhysicianRoleSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnEncounterPhysicianRoleSetKeyChanged();
    partial void OnTooCloseReasonKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTooCloseReasonKeyChanged();
    partial void OnTooCloseFreeFormReasonTextChanging(string value);
    partial void OnTooCloseFreeFormReasonTextChanged();
    partial void OnOverrideReasonKeyChanging(System.Nullable<System.Guid> value);
    partial void OnOverrideReasonKeyChanged();
    partial void OnOverrideFreeFormReasonTextChanging(string value);
    partial void OnOverrideFreeFormReasonTextChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnTooCloseReasonSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTooCloseReasonSnapshotKeyChanged();
    partial void OnOverrideReasonSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnOverrideReasonSnapshotKeyChanged();
    #endregion
		
		public EncounterItemTransactionEntity()
		{
			this._ItemTransactionEntity = default(EntityRef<ItemTransactionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EncounterItemTransactionKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					if (this._ItemTransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionKey = value;
					this.SendPropertyChanged("ItemTransactionKey");
					this.OnItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientKey
		{
			get
			{
				return this._PatientKey;
			}
			set
			{
				if ((this._PatientKey != value))
				{
					this.OnPatientKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientKey = value;
					this.SendPropertyChanged("PatientKey");
					this.OnPatientKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid PatientSnapshotKey
		{
			get
			{
				return this._PatientSnapshotKey;
			}
			set
			{
				if ((this._PatientSnapshotKey != value))
				{
					this.OnPatientSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientSnapshotKey = value;
					this.SendPropertyChanged("PatientSnapshotKey");
					this.OnPatientSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAllergySetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PatientAllergySetKey
		{
			get
			{
				return this._PatientAllergySetKey;
			}
			set
			{
				if ((this._PatientAllergySetKey != value))
				{
					this.OnPatientAllergySetKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientAllergySetKey = value;
					this.SendPropertyChanged("PatientAllergySetKey");
					this.OnPatientAllergySetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientIDSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PatientIDSetKey
		{
			get
			{
				return this._PatientIDSetKey;
			}
			set
			{
				if ((this._PatientIDSetKey != value))
				{
					this.OnPatientIDSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PatientIDSetKey = value;
					this.SendPropertyChanged("PatientIDSetKey");
					this.OnPatientIDSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryPatientIDTypeKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PrimaryPatientIDTypeKey
		{
			get
			{
				return this._PrimaryPatientIDTypeKey;
			}
			set
			{
				if ((this._PrimaryPatientIDTypeKey != value))
				{
					this.OnPrimaryPatientIDTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._PrimaryPatientIDTypeKey = value;
					this.SendPropertyChanged("PrimaryPatientIDTypeKey");
					this.OnPrimaryPatientIDTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityPatientSiloSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FacilityPatientSiloSnapshotKey
		{
			get
			{
				return this._FacilityPatientSiloSnapshotKey;
			}
			set
			{
				if ((this._FacilityPatientSiloSnapshotKey != value))
				{
					this.OnFacilityPatientSiloSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityPatientSiloSnapshotKey = value;
					this.SendPropertyChanged("FacilityPatientSiloSnapshotKey");
					this.OnFacilityPatientSiloSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this.OnEncounterKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterKey = value;
					this.SendPropertyChanged("EncounterKey");
					this.OnEncounterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterSnapshotKey
		{
			get
			{
				return this._EncounterSnapshotKey;
			}
			set
			{
				if ((this._EncounterSnapshotKey != value))
				{
					this.OnEncounterSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterSnapshotKey = value;
					this.SendPropertyChanged("EncounterSnapshotKey");
					this.OnEncounterSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPatientLocationKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterPatientLocationKey
		{
			get
			{
				return this._EncounterPatientLocationKey;
			}
			set
			{
				if ((this._EncounterPatientLocationKey != value))
				{
					this.OnEncounterPatientLocationKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterPatientLocationKey = value;
					this.SendPropertyChanged("EncounterPatientLocationKey");
					this.OnEncounterPatientLocationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedFacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AssignedFacilityKey
		{
			get
			{
				return this._AssignedFacilityKey;
			}
			set
			{
				if ((this._AssignedFacilityKey != value))
				{
					this.OnAssignedFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._AssignedFacilityKey = value;
					this.SendPropertyChanged("AssignedFacilityKey");
					this.OnAssignedFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedFacilitySnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid AssignedFacilitySnapshotKey
		{
			get
			{
				return this._AssignedFacilitySnapshotKey;
			}
			set
			{
				if ((this._AssignedFacilitySnapshotKey != value))
				{
					this.OnAssignedFacilitySnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._AssignedFacilitySnapshotKey = value;
					this.SendPropertyChanged("AssignedFacilitySnapshotKey");
					this.OnAssignedFacilitySnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedUnitKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssignedUnitKey
		{
			get
			{
				return this._AssignedUnitKey;
			}
			set
			{
				if ((this._AssignedUnitKey != value))
				{
					this.OnAssignedUnitKeyChanging(value);
					this.SendPropertyChanging();
					this._AssignedUnitKey = value;
					this.SendPropertyChanged("AssignedUnitKey");
					this.OnAssignedUnitKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedUnitSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssignedUnitSnapshotKey
		{
			get
			{
				return this._AssignedUnitSnapshotKey;
			}
			set
			{
				if ((this._AssignedUnitSnapshotKey != value))
				{
					this.OnAssignedUnitSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._AssignedUnitSnapshotKey = value;
					this.SendPropertyChanged("AssignedUnitSnapshotKey");
					this.OnAssignedUnitSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedUnitRoomKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssignedUnitRoomKey
		{
			get
			{
				return this._AssignedUnitRoomKey;
			}
			set
			{
				if ((this._AssignedUnitRoomKey != value))
				{
					this.OnAssignedUnitRoomKeyChanging(value);
					this.SendPropertyChanging();
					this._AssignedUnitRoomKey = value;
					this.SendPropertyChanged("AssignedUnitRoomKey");
					this.OnAssignedUnitRoomKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedUnitRoomSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AssignedUnitRoomSnapshotKey
		{
			get
			{
				return this._AssignedUnitRoomSnapshotKey;
			}
			set
			{
				if ((this._AssignedUnitRoomSnapshotKey != value))
				{
					this.OnAssignedUnitRoomSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._AssignedUnitRoomSnapshotKey = value;
					this.SendPropertyChanged("AssignedUnitRoomSnapshotKey");
					this.OnAssignedUnitRoomSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryUnitKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TemporaryUnitKey
		{
			get
			{
				return this._TemporaryUnitKey;
			}
			set
			{
				if ((this._TemporaryUnitKey != value))
				{
					this.OnTemporaryUnitKeyChanging(value);
					this.SendPropertyChanging();
					this._TemporaryUnitKey = value;
					this.SendPropertyChanged("TemporaryUnitKey");
					this.OnTemporaryUnitKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryUnitSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TemporaryUnitSnapshotKey
		{
			get
			{
				return this._TemporaryUnitSnapshotKey;
			}
			set
			{
				if ((this._TemporaryUnitSnapshotKey != value))
				{
					this.OnTemporaryUnitSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._TemporaryUnitSnapshotKey = value;
					this.SendPropertyChanged("TemporaryUnitSnapshotKey");
					this.OnTemporaryUnitSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryUnitRoomKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TemporaryUnitRoomKey
		{
			get
			{
				return this._TemporaryUnitRoomKey;
			}
			set
			{
				if ((this._TemporaryUnitRoomKey != value))
				{
					this.OnTemporaryUnitRoomKeyChanging(value);
					this.SendPropertyChanging();
					this._TemporaryUnitRoomKey = value;
					this.SendPropertyChanged("TemporaryUnitRoomKey");
					this.OnTemporaryUnitRoomKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryUnitRoomSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TemporaryUnitRoomSnapshotKey
		{
			get
			{
				return this._TemporaryUnitRoomSnapshotKey;
			}
			set
			{
				if ((this._TemporaryUnitRoomSnapshotKey != value))
				{
					this.OnTemporaryUnitRoomSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._TemporaryUnitRoomSnapshotKey = value;
					this.SendPropertyChanged("TemporaryUnitRoomSnapshotKey");
					this.OnTemporaryUnitRoomSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterPhysicianRoleSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EncounterPhysicianRoleSetKey
		{
			get
			{
				return this._EncounterPhysicianRoleSetKey;
			}
			set
			{
				if ((this._EncounterPhysicianRoleSetKey != value))
				{
					this.OnEncounterPhysicianRoleSetKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterPhysicianRoleSetKey = value;
					this.SendPropertyChanged("EncounterPhysicianRoleSetKey");
					this.OnEncounterPhysicianRoleSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseReasonKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TooCloseReasonKey
		{
			get
			{
				return this._TooCloseReasonKey;
			}
			set
			{
				if ((this._TooCloseReasonKey != value))
				{
					this.OnTooCloseReasonKeyChanging(value);
					this.SendPropertyChanging();
					this._TooCloseReasonKey = value;
					this.SendPropertyChanged("TooCloseReasonKey");
					this.OnTooCloseReasonKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseFreeFormReasonText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string TooCloseFreeFormReasonText
		{
			get
			{
				return this._TooCloseFreeFormReasonText;
			}
			set
			{
				if ((this._TooCloseFreeFormReasonText != value))
				{
					this.OnTooCloseFreeFormReasonTextChanging(value);
					this.SendPropertyChanging();
					this._TooCloseFreeFormReasonText = value;
					this.SendPropertyChanged("TooCloseFreeFormReasonText");
					this.OnTooCloseFreeFormReasonTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideReasonKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> OverrideReasonKey
		{
			get
			{
				return this._OverrideReasonKey;
			}
			set
			{
				if ((this._OverrideReasonKey != value))
				{
					this.OnOverrideReasonKeyChanging(value);
					this.SendPropertyChanging();
					this._OverrideReasonKey = value;
					this.SendPropertyChanged("OverrideReasonKey");
					this.OnOverrideReasonKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideFreeFormReasonText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string OverrideFreeFormReasonText
		{
			get
			{
				return this._OverrideFreeFormReasonText;
			}
			set
			{
				if ((this._OverrideFreeFormReasonText != value))
				{
					this.OnOverrideFreeFormReasonTextChanging(value);
					this.SendPropertyChanging();
					this._OverrideFreeFormReasonText = value;
					this.SendPropertyChanged("OverrideFreeFormReasonText");
					this.OnOverrideFreeFormReasonTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseReasonSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TooCloseReasonSnapshotKey
		{
			get
			{
				return this._TooCloseReasonSnapshotKey;
			}
			set
			{
				if ((this._TooCloseReasonSnapshotKey != value))
				{
					this.OnTooCloseReasonSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._TooCloseReasonSnapshotKey = value;
					this.SendPropertyChanged("TooCloseReasonSnapshotKey");
					this.OnTooCloseReasonSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideReasonSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OverrideReasonSnapshotKey
		{
			get
			{
				return this._OverrideReasonSnapshotKey;
			}
			set
			{
				if ((this._OverrideReasonSnapshotKey != value))
				{
					this.OnOverrideReasonSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._OverrideReasonSnapshotKey = value;
					this.SendPropertyChanged("OverrideReasonSnapshotKey");
					this.OnOverrideReasonSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_EncounterItemTransactionEntity", Storage="_ItemTransactionEntity", ThisKey="ItemTransactionKey", OtherKey="Key", IsForeignKey=true)]
		public ItemTransactionEntity ItemTransactionEntity
		{
			get
			{
				return this._ItemTransactionEntity.Entity;
			}
			set
			{
				ItemTransactionEntity previousValue = this._ItemTransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTransactionEntity.Entity = null;
						previousValue.EncounterItemTransactionEntities.Remove(this);
					}
					this._ItemTransactionEntity.Entity = value;
					if ((value != null))
					{
						value.EncounterItemTransactionEntities.Add(this);
						this._ItemTransactionKey = value.Key;
					}
					else
					{
						this._ItemTransactionKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemTransactionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.vw_ItemTransactionCurrent")]
	public partial class ItemTransactionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemTransactionSnapshotKey;
		
		private long _SequenceNumber;
		
		private string _TransactionSessionTypeInternalCode;
		
		private System.Nullable<System.Guid> _PharmacyOrderKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderComponentKey;
		
		private System.Nullable<System.Guid> _EncounterKey;
		
		private System.Nullable<decimal> _RemainingDispenseTransactionQuantity;
		
		private System.Nullable<decimal> _OriginalUndocumentedDisposeQuantity;
		
		private System.Nullable<decimal> _RemainingUndocumentedDisposeQuantity;
		
		private bool _ResolvedUndocumentedDisposeFlag;
		
		private System.Nullable<System.DateTime> _PharmacyOrderTaskUTCDateTime;
		
		private System.Nullable<System.DateTime> _PharmacyOrderTaskLocalDateTime;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _TransactionSessionKey;
		
		private System.Nullable<System.Guid> _RelatedItemTransactionKey;
		
		private System.Nullable<System.Guid> _CompositeItemTransactionKey;
		
		private string _ItemTransactionTypeInternalCode;
		
		private string _ItemTransactionCompositeRoleInternalCode;
		
		private bool _CancelFlag;
		
		private bool _UndocumentedDisposeFlag;
		
		private System.Nullable<bool> _PharmacyOrderUsedFlag;
		
		private System.DateTime _TransactionUTCDateTime;
		
		private System.DateTime _TransactionLocalDateTime;
		
		private decimal _ItemIssueTransactionQuantity;
		
		private System.Nullable<System.Guid> _ItemIssueUOMKey;
		
		private string _ItemIssueUOMDisplayCode;
		
		private System.Nullable<decimal> _EnteredQuantity;
		
		private System.Nullable<System.Guid> _EnteredUOMKey;
		
		private string _EnteredUOMDisplayCode;
		
		private System.Nullable<decimal> _EnteredUOMPerEachQuantity;
		
		private System.Nullable<decimal> _StrengthTransactionQuantity;
		
		private System.Nullable<System.Guid> _StrengthUOMKey;
		
		private System.Nullable<decimal> _VolumeTransactionQuantity;
		
		private System.Nullable<System.Guid> _VolumeUOMKey;
		
		private System.Guid _ItemKey;
		
		private System.Guid _ItemSnapshotKey;
		
		private System.Guid _FacilityKey;
		
		private System.Guid _FacilitySnapshotKey;
		
		private System.Guid _FacilityItemKey;
		
		private System.Guid _FacilityItemSnapshotKey;
		
		private System.Nullable<System.Guid> _MedItemKey;
		
		private System.Nullable<System.Guid> _MedItemSnapshotKey;
		
		private System.Nullable<System.Guid> _ItemEquivalencySetKey;
		
		private System.Nullable<System.Guid> _FacilityKitKey;
		
		private System.Nullable<System.Guid> _FacilityKitSnapshotKey;
		
		private bool _FacilityKitStatFlag;
		
		private System.Nullable<System.Guid> _UserAccountKey;
		
		private System.Nullable<System.Guid> _UserAccountSnapshotKey;
		
		private string _UserID;
		
		private System.Nullable<System.Guid> _WitnessAccountKey;
		
		private System.Nullable<System.Guid> _WitnessAccountSnapshotKey;
		
		private System.Nullable<System.Guid> _MyItemsUserAccountKey;
		
		private System.Nullable<System.Guid> _MyItemsUserAccountSnapshotKey;
		
		private System.Nullable<System.Guid> _UserEncounterQueueEntryKey;
		
		private System.Nullable<System.Guid> _ComboItemKey;
		
		private System.Nullable<System.Guid> _ComboItemSnapshotKey;
		
		private System.Nullable<System.Guid> _ComboFacilityItemKey;
		
		private System.Nullable<System.Guid> _ComboFacilityItemSnapshotKey;
		
		private System.Nullable<System.Guid> _ComboMedItemKey;
		
		private System.Nullable<System.Guid> _ComboMedItemSnapshotKey;
		
		private System.Nullable<System.Guid> _ComboComponentKey;
		
		private System.Nullable<System.Guid> _ComboComponentSnapshotKey;
		
		private bool _CreditPatientFlag;
		
		private bool _DiscrepancyFlag;
		
		private bool _OverrideScanFlag;
		
		private bool _TimeOutFlag;
		
		private bool _CriticalOverrideModeFlag;
		
		private bool _DispenseFractionFlag;
		
		private string _FractionalUOMTypeInternalCode;
		
		private System.Nullable<System.Guid> _RxCheckReasonKey;
		
		private System.Nullable<System.Guid> _RxCheckReasonSnapshotKey;
		
		private string _RxCheckFreeFormReasonText;
		
		private bool _WithoutRxCheckFlag;
		
		private System.Nullable<System.Guid> _UserAtDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _UserAtDispensingDeviceSnapshotKey;
		
		private string _UserAtDispensingDeviceName;
		
		private bool _FromExternalSystemFlag;
		
		private System.Nullable<int> _ExternalSequenceNumber;
		
		private bool _RecoveredFlag;
		
		private bool _ExplicitUserCancelFlag;
		
		private string _InventoryReferenceID;
		
		private System.Nullable<System.Guid> _ExternalInventoryCountRequestKey;
		
		private System.Nullable<System.Guid> _ExternalRefillRequestKey;
		
		private string _ItemTransactionReferenceID;
		
		private string _RelatedItemTransactionReferenceID;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<PharmacyOrderItemTransactionEntity> _PharmacyOrderItemTransactionEntities;
		
		private EntitySet<StorageItemTransactionEntity> _StorageItemTransactionEntities;
		
		private EntitySet<EncounterItemTransactionEntity> _EncounterItemTransactionEntities;
		
		private EntitySet<ItemTransactionClinicalDataNoticeEntity> _ItemTransactionClinicalDataNoticeEntities;
		
		private EntitySet<CountInventoryListEntryEntity> _CountInventoryListEntryEntities;
		
		private EntitySet<DiscrepancyEntity> _DiscrepancyEntities;
		
		private EntitySet<DiscrepancyNoteEntity> _DiscrepancyNoteEntities;
		
		private EntitySet<ItemTransactionScanEntity> _ItemTransactionScanEntities;
		
		private EntityRef<ItemTransactionTypeEntity> _ItemTransactionTypeEntity;
		
		private EntityRef<ItemTransactionCompositeRoleEntity> _ItemTransactionCompositeRoleEntity;
		
		private EntityRef<TransactionSessionEntity> _TransactionSessionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemTransactionSnapshotKeyChanging(System.Guid value);
    partial void OnItemTransactionSnapshotKeyChanged();
    partial void OnSequenceNumberChanging(long value);
    partial void OnSequenceNumberChanged();
    partial void OnTransactionSessionTypeInternalCodeChanging(string value);
    partial void OnTransactionSessionTypeInternalCodeChanged();
    partial void OnPharmacyOrderKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderKeyChanged();
    partial void OnPharmacyOrderComponentKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderComponentKeyChanged();
    partial void OnEncounterKeyChanging(System.Nullable<System.Guid> value);
    partial void OnEncounterKeyChanged();
    partial void OnRemainingDispenseQuantityChanging(System.Nullable<decimal> value);
    partial void OnRemainingDispenseQuantityChanged();
    partial void OnOriginalUndocumentedDisposeQuantityChanging(System.Nullable<decimal> value);
    partial void OnOriginalUndocumentedDisposeQuantityChanged();
    partial void OnRemainingUndocumentedDisposeQuantityChanging(System.Nullable<decimal> value);
    partial void OnRemainingUndocumentedDisposeQuantityChanged();
    partial void OnResolvedUndocumentedDisposeFlagChanging(bool value);
    partial void OnResolvedUndocumentedDisposeFlagChanged();
    partial void OnPharmacyOrderTaskUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPharmacyOrderTaskUTCDateTimeChanged();
    partial void OnPharmacyOrderTaskLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPharmacyOrderTaskLocalDateTimeChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnTransactionSessionKeyChanging(System.Guid value);
    partial void OnTransactionSessionKeyChanged();
    partial void OnRelatedItemTransactionKeyChanging(System.Nullable<System.Guid> value);
    partial void OnRelatedItemTransactionKeyChanged();
    partial void OnCompositeItemTransactionKeyChanging(System.Nullable<System.Guid> value);
    partial void OnCompositeItemTransactionKeyChanged();
    partial void OnItemTransactionTypeInternalCodeChanging(string value);
    partial void OnItemTransactionTypeInternalCodeChanged();
    partial void OnItemTransactionCompositeRoleInternalCodeChanging(string value);
    partial void OnItemTransactionCompositeRoleInternalCodeChanged();
    partial void OnCancelFlagChanging(bool value);
    partial void OnCancelFlagChanged();
    partial void OnUndocumentedDisposeFlagChanging(bool value);
    partial void OnUndocumentedDisposeFlagChanged();
    partial void OnPharmacyOrderUsedFlagChanging(System.Nullable<bool> value);
    partial void OnPharmacyOrderUsedFlagChanged();
    partial void OnTransactionUTCDateTimeChanging(System.DateTime value);
    partial void OnTransactionUTCDateTimeChanged();
    partial void OnTransactionLocalDateTimeChanging(System.DateTime value);
    partial void OnTransactionLocalDateTimeChanged();
    partial void OnItemIssueTransactionQuantityChanging(decimal value);
    partial void OnItemIssueTransactionQuantityChanged();
    partial void OnItemIssueUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnItemIssueUOMKeyChanged();
    partial void OnItemIssueUOMDisplayCodeChanging(string value);
    partial void OnItemIssueUOMDisplayCodeChanged();
    partial void OnEnteredQuantityChanging(System.Nullable<decimal> value);
    partial void OnEnteredQuantityChanged();
    partial void OnEnteredUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnEnteredUOMKeyChanged();
    partial void OnEnteredUOMDisplayCodeChanging(string value);
    partial void OnEnteredUOMDisplayCodeChanged();
    partial void OnEnteredUOMPerEachQuantityChanging(System.Nullable<decimal> value);
    partial void OnEnteredUOMPerEachQuantityChanged();
    partial void OnStrengthTransactionQuantityChanging(System.Nullable<decimal> value);
    partial void OnStrengthTransactionQuantityChanged();
    partial void OnStrengthUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnStrengthUOMKeyChanged();
    partial void OnVolumeTransactionQuantityChanging(System.Nullable<decimal> value);
    partial void OnVolumeTransactionQuantityChanged();
    partial void OnVolumeUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnVolumeUOMKeyChanged();
    partial void OnItemKeyChanging(System.Guid value);
    partial void OnItemKeyChanged();
    partial void OnItemSnapshotKeyChanging(System.Guid value);
    partial void OnItemSnapshotKeyChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnFacilitySnapshotKeyChanging(System.Guid value);
    partial void OnFacilitySnapshotKeyChanged();
    partial void OnFacilityItemKeyChanging(System.Guid value);
    partial void OnFacilityItemKeyChanged();
    partial void OnFacilityItemSnapshotKeyChanging(System.Guid value);
    partial void OnFacilityItemSnapshotKeyChanged();
    partial void OnMedItemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnMedItemKeyChanged();
    partial void OnMedItemSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnMedItemSnapshotKeyChanged();
    partial void OnItemEquivalencySetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnItemEquivalencySetKeyChanged();
    partial void OnFacilityKitKeyChanging(System.Nullable<System.Guid> value);
    partial void OnFacilityKitKeyChanged();
    partial void OnFacilityKitSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnFacilityKitSnapshotKeyChanged();
    partial void OnFacilityKitStatFlagChanging(bool value);
    partial void OnFacilityKitStatFlagChanged();
    partial void OnUserAccountKeyChanging(System.Nullable<System.Guid> value);
    partial void OnUserAccountKeyChanged();
    partial void OnUserAccountSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnUserAccountSnapshotKeyChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnWitnessAccountKeyChanging(System.Nullable<System.Guid> value);
    partial void OnWitnessAccountKeyChanged();
    partial void OnWitnessAccountSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnWitnessAccountSnapshotKeyChanged();
    partial void OnMyItemsUserAccountKeyChanging(System.Nullable<System.Guid> value);
    partial void OnMyItemsUserAccountKeyChanged();
    partial void OnMyItemsUserAccountSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnMyItemsUserAccountSnapshotKeyChanged();
    partial void OnUserEncounterQueueEntryKeyChanging(System.Nullable<System.Guid> value);
    partial void OnUserEncounterQueueEntryKeyChanged();
    partial void OnComboItemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnComboItemKeyChanged();
    partial void OnComboItemSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnComboItemSnapshotKeyChanged();
    partial void OnComboFacilityItemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnComboFacilityItemKeyChanged();
    partial void OnComboFacilityItemSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnComboFacilityItemSnapshotKeyChanged();
    partial void OnComboMedItemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnComboMedItemKeyChanged();
    partial void OnComboMedItemSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnComboMedItemSnapshotKeyChanged();
    partial void OnComboComponentKeyChanging(System.Nullable<System.Guid> value);
    partial void OnComboComponentKeyChanged();
    partial void OnComboComponentSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnComboComponentSnapshotKeyChanged();
    partial void OnCreditPatientFlagChanging(bool value);
    partial void OnCreditPatientFlagChanged();
    partial void OnDiscrepancyFlagChanging(bool value);
    partial void OnDiscrepancyFlagChanged();
    partial void OnOverrideScanFlagChanging(bool value);
    partial void OnOverrideScanFlagChanged();
    partial void OnTimeOutFlagChanging(bool value);
    partial void OnTimeOutFlagChanged();
    partial void OnCriticalOverrideModeFlagChanging(bool value);
    partial void OnCriticalOverrideModeFlagChanged();
    partial void OnDispenseFractionFlagChanging(bool value);
    partial void OnDispenseFractionFlagChanged();
    partial void OnFractionalUOMTypeInternalCodeChanging(string value);
    partial void OnFractionalUOMTypeInternalCodeChanged();
    partial void OnRxCheckReasonKeyChanging(System.Nullable<System.Guid> value);
    partial void OnRxCheckReasonKeyChanged();
    partial void OnRxCheckReasonSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnRxCheckReasonSnapshotKeyChanged();
    partial void OnRxCheckFreeFormReasonTextChanging(string value);
    partial void OnRxCheckFreeFormReasonTextChanged();
    partial void OnWithoutRxCheckFlagChanging(bool value);
    partial void OnWithoutRxCheckFlagChanged();
    partial void OnUserAtDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnUserAtDispensingDeviceKeyChanged();
    partial void OnUserAtDispensingDeviceSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnUserAtDispensingDeviceSnapshotKeyChanged();
    partial void OnUserAtDispensingDeviceNameChanging(string value);
    partial void OnUserAtDispensingDeviceNameChanged();
    partial void OnFromExternalSystemFlagChanging(bool value);
    partial void OnFromExternalSystemFlagChanged();
    partial void OnExternalSequenceNumberChanging(System.Nullable<int> value);
    partial void OnExternalSequenceNumberChanged();
    partial void OnRecoveredFlagChanging(bool value);
    partial void OnRecoveredFlagChanged();
    partial void OnExplicitUserCancelFlagChanging(bool value);
    partial void OnExplicitUserCancelFlagChanged();
    partial void OnInventoryReferenceIDChanging(string value);
    partial void OnInventoryReferenceIDChanged();
    partial void OnExternalInventoryCountRequestKeyChanging(System.Nullable<System.Guid> value);
    partial void OnExternalInventoryCountRequestKeyChanged();
    partial void OnExternalRefillRequestKeyChanging(System.Nullable<System.Guid> value);
    partial void OnExternalRefillRequestKeyChanged();
    partial void OnItemTransactionReferenceIDChanging(string value);
    partial void OnItemTransactionReferenceIDChanged();
    partial void OnRelatedItemTransactionReferenceIDChanging(string value);
    partial void OnRelatedItemTransactionReferenceIDChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ItemTransactionEntity()
		{
			this._PharmacyOrderItemTransactionEntities = new EntitySet<PharmacyOrderItemTransactionEntity>(new Action<PharmacyOrderItemTransactionEntity>(this.attach_PharmacyOrderItemTransactionEntities), new Action<PharmacyOrderItemTransactionEntity>(this.detach_PharmacyOrderItemTransactionEntities));
			this._StorageItemTransactionEntities = new EntitySet<StorageItemTransactionEntity>(new Action<StorageItemTransactionEntity>(this.attach_StorageItemTransactionEntities), new Action<StorageItemTransactionEntity>(this.detach_StorageItemTransactionEntities));
			this._EncounterItemTransactionEntities = new EntitySet<EncounterItemTransactionEntity>(new Action<EncounterItemTransactionEntity>(this.attach_EncounterItemTransactionEntities), new Action<EncounterItemTransactionEntity>(this.detach_EncounterItemTransactionEntities));
			this._ItemTransactionClinicalDataNoticeEntities = new EntitySet<ItemTransactionClinicalDataNoticeEntity>(new Action<ItemTransactionClinicalDataNoticeEntity>(this.attach_ItemTransactionClinicalDataNoticeEntities), new Action<ItemTransactionClinicalDataNoticeEntity>(this.detach_ItemTransactionClinicalDataNoticeEntities));
			this._CountInventoryListEntryEntities = new EntitySet<CountInventoryListEntryEntity>(new Action<CountInventoryListEntryEntity>(this.attach_CountInventoryListEntryEntities), new Action<CountInventoryListEntryEntity>(this.detach_CountInventoryListEntryEntities));
			this._DiscrepancyEntities = new EntitySet<DiscrepancyEntity>(new Action<DiscrepancyEntity>(this.attach_DiscrepancyEntities), new Action<DiscrepancyEntity>(this.detach_DiscrepancyEntities));
			this._DiscrepancyNoteEntities = new EntitySet<DiscrepancyNoteEntity>(new Action<DiscrepancyNoteEntity>(this.attach_DiscrepancyNoteEntities), new Action<DiscrepancyNoteEntity>(this.detach_DiscrepancyNoteEntities));
			this._ItemTransactionScanEntities = new EntitySet<ItemTransactionScanEntity>(new Action<ItemTransactionScanEntity>(this.attach_ItemTransactionScanEntities), new Action<ItemTransactionScanEntity>(this.detach_ItemTransactionScanEntities));
			this._ItemTransactionTypeEntity = default(EntityRef<ItemTransactionTypeEntity>);
			this._ItemTransactionCompositeRoleEntity = default(EntityRef<ItemTransactionCompositeRoleEntity>);
			this._TransactionSessionEntity = default(EntityRef<TransactionSessionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ItemTransactionKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemTransactionSnapshotKey
		{
			get
			{
				return this._ItemTransactionSnapshotKey;
			}
			set
			{
				if ((this._ItemTransactionSnapshotKey != value))
				{
					this.OnItemTransactionSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionSnapshotKey = value;
					this.SendPropertyChanged("ItemTransactionSnapshotKey");
					this.OnItemTransactionSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="BigInt NOT NULL")]
		public long SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this.OnSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._SequenceNumber = value;
					this.SendPropertyChanged("SequenceNumber");
					this.OnSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSessionTypeInternalCode", DbType="VarChar(10)")]
		public string TransactionSessionTypeInternalCode
		{
			get
			{
				return this._TransactionSessionTypeInternalCode;
			}
			set
			{
				if ((this._TransactionSessionTypeInternalCode != value))
				{
					this.OnTransactionSessionTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._TransactionSessionTypeInternalCode = value;
					this.SendPropertyChanged("TransactionSessionTypeInternalCode");
					this.OnTransactionSessionTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PharmacyOrderKey
		{
			get
			{
				return this._PharmacyOrderKey;
			}
			set
			{
				if ((this._PharmacyOrderKey != value))
				{
					this.OnPharmacyOrderKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderKey = value;
					this.SendPropertyChanged("PharmacyOrderKey");
					this.OnPharmacyOrderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderComponentKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PharmacyOrderComponentKey
		{
			get
			{
				return this._PharmacyOrderComponentKey;
			}
			set
			{
				if ((this._PharmacyOrderComponentKey != value))
				{
					this.OnPharmacyOrderComponentKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderComponentKey = value;
					this.SendPropertyChanged("PharmacyOrderComponentKey");
					this.OnPharmacyOrderComponentKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this.OnEncounterKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterKey = value;
					this.SendPropertyChanged("EncounterKey");
					this.OnEncounterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingDispenseTransactionQuantity", DbType="Decimal(28,18)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RemainingDispenseQuantity
		{
			get
			{
				return this._RemainingDispenseTransactionQuantity;
			}
			set
			{
				if ((this._RemainingDispenseTransactionQuantity != value))
				{
					this.OnRemainingDispenseQuantityChanging(value);
					this.SendPropertyChanging();
					this._RemainingDispenseTransactionQuantity = value;
					this.SendPropertyChanged("RemainingDispenseQuantity");
					this.OnRemainingDispenseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalUndocumentedDisposeQuantity", DbType="Decimal(28,18)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> OriginalUndocumentedDisposeQuantity
		{
			get
			{
				return this._OriginalUndocumentedDisposeQuantity;
			}
			set
			{
				if ((this._OriginalUndocumentedDisposeQuantity != value))
				{
					this.OnOriginalUndocumentedDisposeQuantityChanging(value);
					this.SendPropertyChanging();
					this._OriginalUndocumentedDisposeQuantity = value;
					this.SendPropertyChanged("OriginalUndocumentedDisposeQuantity");
					this.OnOriginalUndocumentedDisposeQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingUndocumentedDisposeQuantity", DbType="Decimal(28,18)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RemainingUndocumentedDisposeQuantity
		{
			get
			{
				return this._RemainingUndocumentedDisposeQuantity;
			}
			set
			{
				if ((this._RemainingUndocumentedDisposeQuantity != value))
				{
					this.OnRemainingUndocumentedDisposeQuantityChanging(value);
					this.SendPropertyChanging();
					this._RemainingUndocumentedDisposeQuantity = value;
					this.SendPropertyChanged("RemainingUndocumentedDisposeQuantity");
					this.OnRemainingUndocumentedDisposeQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolvedUndocumentedDisposeFlag", DbType="Bit NOT NULL")]
		public bool ResolvedUndocumentedDisposeFlag
		{
			get
			{
				return this._ResolvedUndocumentedDisposeFlag;
			}
			set
			{
				if ((this._ResolvedUndocumentedDisposeFlag != value))
				{
					this.OnResolvedUndocumentedDisposeFlagChanging(value);
					this.SendPropertyChanging();
					this._ResolvedUndocumentedDisposeFlag = value;
					this.SendPropertyChanged("ResolvedUndocumentedDisposeFlag");
					this.OnResolvedUndocumentedDisposeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderTaskUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PharmacyOrderTaskUTCDateTime
		{
			get
			{
				return this._PharmacyOrderTaskUTCDateTime;
			}
			set
			{
				if ((this._PharmacyOrderTaskUTCDateTime != value))
				{
					this.OnPharmacyOrderTaskUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderTaskUTCDateTime = value;
					this.SendPropertyChanged("PharmacyOrderTaskUTCDateTime");
					this.OnPharmacyOrderTaskUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderTaskLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PharmacyOrderTaskLocalDateTime
		{
			get
			{
				return this._PharmacyOrderTaskLocalDateTime;
			}
			set
			{
				if ((this._PharmacyOrderTaskLocalDateTime != value))
				{
					this.OnPharmacyOrderTaskLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderTaskLocalDateTime = value;
					this.SendPropertyChanged("PharmacyOrderTaskLocalDateTime");
					this.OnPharmacyOrderTaskLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSessionKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid TransactionSessionKey
		{
			get
			{
				return this._TransactionSessionKey;
			}
			set
			{
				if ((this._TransactionSessionKey != value))
				{
					if (this._TransactionSessionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionSessionKeyChanging(value);
					this.SendPropertyChanging();
					this._TransactionSessionKey = value;
					this.SendPropertyChanged("TransactionSessionKey");
					this.OnTransactionSessionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedItemTransactionKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RelatedItemTransactionKey
		{
			get
			{
				return this._RelatedItemTransactionKey;
			}
			set
			{
				if ((this._RelatedItemTransactionKey != value))
				{
					this.OnRelatedItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._RelatedItemTransactionKey = value;
					this.SendPropertyChanged("RelatedItemTransactionKey");
					this.OnRelatedItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompositeItemTransactionKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CompositeItemTransactionKey
		{
			get
			{
				return this._CompositeItemTransactionKey;
			}
			set
			{
				if ((this._CompositeItemTransactionKey != value))
				{
					this.OnCompositeItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._CompositeItemTransactionKey = value;
					this.SendPropertyChanged("CompositeItemTransactionKey");
					this.OnCompositeItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ItemTransactionTypeInternalCode
		{
			get
			{
				return this._ItemTransactionTypeInternalCode;
			}
			set
			{
				if ((this._ItemTransactionTypeInternalCode != value))
				{
					if (this._ItemTransactionTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTransactionTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionTypeInternalCode = value;
					this.SendPropertyChanged("ItemTransactionTypeInternalCode");
					this.OnItemTransactionTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionCompositeRoleInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ItemTransactionCompositeRoleInternalCode
		{
			get
			{
				return this._ItemTransactionCompositeRoleInternalCode;
			}
			set
			{
				if ((this._ItemTransactionCompositeRoleInternalCode != value))
				{
					if (this._ItemTransactionCompositeRoleEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTransactionCompositeRoleInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionCompositeRoleInternalCode = value;
					this.SendPropertyChanged("ItemTransactionCompositeRoleInternalCode");
					this.OnItemTransactionCompositeRoleInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CancelFlag
		{
			get
			{
				return this._CancelFlag;
			}
			set
			{
				if ((this._CancelFlag != value))
				{
					this.OnCancelFlagChanging(value);
					this.SendPropertyChanging();
					this._CancelFlag = value;
					this.SendPropertyChanged("CancelFlag");
					this.OnCancelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndocumentedDisposeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool UndocumentedDisposeFlag
		{
			get
			{
				return this._UndocumentedDisposeFlag;
			}
			set
			{
				if ((this._UndocumentedDisposeFlag != value))
				{
					this.OnUndocumentedDisposeFlagChanging(value);
					this.SendPropertyChanging();
					this._UndocumentedDisposeFlag = value;
					this.SendPropertyChanged("UndocumentedDisposeFlag");
					this.OnUndocumentedDisposeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderUsedFlag", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> PharmacyOrderUsedFlag
		{
			get
			{
				return this._PharmacyOrderUsedFlag;
			}
			set
			{
				if ((this._PharmacyOrderUsedFlag != value))
				{
					this.OnPharmacyOrderUsedFlagChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderUsedFlag = value;
					this.SendPropertyChanged("PharmacyOrderUsedFlag");
					this.OnPharmacyOrderUsedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TransactionUTCDateTime
		{
			get
			{
				return this._TransactionUTCDateTime;
			}
			set
			{
				if ((this._TransactionUTCDateTime != value))
				{
					this.OnTransactionUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TransactionUTCDateTime = value;
					this.SendPropertyChanged("TransactionUTCDateTime");
					this.OnTransactionUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TransactionLocalDateTime
		{
			get
			{
				return this._TransactionLocalDateTime;
			}
			set
			{
				if ((this._TransactionLocalDateTime != value))
				{
					this.OnTransactionLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TransactionLocalDateTime = value;
					this.SendPropertyChanged("TransactionLocalDateTime");
					this.OnTransactionLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemIssueTransactionQuantity", DbType="Decimal(28,18) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ItemIssueTransactionQuantity
		{
			get
			{
				return this._ItemIssueTransactionQuantity;
			}
			set
			{
				if ((this._ItemIssueTransactionQuantity != value))
				{
					this.OnItemIssueTransactionQuantityChanging(value);
					this.SendPropertyChanging();
					this._ItemIssueTransactionQuantity = value;
					this.SendPropertyChanged("ItemIssueTransactionQuantity");
					this.OnItemIssueTransactionQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemIssueUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ItemIssueUOMKey
		{
			get
			{
				return this._ItemIssueUOMKey;
			}
			set
			{
				if ((this._ItemIssueUOMKey != value))
				{
					this.OnItemIssueUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemIssueUOMKey = value;
					this.SendPropertyChanged("ItemIssueUOMKey");
					this.OnItemIssueUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemIssueUOMDisplayCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ItemIssueUOMDisplayCode
		{
			get
			{
				return this._ItemIssueUOMDisplayCode;
			}
			set
			{
				if ((this._ItemIssueUOMDisplayCode != value))
				{
					this.OnItemIssueUOMDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemIssueUOMDisplayCode = value;
					this.SendPropertyChanged("ItemIssueUOMDisplayCode");
					this.OnItemIssueUOMDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredQuantity", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EnteredQuantity
		{
			get
			{
				return this._EnteredQuantity;
			}
			set
			{
				if ((this._EnteredQuantity != value))
				{
					this.OnEnteredQuantityChanging(value);
					this.SendPropertyChanging();
					this._EnteredQuantity = value;
					this.SendPropertyChanged("EnteredQuantity");
					this.OnEnteredQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EnteredUOMKey
		{
			get
			{
				return this._EnteredUOMKey;
			}
			set
			{
				if ((this._EnteredUOMKey != value))
				{
					this.OnEnteredUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._EnteredUOMKey = value;
					this.SendPropertyChanged("EnteredUOMKey");
					this.OnEnteredUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMDisplayCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EnteredUOMDisplayCode
		{
			get
			{
				return this._EnteredUOMDisplayCode;
			}
			set
			{
				if ((this._EnteredUOMDisplayCode != value))
				{
					this.OnEnteredUOMDisplayCodeChanging(value);
					this.SendPropertyChanging();
					this._EnteredUOMDisplayCode = value;
					this.SendPropertyChanged("EnteredUOMDisplayCode");
					this.OnEnteredUOMDisplayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMPerEachQuantity", DbType="Decimal(28,14) ")]
		public System.Nullable<decimal> EnteredUOMPerEachQuantity
		{
			get
			{
				return this._EnteredUOMPerEachQuantity;
			}
			set
			{
				if ((this._EnteredUOMPerEachQuantity != value))
				{
					this.OnEnteredUOMPerEachQuantityChanging(value);
					this.SendPropertyChanging();
					this._EnteredUOMPerEachQuantity = value;
					this.SendPropertyChanged("EnteredUOMPerEachQuantity");
					this.OnEnteredUOMPerEachQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthTransactionQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StrengthTransactionQuantity
		{
			get
			{
				return this._StrengthTransactionQuantity;
			}
			set
			{
				if ((this._StrengthTransactionQuantity != value))
				{
					this.OnStrengthTransactionQuantityChanging(value);
					this.SendPropertyChanging();
					this._StrengthTransactionQuantity = value;
					this.SendPropertyChanged("StrengthTransactionQuantity");
					this.OnStrengthTransactionQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StrengthUOMKey
		{
			get
			{
				return this._StrengthUOMKey;
			}
			set
			{
				if ((this._StrengthUOMKey != value))
				{
					this.OnStrengthUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._StrengthUOMKey = value;
					this.SendPropertyChanged("StrengthUOMKey");
					this.OnStrengthUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeTransactionQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> VolumeTransactionQuantity
		{
			get
			{
				return this._VolumeTransactionQuantity;
			}
			set
			{
				if ((this._VolumeTransactionQuantity != value))
				{
					this.OnVolumeTransactionQuantityChanging(value);
					this.SendPropertyChanging();
					this._VolumeTransactionQuantity = value;
					this.SendPropertyChanged("VolumeTransactionQuantity");
					this.OnVolumeTransactionQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VolumeUOMKey
		{
			get
			{
				return this._VolumeUOMKey;
			}
			set
			{
				if ((this._VolumeUOMKey != value))
				{
					this.OnVolumeUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._VolumeUOMKey = value;
					this.SendPropertyChanged("VolumeUOMKey");
					this.OnVolumeUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemSnapshotKey
		{
			get
			{
				return this._ItemSnapshotKey;
			}
			set
			{
				if ((this._ItemSnapshotKey != value))
				{
					this.OnItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemSnapshotKey = value;
					this.SendPropertyChanged("ItemSnapshotKey");
					this.OnItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitySnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilitySnapshotKey
		{
			get
			{
				return this._FacilitySnapshotKey;
			}
			set
			{
				if ((this._FacilitySnapshotKey != value))
				{
					this.OnFacilitySnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilitySnapshotKey = value;
					this.SendPropertyChanged("FacilitySnapshotKey");
					this.OnFacilitySnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this.OnFacilityItemKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityItemKey = value;
					this.SendPropertyChanged("FacilityItemKey");
					this.OnFacilityItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityItemSnapshotKey
		{
			get
			{
				return this._FacilityItemSnapshotKey;
			}
			set
			{
				if ((this._FacilityItemSnapshotKey != value))
				{
					this.OnFacilityItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityItemSnapshotKey = value;
					this.SendPropertyChanged("FacilityItemSnapshotKey");
					this.OnFacilityItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> MedItemKey
		{
			get
			{
				return this._MedItemKey;
			}
			set
			{
				if ((this._MedItemKey != value))
				{
					this.OnMedItemKeyChanging(value);
					this.SendPropertyChanging();
					this._MedItemKey = value;
					this.SendPropertyChanged("MedItemKey");
					this.OnMedItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> MedItemSnapshotKey
		{
			get
			{
				return this._MedItemSnapshotKey;
			}
			set
			{
				if ((this._MedItemSnapshotKey != value))
				{
					this.OnMedItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._MedItemSnapshotKey = value;
					this.SendPropertyChanged("MedItemSnapshotKey");
					this.OnMedItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemEquivalencySetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ItemEquivalencySetKey
		{
			get
			{
				return this._ItemEquivalencySetKey;
			}
			set
			{
				if ((this._ItemEquivalencySetKey != value))
				{
					this.OnItemEquivalencySetKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemEquivalencySetKey = value;
					this.SendPropertyChanged("ItemEquivalencySetKey");
					this.OnItemEquivalencySetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKitKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> FacilityKitKey
		{
			get
			{
				return this._FacilityKitKey;
			}
			set
			{
				if ((this._FacilityKitKey != value))
				{
					this.OnFacilityKitKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKitKey = value;
					this.SendPropertyChanged("FacilityKitKey");
					this.OnFacilityKitKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKitSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> FacilityKitSnapshotKey
		{
			get
			{
				return this._FacilityKitSnapshotKey;
			}
			set
			{
				if ((this._FacilityKitSnapshotKey != value))
				{
					this.OnFacilityKitSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKitSnapshotKey = value;
					this.SendPropertyChanged("FacilityKitSnapshotKey");
					this.OnFacilityKitSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKitStatFlag", DbType="Bit NOT NULL")]
		public bool FacilityKitStatFlag
		{
			get
			{
				return this._FacilityKitStatFlag;
			}
			set
			{
				if ((this._FacilityKitStatFlag != value))
				{
					this.OnFacilityKitStatFlagChanging(value);
					this.SendPropertyChanging();
					this._FacilityKitStatFlag = value;
					this.SendPropertyChanged("FacilityKitStatFlag");
					this.OnFacilityKitStatFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UserAccountSnapshotKey
		{
			get
			{
				return this._UserAccountSnapshotKey;
			}
			set
			{
				if ((this._UserAccountSnapshotKey != value))
				{
					this.OnUserAccountSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountSnapshotKey = value;
					this.SendPropertyChanged("UserAccountSnapshotKey");
					this.OnUserAccountSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessAccountKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> WitnessAccountKey
		{
			get
			{
				return this._WitnessAccountKey;
			}
			set
			{
				if ((this._WitnessAccountKey != value))
				{
					this.OnWitnessAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._WitnessAccountKey = value;
					this.SendPropertyChanged("WitnessAccountKey");
					this.OnWitnessAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessAccountSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> WitnessAccountSnapshotKey
		{
			get
			{
				return this._WitnessAccountSnapshotKey;
			}
			set
			{
				if ((this._WitnessAccountSnapshotKey != value))
				{
					this.OnWitnessAccountSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._WitnessAccountSnapshotKey = value;
					this.SendPropertyChanged("WitnessAccountSnapshotKey");
					this.OnWitnessAccountSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyItemsUserAccountKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MyItemsUserAccountKey
		{
			get
			{
				return this._MyItemsUserAccountKey;
			}
			set
			{
				if ((this._MyItemsUserAccountKey != value))
				{
					this.OnMyItemsUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._MyItemsUserAccountKey = value;
					this.SendPropertyChanged("MyItemsUserAccountKey");
					this.OnMyItemsUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyItemsUserAccountSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MyItemsUserAccountSnapshotKey
		{
			get
			{
				return this._MyItemsUserAccountSnapshotKey;
			}
			set
			{
				if ((this._MyItemsUserAccountSnapshotKey != value))
				{
					this.OnMyItemsUserAccountSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._MyItemsUserAccountSnapshotKey = value;
					this.SendPropertyChanged("MyItemsUserAccountSnapshotKey");
					this.OnMyItemsUserAccountSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEncounterQueueEntryKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UserEncounterQueueEntryKey
		{
			get
			{
				return this._UserEncounterQueueEntryKey;
			}
			set
			{
				if ((this._UserEncounterQueueEntryKey != value))
				{
					this.OnUserEncounterQueueEntryKeyChanging(value);
					this.SendPropertyChanging();
					this._UserEncounterQueueEntryKey = value;
					this.SendPropertyChanged("UserEncounterQueueEntryKey");
					this.OnUserEncounterQueueEntryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ComboItemKey
		{
			get
			{
				return this._ComboItemKey;
			}
			set
			{
				if ((this._ComboItemKey != value))
				{
					this.OnComboItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboItemKey = value;
					this.SendPropertyChanged("ComboItemKey");
					this.OnComboItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboItemSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ComboItemSnapshotKey
		{
			get
			{
				return this._ComboItemSnapshotKey;
			}
			set
			{
				if ((this._ComboItemSnapshotKey != value))
				{
					this.OnComboItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboItemSnapshotKey = value;
					this.SendPropertyChanged("ComboItemSnapshotKey");
					this.OnComboItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboFacilityItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ComboFacilityItemKey
		{
			get
			{
				return this._ComboFacilityItemKey;
			}
			set
			{
				if ((this._ComboFacilityItemKey != value))
				{
					this.OnComboFacilityItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboFacilityItemKey = value;
					this.SendPropertyChanged("ComboFacilityItemKey");
					this.OnComboFacilityItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboFacilityItemSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ComboFacilityItemSnapshotKey
		{
			get
			{
				return this._ComboFacilityItemSnapshotKey;
			}
			set
			{
				if ((this._ComboFacilityItemSnapshotKey != value))
				{
					this.OnComboFacilityItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboFacilityItemSnapshotKey = value;
					this.SendPropertyChanged("ComboFacilityItemSnapshotKey");
					this.OnComboFacilityItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboMedItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ComboMedItemKey
		{
			get
			{
				return this._ComboMedItemKey;
			}
			set
			{
				if ((this._ComboMedItemKey != value))
				{
					this.OnComboMedItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboMedItemKey = value;
					this.SendPropertyChanged("ComboMedItemKey");
					this.OnComboMedItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboMedItemSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ComboMedItemSnapshotKey
		{
			get
			{
				return this._ComboMedItemSnapshotKey;
			}
			set
			{
				if ((this._ComboMedItemSnapshotKey != value))
				{
					this.OnComboMedItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboMedItemSnapshotKey = value;
					this.SendPropertyChanged("ComboMedItemSnapshotKey");
					this.OnComboMedItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboComponentKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ComboComponentKey
		{
			get
			{
				return this._ComboComponentKey;
			}
			set
			{
				if ((this._ComboComponentKey != value))
				{
					this.OnComboComponentKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboComponentKey = value;
					this.SendPropertyChanged("ComboComponentKey");
					this.OnComboComponentKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboComponentSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ComboComponentSnapshotKey
		{
			get
			{
				return this._ComboComponentSnapshotKey;
			}
			set
			{
				if ((this._ComboComponentSnapshotKey != value))
				{
					this.OnComboComponentSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ComboComponentSnapshotKey = value;
					this.SendPropertyChanged("ComboComponentSnapshotKey");
					this.OnComboComponentSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditPatientFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CreditPatientFlag
		{
			get
			{
				return this._CreditPatientFlag;
			}
			set
			{
				if ((this._CreditPatientFlag != value))
				{
					this.OnCreditPatientFlagChanging(value);
					this.SendPropertyChanging();
					this._CreditPatientFlag = value;
					this.SendPropertyChanged("CreditPatientFlag");
					this.OnCreditPatientFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscrepancyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DiscrepancyFlag
		{
			get
			{
				return this._DiscrepancyFlag;
			}
			set
			{
				if ((this._DiscrepancyFlag != value))
				{
					this.OnDiscrepancyFlagChanging(value);
					this.SendPropertyChanging();
					this._DiscrepancyFlag = value;
					this.SendPropertyChanged("DiscrepancyFlag");
					this.OnDiscrepancyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideScanFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OverrideScanFlag
		{
			get
			{
				return this._OverrideScanFlag;
			}
			set
			{
				if ((this._OverrideScanFlag != value))
				{
					this.OnOverrideScanFlagChanging(value);
					this.SendPropertyChanging();
					this._OverrideScanFlag = value;
					this.SendPropertyChanged("OverrideScanFlag");
					this.OnOverrideScanFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOutFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TimeOutFlag
		{
			get
			{
				return this._TimeOutFlag;
			}
			set
			{
				if ((this._TimeOutFlag != value))
				{
					this.OnTimeOutFlagChanging(value);
					this.SendPropertyChanging();
					this._TimeOutFlag = value;
					this.SendPropertyChanged("TimeOutFlag");
					this.OnTimeOutFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CriticalOverrideModeFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CriticalOverrideModeFlag
		{
			get
			{
				return this._CriticalOverrideModeFlag;
			}
			set
			{
				if ((this._CriticalOverrideModeFlag != value))
				{
					this.OnCriticalOverrideModeFlagChanging(value);
					this.SendPropertyChanging();
					this._CriticalOverrideModeFlag = value;
					this.SendPropertyChanged("CriticalOverrideModeFlag");
					this.OnCriticalOverrideModeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispenseFractionFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DispenseFractionFlag
		{
			get
			{
				return this._DispenseFractionFlag;
			}
			set
			{
				if ((this._DispenseFractionFlag != value))
				{
					this.OnDispenseFractionFlagChanging(value);
					this.SendPropertyChanging();
					this._DispenseFractionFlag = value;
					this.SendPropertyChanged("DispenseFractionFlag");
					this.OnDispenseFractionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FractionalUOMTypeInternalCode", DbType="VarChar(10)")]
		public string FractionalUOMTypeInternalCode
		{
			get
			{
				return this._FractionalUOMTypeInternalCode;
			}
			set
			{
				if ((this._FractionalUOMTypeInternalCode != value))
				{
					this.OnFractionalUOMTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._FractionalUOMTypeInternalCode = value;
					this.SendPropertyChanged("FractionalUOMTypeInternalCode");
					this.OnFractionalUOMTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxCheckReasonKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RxCheckReasonKey
		{
			get
			{
				return this._RxCheckReasonKey;
			}
			set
			{
				if ((this._RxCheckReasonKey != value))
				{
					this.OnRxCheckReasonKeyChanging(value);
					this.SendPropertyChanging();
					this._RxCheckReasonKey = value;
					this.SendPropertyChanged("RxCheckReasonKey");
					this.OnRxCheckReasonKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxCheckReasonSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RxCheckReasonSnapshotKey
		{
			get
			{
				return this._RxCheckReasonSnapshotKey;
			}
			set
			{
				if ((this._RxCheckReasonSnapshotKey != value))
				{
					this.OnRxCheckReasonSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._RxCheckReasonSnapshotKey = value;
					this.SendPropertyChanged("RxCheckReasonSnapshotKey");
					this.OnRxCheckReasonSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxCheckFreeFormReasonText", DbType="NVarChar(250)")]
		public string RxCheckFreeFormReasonText
		{
			get
			{
				return this._RxCheckFreeFormReasonText;
			}
			set
			{
				if ((this._RxCheckFreeFormReasonText != value))
				{
					this.OnRxCheckFreeFormReasonTextChanging(value);
					this.SendPropertyChanging();
					this._RxCheckFreeFormReasonText = value;
					this.SendPropertyChanged("RxCheckFreeFormReasonText");
					this.OnRxCheckFreeFormReasonTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithoutRxCheckFlag", DbType="Bit NOT NULL")]
		public bool WithoutRxCheckFlag
		{
			get
			{
				return this._WithoutRxCheckFlag;
			}
			set
			{
				if ((this._WithoutRxCheckFlag != value))
				{
					this.OnWithoutRxCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._WithoutRxCheckFlag = value;
					this.SendPropertyChanged("WithoutRxCheckFlag");
					this.OnWithoutRxCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAtDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UserAtDispensingDeviceKey
		{
			get
			{
				return this._UserAtDispensingDeviceKey;
			}
			set
			{
				if ((this._UserAtDispensingDeviceKey != value))
				{
					this.OnUserAtDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAtDispensingDeviceKey = value;
					this.SendPropertyChanged("UserAtDispensingDeviceKey");
					this.OnUserAtDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAtDispensingDeviceSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UserAtDispensingDeviceSnapshotKey
		{
			get
			{
				return this._UserAtDispensingDeviceSnapshotKey;
			}
			set
			{
				if ((this._UserAtDispensingDeviceSnapshotKey != value))
				{
					this.OnUserAtDispensingDeviceSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAtDispensingDeviceSnapshotKey = value;
					this.SendPropertyChanged("UserAtDispensingDeviceSnapshotKey");
					this.OnUserAtDispensingDeviceSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAtDispensingDeviceName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string UserAtDispensingDeviceName
		{
			get
			{
				return this._UserAtDispensingDeviceName;
			}
			set
			{
				if ((this._UserAtDispensingDeviceName != value))
				{
					this.OnUserAtDispensingDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._UserAtDispensingDeviceName = value;
					this.SendPropertyChanged("UserAtDispensingDeviceName");
					this.OnUserAtDispensingDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromExternalSystemFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FromExternalSystemFlag
		{
			get
			{
				return this._FromExternalSystemFlag;
			}
			set
			{
				if ((this._FromExternalSystemFlag != value))
				{
					this.OnFromExternalSystemFlagChanging(value);
					this.SendPropertyChanging();
					this._FromExternalSystemFlag = value;
					this.SendPropertyChanged("FromExternalSystemFlag");
					this.OnFromExternalSystemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSequenceNumber", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ExternalSequenceNumber
		{
			get
			{
				return this._ExternalSequenceNumber;
			}
			set
			{
				if ((this._ExternalSequenceNumber != value))
				{
					this.OnExternalSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._ExternalSequenceNumber = value;
					this.SendPropertyChanged("ExternalSequenceNumber");
					this.OnExternalSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecoveredFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RecoveredFlag
		{
			get
			{
				return this._RecoveredFlag;
			}
			set
			{
				if ((this._RecoveredFlag != value))
				{
					this.OnRecoveredFlagChanging(value);
					this.SendPropertyChanging();
					this._RecoveredFlag = value;
					this.SendPropertyChanged("RecoveredFlag");
					this.OnRecoveredFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExplicitUserCancelFlag", DbType="Bit NOT NULL")]
		public bool ExplicitUserCancelFlag
		{
			get
			{
				return this._ExplicitUserCancelFlag;
			}
			set
			{
				if ((this._ExplicitUserCancelFlag != value))
				{
					this.OnExplicitUserCancelFlagChanging(value);
					this.SendPropertyChanging();
					this._ExplicitUserCancelFlag = value;
					this.SendPropertyChanged("ExplicitUserCancelFlag");
					this.OnExplicitUserCancelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryReferenceID", DbType="NVarChar(30)")]
		public string InventoryReferenceID
		{
			get
			{
				return this._InventoryReferenceID;
			}
			set
			{
				if ((this._InventoryReferenceID != value))
				{
					this.OnInventoryReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryReferenceID = value;
					this.SendPropertyChanged("InventoryReferenceID");
					this.OnInventoryReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalInventoryCountRequestKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ExternalInventoryCountRequestKey
		{
			get
			{
				return this._ExternalInventoryCountRequestKey;
			}
			set
			{
				if ((this._ExternalInventoryCountRequestKey != value))
				{
					this.OnExternalInventoryCountRequestKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalInventoryCountRequestKey = value;
					this.SendPropertyChanged("ExternalInventoryCountRequestKey");
					this.OnExternalInventoryCountRequestKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalRefillRequestKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ExternalRefillRequestKey
		{
			get
			{
				return this._ExternalRefillRequestKey;
			}
			set
			{
				if ((this._ExternalRefillRequestKey != value))
				{
					this.OnExternalRefillRequestKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalRefillRequestKey = value;
					this.SendPropertyChanged("ExternalRefillRequestKey");
					this.OnExternalRefillRequestKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionReferenceID", DbType="NVarChar(30)")]
		public string ItemTransactionReferenceID
		{
			get
			{
				return this._ItemTransactionReferenceID;
			}
			set
			{
				if ((this._ItemTransactionReferenceID != value))
				{
					this.OnItemTransactionReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionReferenceID = value;
					this.SendPropertyChanged("ItemTransactionReferenceID");
					this.OnItemTransactionReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedItemTransactionReferenceID", DbType="NVarChar(30)")]
		public string RelatedItemTransactionReferenceID
		{
			get
			{
				return this._RelatedItemTransactionReferenceID;
			}
			set
			{
				if ((this._RelatedItemTransactionReferenceID != value))
				{
					this.OnRelatedItemTransactionReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedItemTransactionReferenceID = value;
					this.SendPropertyChanged("RelatedItemTransactionReferenceID");
					this.OnRelatedItemTransactionReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_PharmacyOrderItemTransactionEntity", Storage="_PharmacyOrderItemTransactionEntities", ThisKey="Key", OtherKey="ItemTransactionKey")]
		public EntitySet<PharmacyOrderItemTransactionEntity> PharmacyOrderItemTransactionEntities
		{
			get
			{
				return this._PharmacyOrderItemTransactionEntities;
			}
			set
			{
				this._PharmacyOrderItemTransactionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_StorageItemTransactionEntity", Storage="_StorageItemTransactionEntities", ThisKey="Key", OtherKey="ItemTransactionKey")]
		public EntitySet<StorageItemTransactionEntity> StorageItemTransactionEntities
		{
			get
			{
				return this._StorageItemTransactionEntities;
			}
			set
			{
				this._StorageItemTransactionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_EncounterItemTransactionEntity", Storage="_EncounterItemTransactionEntities", ThisKey="Key", OtherKey="ItemTransactionKey")]
		public EntitySet<EncounterItemTransactionEntity> EncounterItemTransactionEntities
		{
			get
			{
				return this._EncounterItemTransactionEntities;
			}
			set
			{
				this._EncounterItemTransactionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_ItemTransactionClinicalDataNoticeEntity", Storage="_ItemTransactionClinicalDataNoticeEntities", ThisKey="Key", OtherKey="ItemTransactionKey")]
		public EntitySet<ItemTransactionClinicalDataNoticeEntity> ItemTransactionClinicalDataNoticeEntities
		{
			get
			{
				return this._ItemTransactionClinicalDataNoticeEntities;
			}
			set
			{
				this._ItemTransactionClinicalDataNoticeEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_CountInventoryListEntryEntity", Storage="_CountInventoryListEntryEntities", ThisKey="Key", OtherKey="ItemTransactionKey")]
		public EntitySet<CountInventoryListEntryEntity> CountInventoryListEntryEntities
		{
			get
			{
				return this._CountInventoryListEntryEntities;
			}
			set
			{
				this._CountInventoryListEntryEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_DiscrepancyEntity", Storage="_DiscrepancyEntities", ThisKey="Key", OtherKey="ItemTransactionKey")]
		public EntitySet<DiscrepancyEntity> DiscrepancyEntities
		{
			get
			{
				return this._DiscrepancyEntities;
			}
			set
			{
				this._DiscrepancyEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_DiscrepancyNoteEntity", Storage="_DiscrepancyNoteEntities", ThisKey="Key", OtherKey="ItemTransactionKey")]
		public EntitySet<DiscrepancyNoteEntity> DiscrepancyNoteEntities
		{
			get
			{
				return this._DiscrepancyNoteEntities;
			}
			set
			{
				this._DiscrepancyNoteEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_ItemTransactionScanEntity", Storage="_ItemTransactionScanEntities", ThisKey="Key", OtherKey="ItemTransactionKey")]
		public EntitySet<ItemTransactionScanEntity> ItemTransactionScanEntities
		{
			get
			{
				return this._ItemTransactionScanEntities;
			}
			set
			{
				this._ItemTransactionScanEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionTypeEntity_ItemTransactionEntity", Storage="_ItemTransactionTypeEntity", ThisKey="ItemTransactionTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public ItemTransactionTypeEntity ItemTransactionTypeEntity
		{
			get
			{
				return this._ItemTransactionTypeEntity.Entity;
			}
			set
			{
				ItemTransactionTypeEntity previousValue = this._ItemTransactionTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTransactionTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTransactionTypeEntity.Entity = null;
						previousValue.ItemTransactionEntities.Remove(this);
					}
					this._ItemTransactionTypeEntity.Entity = value;
					if ((value != null))
					{
						value.ItemTransactionEntities.Add(this);
						this._ItemTransactionTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._ItemTransactionTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("ItemTransactionTypeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionCompositeRoleEntity_ItemTransactionEntity", Storage="_ItemTransactionCompositeRoleEntity", ThisKey="ItemTransactionCompositeRoleInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public ItemTransactionCompositeRoleEntity ItemTransactionCompositeRoleEntity
		{
			get
			{
				return this._ItemTransactionCompositeRoleEntity.Entity;
			}
			set
			{
				ItemTransactionCompositeRoleEntity previousValue = this._ItemTransactionCompositeRoleEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTransactionCompositeRoleEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTransactionCompositeRoleEntity.Entity = null;
						previousValue.ItemTransactionEntities.Remove(this);
					}
					this._ItemTransactionCompositeRoleEntity.Entity = value;
					if ((value != null))
					{
						value.ItemTransactionEntities.Add(this);
						this._ItemTransactionCompositeRoleInternalCode = value.InternalCode;
					}
					else
					{
						this._ItemTransactionCompositeRoleInternalCode = default(string);
					}
					this.SendPropertyChanged("ItemTransactionCompositeRoleEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionSessionEntity_ItemTransactionEntity", Storage="_TransactionSessionEntity", ThisKey="TransactionSessionKey", OtherKey="Key", IsForeignKey=true)]
		public TransactionSessionEntity TransactionSessionEntity
		{
			get
			{
				return this._TransactionSessionEntity.Entity;
			}
			set
			{
				TransactionSessionEntity previousValue = this._TransactionSessionEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionSessionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionSessionEntity.Entity = null;
						previousValue.ItemTransactionEntities.Remove(this);
					}
					this._TransactionSessionEntity.Entity = value;
					if ((value != null))
					{
						value.ItemTransactionEntities.Add(this);
						this._TransactionSessionKey = value.Key;
					}
					else
					{
						this._TransactionSessionKey = default(System.Guid);
					}
					this.SendPropertyChanged("TransactionSessionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PharmacyOrderItemTransactionEntities(PharmacyOrderItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = this;
		}
		
		private void detach_PharmacyOrderItemTransactionEntities(PharmacyOrderItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = null;
		}
		
		private void attach_StorageItemTransactionEntities(StorageItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = this;
		}
		
		private void detach_StorageItemTransactionEntities(StorageItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = null;
		}
		
		private void attach_EncounterItemTransactionEntities(EncounterItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = this;
		}
		
		private void detach_EncounterItemTransactionEntities(EncounterItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = null;
		}
		
		private void attach_ItemTransactionClinicalDataNoticeEntities(ItemTransactionClinicalDataNoticeEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = this;
		}
		
		private void detach_ItemTransactionClinicalDataNoticeEntities(ItemTransactionClinicalDataNoticeEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = null;
		}
		
		private void attach_CountInventoryListEntryEntities(CountInventoryListEntryEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = this;
		}
		
		private void detach_CountInventoryListEntryEntities(CountInventoryListEntryEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = null;
		}
		
		private void attach_DiscrepancyEntities(DiscrepancyEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = this;
		}
		
		private void detach_DiscrepancyEntities(DiscrepancyEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = null;
		}
		
		private void attach_DiscrepancyNoteEntities(DiscrepancyNoteEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = this;
		}
		
		private void detach_DiscrepancyNoteEntities(DiscrepancyNoteEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = null;
		}
		
		private void attach_ItemTransactionScanEntities(ItemTransactionScanEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = this;
		}
		
		private void detach_ItemTransactionScanEntities(ItemTransactionScanEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.ClinicalDataNotice")]
	public partial class ClinicalDataNoticeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ClinicalDataSubjectSnapshotKey;
		
		private System.Guid _ClinicalDataSubjectKey;
		
		private System.DateTime _NoticeUTCDateTime;
		
		private System.DateTime _NoticeLocalDateTime;
		
		private System.Nullable<System.DateTime> _ResponseUTCDateTime;
		
		private System.Nullable<System.DateTime> _ResponseLocalDateTime;
		
		private string _ResponseFreeFormText;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<ClinicalDataNoticeResponseEntity> _ClinicalDataNoticeResponseEntities;
		
		private EntitySet<ItemTransactionClinicalDataNoticeEntity> _ItemTransactionClinicalDataNoticeEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnClinicalDataSubjectSnapshotKeyChanging(System.Guid value);
    partial void OnClinicalDataSubjectSnapshotKeyChanged();
    partial void OnClinicalDataSubjectKeyChanging(System.Guid value);
    partial void OnClinicalDataSubjectKeyChanged();
    partial void OnNoticeUTCDateTimeChanging(System.DateTime value);
    partial void OnNoticeUTCDateTimeChanged();
    partial void OnNoticeLocalDateTimeChanging(System.DateTime value);
    partial void OnNoticeLocalDateTimeChanged();
    partial void OnResponseUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnResponseUTCDateTimeChanged();
    partial void OnResponseLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnResponseLocalDateTimeChanged();
    partial void OnResponseFreeFormTextChanging(string value);
    partial void OnResponseFreeFormTextChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ClinicalDataNoticeEntity()
		{
			this._ClinicalDataNoticeResponseEntities = new EntitySet<ClinicalDataNoticeResponseEntity>(new Action<ClinicalDataNoticeResponseEntity>(this.attach_ClinicalDataNoticeResponseEntities), new Action<ClinicalDataNoticeResponseEntity>(this.detach_ClinicalDataNoticeResponseEntities));
			this._ItemTransactionClinicalDataNoticeEntities = new EntitySet<ItemTransactionClinicalDataNoticeEntity>(new Action<ItemTransactionClinicalDataNoticeEntity>(this.attach_ItemTransactionClinicalDataNoticeEntities), new Action<ItemTransactionClinicalDataNoticeEntity>(this.detach_ItemTransactionClinicalDataNoticeEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ClinicalDataNoticeKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataSubjectSnapshotKey
		{
			get
			{
				return this._ClinicalDataSubjectSnapshotKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectSnapshotKey != value))
				{
					this.OnClinicalDataSubjectSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataSubjectSnapshotKey = value;
					this.SendPropertyChanged("ClinicalDataSubjectSnapshotKey");
					this.OnClinicalDataSubjectSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataSubjectKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataSubjectKey
		{
			get
			{
				return this._ClinicalDataSubjectKey;
			}
			set
			{
				if ((this._ClinicalDataSubjectKey != value))
				{
					this.OnClinicalDataSubjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataSubjectKey = value;
					this.SendPropertyChanged("ClinicalDataSubjectKey");
					this.OnClinicalDataSubjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime NoticeUTCDateTime
		{
			get
			{
				return this._NoticeUTCDateTime;
			}
			set
			{
				if ((this._NoticeUTCDateTime != value))
				{
					this.OnNoticeUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._NoticeUTCDateTime = value;
					this.SendPropertyChanged("NoticeUTCDateTime");
					this.OnNoticeUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime NoticeLocalDateTime
		{
			get
			{
				return this._NoticeLocalDateTime;
			}
			set
			{
				if ((this._NoticeLocalDateTime != value))
				{
					this.OnNoticeLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._NoticeLocalDateTime = value;
					this.SendPropertyChanged("NoticeLocalDateTime");
					this.OnNoticeLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ResponseUTCDateTime
		{
			get
			{
				return this._ResponseUTCDateTime;
			}
			set
			{
				if ((this._ResponseUTCDateTime != value))
				{
					this.OnResponseUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ResponseUTCDateTime = value;
					this.SendPropertyChanged("ResponseUTCDateTime");
					this.OnResponseUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ResponseLocalDateTime
		{
			get
			{
				return this._ResponseLocalDateTime;
			}
			set
			{
				if ((this._ResponseLocalDateTime != value))
				{
					this.OnResponseLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ResponseLocalDateTime = value;
					this.SendPropertyChanged("ResponseLocalDateTime");
					this.OnResponseLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseFreeFormText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string ResponseFreeFormText
		{
			get
			{
				return this._ResponseFreeFormText;
			}
			set
			{
				if ((this._ResponseFreeFormText != value))
				{
					this.OnResponseFreeFormTextChanging(value);
					this.SendPropertyChanging();
					this._ResponseFreeFormText = value;
					this.SendPropertyChanged("ResponseFreeFormText");
					this.OnResponseFreeFormTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataNoticeEntity_ClinicalDataNoticeResponseEntity", Storage="_ClinicalDataNoticeResponseEntities", ThisKey="Key", OtherKey="ClinicalDataNoticeKey")]
		public EntitySet<ClinicalDataNoticeResponseEntity> ClinicalDataNoticeResponseEntities
		{
			get
			{
				return this._ClinicalDataNoticeResponseEntities;
			}
			set
			{
				this._ClinicalDataNoticeResponseEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataNoticeEntity_ItemTransactionClinicalDataNoticeEntity", Storage="_ItemTransactionClinicalDataNoticeEntities", ThisKey="Key", OtherKey="ClinicalDataNoticeKey")]
		public EntitySet<ItemTransactionClinicalDataNoticeEntity> ItemTransactionClinicalDataNoticeEntities
		{
			get
			{
				return this._ItemTransactionClinicalDataNoticeEntities;
			}
			set
			{
				this._ItemTransactionClinicalDataNoticeEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClinicalDataNoticeResponseEntities(ClinicalDataNoticeResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataNoticeEntity = this;
		}
		
		private void detach_ClinicalDataNoticeResponseEntities(ClinicalDataNoticeResponseEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataNoticeEntity = null;
		}
		
		private void attach_ItemTransactionClinicalDataNoticeEntities(ItemTransactionClinicalDataNoticeEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataNoticeEntity = this;
		}
		
		private void detach_ItemTransactionClinicalDataNoticeEntities(ItemTransactionClinicalDataNoticeEntity entity)
		{
			this.SendPropertyChanging();
			entity.ClinicalDataNoticeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.ClinicalDataNoticeResponse")]
	public partial class ClinicalDataNoticeResponseEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ClinicalDataNoticeKey;
		
		private System.Guid _ClinicalDataResponseKey;
		
		private System.Guid _ClinicalDataResponseSnapshotKey;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ClinicalDataNoticeEntity> _ClinicalDataNoticeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnClinicalDataNoticeKeyChanging(System.Guid value);
    partial void OnClinicalDataNoticeKeyChanged();
    partial void OnClinicalDataResponseKeyChanging(System.Guid value);
    partial void OnClinicalDataResponseKeyChanged();
    partial void OnClinicalDataResponseSnapshotKeyChanging(System.Guid value);
    partial void OnClinicalDataResponseSnapshotKeyChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ClinicalDataNoticeResponseEntity()
		{
			this._ClinicalDataNoticeEntity = default(EntityRef<ClinicalDataNoticeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ClinicalDataNoticeResponseKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataNoticeKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataNoticeKey
		{
			get
			{
				return this._ClinicalDataNoticeKey;
			}
			set
			{
				if ((this._ClinicalDataNoticeKey != value))
				{
					if (this._ClinicalDataNoticeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClinicalDataNoticeKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataNoticeKey = value;
					this.SendPropertyChanged("ClinicalDataNoticeKey");
					this.OnClinicalDataNoticeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataResponseKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataResponseKey
		{
			get
			{
				return this._ClinicalDataResponseKey;
			}
			set
			{
				if ((this._ClinicalDataResponseKey != value))
				{
					this.OnClinicalDataResponseKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataResponseKey = value;
					this.SendPropertyChanged("ClinicalDataResponseKey");
					this.OnClinicalDataResponseKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataResponseSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataResponseSnapshotKey
		{
			get
			{
				return this._ClinicalDataResponseSnapshotKey;
			}
			set
			{
				if ((this._ClinicalDataResponseSnapshotKey != value))
				{
					this.OnClinicalDataResponseSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataResponseSnapshotKey = value;
					this.SendPropertyChanged("ClinicalDataResponseSnapshotKey");
					this.OnClinicalDataResponseSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataNoticeEntity_ClinicalDataNoticeResponseEntity", Storage="_ClinicalDataNoticeEntity", ThisKey="ClinicalDataNoticeKey", OtherKey="Key", IsForeignKey=true)]
		public ClinicalDataNoticeEntity ClinicalDataNoticeEntity
		{
			get
			{
				return this._ClinicalDataNoticeEntity.Entity;
			}
			set
			{
				ClinicalDataNoticeEntity previousValue = this._ClinicalDataNoticeEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClinicalDataNoticeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClinicalDataNoticeEntity.Entity = null;
						previousValue.ClinicalDataNoticeResponseEntities.Remove(this);
					}
					this._ClinicalDataNoticeEntity.Entity = value;
					if ((value != null))
					{
						value.ClinicalDataNoticeResponseEntities.Add(this);
						this._ClinicalDataNoticeKey = value.Key;
					}
					else
					{
						this._ClinicalDataNoticeKey = default(System.Guid);
					}
					this.SendPropertyChanged("ClinicalDataNoticeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.ItemTransactionClinicalDataNotice")]
	public partial class ItemTransactionClinicalDataNoticeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemTransactionKey;
		
		private System.Guid _ClinicalDataNoticeKey;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<ClinicalDataNoticeEntity> _ClinicalDataNoticeEntity;
		
		private EntityRef<ItemTransactionEntity> _ItemTransactionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemTransactionKeyChanging(System.Guid value);
    partial void OnItemTransactionKeyChanged();
    partial void OnClinicalDataNoticeKeyChanging(System.Guid value);
    partial void OnClinicalDataNoticeKeyChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ItemTransactionClinicalDataNoticeEntity()
		{
			this._ClinicalDataNoticeEntity = default(EntityRef<ClinicalDataNoticeEntity>);
			this._ItemTransactionEntity = default(EntityRef<ItemTransactionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ItemTransactionClinicalDataNoticeKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					if (this._ItemTransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionKey = value;
					this.SendPropertyChanged("ItemTransactionKey");
					this.OnItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalDataNoticeKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ClinicalDataNoticeKey
		{
			get
			{
				return this._ClinicalDataNoticeKey;
			}
			set
			{
				if ((this._ClinicalDataNoticeKey != value))
				{
					if (this._ClinicalDataNoticeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClinicalDataNoticeKeyChanging(value);
					this.SendPropertyChanging();
					this._ClinicalDataNoticeKey = value;
					this.SendPropertyChanged("ClinicalDataNoticeKey");
					this.OnClinicalDataNoticeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClinicalDataNoticeEntity_ItemTransactionClinicalDataNoticeEntity", Storage="_ClinicalDataNoticeEntity", ThisKey="ClinicalDataNoticeKey", OtherKey="Key", IsForeignKey=true)]
		public ClinicalDataNoticeEntity ClinicalDataNoticeEntity
		{
			get
			{
				return this._ClinicalDataNoticeEntity.Entity;
			}
			set
			{
				ClinicalDataNoticeEntity previousValue = this._ClinicalDataNoticeEntity.Entity;
				if (((previousValue != value) 
							|| (this._ClinicalDataNoticeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClinicalDataNoticeEntity.Entity = null;
						previousValue.ItemTransactionClinicalDataNoticeEntities.Remove(this);
					}
					this._ClinicalDataNoticeEntity.Entity = value;
					if ((value != null))
					{
						value.ItemTransactionClinicalDataNoticeEntities.Add(this);
						this._ClinicalDataNoticeKey = value.Key;
					}
					else
					{
						this._ClinicalDataNoticeKey = default(System.Guid);
					}
					this.SendPropertyChanged("ClinicalDataNoticeEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_ItemTransactionClinicalDataNoticeEntity", Storage="_ItemTransactionEntity", ThisKey="ItemTransactionKey", OtherKey="Key", IsForeignKey=true)]
		public ItemTransactionEntity ItemTransactionEntity
		{
			get
			{
				return this._ItemTransactionEntity.Entity;
			}
			set
			{
				ItemTransactionEntity previousValue = this._ItemTransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTransactionEntity.Entity = null;
						previousValue.ItemTransactionClinicalDataNoticeEntities.Remove(this);
					}
					this._ItemTransactionEntity.Entity = value;
					if ((value != null))
					{
						value.ItemTransactionClinicalDataNoticeEntities.Add(this);
						this._ItemTransactionKey = value.Key;
					}
					else
					{
						this._ItemTransactionKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemTransactionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.vw_CountInventoryListCurrent")]
	public partial class CountInventoryListEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private long _SequenceNumber;
		
		private System.Guid _DispensingDeviceKey;
		
		private System.Guid _UserAccountKey;
		
		private System.DateTime _CreatedUTCDateTime;
		
		private System.DateTime _CreatedLocalDateTime;
		
		private System.Nullable<System.DateTime> _FinishUTCDateTime;
		
		private System.Nullable<System.DateTime> _FinishLocalDateTime;
		
		private bool _FinishOrCompleteFlag;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<CountInventoryListEntryEntity> _CountInventoryListEntryEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnSequenceNumberChanging(long value);
    partial void OnSequenceNumberChanged();
    partial void OnDispensingDeviceKeyChanging(System.Guid value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnUserAccountKeyChanging(System.Guid value);
    partial void OnUserAccountKeyChanged();
    partial void OnCreatedUTCDateTimeChanging(System.DateTime value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.DateTime value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnFinishUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishUTCDateTimeChanged();
    partial void OnFinishLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishLocalDateTimeChanged();
    partial void OnFinishOrCompleteFlagChanging(bool value);
    partial void OnFinishOrCompleteFlagChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public CountInventoryListEntity()
		{
			this._CountInventoryListEntryEntities = new EntitySet<CountInventoryListEntryEntity>(new Action<CountInventoryListEntryEntity>(this.attach_CountInventoryListEntryEntities), new Action<CountInventoryListEntryEntity>(this.detach_CountInventoryListEntryEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CountInventoryListKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this.OnSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._SequenceNumber = value;
					this.SendPropertyChanged("SequenceNumber");
					this.OnSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FinishUTCDateTime
		{
			get
			{
				return this._FinishUTCDateTime;
			}
			set
			{
				if ((this._FinishUTCDateTime != value))
				{
					this.OnFinishUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._FinishUTCDateTime = value;
					this.SendPropertyChanged("FinishUTCDateTime");
					this.OnFinishUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FinishLocalDateTime
		{
			get
			{
				return this._FinishLocalDateTime;
			}
			set
			{
				if ((this._FinishLocalDateTime != value))
				{
					this.OnFinishLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._FinishLocalDateTime = value;
					this.SendPropertyChanged("FinishLocalDateTime");
					this.OnFinishLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishOrCompleteFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FinishOrCompleteFlag
		{
			get
			{
				return this._FinishOrCompleteFlag;
			}
			set
			{
				if ((this._FinishOrCompleteFlag != value))
				{
					this.OnFinishOrCompleteFlagChanging(value);
					this.SendPropertyChanging();
					this._FinishOrCompleteFlag = value;
					this.SendPropertyChanged("FinishOrCompleteFlag");
					this.OnFinishOrCompleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountInventoryListEntity_CountInventoryListEntryEntity", Storage="_CountInventoryListEntryEntities", ThisKey="Key", OtherKey="CountInventoryListKey")]
		public EntitySet<CountInventoryListEntryEntity> CountInventoryListEntryEntities
		{
			get
			{
				return this._CountInventoryListEntryEntities;
			}
			set
			{
				this._CountInventoryListEntryEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CountInventoryListEntryEntities(CountInventoryListEntryEntity entity)
		{
			this.SendPropertyChanging();
			entity.CountInventoryListEntity = this;
		}
		
		private void detach_CountInventoryListEntryEntities(CountInventoryListEntryEntity entity)
		{
			this.SendPropertyChanging();
			entity.CountInventoryListEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.vw_CountInventoryListEntryCurrent")]
	public partial class CountInventoryListEntryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _CountInventoryListEntrySnapshotKey;
		
		private System.Guid _CountInventoryListKey;
		
		private System.Guid _StorageSpaceItemKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private bool _SuspendFlag;
		
		private System.Nullable<System.Guid> _ItemTransactionKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<CountInventoryListEntity> _CountInventoryListEntity;
		
		private EntityRef<ItemTransactionEntity> _ItemTransactionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnCountInventoryListEntrySnapshotKeyChanging(System.Guid value);
    partial void OnCountInventoryListEntrySnapshotKeyChanged();
    partial void OnCountInventoryListKeyChanging(System.Guid value);
    partial void OnCountInventoryListKeyChanged();
    partial void OnStorageSpaceItemKeyChanging(System.Guid value);
    partial void OnStorageSpaceItemKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnSuspendFlagChanging(bool value);
    partial void OnSuspendFlagChanged();
    partial void OnItemTransactionKeyChanging(System.Nullable<System.Guid> value);
    partial void OnItemTransactionKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public CountInventoryListEntryEntity()
		{
			this._CountInventoryListEntity = default(EntityRef<CountInventoryListEntity>);
			this._ItemTransactionEntity = default(EntityRef<ItemTransactionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CountInventoryListEntryKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountInventoryListEntrySnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid CountInventoryListEntrySnapshotKey
		{
			get
			{
				return this._CountInventoryListEntrySnapshotKey;
			}
			set
			{
				if ((this._CountInventoryListEntrySnapshotKey != value))
				{
					this.OnCountInventoryListEntrySnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._CountInventoryListEntrySnapshotKey = value;
					this.SendPropertyChanged("CountInventoryListEntrySnapshotKey");
					this.OnCountInventoryListEntrySnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountInventoryListKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid CountInventoryListKey
		{
			get
			{
				return this._CountInventoryListKey;
			}
			set
			{
				if ((this._CountInventoryListKey != value))
				{
					if (this._CountInventoryListEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountInventoryListKeyChanging(value);
					this.SendPropertyChanging();
					this._CountInventoryListKey = value;
					this.SendPropertyChanged("CountInventoryListKey");
					this.OnCountInventoryListKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageSpaceItemKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid StorageSpaceItemKey
		{
			get
			{
				return this._StorageSpaceItemKey;
			}
			set
			{
				if ((this._StorageSpaceItemKey != value))
				{
					this.OnStorageSpaceItemKeyChanging(value);
					this.SendPropertyChanging();
					this._StorageSpaceItemKey = value;
					this.SendPropertyChanged("StorageSpaceItemKey");
					this.OnStorageSpaceItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuspendFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SuspendFlag
		{
			get
			{
				return this._SuspendFlag;
			}
			set
			{
				if ((this._SuspendFlag != value))
				{
					this.OnSuspendFlagChanging(value);
					this.SendPropertyChanging();
					this._SuspendFlag = value;
					this.SendPropertyChanged("SuspendFlag");
					this.OnSuspendFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					if (this._ItemTransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionKey = value;
					this.SendPropertyChanged("ItemTransactionKey");
					this.OnItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountInventoryListEntity_CountInventoryListEntryEntity", Storage="_CountInventoryListEntity", ThisKey="CountInventoryListKey", OtherKey="Key", IsForeignKey=true)]
		public CountInventoryListEntity CountInventoryListEntity
		{
			get
			{
				return this._CountInventoryListEntity.Entity;
			}
			set
			{
				CountInventoryListEntity previousValue = this._CountInventoryListEntity.Entity;
				if (((previousValue != value) 
							|| (this._CountInventoryListEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountInventoryListEntity.Entity = null;
						previousValue.CountInventoryListEntryEntities.Remove(this);
					}
					this._CountInventoryListEntity.Entity = value;
					if ((value != null))
					{
						value.CountInventoryListEntryEntities.Add(this);
						this._CountInventoryListKey = value.Key;
					}
					else
					{
						this._CountInventoryListKey = default(System.Guid);
					}
					this.SendPropertyChanged("CountInventoryListEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_CountInventoryListEntryEntity", Storage="_ItemTransactionEntity", ThisKey="ItemTransactionKey", OtherKey="Key", IsForeignKey=true)]
		public ItemTransactionEntity ItemTransactionEntity
		{
			get
			{
				return this._ItemTransactionEntity.Entity;
			}
			set
			{
				ItemTransactionEntity previousValue = this._ItemTransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTransactionEntity.Entity = null;
						previousValue.CountInventoryListEntryEntities.Remove(this);
					}
					this._ItemTransactionEntity.Entity = value;
					if ((value != null))
					{
						value.CountInventoryListEntryEntities.Add(this);
						this._ItemTransactionKey = value.Key;
					}
					else
					{
						this._ItemTransactionKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ItemTransactionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.ItemTransactionCompositeRole")]
	public partial class ItemTransactionCompositeRoleEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<ItemTransactionEntity> _ItemTransactionEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public ItemTransactionCompositeRoleEntity()
		{
			this._ItemTransactionEntities = new EntitySet<ItemTransactionEntity>(new Action<ItemTransactionEntity>(this.attach_ItemTransactionEntities), new Action<ItemTransactionEntity>(this.detach_ItemTransactionEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ItemTransactionCompositeRoleInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionCompositeRoleEntity_ItemTransactionEntity", Storage="_ItemTransactionEntities", ThisKey="InternalCode", OtherKey="ItemTransactionCompositeRoleInternalCode")]
		public EntitySet<ItemTransactionEntity> ItemTransactionEntities
		{
			get
			{
				return this._ItemTransactionEntities;
			}
			set
			{
				this._ItemTransactionEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemTransactionEntities(ItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionCompositeRoleEntity = this;
		}
		
		private void detach_ItemTransactionEntities(ItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTransactionCompositeRoleEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.TransactionSessionType")]
	public partial class TransactionSessionTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<TransactionSessionEntity> _TransactionSessionEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public TransactionSessionTypeEntity()
		{
			this._TransactionSessionEntities = new EntitySet<TransactionSessionEntity>(new Action<TransactionSessionEntity>(this.attach_TransactionSessionEntities), new Action<TransactionSessionEntity>(this.detach_TransactionSessionEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TransactionSessionTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionSessionTypeEntity_TransactionSessionEntity", Storage="_TransactionSessionEntities", ThisKey="InternalCode", OtherKey="TransactionSessionTypeInternalCode")]
		public EntitySet<TransactionSessionEntity> TransactionSessionEntities
		{
			get
			{
				return this._TransactionSessionEntities;
			}
			set
			{
				this._TransactionSessionEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TransactionSessionEntities(TransactionSessionEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionSessionTypeEntity = this;
		}
		
		private void detach_TransactionSessionEntities(TransactionSessionEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionSessionTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.TransactionSession")]
	public partial class TransactionSessionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private long _SequenceNumber;
		
		private string _TransactionSessionTypeInternalCode;
		
		private System.DateTime _SessionStartUTCDateTime;
		
		private System.DateTime _SessionStartLocalDateTime;
		
		private System.Nullable<System.DateTime> _SessionEndUTCDateTime;
		
		private System.Nullable<System.DateTime> _SessionEndLocalDateTime;
		
		private bool _AbnormalEndFlag;
		
		private System.Guid _UserAccountKey;
		
		private System.Guid _UserAccountSnapshotKey;
		
		private System.Guid _FacilityKey;
		
		private System.Guid _FacilitySnapshotKey;
		
		private System.Nullable<System.Guid> _DispensingDeviceKey;
		
		private System.Nullable<System.Guid> _DispensingDeviceSnapshotKey;
		
		private System.Nullable<System.DateTime> _FirstRecoveryAttemptUTCDateTime;
		
		private System.Nullable<System.DateTime> _FirstRecoveryAttemptLocalDateTime;
		
		private System.Nullable<System.DateTime> _LastRecoveryAttemptUTCDateTime;
		
		private System.Nullable<System.DateTime> _LastRecoveryAttemptLocalDateTime;
		
		private bool _UnrecoveredTransactionFlag;
		
		private System.Nullable<int> _RecoveryDataRecordQuantity;
		
		private bool _DoNotSendOutboundFlag;
		
		private bool _MobileFlag;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<int> _ItemTransactionRecordQuantity;
		
		private EntitySet<ItemTransactionEntity> _ItemTransactionEntities;
		
		private EntitySet<DiscrepancyEntity> _DiscrepancyEntities;
		
		private EntityRef<TransactionSessionTypeEntity> _TransactionSessionTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnSequenceNumberChanging(long value);
    partial void OnSequenceNumberChanged();
    partial void OnTransactionSessionTypeInternalCodeChanging(string value);
    partial void OnTransactionSessionTypeInternalCodeChanged();
    partial void OnSessionStartUTCDateTimeChanging(System.DateTime value);
    partial void OnSessionStartUTCDateTimeChanged();
    partial void OnSessionStartLocalDateTimeChanging(System.DateTime value);
    partial void OnSessionStartLocalDateTimeChanged();
    partial void OnSessionEndUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSessionEndUTCDateTimeChanged();
    partial void OnSessionEndLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSessionEndLocalDateTimeChanged();
    partial void OnAbnormalEndFlagChanging(bool value);
    partial void OnAbnormalEndFlagChanged();
    partial void OnUserAccountKeyChanging(System.Guid value);
    partial void OnUserAccountKeyChanged();
    partial void OnUserAccountSnapshotKeyChanging(System.Guid value);
    partial void OnUserAccountSnapshotKeyChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnFacilitySnapshotKeyChanging(System.Guid value);
    partial void OnFacilitySnapshotKeyChanged();
    partial void OnDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDispensingDeviceKeyChanged();
    partial void OnDispensingDeviceSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDispensingDeviceSnapshotKeyChanged();
    partial void OnFirstRecoveryAttemptUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstRecoveryAttemptUTCDateTimeChanged();
    partial void OnFirstRecoveryAttemptLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstRecoveryAttemptLocalDateTimeChanged();
    partial void OnLastRecoveryAttemptUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRecoveryAttemptUTCDateTimeChanged();
    partial void OnLastRecoveryAttemptLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRecoveryAttemptLocalDateTimeChanged();
    partial void OnUnrecoveredTransactionFlagChanging(bool value);
    partial void OnUnrecoveredTransactionFlagChanged();
    partial void OnRecoveryDataRecordQuantityChanging(System.Nullable<int> value);
    partial void OnRecoveryDataRecordQuantityChanged();
    partial void OnDoNotSendOutboundFlagChanging(bool value);
    partial void OnDoNotSendOutboundFlagChanged();
    partial void OnMobileFlagChanging(bool value);
    partial void OnMobileFlagChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnItemTransactionRecordQuantityChanging(System.Nullable<int> value);
    partial void OnItemTransactionRecordQuantityChanged();
    #endregion
		
		public TransactionSessionEntity()
		{
			this._ItemTransactionEntities = new EntitySet<ItemTransactionEntity>(new Action<ItemTransactionEntity>(this.attach_ItemTransactionEntities), new Action<ItemTransactionEntity>(this.detach_ItemTransactionEntities));
			this._DiscrepancyEntities = new EntitySet<DiscrepancyEntity>(new Action<DiscrepancyEntity>(this.attach_DiscrepancyEntities), new Action<DiscrepancyEntity>(this.detach_DiscrepancyEntities));
			this._TransactionSessionTypeEntity = default(EntityRef<TransactionSessionTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TransactionSessionKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this.OnSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._SequenceNumber = value;
					this.SendPropertyChanged("SequenceNumber");
					this.OnSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSessionTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TransactionSessionTypeInternalCode
		{
			get
			{
				return this._TransactionSessionTypeInternalCode;
			}
			set
			{
				if ((this._TransactionSessionTypeInternalCode != value))
				{
					if (this._TransactionSessionTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionSessionTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._TransactionSessionTypeInternalCode = value;
					this.SendPropertyChanged("TransactionSessionTypeInternalCode");
					this.OnTransactionSessionTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionStartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime SessionStartUTCDateTime
		{
			get
			{
				return this._SessionStartUTCDateTime;
			}
			set
			{
				if ((this._SessionStartUTCDateTime != value))
				{
					this.OnSessionStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SessionStartUTCDateTime = value;
					this.SendPropertyChanged("SessionStartUTCDateTime");
					this.OnSessionStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionStartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime SessionStartLocalDateTime
		{
			get
			{
				return this._SessionStartLocalDateTime;
			}
			set
			{
				if ((this._SessionStartLocalDateTime != value))
				{
					this.OnSessionStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SessionStartLocalDateTime = value;
					this.SendPropertyChanged("SessionStartLocalDateTime");
					this.OnSessionStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionEndUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SessionEndUTCDateTime
		{
			get
			{
				return this._SessionEndUTCDateTime;
			}
			set
			{
				if ((this._SessionEndUTCDateTime != value))
				{
					this.OnSessionEndUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SessionEndUTCDateTime = value;
					this.SendPropertyChanged("SessionEndUTCDateTime");
					this.OnSessionEndUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionEndLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SessionEndLocalDateTime
		{
			get
			{
				return this._SessionEndLocalDateTime;
			}
			set
			{
				if ((this._SessionEndLocalDateTime != value))
				{
					this.OnSessionEndLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SessionEndLocalDateTime = value;
					this.SendPropertyChanged("SessionEndLocalDateTime");
					this.OnSessionEndLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbnormalEndFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AbnormalEndFlag
		{
			get
			{
				return this._AbnormalEndFlag;
			}
			set
			{
				if ((this._AbnormalEndFlag != value))
				{
					this.OnAbnormalEndFlagChanging(value);
					this.SendPropertyChanging();
					this._AbnormalEndFlag = value;
					this.SendPropertyChanged("AbnormalEndFlag");
					this.OnAbnormalEndFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountSnapshotKey
		{
			get
			{
				return this._UserAccountSnapshotKey;
			}
			set
			{
				if ((this._UserAccountSnapshotKey != value))
				{
					this.OnUserAccountSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountSnapshotKey = value;
					this.SendPropertyChanged("UserAccountSnapshotKey");
					this.OnUserAccountSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitySnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilitySnapshotKey
		{
			get
			{
				return this._FacilitySnapshotKey;
			}
			set
			{
				if ((this._FacilitySnapshotKey != value))
				{
					this.OnFacilitySnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilitySnapshotKey = value;
					this.SendPropertyChanged("FacilitySnapshotKey");
					this.OnFacilitySnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DispensingDeviceKey
		{
			get
			{
				return this._DispensingDeviceKey;
			}
			set
			{
				if ((this._DispensingDeviceKey != value))
				{
					this.OnDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceKey = value;
					this.SendPropertyChanged("DispensingDeviceKey");
					this.OnDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DispensingDeviceSnapshotKey
		{
			get
			{
				return this._DispensingDeviceSnapshotKey;
			}
			set
			{
				if ((this._DispensingDeviceSnapshotKey != value))
				{
					this.OnDispensingDeviceSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._DispensingDeviceSnapshotKey = value;
					this.SendPropertyChanged("DispensingDeviceSnapshotKey");
					this.OnDispensingDeviceSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRecoveryAttemptUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FirstRecoveryAttemptUTCDateTime
		{
			get
			{
				return this._FirstRecoveryAttemptUTCDateTime;
			}
			set
			{
				if ((this._FirstRecoveryAttemptUTCDateTime != value))
				{
					this.OnFirstRecoveryAttemptUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._FirstRecoveryAttemptUTCDateTime = value;
					this.SendPropertyChanged("FirstRecoveryAttemptUTCDateTime");
					this.OnFirstRecoveryAttemptUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRecoveryAttemptLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FirstRecoveryAttemptLocalDateTime
		{
			get
			{
				return this._FirstRecoveryAttemptLocalDateTime;
			}
			set
			{
				if ((this._FirstRecoveryAttemptLocalDateTime != value))
				{
					this.OnFirstRecoveryAttemptLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._FirstRecoveryAttemptLocalDateTime = value;
					this.SendPropertyChanged("FirstRecoveryAttemptLocalDateTime");
					this.OnFirstRecoveryAttemptLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRecoveryAttemptUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastRecoveryAttemptUTCDateTime
		{
			get
			{
				return this._LastRecoveryAttemptUTCDateTime;
			}
			set
			{
				if ((this._LastRecoveryAttemptUTCDateTime != value))
				{
					this.OnLastRecoveryAttemptUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastRecoveryAttemptUTCDateTime = value;
					this.SendPropertyChanged("LastRecoveryAttemptUTCDateTime");
					this.OnLastRecoveryAttemptUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRecoveryAttemptLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastRecoveryAttemptLocalDateTime
		{
			get
			{
				return this._LastRecoveryAttemptLocalDateTime;
			}
			set
			{
				if ((this._LastRecoveryAttemptLocalDateTime != value))
				{
					this.OnLastRecoveryAttemptLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastRecoveryAttemptLocalDateTime = value;
					this.SendPropertyChanged("LastRecoveryAttemptLocalDateTime");
					this.OnLastRecoveryAttemptLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnrecoveredTransactionFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool UnrecoveredTransactionFlag
		{
			get
			{
				return this._UnrecoveredTransactionFlag;
			}
			set
			{
				if ((this._UnrecoveredTransactionFlag != value))
				{
					this.OnUnrecoveredTransactionFlagChanging(value);
					this.SendPropertyChanging();
					this._UnrecoveredTransactionFlag = value;
					this.SendPropertyChanged("UnrecoveredTransactionFlag");
					this.OnUnrecoveredTransactionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecoveryDataRecordQuantity", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RecoveryDataRecordQuantity
		{
			get
			{
				return this._RecoveryDataRecordQuantity;
			}
			set
			{
				if ((this._RecoveryDataRecordQuantity != value))
				{
					this.OnRecoveryDataRecordQuantityChanging(value);
					this.SendPropertyChanging();
					this._RecoveryDataRecordQuantity = value;
					this.SendPropertyChanged("RecoveryDataRecordQuantity");
					this.OnRecoveryDataRecordQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotSendOutboundFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DoNotSendOutboundFlag
		{
			get
			{
				return this._DoNotSendOutboundFlag;
			}
			set
			{
				if ((this._DoNotSendOutboundFlag != value))
				{
					this.OnDoNotSendOutboundFlagChanging(value);
					this.SendPropertyChanging();
					this._DoNotSendOutboundFlag = value;
					this.SendPropertyChanged("DoNotSendOutboundFlag");
					this.OnDoNotSendOutboundFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileFlag", DbType="Bit NOT NULL")]
		public bool MobileFlag
		{
			get
			{
				return this._MobileFlag;
			}
			set
			{
				if ((this._MobileFlag != value))
				{
					this.OnMobileFlagChanging(value);
					this.SendPropertyChanging();
					this._MobileFlag = value;
					this.SendPropertyChanged("MobileFlag");
					this.OnMobileFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionRecordQuantity", DbType="Int")]
		public System.Nullable<int> ItemTransactionRecordQuantity
		{
			get
			{
				return this._ItemTransactionRecordQuantity;
			}
			set
			{
				if ((this._ItemTransactionRecordQuantity != value))
				{
					this.OnItemTransactionRecordQuantityChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionRecordQuantity = value;
					this.SendPropertyChanged("ItemTransactionRecordQuantity");
					this.OnItemTransactionRecordQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionSessionEntity_ItemTransactionEntity", Storage="_ItemTransactionEntities", ThisKey="Key", OtherKey="TransactionSessionKey")]
		public EntitySet<ItemTransactionEntity> ItemTransactionEntities
		{
			get
			{
				return this._ItemTransactionEntities;
			}
			set
			{
				this._ItemTransactionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionSessionEntity_DiscrepancyEntity", Storage="_DiscrepancyEntities", ThisKey="Key", OtherKey="ResolvedTransactionSessionKey")]
		public EntitySet<DiscrepancyEntity> DiscrepancyEntities
		{
			get
			{
				return this._DiscrepancyEntities;
			}
			set
			{
				this._DiscrepancyEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionSessionTypeEntity_TransactionSessionEntity", Storage="_TransactionSessionTypeEntity", ThisKey="TransactionSessionTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public TransactionSessionTypeEntity TransactionSessionTypeEntity
		{
			get
			{
				return this._TransactionSessionTypeEntity.Entity;
			}
			set
			{
				TransactionSessionTypeEntity previousValue = this._TransactionSessionTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionSessionTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionSessionTypeEntity.Entity = null;
						previousValue.TransactionSessionEntities.Remove(this);
					}
					this._TransactionSessionTypeEntity.Entity = value;
					if ((value != null))
					{
						value.TransactionSessionEntities.Add(this);
						this._TransactionSessionTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._TransactionSessionTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("TransactionSessionTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemTransactionEntities(ItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionSessionEntity = this;
		}
		
		private void detach_ItemTransactionEntities(ItemTransactionEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionSessionEntity = null;
		}
		
		private void attach_DiscrepancyEntities(DiscrepancyEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionSessionEntity = this;
		}
		
		private void detach_DiscrepancyEntities(DiscrepancyEntity entity)
		{
			this.SendPropertyChanging();
			entity.TransactionSessionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.vw_DiscrepancyCurrent")]
	public partial class DiscrepancyEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemTransactionKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Nullable<System.DateTime> _ResolvedUTCDateTime;
		
		private System.Nullable<System.DateTime> _ResolvedLocalDateTime;
		
		private bool _AutoResolvedFlag;
		
		private System.Nullable<System.Guid> _ResolvedUserAccountKey;
		
		private System.Nullable<System.Guid> _ResolvedUserAccountSnapshotKey;
		
		private System.Nullable<System.Guid> _WitnessUserAccountKey;
		
		private System.Nullable<System.Guid> _WitnessUserAccountSnapshotKey;
		
		private System.Nullable<System.Guid> _DiscrepancyResolutionKey;
		
		private string _ResolutionText;
		
		private System.Nullable<System.Guid> _PriorItemTransactionKey;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<System.Guid> _DiscrepancyResolutionSnapshotKey;
		
		private System.Nullable<System.Guid> _ResolvedTransactionSessionKey;
		
		private EntityRef<ItemTransactionEntity> _ItemTransactionEntity;
		
		private EntityRef<TransactionSessionEntity> _TransactionSessionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemTransactionKeyChanging(System.Guid value);
    partial void OnItemTransactionKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnResolvedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnResolvedUTCDateTimeChanged();
    partial void OnResolvedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnResolvedLocalDateTimeChanged();
    partial void OnAutoResolvedFlagChanging(bool value);
    partial void OnAutoResolvedFlagChanged();
    partial void OnResolvedUserAccountKeyChanging(System.Nullable<System.Guid> value);
    partial void OnResolvedUserAccountKeyChanged();
    partial void OnResolvedUserAccountSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnResolvedUserAccountSnapshotKeyChanged();
    partial void OnWitnessUserAccountKeyChanging(System.Nullable<System.Guid> value);
    partial void OnWitnessUserAccountKeyChanged();
    partial void OnWitnessUserAccountSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnWitnessUserAccountSnapshotKeyChanged();
    partial void OnDiscrepancyResolutionKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDiscrepancyResolutionKeyChanged();
    partial void OnResolutionTextChanging(string value);
    partial void OnResolutionTextChanged();
    partial void OnPriorItemTransactionKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPriorItemTransactionKeyChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnDiscrepancyResolutionSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnDiscrepancyResolutionSnapshotKeyChanged();
    partial void OnResolvedTransactionSessionKeyChanging(System.Nullable<System.Guid> value);
    partial void OnResolvedTransactionSessionKeyChanged();
    #endregion
		
		public DiscrepancyEntity()
		{
			this._ItemTransactionEntity = default(EntityRef<ItemTransactionEntity>);
			this._TransactionSessionEntity = default(EntityRef<TransactionSessionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DiscrepancyKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					if (this._ItemTransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionKey = value;
					this.SendPropertyChanged("ItemTransactionKey");
					this.OnItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolvedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ResolvedUTCDateTime
		{
			get
			{
				return this._ResolvedUTCDateTime;
			}
			set
			{
				if ((this._ResolvedUTCDateTime != value))
				{
					this.OnResolvedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ResolvedUTCDateTime = value;
					this.SendPropertyChanged("ResolvedUTCDateTime");
					this.OnResolvedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolvedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ResolvedLocalDateTime
		{
			get
			{
				return this._ResolvedLocalDateTime;
			}
			set
			{
				if ((this._ResolvedLocalDateTime != value))
				{
					this.OnResolvedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ResolvedLocalDateTime = value;
					this.SendPropertyChanged("ResolvedLocalDateTime");
					this.OnResolvedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoResolvedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AutoResolvedFlag
		{
			get
			{
				return this._AutoResolvedFlag;
			}
			set
			{
				if ((this._AutoResolvedFlag != value))
				{
					this.OnAutoResolvedFlagChanging(value);
					this.SendPropertyChanging();
					this._AutoResolvedFlag = value;
					this.SendPropertyChanged("AutoResolvedFlag");
					this.OnAutoResolvedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolvedUserAccountKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ResolvedUserAccountKey
		{
			get
			{
				return this._ResolvedUserAccountKey;
			}
			set
			{
				if ((this._ResolvedUserAccountKey != value))
				{
					this.OnResolvedUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._ResolvedUserAccountKey = value;
					this.SendPropertyChanged("ResolvedUserAccountKey");
					this.OnResolvedUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolvedUserAccountSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ResolvedUserAccountSnapshotKey
		{
			get
			{
				return this._ResolvedUserAccountSnapshotKey;
			}
			set
			{
				if ((this._ResolvedUserAccountSnapshotKey != value))
				{
					this.OnResolvedUserAccountSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._ResolvedUserAccountSnapshotKey = value;
					this.SendPropertyChanged("ResolvedUserAccountSnapshotKey");
					this.OnResolvedUserAccountSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessUserAccountKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> WitnessUserAccountKey
		{
			get
			{
				return this._WitnessUserAccountKey;
			}
			set
			{
				if ((this._WitnessUserAccountKey != value))
				{
					this.OnWitnessUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._WitnessUserAccountKey = value;
					this.SendPropertyChanged("WitnessUserAccountKey");
					this.OnWitnessUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessUserAccountSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> WitnessUserAccountSnapshotKey
		{
			get
			{
				return this._WitnessUserAccountSnapshotKey;
			}
			set
			{
				if ((this._WitnessUserAccountSnapshotKey != value))
				{
					this.OnWitnessUserAccountSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._WitnessUserAccountSnapshotKey = value;
					this.SendPropertyChanged("WitnessUserAccountSnapshotKey");
					this.OnWitnessUserAccountSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscrepancyResolutionKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DiscrepancyResolutionKey
		{
			get
			{
				return this._DiscrepancyResolutionKey;
			}
			set
			{
				if ((this._DiscrepancyResolutionKey != value))
				{
					this.OnDiscrepancyResolutionKeyChanging(value);
					this.SendPropertyChanging();
					this._DiscrepancyResolutionKey = value;
					this.SendPropertyChanged("DiscrepancyResolutionKey");
					this.OnDiscrepancyResolutionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolutionText", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string ResolutionText
		{
			get
			{
				return this._ResolutionText;
			}
			set
			{
				if ((this._ResolutionText != value))
				{
					this.OnResolutionTextChanging(value);
					this.SendPropertyChanging();
					this._ResolutionText = value;
					this.SendPropertyChanged("ResolutionText");
					this.OnResolutionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorItemTransactionKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PriorItemTransactionKey
		{
			get
			{
				return this._PriorItemTransactionKey;
			}
			set
			{
				if ((this._PriorItemTransactionKey != value))
				{
					this.OnPriorItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._PriorItemTransactionKey = value;
					this.SendPropertyChanged("PriorItemTransactionKey");
					this.OnPriorItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscrepancyResolutionSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DiscrepancyResolutionSnapshotKey
		{
			get
			{
				return this._DiscrepancyResolutionSnapshotKey;
			}
			set
			{
				if ((this._DiscrepancyResolutionSnapshotKey != value))
				{
					this.OnDiscrepancyResolutionSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._DiscrepancyResolutionSnapshotKey = value;
					this.SendPropertyChanged("DiscrepancyResolutionSnapshotKey");
					this.OnDiscrepancyResolutionSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResolvedTransactionSessionKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ResolvedTransactionSessionKey
		{
			get
			{
				return this._ResolvedTransactionSessionKey;
			}
			set
			{
				if ((this._ResolvedTransactionSessionKey != value))
				{
					if (this._TransactionSessionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResolvedTransactionSessionKeyChanging(value);
					this.SendPropertyChanging();
					this._ResolvedTransactionSessionKey = value;
					this.SendPropertyChanged("ResolvedTransactionSessionKey");
					this.OnResolvedTransactionSessionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_DiscrepancyEntity", Storage="_ItemTransactionEntity", ThisKey="ItemTransactionKey", OtherKey="Key", IsForeignKey=true)]
		public ItemTransactionEntity ItemTransactionEntity
		{
			get
			{
				return this._ItemTransactionEntity.Entity;
			}
			set
			{
				ItemTransactionEntity previousValue = this._ItemTransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTransactionEntity.Entity = null;
						previousValue.DiscrepancyEntities.Remove(this);
					}
					this._ItemTransactionEntity.Entity = value;
					if ((value != null))
					{
						value.DiscrepancyEntities.Add(this);
						this._ItemTransactionKey = value.Key;
					}
					else
					{
						this._ItemTransactionKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemTransactionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionSessionEntity_DiscrepancyEntity", Storage="_TransactionSessionEntity", ThisKey="ResolvedTransactionSessionKey", OtherKey="Key", IsForeignKey=true)]
		public TransactionSessionEntity TransactionSessionEntity
		{
			get
			{
				return this._TransactionSessionEntity.Entity;
			}
			set
			{
				TransactionSessionEntity previousValue = this._TransactionSessionEntity.Entity;
				if (((previousValue != value) 
							|| (this._TransactionSessionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionSessionEntity.Entity = null;
						previousValue.DiscrepancyEntities.Remove(this);
					}
					this._TransactionSessionEntity.Entity = value;
					if ((value != null))
					{
						value.DiscrepancyEntities.Add(this);
						this._ResolvedTransactionSessionKey = value.Key;
					}
					else
					{
						this._ResolvedTransactionSessionKey = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TransactionSessionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.DiscrepancyNote")]
	public partial class DiscrepancyNoteEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemTransactionKey;
		
		private string _NoteText;
		
		private System.DateTime _CreatedUTCDateTime;
		
		private System.DateTime _CreatedLocalDateTime;
		
		private System.Guid _CreatedUserAccountKey;
		
		private System.Guid _CreatedUserAccountSnapshotKey;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private bool _ServerFlag;
		
		private EntityRef<ItemTransactionEntity> _ItemTransactionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemTransactionKeyChanging(System.Guid value);
    partial void OnItemTransactionKeyChanged();
    partial void OnNoteTextChanging(string value);
    partial void OnNoteTextChanged();
    partial void OnCreatedUTCDateTimeChanging(System.DateTime value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.DateTime value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnCreatedUserAccountKeyChanging(System.Guid value);
    partial void OnCreatedUserAccountKeyChanged();
    partial void OnCreatedUserAccountSnapshotKeyChanging(System.Guid value);
    partial void OnCreatedUserAccountSnapshotKeyChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnServerFlagChanging(bool value);
    partial void OnServerFlagChanged();
    #endregion
		
		public DiscrepancyNoteEntity()
		{
			this._ItemTransactionEntity = default(EntityRef<ItemTransactionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DiscrepancyNoteKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					if (this._ItemTransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionKey = value;
					this.SendPropertyChanged("ItemTransactionKey");
					this.OnItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteText", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NoteText
		{
			get
			{
				return this._NoteText;
			}
			set
			{
				if ((this._NoteText != value))
				{
					this.OnNoteTextChanging(value);
					this.SendPropertyChanging();
					this._NoteText = value;
					this.SendPropertyChanged("NoteText");
					this.OnNoteTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserAccountKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid CreatedUserAccountKey
		{
			get
			{
				return this._CreatedUserAccountKey;
			}
			set
			{
				if ((this._CreatedUserAccountKey != value))
				{
					this.OnCreatedUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserAccountKey = value;
					this.SendPropertyChanged("CreatedUserAccountKey");
					this.OnCreatedUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserAccountSnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid CreatedUserAccountSnapshotKey
		{
			get
			{
				return this._CreatedUserAccountSnapshotKey;
			}
			set
			{
				if ((this._CreatedUserAccountSnapshotKey != value))
				{
					this.OnCreatedUserAccountSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserAccountSnapshotKey = value;
					this.SendPropertyChanged("CreatedUserAccountSnapshotKey");
					this.OnCreatedUserAccountSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerFlag", DbType="Bit NOT NULL")]
		public bool ServerFlag
		{
			get
			{
				return this._ServerFlag;
			}
			set
			{
				if ((this._ServerFlag != value))
				{
					this.OnServerFlagChanging(value);
					this.SendPropertyChanging();
					this._ServerFlag = value;
					this.SendPropertyChanged("ServerFlag");
					this.OnServerFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_DiscrepancyNoteEntity", Storage="_ItemTransactionEntity", ThisKey="ItemTransactionKey", OtherKey="Key", IsForeignKey=true)]
		public ItemTransactionEntity ItemTransactionEntity
		{
			get
			{
				return this._ItemTransactionEntity.Entity;
			}
			set
			{
				ItemTransactionEntity previousValue = this._ItemTransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTransactionEntity.Entity = null;
						previousValue.DiscrepancyNoteEntities.Remove(this);
					}
					this._ItemTransactionEntity.Entity = value;
					if ((value != null))
					{
						value.DiscrepancyNoteEntities.Add(this);
						this._ItemTransactionKey = value.Key;
					}
					else
					{
						this._ItemTransactionKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemTransactionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.ItemTransactionScan")]
	public partial class ItemTransactionScanEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _ItemTransactionKey;
		
		private string _ItemScanCodeValue;
		
		private bool _OverrideFlag;
		
		private string _ProductID;
		
		private string _ReplenishmentTransactionID;
		
		private System.Nullable<int> _PickQuantity;
		
		private string _LotID;
		
		private bool _LotIDManuallyEnteredFlag;
		
		private string _SerialID;
		
		private bool _SerialIDManuallyEnteredFlag;
		
		private System.Nullable<System.DateTime> _ExpirationDate;
		
		private bool _ExpirationYearMonthOnlyFlag;
		
		private bool _ExpirationManuallyEnteredFlag;
		
		private System.Nullable<System.Guid> _WrongItemKey;
		
		private System.Nullable<System.Guid> _WrongItemSnapshotKey;
		
		private System.Nullable<System.Guid> _WrongMedItemKey;
		
		private System.Nullable<System.Guid> _WrongMedItemSnapshotKey;
		
		private bool _UnknownItemFlag;
		
		private string _UnverifiedScanTypeInternalCode;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private EntityRef<ItemTransactionEntity> _ItemTransactionEntity;
		
		private EntityRef<UnverifiedScanTypeEntity> _UnverifiedScanTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnItemTransactionKeyChanging(System.Guid value);
    partial void OnItemTransactionKeyChanged();
    partial void OnItemScanCodeValueChanging(string value);
    partial void OnItemScanCodeValueChanged();
    partial void OnOverrideFlagChanging(bool value);
    partial void OnOverrideFlagChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnReplenishmentTransactionIDChanging(string value);
    partial void OnReplenishmentTransactionIDChanged();
    partial void OnPickQuantityChanging(System.Nullable<int> value);
    partial void OnPickQuantityChanged();
    partial void OnLotIDChanging(string value);
    partial void OnLotIDChanged();
    partial void OnLotIDManuallyEnteredFlagChanging(bool value);
    partial void OnLotIDManuallyEnteredFlagChanged();
    partial void OnSerialIDChanging(string value);
    partial void OnSerialIDChanged();
    partial void OnSerialIDManuallyEnteredFlagChanging(bool value);
    partial void OnSerialIDManuallyEnteredFlagChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnExpirationYearMonthOnlyFlagChanging(bool value);
    partial void OnExpirationYearMonthOnlyFlagChanged();
    partial void OnExpirationManuallyEnteredFlagChanging(bool value);
    partial void OnExpirationManuallyEnteredFlagChanged();
    partial void OnWrongItemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnWrongItemKeyChanged();
    partial void OnWrongItemSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnWrongItemSnapshotKeyChanged();
    partial void OnWrongMedItemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnWrongMedItemKeyChanged();
    partial void OnWrongMedItemSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnWrongMedItemSnapshotKeyChanged();
    partial void OnUnknownItemFlagChanging(bool value);
    partial void OnUnknownItemFlagChanged();
    partial void OnUnverifiedScanTypeInternalCodeChanging(string value);
    partial void OnUnverifiedScanTypeInternalCodeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    #endregion
		
		public ItemTransactionScanEntity()
		{
			this._ItemTransactionEntity = default(EntityRef<ItemTransactionEntity>);
			this._UnverifiedScanTypeEntity = default(EntityRef<UnverifiedScanTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ItemTransactionScanKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					if (this._ItemTransactionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTransactionKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemTransactionKey = value;
					this.SendPropertyChanged("ItemTransactionKey");
					this.OnItemTransactionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemScanCodeValue", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string ItemScanCodeValue
		{
			get
			{
				return this._ItemScanCodeValue;
			}
			set
			{
				if ((this._ItemScanCodeValue != value))
				{
					this.OnItemScanCodeValueChanging(value);
					this.SendPropertyChanging();
					this._ItemScanCodeValue = value;
					this.SendPropertyChanged("ItemScanCodeValue");
					this.OnItemScanCodeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OverrideFlag
		{
			get
			{
				return this._OverrideFlag;
			}
			set
			{
				if ((this._OverrideFlag != value))
				{
					this.OnOverrideFlagChanging(value);
					this.SendPropertyChanging();
					this._OverrideFlag = value;
					this.SendPropertyChanged("OverrideFlag");
					this.OnOverrideFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplenishmentTransactionID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ReplenishmentTransactionID
		{
			get
			{
				return this._ReplenishmentTransactionID;
			}
			set
			{
				if ((this._ReplenishmentTransactionID != value))
				{
					this.OnReplenishmentTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._ReplenishmentTransactionID = value;
					this.SendPropertyChanged("ReplenishmentTransactionID");
					this.OnReplenishmentTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickQuantity", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PickQuantity
		{
			get
			{
				return this._PickQuantity;
			}
			set
			{
				if ((this._PickQuantity != value))
				{
					this.OnPickQuantityChanging(value);
					this.SendPropertyChanging();
					this._PickQuantity = value;
					this.SendPropertyChanged("PickQuantity");
					this.OnPickQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotID", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string LotID
		{
			get
			{
				return this._LotID;
			}
			set
			{
				if ((this._LotID != value))
				{
					this.OnLotIDChanging(value);
					this.SendPropertyChanging();
					this._LotID = value;
					this.SendPropertyChanged("LotID");
					this.OnLotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotIDManuallyEnteredFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LotIDManuallyEnteredFlag
		{
			get
			{
				return this._LotIDManuallyEnteredFlag;
			}
			set
			{
				if ((this._LotIDManuallyEnteredFlag != value))
				{
					this.OnLotIDManuallyEnteredFlagChanging(value);
					this.SendPropertyChanging();
					this._LotIDManuallyEnteredFlag = value;
					this.SendPropertyChanged("LotIDManuallyEnteredFlag");
					this.OnLotIDManuallyEnteredFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialID", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string SerialID
		{
			get
			{
				return this._SerialID;
			}
			set
			{
				if ((this._SerialID != value))
				{
					this.OnSerialIDChanging(value);
					this.SendPropertyChanging();
					this._SerialID = value;
					this.SendPropertyChanged("SerialID");
					this.OnSerialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialIDManuallyEnteredFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SerialIDManuallyEnteredFlag
		{
			get
			{
				return this._SerialIDManuallyEnteredFlag;
			}
			set
			{
				if ((this._SerialIDManuallyEnteredFlag != value))
				{
					this.OnSerialIDManuallyEnteredFlagChanging(value);
					this.SendPropertyChanging();
					this._SerialIDManuallyEnteredFlag = value;
					this.SendPropertyChanged("SerialIDManuallyEnteredFlag");
					this.OnSerialIDManuallyEnteredFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationYearMonthOnlyFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ExpirationYearMonthOnlyFlag
		{
			get
			{
				return this._ExpirationYearMonthOnlyFlag;
			}
			set
			{
				if ((this._ExpirationYearMonthOnlyFlag != value))
				{
					this.OnExpirationYearMonthOnlyFlagChanging(value);
					this.SendPropertyChanging();
					this._ExpirationYearMonthOnlyFlag = value;
					this.SendPropertyChanged("ExpirationYearMonthOnlyFlag");
					this.OnExpirationYearMonthOnlyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationManuallyEnteredFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ExpirationManuallyEnteredFlag
		{
			get
			{
				return this._ExpirationManuallyEnteredFlag;
			}
			set
			{
				if ((this._ExpirationManuallyEnteredFlag != value))
				{
					this.OnExpirationManuallyEnteredFlagChanging(value);
					this.SendPropertyChanging();
					this._ExpirationManuallyEnteredFlag = value;
					this.SendPropertyChanged("ExpirationManuallyEnteredFlag");
					this.OnExpirationManuallyEnteredFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrongItemKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> WrongItemKey
		{
			get
			{
				return this._WrongItemKey;
			}
			set
			{
				if ((this._WrongItemKey != value))
				{
					this.OnWrongItemKeyChanging(value);
					this.SendPropertyChanging();
					this._WrongItemKey = value;
					this.SendPropertyChanged("WrongItemKey");
					this.OnWrongItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrongItemSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> WrongItemSnapshotKey
		{
			get
			{
				return this._WrongItemSnapshotKey;
			}
			set
			{
				if ((this._WrongItemSnapshotKey != value))
				{
					this.OnWrongItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._WrongItemSnapshotKey = value;
					this.SendPropertyChanged("WrongItemSnapshotKey");
					this.OnWrongItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrongMedItemKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> WrongMedItemKey
		{
			get
			{
				return this._WrongMedItemKey;
			}
			set
			{
				if ((this._WrongMedItemKey != value))
				{
					this.OnWrongMedItemKeyChanging(value);
					this.SendPropertyChanging();
					this._WrongMedItemKey = value;
					this.SendPropertyChanged("WrongMedItemKey");
					this.OnWrongMedItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrongMedItemSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> WrongMedItemSnapshotKey
		{
			get
			{
				return this._WrongMedItemSnapshotKey;
			}
			set
			{
				if ((this._WrongMedItemSnapshotKey != value))
				{
					this.OnWrongMedItemSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._WrongMedItemSnapshotKey = value;
					this.SendPropertyChanged("WrongMedItemSnapshotKey");
					this.OnWrongMedItemSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnknownItemFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool UnknownItemFlag
		{
			get
			{
				return this._UnknownItemFlag;
			}
			set
			{
				if ((this._UnknownItemFlag != value))
				{
					this.OnUnknownItemFlagChanging(value);
					this.SendPropertyChanging();
					this._UnknownItemFlag = value;
					this.SendPropertyChanged("UnknownItemFlag");
					this.OnUnknownItemFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnverifiedScanTypeInternalCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string UnverifiedScanTypeInternalCode
		{
			get
			{
				return this._UnverifiedScanTypeInternalCode;
			}
			set
			{
				if ((this._UnverifiedScanTypeInternalCode != value))
				{
					if (this._UnverifiedScanTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnverifiedScanTypeInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._UnverifiedScanTypeInternalCode = value;
					this.SendPropertyChanged("UnverifiedScanTypeInternalCode");
					this.OnUnverifiedScanTypeInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTransactionEntity_ItemTransactionScanEntity", Storage="_ItemTransactionEntity", ThisKey="ItemTransactionKey", OtherKey="Key", IsForeignKey=true)]
		public ItemTransactionEntity ItemTransactionEntity
		{
			get
			{
				return this._ItemTransactionEntity.Entity;
			}
			set
			{
				ItemTransactionEntity previousValue = this._ItemTransactionEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTransactionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTransactionEntity.Entity = null;
						previousValue.ItemTransactionScanEntities.Remove(this);
					}
					this._ItemTransactionEntity.Entity = value;
					if ((value != null))
					{
						value.ItemTransactionScanEntities.Add(this);
						this._ItemTransactionKey = value.Key;
					}
					else
					{
						this._ItemTransactionKey = default(System.Guid);
					}
					this.SendPropertyChanged("ItemTransactionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnverifiedScanTypeEntity_ItemTransactionScanEntity", Storage="_UnverifiedScanTypeEntity", ThisKey="UnverifiedScanTypeInternalCode", OtherKey="InternalCode", IsForeignKey=true)]
		public UnverifiedScanTypeEntity UnverifiedScanTypeEntity
		{
			get
			{
				return this._UnverifiedScanTypeEntity.Entity;
			}
			set
			{
				UnverifiedScanTypeEntity previousValue = this._UnverifiedScanTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._UnverifiedScanTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnverifiedScanTypeEntity.Entity = null;
						previousValue.ItemTransactionScanEntities.Remove(this);
					}
					this._UnverifiedScanTypeEntity.Entity = value;
					if ((value != null))
					{
						value.ItemTransactionScanEntities.Add(this);
						this._UnverifiedScanTypeInternalCode = value.InternalCode;
					}
					else
					{
						this._UnverifiedScanTypeInternalCode = default(string);
					}
					this.SendPropertyChanged("UnverifiedScanTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.UserEncounterQueue")]
	public partial class UserEncounterQueueEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserAccountKey;
		
		private System.Guid _EncounterKey;
		
		private System.Guid _FacilityKey;
		
		private System.DateTime _CreatedUTCDateTime;
		
		private System.DateTime _CreatedLocalDateTime;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<UserEncounterQueueEntryEntity> _UserEncounterQueueEntryEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserAccountKeyChanging(System.Guid value);
    partial void OnUserAccountKeyChanged();
    partial void OnEncounterKeyChanging(System.Guid value);
    partial void OnEncounterKeyChanged();
    partial void OnFacilityKeyChanging(System.Guid value);
    partial void OnFacilityKeyChanged();
    partial void OnCreatedUTCDateTimeChanging(System.DateTime value);
    partial void OnCreatedUTCDateTimeChanged();
    partial void OnCreatedLocalDateTimeChanging(System.DateTime value);
    partial void OnCreatedLocalDateTimeChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserEncounterQueueEntity()
		{
			this._UserEncounterQueueEntryEntities = new EntitySet<UserEncounterQueueEntryEntity>(new Action<UserEncounterQueueEntryEntity>(this.attach_UserEncounterQueueEntryEntities), new Action<UserEncounterQueueEntryEntity>(this.detach_UserEncounterQueueEntryEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserEncounterQueueKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this.OnUserAccountKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAccountKey = value;
					this.SendPropertyChanged("UserAccountKey");
					this.OnUserAccountKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this.OnEncounterKeyChanging(value);
					this.SendPropertyChanging();
					this._EncounterKey = value;
					this.SendPropertyChanged("EncounterKey");
					this.OnEncounterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid FacilityKey
		{
			get
			{
				return this._FacilityKey;
			}
			set
			{
				if ((this._FacilityKey != value))
				{
					this.OnFacilityKeyChanging(value);
					this.SendPropertyChanging();
					this._FacilityKey = value;
					this.SendPropertyChanged("FacilityKey");
					this.OnFacilityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedUTCDateTime
		{
			get
			{
				return this._CreatedUTCDateTime;
			}
			set
			{
				if ((this._CreatedUTCDateTime != value))
				{
					this.OnCreatedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedUTCDateTime = value;
					this.SendPropertyChanged("CreatedUTCDateTime");
					this.OnCreatedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedLocalDateTime
		{
			get
			{
				return this._CreatedLocalDateTime;
			}
			set
			{
				if ((this._CreatedLocalDateTime != value))
				{
					this.OnCreatedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedLocalDateTime = value;
					this.SendPropertyChanged("CreatedLocalDateTime");
					this.OnCreatedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEncounterQueueEntity_UserEncounterQueueEntryEntity", Storage="_UserEncounterQueueEntryEntities", ThisKey="Key", OtherKey="UserEncounterQueueKey")]
		public EntitySet<UserEncounterQueueEntryEntity> UserEncounterQueueEntryEntities
		{
			get
			{
				return this._UserEncounterQueueEntryEntities;
			}
			set
			{
				this._UserEncounterQueueEntryEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserEncounterQueueEntryEntities(UserEncounterQueueEntryEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEncounterQueueEntity = this;
		}
		
		private void detach_UserEncounterQueueEntryEntities(UserEncounterQueueEntryEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEncounterQueueEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.vw_UserEncounterQueueEntryCurrent")]
	public partial class UserEncounterQueueEntryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Key;
		
		private System.Guid _UserEncounterQueueEntrySnapshotKey;
		
		private System.DateTime _StartUTCDateTime;
		
		private System.DateTime _StartLocalDateTime;
		
		private System.Guid _UserEncounterQueueKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderSnapshotKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderRouteSetKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderComponentSetKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderSupplierDispensingInstructionSetKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderAdminInstructionSetKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderOrderingPersonSetKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderTimingRecordSetKey;
		
		private System.Nullable<System.Guid> _ItemKey;
		
		private System.Nullable<decimal> _EnteredQuantity;
		
		private System.Nullable<System.Guid> _EnteredUOMKey;
		
		private System.Nullable<System.DateTime> _TaskUTCDateTime;
		
		private System.Nullable<System.DateTime> _TaskLocalDateTime;
		
		private System.Nullable<System.DateTime> _CompletedUTCDateTime;
		
		private System.Nullable<System.DateTime> _CompletedLocalDateTime;
		
		private System.Nullable<System.Guid> _UserAtDispensingDeviceKey;
		
		private System.Nullable<System.Guid> _LastModifiedActorKey;
		
		private System.Nullable<System.Guid> _LastModifiedDispensingDeviceKey;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntityRef<UserEncounterQueueEntity> _UserEncounterQueueEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(System.Guid value);
    partial void OnKeyChanged();
    partial void OnUserEncounterQueueEntrySnapshotKeyChanging(System.Guid value);
    partial void OnUserEncounterQueueEntrySnapshotKeyChanged();
    partial void OnStartUTCDateTimeChanging(System.DateTime value);
    partial void OnStartUTCDateTimeChanged();
    partial void OnStartLocalDateTimeChanging(System.DateTime value);
    partial void OnStartLocalDateTimeChanged();
    partial void OnUserEncounterQueueKeyChanging(System.Guid value);
    partial void OnUserEncounterQueueKeyChanged();
    partial void OnPharmacyOrderKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderKeyChanged();
    partial void OnPharmacyOrderSnapshotKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderSnapshotKeyChanged();
    partial void OnPharmacyOrderRouteSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderRouteSetKeyChanged();
    partial void OnPharmacyOrderComponentSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderComponentSetKeyChanged();
    partial void OnPharmacyOrderSupplierDispensingInstructionSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderSupplierDispensingInstructionSetKeyChanged();
    partial void OnPharmacyOrderAdminInstructionSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderAdminInstructionSetKeyChanged();
    partial void OnPharmacyOrderOrderingPersonSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderOrderingPersonSetKeyChanged();
    partial void OnPharmacyOrderTimingRecordSetKeyChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyOrderTimingRecordSetKeyChanged();
    partial void OnItemKeyChanging(System.Nullable<System.Guid> value);
    partial void OnItemKeyChanged();
    partial void OnEnteredQuantityChanging(System.Nullable<decimal> value);
    partial void OnEnteredQuantityChanged();
    partial void OnEnteredUOMKeyChanging(System.Nullable<System.Guid> value);
    partial void OnEnteredUOMKeyChanged();
    partial void OnTaskUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTaskUTCDateTimeChanged();
    partial void OnTaskLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTaskLocalDateTimeChanged();
    partial void OnCompletedUTCDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedUTCDateTimeChanged();
    partial void OnCompletedLocalDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedLocalDateTimeChanged();
    partial void OnUserAtDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnUserAtDispensingDeviceKeyChanged();
    partial void OnLastModifiedActorKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedActorKeyChanged();
    partial void OnLastModifiedDispensingDeviceKeyChanging(System.Nullable<System.Guid> value);
    partial void OnLastModifiedDispensingDeviceKeyChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UserEncounterQueueEntryEntity()
		{
			this._UserEncounterQueueEntity = default(EntityRef<UserEncounterQueueEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserEncounterQueueEntryKey", Storage="_Key", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEncounterQueueEntrySnapshotKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserEncounterQueueEntrySnapshotKey
		{
			get
			{
				return this._UserEncounterQueueEntrySnapshotKey;
			}
			set
			{
				if ((this._UserEncounterQueueEntrySnapshotKey != value))
				{
					this.OnUserEncounterQueueEntrySnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._UserEncounterQueueEntrySnapshotKey = value;
					this.SendPropertyChanged("UserEncounterQueueEntrySnapshotKey");
					this.OnUserEncounterQueueEntrySnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartUTCDateTime
		{
			get
			{
				return this._StartUTCDateTime;
			}
			set
			{
				if ((this._StartUTCDateTime != value))
				{
					this.OnStartUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartUTCDateTime = value;
					this.SendPropertyChanged("StartUTCDateTime");
					this.OnStartUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLocalDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartLocalDateTime
		{
			get
			{
				return this._StartLocalDateTime;
			}
			set
			{
				if ((this._StartLocalDateTime != value))
				{
					this.OnStartLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartLocalDateTime = value;
					this.SendPropertyChanged("StartLocalDateTime");
					this.OnStartLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEncounterQueueKey", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid UserEncounterQueueKey
		{
			get
			{
				return this._UserEncounterQueueKey;
			}
			set
			{
				if ((this._UserEncounterQueueKey != value))
				{
					if (this._UserEncounterQueueEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserEncounterQueueKeyChanging(value);
					this.SendPropertyChanging();
					this._UserEncounterQueueKey = value;
					this.SendPropertyChanged("UserEncounterQueueKey");
					this.OnUserEncounterQueueKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderKey
		{
			get
			{
				return this._PharmacyOrderKey;
			}
			set
			{
				if ((this._PharmacyOrderKey != value))
				{
					this.OnPharmacyOrderKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderKey = value;
					this.SendPropertyChanged("PharmacyOrderKey");
					this.OnPharmacyOrderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderSnapshotKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderSnapshotKey
		{
			get
			{
				return this._PharmacyOrderSnapshotKey;
			}
			set
			{
				if ((this._PharmacyOrderSnapshotKey != value))
				{
					this.OnPharmacyOrderSnapshotKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderSnapshotKey = value;
					this.SendPropertyChanged("PharmacyOrderSnapshotKey");
					this.OnPharmacyOrderSnapshotKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderRouteSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderRouteSetKey
		{
			get
			{
				return this._PharmacyOrderRouteSetKey;
			}
			set
			{
				if ((this._PharmacyOrderRouteSetKey != value))
				{
					this.OnPharmacyOrderRouteSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderRouteSetKey = value;
					this.SendPropertyChanged("PharmacyOrderRouteSetKey");
					this.OnPharmacyOrderRouteSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderComponentSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderComponentSetKey
		{
			get
			{
				return this._PharmacyOrderComponentSetKey;
			}
			set
			{
				if ((this._PharmacyOrderComponentSetKey != value))
				{
					this.OnPharmacyOrderComponentSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderComponentSetKey = value;
					this.SendPropertyChanged("PharmacyOrderComponentSetKey");
					this.OnPharmacyOrderComponentSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderSupplierDispensingInstructionSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderSupplierDispensingInstructionSetKey
		{
			get
			{
				return this._PharmacyOrderSupplierDispensingInstructionSetKey;
			}
			set
			{
				if ((this._PharmacyOrderSupplierDispensingInstructionSetKey != value))
				{
					this.OnPharmacyOrderSupplierDispensingInstructionSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderSupplierDispensingInstructionSetKey = value;
					this.SendPropertyChanged("PharmacyOrderSupplierDispensingInstructionSetKey");
					this.OnPharmacyOrderSupplierDispensingInstructionSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderAdminInstructionSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderAdminInstructionSetKey
		{
			get
			{
				return this._PharmacyOrderAdminInstructionSetKey;
			}
			set
			{
				if ((this._PharmacyOrderAdminInstructionSetKey != value))
				{
					this.OnPharmacyOrderAdminInstructionSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderAdminInstructionSetKey = value;
					this.SendPropertyChanged("PharmacyOrderAdminInstructionSetKey");
					this.OnPharmacyOrderAdminInstructionSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderOrderingPersonSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderOrderingPersonSetKey
		{
			get
			{
				return this._PharmacyOrderOrderingPersonSetKey;
			}
			set
			{
				if ((this._PharmacyOrderOrderingPersonSetKey != value))
				{
					this.OnPharmacyOrderOrderingPersonSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderOrderingPersonSetKey = value;
					this.SendPropertyChanged("PharmacyOrderOrderingPersonSetKey");
					this.OnPharmacyOrderOrderingPersonSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderTimingRecordSetKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PharmacyOrderTimingRecordSetKey
		{
			get
			{
				return this._PharmacyOrderTimingRecordSetKey;
			}
			set
			{
				if ((this._PharmacyOrderTimingRecordSetKey != value))
				{
					this.OnPharmacyOrderTimingRecordSetKeyChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOrderTimingRecordSetKey = value;
					this.SendPropertyChanged("PharmacyOrderTimingRecordSetKey");
					this.OnPharmacyOrderTimingRecordSetKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this.OnItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemKey = value;
					this.SendPropertyChanged("ItemKey");
					this.OnItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredQuantity", DbType="Decimal(14,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EnteredQuantity
		{
			get
			{
				return this._EnteredQuantity;
			}
			set
			{
				if ((this._EnteredQuantity != value))
				{
					this.OnEnteredQuantityChanging(value);
					this.SendPropertyChanging();
					this._EnteredQuantity = value;
					this.SendPropertyChanged("EnteredQuantity");
					this.OnEnteredQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EnteredUOMKey
		{
			get
			{
				return this._EnteredUOMKey;
			}
			set
			{
				if ((this._EnteredUOMKey != value))
				{
					this.OnEnteredUOMKeyChanging(value);
					this.SendPropertyChanging();
					this._EnteredUOMKey = value;
					this.SendPropertyChanged("EnteredUOMKey");
					this.OnEnteredUOMKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskUTCDateTime", DbType="DateTime2 NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TaskUTCDateTime
		{
			get
			{
				return this._TaskUTCDateTime;
			}
			set
			{
				if ((this._TaskUTCDateTime != value))
				{
					this.OnTaskUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TaskUTCDateTime = value;
					this.SendPropertyChanged("TaskUTCDateTime");
					this.OnTaskUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskLocalDateTime", DbType="DateTime2 NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TaskLocalDateTime
		{
			get
			{
				return this._TaskLocalDateTime;
			}
			set
			{
				if ((this._TaskLocalDateTime != value))
				{
					this.OnTaskLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TaskLocalDateTime = value;
					this.SendPropertyChanged("TaskLocalDateTime");
					this.OnTaskLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedUTCDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CompletedUTCDateTime
		{
			get
			{
				return this._CompletedUTCDateTime;
			}
			set
			{
				if ((this._CompletedUTCDateTime != value))
				{
					this.OnCompletedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CompletedUTCDateTime = value;
					this.SendPropertyChanged("CompletedUTCDateTime");
					this.OnCompletedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedLocalDateTime", DbType="DateTime2", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CompletedLocalDateTime
		{
			get
			{
				return this._CompletedLocalDateTime;
			}
			set
			{
				if ((this._CompletedLocalDateTime != value))
				{
					this.OnCompletedLocalDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CompletedLocalDateTime = value;
					this.SendPropertyChanged("CompletedLocalDateTime");
					this.OnCompletedLocalDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAtDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> UserAtDispensingDeviceKey
		{
			get
			{
				return this._UserAtDispensingDeviceKey;
			}
			set
			{
				if ((this._UserAtDispensingDeviceKey != value))
				{
					this.OnUserAtDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._UserAtDispensingDeviceKey = value;
					this.SendPropertyChanged("UserAtDispensingDeviceKey");
					this.OnUserAtDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedActorKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedActorKey
		{
			get
			{
				return this._LastModifiedActorKey;
			}
			set
			{
				if ((this._LastModifiedActorKey != value))
				{
					this.OnLastModifiedActorKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedActorKey = value;
					this.SendPropertyChanged("LastModifiedActorKey");
					this.OnLastModifiedActorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDispensingDeviceKey", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> LastModifiedDispensingDeviceKey
		{
			get
			{
				return this._LastModifiedDispensingDeviceKey;
			}
			set
			{
				if ((this._LastModifiedDispensingDeviceKey != value))
				{
					this.OnLastModifiedDispensingDeviceKeyChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDispensingDeviceKey = value;
					this.SendPropertyChanged("LastModifiedDispensingDeviceKey");
					this.OnLastModifiedDispensingDeviceKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEncounterQueueEntity_UserEncounterQueueEntryEntity", Storage="_UserEncounterQueueEntity", ThisKey="UserEncounterQueueKey", OtherKey="Key", IsForeignKey=true)]
		public UserEncounterQueueEntity UserEncounterQueueEntity
		{
			get
			{
				return this._UserEncounterQueueEntity.Entity;
			}
			set
			{
				UserEncounterQueueEntity previousValue = this._UserEncounterQueueEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserEncounterQueueEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEncounterQueueEntity.Entity = null;
						previousValue.UserEncounterQueueEntryEntities.Remove(this);
					}
					this._UserEncounterQueueEntity.Entity = value;
					if ((value != null))
					{
						value.UserEncounterQueueEntryEntities.Add(this);
						this._UserEncounterQueueKey = value.Key;
					}
					else
					{
						this._UserEncounterQueueKey = default(System.Guid);
					}
					this.SendPropertyChanged("UserEncounterQueueEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.UnverifiedScanType")]
	public partial class UnverifiedScanTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InternalCode;
		
		private string _DescriptionText;
		
		private int _SortValue;
		
		private System.DateTime _LastModifiedUTCDateTime;
		
		private System.Data.Linq.Binary _LastModifiedBinaryValue;
		
		private EntitySet<ItemTransactionScanEntity> _ItemTransactionScanEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInternalCodeChanging(string value);
    partial void OnInternalCodeChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnSortValueChanging(int value);
    partial void OnSortValueChanged();
    partial void OnLastModifiedUTCDateTimeChanging(System.DateTime value);
    partial void OnLastModifiedUTCDateTimeChanged();
    partial void OnLastModifiedBinaryValueChanging(System.Data.Linq.Binary value);
    partial void OnLastModifiedBinaryValueChanged();
    #endregion
		
		public UnverifiedScanTypeEntity()
		{
			this._ItemTransactionScanEntities = new EntitySet<ItemTransactionScanEntity>(new Action<ItemTransactionScanEntity>(this.attach_ItemTransactionScanEntities), new Action<ItemTransactionScanEntity>(this.detach_ItemTransactionScanEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UnverifiedScanTypeInternalCode", Storage="_InternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string InternalCode
		{
			get
			{
				return this._InternalCode;
			}
			set
			{
				if ((this._InternalCode != value))
				{
					this.OnInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._InternalCode = value;
					this.SendPropertyChanged("InternalCode");
					this.OnInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortValue", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortValue
		{
			get
			{
				return this._SortValue;
			}
			set
			{
				if ((this._SortValue != value))
				{
					this.OnSortValueChanging(value);
					this.SendPropertyChanging();
					this._SortValue = value;
					this.SendPropertyChanged("SortValue");
					this.OnSortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUTCDateTime", DbType="DateTime2 NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastModifiedUTCDateTime
		{
			get
			{
				return this._LastModifiedUTCDateTime;
			}
			set
			{
				if ((this._LastModifiedUTCDateTime != value))
				{
					this.OnLastModifiedUTCDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUTCDateTime = value;
					this.SendPropertyChanged("LastModifiedUTCDateTime");
					this.OnLastModifiedUTCDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBinaryValue", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastModifiedBinaryValue
		{
			get
			{
				return this._LastModifiedBinaryValue;
			}
			set
			{
				if ((this._LastModifiedBinaryValue != value))
				{
					this.OnLastModifiedBinaryValueChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBinaryValue = value;
					this.SendPropertyChanged("LastModifiedBinaryValue");
					this.OnLastModifiedBinaryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnverifiedScanTypeEntity_ItemTransactionScanEntity", Storage="_ItemTransactionScanEntities", ThisKey="InternalCode", OtherKey="UnverifiedScanTypeInternalCode")]
		public EntitySet<ItemTransactionScanEntity> ItemTransactionScanEntities
		{
			get
			{
				return this._ItemTransactionScanEntities;
			}
			set
			{
				this._ItemTransactionScanEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemTransactionScanEntities(ItemTransactionScanEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnverifiedScanTypeEntity = this;
		}
		
		private void detach_ItemTransactionScanEntities(ItemTransactionScanEntity entity)
		{
			this.SendPropertyChanging();
			entity.UnverifiedScanTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Tx.vw_EncounterItemTransactionCurrent")]
	public partial class vw_EncounterItemTransactionCurrent
	{
		
		private System.Nullable<System.Guid> _TooCloseReasonSnapshotKey;
		
		private System.Nullable<System.Guid> _OverrideReasonSnapshotKey;
		
		public vw_EncounterItemTransactionCurrent()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TooCloseReasonSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TooCloseReasonSnapshotKey
		{
			get
			{
				return this._TooCloseReasonSnapshotKey;
			}
			set
			{
				if ((this._TooCloseReasonSnapshotKey != value))
				{
					this._TooCloseReasonSnapshotKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideReasonSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OverrideReasonSnapshotKey
		{
			get
			{
				return this._OverrideReasonSnapshotKey;
			}
			set
			{
				if ((this._OverrideReasonSnapshotKey != value))
				{
					this._OverrideReasonSnapshotKey = value;
				}
			}
		}
	}
	
	public partial class bsp_ListStorageSpaceItemDiscrepancyTransactionDetailResult
	{
		
		private System.DateTime _TransactionUTCDateTime;
		
		private System.DateTime _TransactionLocalDateTime;
		
		private System.Guid _ItemTransactionKey;
		
		private bool _CancelFlag;
		
		private System.Nullable<decimal> _EnteredQuantity;
		
		private System.Nullable<System.Guid> _EnteredUOMKey;
		
		private string _EnteredUOMDisplayCode;
		
		private System.Nullable<System.Guid> _EnteredUOMBaseUOMKey;
		
		private System.Nullable<decimal> _EnteredUOMConversionAmount;
		
		private System.Nullable<bool> _EnteredUOMUseDosageFormFlag;
		
		private decimal _ItemIssueTransactionQuantity;
		
		private System.Nullable<decimal> _StrengthTransactionQuantity;
		
		private System.Nullable<decimal> _VolumeTransactionQuantity;
		
		private bool _DispenseFractionFlag;
		
		private System.Nullable<decimal> _StartInventoryQuantity;
		
		private System.Nullable<decimal> _StartStrengthInventoryQuantity;
		
		private System.Nullable<decimal> _StartVolumeInventoryQuantity;
		
		private System.Nullable<decimal> _EndInventoryQuantity;
		
		private System.Nullable<decimal> _EndStrengthInventoryQuantity;
		
		private System.Nullable<decimal> _EndVolumeInventoryQuantity;
		
		private string _ItemTransactionTypeInternalCode;
		
		private string _MedDescriptionText;
		
		private string _TransactionSessionTypeInternalCode;
		
		private string _DescriptionText;
		
		private string _UserID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _WitnessID;
		
		private string _WitnessLastName;
		
		private string _WitnessFirstName;
		
		private string _WitnessMiddleName;
		
		private System.Nullable<System.Guid> _EncounterKey;
		
		private System.Nullable<System.Guid> _SurvivingEncounterKey;
		
		private int _Discrepancyflag;
		
		private int _DiscrepancyResolvedflag;
		
		public bsp_ListStorageSpaceItemDiscrepancyTransactionDetailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionUTCDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime TransactionUTCDateTime
		{
			get
			{
				return this._TransactionUTCDateTime;
			}
			set
			{
				if ((this._TransactionUTCDateTime != value))
				{
					this._TransactionUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionLocalDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime TransactionLocalDateTime
		{
			get
			{
				return this._TransactionLocalDateTime;
			}
			set
			{
				if ((this._TransactionLocalDateTime != value))
				{
					this._TransactionLocalDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					this._ItemTransactionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelFlag", DbType="Bit NOT NULL")]
		public bool CancelFlag
		{
			get
			{
				return this._CancelFlag;
			}
			set
			{
				if ((this._CancelFlag != value))
				{
					this._CancelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> EnteredQuantity
		{
			get
			{
				return this._EnteredQuantity;
			}
			set
			{
				if ((this._EnteredQuantity != value))
				{
					this._EnteredQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EnteredUOMKey
		{
			get
			{
				return this._EnteredUOMKey;
			}
			set
			{
				if ((this._EnteredUOMKey != value))
				{
					this._EnteredUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMDisplayCode", DbType="NVarChar(50)")]
		public string EnteredUOMDisplayCode
		{
			get
			{
				return this._EnteredUOMDisplayCode;
			}
			set
			{
				if ((this._EnteredUOMDisplayCode != value))
				{
					this._EnteredUOMDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMBaseUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EnteredUOMBaseUOMKey
		{
			get
			{
				return this._EnteredUOMBaseUOMKey;
			}
			set
			{
				if ((this._EnteredUOMBaseUOMKey != value))
				{
					this._EnteredUOMBaseUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMConversionAmount", DbType="Decimal(28,14)")]
		public System.Nullable<decimal> EnteredUOMConversionAmount
		{
			get
			{
				return this._EnteredUOMConversionAmount;
			}
			set
			{
				if ((this._EnteredUOMConversionAmount != value))
				{
					this._EnteredUOMConversionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMUseDosageFormFlag", DbType="Bit")]
		public System.Nullable<bool> EnteredUOMUseDosageFormFlag
		{
			get
			{
				return this._EnteredUOMUseDosageFormFlag;
			}
			set
			{
				if ((this._EnteredUOMUseDosageFormFlag != value))
				{
					this._EnteredUOMUseDosageFormFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemIssueTransactionQuantity", DbType="Decimal(28,18) NOT NULL")]
		public decimal ItemIssueTransactionQuantity
		{
			get
			{
				return this._ItemIssueTransactionQuantity;
			}
			set
			{
				if ((this._ItemIssueTransactionQuantity != value))
				{
					this._ItemIssueTransactionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthTransactionQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StrengthTransactionQuantity
		{
			get
			{
				return this._StrengthTransactionQuantity;
			}
			set
			{
				if ((this._StrengthTransactionQuantity != value))
				{
					this._StrengthTransactionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeTransactionQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> VolumeTransactionQuantity
		{
			get
			{
				return this._VolumeTransactionQuantity;
			}
			set
			{
				if ((this._VolumeTransactionQuantity != value))
				{
					this._VolumeTransactionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispenseFractionFlag", DbType="Bit NOT NULL")]
		public bool DispenseFractionFlag
		{
			get
			{
				return this._DispenseFractionFlag;
			}
			set
			{
				if ((this._DispenseFractionFlag != value))
				{
					this._DispenseFractionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StartInventoryQuantity
		{
			get
			{
				return this._StartInventoryQuantity;
			}
			set
			{
				if ((this._StartInventoryQuantity != value))
				{
					this._StartInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartStrengthInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StartStrengthInventoryQuantity
		{
			get
			{
				return this._StartStrengthInventoryQuantity;
			}
			set
			{
				if ((this._StartStrengthInventoryQuantity != value))
				{
					this._StartStrengthInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartVolumeInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StartVolumeInventoryQuantity
		{
			get
			{
				return this._StartVolumeInventoryQuantity;
			}
			set
			{
				if ((this._StartVolumeInventoryQuantity != value))
				{
					this._StartVolumeInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> EndInventoryQuantity
		{
			get
			{
				return this._EndInventoryQuantity;
			}
			set
			{
				if ((this._EndInventoryQuantity != value))
				{
					this._EndInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndStrengthInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> EndStrengthInventoryQuantity
		{
			get
			{
				return this._EndStrengthInventoryQuantity;
			}
			set
			{
				if ((this._EndStrengthInventoryQuantity != value))
				{
					this._EndStrengthInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndVolumeInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> EndVolumeInventoryQuantity
		{
			get
			{
				return this._EndVolumeInventoryQuantity;
			}
			set
			{
				if ((this._EndVolumeInventoryQuantity != value))
				{
					this._EndVolumeInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ItemTransactionTypeInternalCode
		{
			get
			{
				return this._ItemTransactionTypeInternalCode;
			}
			set
			{
				if ((this._ItemTransactionTypeInternalCode != value))
				{
					this._ItemTransactionTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedDescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MedDescriptionText
		{
			get
			{
				return this._MedDescriptionText;
			}
			set
			{
				if ((this._MedDescriptionText != value))
				{
					this._MedDescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSessionTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TransactionSessionTypeInternalCode
		{
			get
			{
				return this._TransactionSessionTypeInternalCode;
			}
			set
			{
				if ((this._TransactionSessionTypeInternalCode != value))
				{
					this._TransactionSessionTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this._DescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(200)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessID", DbType="NVarChar(200)")]
		public string WitnessID
		{
			get
			{
				return this._WitnessID;
			}
			set
			{
				if ((this._WitnessID != value))
				{
					this._WitnessID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessLastName", DbType="NVarChar(50)")]
		public string WitnessLastName
		{
			get
			{
				return this._WitnessLastName;
			}
			set
			{
				if ((this._WitnessLastName != value))
				{
					this._WitnessLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessFirstName", DbType="NVarChar(50)")]
		public string WitnessFirstName
		{
			get
			{
				return this._WitnessFirstName;
			}
			set
			{
				if ((this._WitnessFirstName != value))
				{
					this._WitnessFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessMiddleName", DbType="NVarChar(50)")]
		public string WitnessMiddleName
		{
			get
			{
				return this._WitnessMiddleName;
			}
			set
			{
				if ((this._WitnessMiddleName != value))
				{
					this._WitnessMiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurvivingEncounterKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SurvivingEncounterKey
		{
			get
			{
				return this._SurvivingEncounterKey;
			}
			set
			{
				if ((this._SurvivingEncounterKey != value))
				{
					this._SurvivingEncounterKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discrepancyflag", DbType="Int NOT NULL")]
		public int Discrepancyflag
		{
			get
			{
				return this._Discrepancyflag;
			}
			set
			{
				if ((this._Discrepancyflag != value))
				{
					this._Discrepancyflag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscrepancyResolvedflag", DbType="Int NOT NULL")]
		public int DiscrepancyResolvedflag
		{
			get
			{
				return this._DiscrepancyResolvedflag;
			}
			set
			{
				if ((this._DiscrepancyResolvedflag != value))
				{
					this._DiscrepancyResolvedflag = value;
				}
			}
		}
	}
	
	public partial class bsp_ListDispenseTransactionsResult
	{
		
		private System.Guid _ItemTransactionKey;
		
		private string _ItemTransactionTypeInternalCode;
		
		private System.Guid _ItemKey;
		
		private System.Guid _ItemSnapshotKey;
		
		private System.Nullable<System.Guid> _MedItemSnapshotKey;
		
		private System.Guid _FacilityItemKey;
		
		private System.Guid _FacilityItemSnapshotKey;
		
		private System.Nullable<System.Guid> _PharmacyOrderKey;
		
		private System.Nullable<System.DateTime> _PharmacyOrderTaskUTCDateTime;
		
		private System.DateTime _TransactionUTCDateTime;
		
		private System.Nullable<decimal> _RemainingDispenseQuantity;
		
		private System.Nullable<decimal> _RemainingUndocumentedDisposeQuantity;
		
		private System.Nullable<decimal> _EnteredQuantity;
		
		private System.Nullable<System.Guid> _EnteredUOMKey;
		
		private string _EnteredUOMDisplayCode;
		
		private System.Nullable<System.Guid> _EnteredUOMBaseUOMKey;
		
		private System.Nullable<decimal> _EnteredUOMConversionAmount;
		
		private System.Nullable<bool> _EnteredUOMUseDosageFormFlag;
		
		private bool _DispenseFractionFlag;
		
		private System.Guid _UserAccountKey;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _DispensingDeviceName;
		
		public bsp_ListDispenseTransactionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					this._ItemTransactionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ItemTransactionTypeInternalCode
		{
			get
			{
				return this._ItemTransactionTypeInternalCode;
			}
			set
			{
				if ((this._ItemTransactionTypeInternalCode != value))
				{
					this._ItemTransactionTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemKey
		{
			get
			{
				return this._ItemKey;
			}
			set
			{
				if ((this._ItemKey != value))
				{
					this._ItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSnapshotKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemSnapshotKey
		{
			get
			{
				return this._ItemSnapshotKey;
			}
			set
			{
				if ((this._ItemSnapshotKey != value))
				{
					this._ItemSnapshotKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedItemSnapshotKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MedItemSnapshotKey
		{
			get
			{
				return this._MedItemSnapshotKey;
			}
			set
			{
				if ((this._MedItemSnapshotKey != value))
				{
					this._MedItemSnapshotKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityItemKey
		{
			get
			{
				return this._FacilityItemKey;
			}
			set
			{
				if ((this._FacilityItemKey != value))
				{
					this._FacilityItemKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityItemSnapshotKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityItemSnapshotKey
		{
			get
			{
				return this._FacilityItemSnapshotKey;
			}
			set
			{
				if ((this._FacilityItemSnapshotKey != value))
				{
					this._FacilityItemSnapshotKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PharmacyOrderKey
		{
			get
			{
				return this._PharmacyOrderKey;
			}
			set
			{
				if ((this._PharmacyOrderKey != value))
				{
					this._PharmacyOrderKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOrderTaskUTCDateTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PharmacyOrderTaskUTCDateTime
		{
			get
			{
				return this._PharmacyOrderTaskUTCDateTime;
			}
			set
			{
				if ((this._PharmacyOrderTaskUTCDateTime != value))
				{
					this._PharmacyOrderTaskUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionUTCDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime TransactionUTCDateTime
		{
			get
			{
				return this._TransactionUTCDateTime;
			}
			set
			{
				if ((this._TransactionUTCDateTime != value))
				{
					this._TransactionUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingDispenseQuantity", DbType="Decimal(28,18)")]
		public System.Nullable<decimal> RemainingDispenseQuantity
		{
			get
			{
				return this._RemainingDispenseQuantity;
			}
			set
			{
				if ((this._RemainingDispenseQuantity != value))
				{
					this._RemainingDispenseQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingUndocumentedDisposeQuantity", DbType="Decimal(28,18)")]
		public System.Nullable<decimal> RemainingUndocumentedDisposeQuantity
		{
			get
			{
				return this._RemainingUndocumentedDisposeQuantity;
			}
			set
			{
				if ((this._RemainingUndocumentedDisposeQuantity != value))
				{
					this._RemainingUndocumentedDisposeQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> EnteredQuantity
		{
			get
			{
				return this._EnteredQuantity;
			}
			set
			{
				if ((this._EnteredQuantity != value))
				{
					this._EnteredQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EnteredUOMKey
		{
			get
			{
				return this._EnteredUOMKey;
			}
			set
			{
				if ((this._EnteredUOMKey != value))
				{
					this._EnteredUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMDisplayCode", DbType="NVarChar(50)")]
		public string EnteredUOMDisplayCode
		{
			get
			{
				return this._EnteredUOMDisplayCode;
			}
			set
			{
				if ((this._EnteredUOMDisplayCode != value))
				{
					this._EnteredUOMDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMBaseUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EnteredUOMBaseUOMKey
		{
			get
			{
				return this._EnteredUOMBaseUOMKey;
			}
			set
			{
				if ((this._EnteredUOMBaseUOMKey != value))
				{
					this._EnteredUOMBaseUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMConversionAmount", DbType="Decimal(28,14)")]
		public System.Nullable<decimal> EnteredUOMConversionAmount
		{
			get
			{
				return this._EnteredUOMConversionAmount;
			}
			set
			{
				if ((this._EnteredUOMConversionAmount != value))
				{
					this._EnteredUOMConversionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMUseDosageFormFlag", DbType="Bit")]
		public System.Nullable<bool> EnteredUOMUseDosageFormFlag
		{
			get
			{
				return this._EnteredUOMUseDosageFormFlag;
			}
			set
			{
				if ((this._EnteredUOMUseDosageFormFlag != value))
				{
					this._EnteredUOMUseDosageFormFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispenseFractionFlag", DbType="Bit NOT NULL")]
		public bool DispenseFractionFlag
		{
			get
			{
				return this._DispenseFractionFlag;
			}
			set
			{
				if ((this._DispenseFractionFlag != value))
				{
					this._DispenseFractionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserAccountKey
		{
			get
			{
				return this._UserAccountKey;
			}
			set
			{
				if ((this._UserAccountKey != value))
				{
					this._UserAccountKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispensingDeviceName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DispensingDeviceName
		{
			get
			{
				return this._DispensingDeviceName;
			}
			set
			{
				if ((this._DispensingDeviceName != value))
				{
					this._DispensingDeviceName = value;
				}
			}
		}
	}
	
	public partial class bsp_ListSingleMiniTrayDiscrepancyTransactionDetailResult
	{
		
		private System.DateTime _TransactionUTCDateTime;
		
		private System.DateTime _TransactionLocalDateTime;
		
		private System.Guid _ItemTransactionKey;
		
		private bool _CancelFlag;
		
		private System.Nullable<decimal> _EnteredQuantity;
		
		private System.Nullable<System.Guid> _EnteredUOMKey;
		
		private string _EnteredUOMDisplayCode;
		
		private System.Nullable<System.Guid> _EnteredUOMBaseUOMKey;
		
		private System.Nullable<decimal> _EnteredUOMConversionAmount;
		
		private System.Nullable<bool> _EnteredUOMUseDosageFormFlag;
		
		private System.Nullable<long> _ExposedPocketCount;
		
		private System.Nullable<long> _TotalPocketCount;
		
		private System.Nullable<decimal> _ItemIssueTransactionQuantity;
		
		private System.Nullable<decimal> _StrengthTransactionQuantity;
		
		private System.Nullable<decimal> _VolumeTransactionQuantity;
		
		private bool _DispenseFractionFlag;
		
		private System.Nullable<decimal> _StartInventoryQuantity;
		
		private System.Nullable<decimal> _StartStrengthInventoryQuantity;
		
		private System.Nullable<decimal> _StartVolumeInventoryQuantity;
		
		private System.Nullable<decimal> _EndInventoryQuantity;
		
		private System.Nullable<decimal> _EndStrengthInventoryQuantity;
		
		private System.Nullable<decimal> _EndVolumeInventoryQuantity;
		
		private string _ItemTransactionTypeInternalCode;
		
		private System.Nullable<System.Guid> _CompositeItemTransactionKey;
		
		private System.Nullable<System.Guid> _RelatedItemTransactionKey;
		
		private System.Nullable<decimal> _ParentEndTotalInventoryQuantity;
		
		private System.Nullable<System.Guid> _EncounterKey;
		
		private System.Nullable<System.Guid> _SurvivingEncounterKey;
		
		private string _MedDescriptionText;
		
		private string _TransactionSessionTypeInternalCode;
		
		private string _DescriptionText;
		
		private string _UserID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _WitnessID;
		
		private string _WitnessLastName;
		
		private string _WitnessFirstName;
		
		private string _WitnessMiddleName;
		
		private System.Nullable<int> _Discrepancyflag;
		
		private int _DiscrepancyResolvedflag;
		
		public bsp_ListSingleMiniTrayDiscrepancyTransactionDetailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionUTCDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime TransactionUTCDateTime
		{
			get
			{
				return this._TransactionUTCDateTime;
			}
			set
			{
				if ((this._TransactionUTCDateTime != value))
				{
					this._TransactionUTCDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionLocalDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime TransactionLocalDateTime
		{
			get
			{
				return this._TransactionLocalDateTime;
			}
			set
			{
				if ((this._TransactionLocalDateTime != value))
				{
					this._TransactionLocalDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemTransactionKey
		{
			get
			{
				return this._ItemTransactionKey;
			}
			set
			{
				if ((this._ItemTransactionKey != value))
				{
					this._ItemTransactionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelFlag", DbType="Bit NOT NULL")]
		public bool CancelFlag
		{
			get
			{
				return this._CancelFlag;
			}
			set
			{
				if ((this._CancelFlag != value))
				{
					this._CancelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> EnteredQuantity
		{
			get
			{
				return this._EnteredQuantity;
			}
			set
			{
				if ((this._EnteredQuantity != value))
				{
					this._EnteredQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EnteredUOMKey
		{
			get
			{
				return this._EnteredUOMKey;
			}
			set
			{
				if ((this._EnteredUOMKey != value))
				{
					this._EnteredUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMDisplayCode", DbType="NVarChar(50)")]
		public string EnteredUOMDisplayCode
		{
			get
			{
				return this._EnteredUOMDisplayCode;
			}
			set
			{
				if ((this._EnteredUOMDisplayCode != value))
				{
					this._EnteredUOMDisplayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMBaseUOMKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EnteredUOMBaseUOMKey
		{
			get
			{
				return this._EnteredUOMBaseUOMKey;
			}
			set
			{
				if ((this._EnteredUOMBaseUOMKey != value))
				{
					this._EnteredUOMBaseUOMKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMConversionAmount", DbType="Decimal(28,14)")]
		public System.Nullable<decimal> EnteredUOMConversionAmount
		{
			get
			{
				return this._EnteredUOMConversionAmount;
			}
			set
			{
				if ((this._EnteredUOMConversionAmount != value))
				{
					this._EnteredUOMConversionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredUOMUseDosageFormFlag", DbType="Bit")]
		public System.Nullable<bool> EnteredUOMUseDosageFormFlag
		{
			get
			{
				return this._EnteredUOMUseDosageFormFlag;
			}
			set
			{
				if ((this._EnteredUOMUseDosageFormFlag != value))
				{
					this._EnteredUOMUseDosageFormFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExposedPocketCount", DbType="BigInt")]
		public System.Nullable<long> ExposedPocketCount
		{
			get
			{
				return this._ExposedPocketCount;
			}
			set
			{
				if ((this._ExposedPocketCount != value))
				{
					this._ExposedPocketCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPocketCount", DbType="BigInt")]
		public System.Nullable<long> TotalPocketCount
		{
			get
			{
				return this._TotalPocketCount;
			}
			set
			{
				if ((this._TotalPocketCount != value))
				{
					this._TotalPocketCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemIssueTransactionQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> ItemIssueTransactionQuantity
		{
			get
			{
				return this._ItemIssueTransactionQuantity;
			}
			set
			{
				if ((this._ItemIssueTransactionQuantity != value))
				{
					this._ItemIssueTransactionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthTransactionQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StrengthTransactionQuantity
		{
			get
			{
				return this._StrengthTransactionQuantity;
			}
			set
			{
				if ((this._StrengthTransactionQuantity != value))
				{
					this._StrengthTransactionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeTransactionQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> VolumeTransactionQuantity
		{
			get
			{
				return this._VolumeTransactionQuantity;
			}
			set
			{
				if ((this._VolumeTransactionQuantity != value))
				{
					this._VolumeTransactionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispenseFractionFlag", DbType="Bit NOT NULL")]
		public bool DispenseFractionFlag
		{
			get
			{
				return this._DispenseFractionFlag;
			}
			set
			{
				if ((this._DispenseFractionFlag != value))
				{
					this._DispenseFractionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StartInventoryQuantity
		{
			get
			{
				return this._StartInventoryQuantity;
			}
			set
			{
				if ((this._StartInventoryQuantity != value))
				{
					this._StartInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartStrengthInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StartStrengthInventoryQuantity
		{
			get
			{
				return this._StartStrengthInventoryQuantity;
			}
			set
			{
				if ((this._StartStrengthInventoryQuantity != value))
				{
					this._StartStrengthInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartVolumeInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> StartVolumeInventoryQuantity
		{
			get
			{
				return this._StartVolumeInventoryQuantity;
			}
			set
			{
				if ((this._StartVolumeInventoryQuantity != value))
				{
					this._StartVolumeInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> EndInventoryQuantity
		{
			get
			{
				return this._EndInventoryQuantity;
			}
			set
			{
				if ((this._EndInventoryQuantity != value))
				{
					this._EndInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndStrengthInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> EndStrengthInventoryQuantity
		{
			get
			{
				return this._EndStrengthInventoryQuantity;
			}
			set
			{
				if ((this._EndStrengthInventoryQuantity != value))
				{
					this._EndStrengthInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndVolumeInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> EndVolumeInventoryQuantity
		{
			get
			{
				return this._EndVolumeInventoryQuantity;
			}
			set
			{
				if ((this._EndVolumeInventoryQuantity != value))
				{
					this._EndVolumeInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTransactionTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ItemTransactionTypeInternalCode
		{
			get
			{
				return this._ItemTransactionTypeInternalCode;
			}
			set
			{
				if ((this._ItemTransactionTypeInternalCode != value))
				{
					this._ItemTransactionTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompositeItemTransactionKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CompositeItemTransactionKey
		{
			get
			{
				return this._CompositeItemTransactionKey;
			}
			set
			{
				if ((this._CompositeItemTransactionKey != value))
				{
					this._CompositeItemTransactionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedItemTransactionKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RelatedItemTransactionKey
		{
			get
			{
				return this._RelatedItemTransactionKey;
			}
			set
			{
				if ((this._RelatedItemTransactionKey != value))
				{
					this._RelatedItemTransactionKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentEndTotalInventoryQuantity", DbType="Decimal(14,4)")]
		public System.Nullable<decimal> ParentEndTotalInventoryQuantity
		{
			get
			{
				return this._ParentEndTotalInventoryQuantity;
			}
			set
			{
				if ((this._ParentEndTotalInventoryQuantity != value))
				{
					this._ParentEndTotalInventoryQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncounterKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EncounterKey
		{
			get
			{
				return this._EncounterKey;
			}
			set
			{
				if ((this._EncounterKey != value))
				{
					this._EncounterKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurvivingEncounterKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SurvivingEncounterKey
		{
			get
			{
				return this._SurvivingEncounterKey;
			}
			set
			{
				if ((this._SurvivingEncounterKey != value))
				{
					this._SurvivingEncounterKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedDescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MedDescriptionText
		{
			get
			{
				return this._MedDescriptionText;
			}
			set
			{
				if ((this._MedDescriptionText != value))
				{
					this._MedDescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSessionTypeInternalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TransactionSessionTypeInternalCode
		{
			get
			{
				return this._TransactionSessionTypeInternalCode;
			}
			set
			{
				if ((this._TransactionSessionTypeInternalCode != value))
				{
					this._TransactionSessionTypeInternalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this._DescriptionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(200)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessID", DbType="NVarChar(200)")]
		public string WitnessID
		{
			get
			{
				return this._WitnessID;
			}
			set
			{
				if ((this._WitnessID != value))
				{
					this._WitnessID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessLastName", DbType="NVarChar(50)")]
		public string WitnessLastName
		{
			get
			{
				return this._WitnessLastName;
			}
			set
			{
				if ((this._WitnessLastName != value))
				{
					this._WitnessLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessFirstName", DbType="NVarChar(50)")]
		public string WitnessFirstName
		{
			get
			{
				return this._WitnessFirstName;
			}
			set
			{
				if ((this._WitnessFirstName != value))
				{
					this._WitnessFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessMiddleName", DbType="NVarChar(50)")]
		public string WitnessMiddleName
		{
			get
			{
				return this._WitnessMiddleName;
			}
			set
			{
				if ((this._WitnessMiddleName != value))
				{
					this._WitnessMiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discrepancyflag", DbType="Int")]
		public System.Nullable<int> Discrepancyflag
		{
			get
			{
				return this._Discrepancyflag;
			}
			set
			{
				if ((this._Discrepancyflag != value))
				{
					this._Discrepancyflag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscrepancyResolvedflag", DbType="Int NOT NULL")]
		public int DiscrepancyResolvedflag
		{
			get
			{
				return this._DiscrepancyResolvedflag;
			}
			set
			{
				if ((this._DiscrepancyResolvedflag != value))
				{
					this._DiscrepancyResolvedflag = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
